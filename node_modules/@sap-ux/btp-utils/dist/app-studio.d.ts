import type { Destination } from './destination';
/**
 * HTTP header that is to be used for encoded credentials when communicating with a destination service instance.
 */
export declare const BAS_DEST_INSTANCE_CRED_HEADER = "bas-destination-instance-cred";
/**
 * Check if this is exectued in SAP Business Application Studio.
 *
 * @returns true if yes
 */
export declare function isAppStudio(): boolean;
/**
 * Read and return the BAS proxy url.
 *
 * @returns the proxy url or undefined if called outside of BAS.
 */
export declare function getAppStudioProxyURL(): string | undefined;
/**
 * Asynchronously creates a base64 encoded credentials for the given destination service instance based on the client information fetched from BTP.
 *
 * @param instance name/id of the destination service instance
 * @returns the base64 encoded user
 */
export declare function getCredentialsForDestinationService(instance: string): Promise<string>;
/**
 * Returns a url for AppStudio for the given url with the given destination.
 *
 * @param name name of the destination
 * @param path optional path
 * @returns destination url working in BAS
 */
export declare function getDestinationUrlForAppStudio(name: string, path?: string): string;
export type Destinations = {
    [name: string]: Destination;
};
/**
 * Get a list of available destinations in SAP Business Application Studio.
 *
 * @returns the list of destinations
 */
export declare function listDestinations(): Promise<Destinations>;
//# sourceMappingURL=app-studio.d.ts.map