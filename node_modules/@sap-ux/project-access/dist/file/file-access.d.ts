import type { Editor } from 'mem-fs-editor';
/**
 * Read file asynchronously. Throws error if file does not exist.
 *
 * @param path - path to file
 * @param memFs - optional mem-fs-editor instance
 * @returns - file content as string
 */
export declare function readFile(path: string, memFs?: Editor): Promise<string>;
/**
 * Read JSON file asynchronously. Throws error if file does not exist or is malformatted.
 *
 * @param path - path to JSON file
 * @param memFs - optional mem-fs-editor instance
 * @returns - file content as object of type T
 */
export declare function readJSON<T>(path: string, memFs?: Editor): Promise<T>;
/**
 * Read file asynchronously. Throws error if file does not exist.
 *
 * @param path - path to file
 * @param content - content to write to a file
 * @param memFs - optional mem-fs-editor instance
 * @returns - file content as string
 */
export declare function writeFile(path: string, content: string, memFs?: Editor): Promise<string | void>;
/**
 * Checks if the provided file exists in the file system.
 *
 * @param path - the file path to check
 * @param memFs - optional mem-fs-editor instance
 * @returns - true if the file exists; false otherwise.
 */
export declare function fileExists(path: string, memFs?: Editor): Promise<boolean>;
//# sourceMappingURL=file-access.d.ts.map