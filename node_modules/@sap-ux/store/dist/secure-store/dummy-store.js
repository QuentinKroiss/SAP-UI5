"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DummyStore = void 0;
class DummyStore {
    constructor(log) {
        this.log = log;
    }
    save(service, key, _value) {
        return __awaiter(this, void 0, void 0, function* () {
            this.log.warn(`Dummy store. Trying to save for service: ${service}, key: ${key}`);
            return Promise.resolve(true);
        });
    }
    retrieve(service, key) {
        return __awaiter(this, void 0, void 0, function* () {
            this.log.warn(`Dummy store. Trying to retrieve for service: ${service}, key: ${key}`);
            return Promise.resolve(undefined);
        });
    }
    delete(service, key) {
        return __awaiter(this, void 0, void 0, function* () {
            this.log.warn(`Dummy store. Trying to delete for service: ${service}, key: ${key}`);
            return Promise.resolve(true);
        });
    }
    getAll(service) {
        return __awaiter(this, void 0, void 0, function* () {
            this.log.warn(`Dummy store. Trying to get all values for service: [${service}]`);
            return Promise.resolve({});
        });
    }
}
exports.DummyStore = DummyStore;
//# sourceMappingURL=dummy-store.js.map