"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BackendSystemKey = exports.BackendSystem = exports.AuthenticationType = void 0;
const decorators_1 = require("../decorators");
var AuthenticationType;
(function (AuthenticationType) {
    AuthenticationType["Basic"] = "basic";
    AuthenticationType["ReentranceTicket"] = "reentranceTicket";
    AuthenticationType["OAuth2RefreshToken"] = "oauth2";
    AuthenticationType["OAuth2ClientCredential"] = "oauth2ClientCredential";
})(AuthenticationType || (exports.AuthenticationType = AuthenticationType = {}));
class BackendSystem {
    constructor({ name, url, client, serviceKeys, refreshToken, username, password, userDisplayName, authenticationType }) {
        this.name = name;
        this.url = url;
        this.client = client;
        this.serviceKeys = serviceKeys;
        this.refreshToken = refreshToken;
        this.username = username;
        this.password = password;
        this.userDisplayName = userDisplayName;
        this.authenticationType = authenticationType;
    }
}
exports.BackendSystem = BackendSystem;
__decorate([
    decorators_1.serializable,
    __metadata("design:type", String)
], BackendSystem.prototype, "name", void 0);
__decorate([
    decorators_1.serializable,
    __metadata("design:type", String)
], BackendSystem.prototype, "url", void 0);
__decorate([
    decorators_1.serializable,
    __metadata("design:type", String)
], BackendSystem.prototype, "client", void 0);
__decorate([
    decorators_1.serializable,
    __metadata("design:type", String)
], BackendSystem.prototype, "userDisplayName", void 0);
__decorate([
    decorators_1.sensitiveData,
    __metadata("design:type", Object)
], BackendSystem.prototype, "serviceKeys", void 0);
__decorate([
    decorators_1.sensitiveData,
    __metadata("design:type", String)
], BackendSystem.prototype, "refreshToken", void 0);
__decorate([
    decorators_1.sensitiveData,
    __metadata("design:type", String)
], BackendSystem.prototype, "username", void 0);
__decorate([
    decorators_1.sensitiveData,
    __metadata("design:type", String)
], BackendSystem.prototype, "password", void 0);
__decorate([
    decorators_1.sensitiveData,
    __metadata("design:type", String)
], BackendSystem.prototype, "authenticationType", void 0);
class BackendSystemKey {
    static from(system) {
        return new BackendSystemKey({ url: system.url, client: system.client });
    }
    constructor({ url, client }) {
        this.url = url.trim().replace(/\/$/, '');
        this.client = client === null || client === void 0 ? void 0 : client.trim();
    }
    getId() {
        return this.url + `${this.client ? '/' + this.client : ''}`;
    }
}
exports.BackendSystemKey = BackendSystemKey;
//# sourceMappingURL=backend-system.js.map