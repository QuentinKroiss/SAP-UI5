"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TelemetryDataProvider = void 0;
const filesystem_1 = require("../data-access/filesystem");
const telemetry_setting_1 = require("../entities/telemetry-setting");
const constants_1 = require("./constants");
const TelemetryDataProvider = class {
    constructor(logger) {
        this.entityName = constants_1.Entities.TelemetrySetting;
        this.logger = logger;
        this.dataAccessor = (0, filesystem_1.getFilesystemStore)(this.logger);
    }
    read(key) {
        return this.dataAccessor.read({ entityName: this.entityName, id: key.getId() });
    }
    write(entity) {
        return this.dataAccessor.write({
            entityName: this.entityName,
            id: new telemetry_setting_1.TelemetrySettingKey().getId(),
            entity
        });
    }
    delete(_entity) {
        return this.dataAccessor.del({
            entityName: this.entityName,
            id: new telemetry_setting_1.TelemetrySettingKey().getId()
        });
    }
    getAll() {
        return this.dataAccessor.getAll({ entityName: this.entityName });
    }
};
exports.TelemetryDataProvider = TelemetryDataProvider;
//# sourceMappingURL=telemetry-setting.js.map