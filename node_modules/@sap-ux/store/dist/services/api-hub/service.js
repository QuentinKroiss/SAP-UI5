"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getInstance = exports.ApiHubSettingsService = void 0;
const secure_store_1 = require("../../secure-store");
const api_hub_1 = require("../../data-provider/api-hub");
const api_hub_2 = require("../../entities/api-hub");
const migration_1 = require("./migration");
class ApiHubSettingsService {
    constructor(logger) {
        this.migrationDone = false;
        this.key = new api_hub_2.ApiHubSettingsKey();
        this.logger = logger;
        this.dataProvider = new api_hub_1.ApiHubSettingsProvider(this.logger);
    }
    migrate() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.migrationDone) {
                return;
            }
            if (!this.secureStore) {
                this.secureStore = (0, secure_store_1.getSecureStore)(this.logger);
            }
            yield (0, migration_1.migrateToLatestVersion)({
                logger: this.logger,
                secureStore: this.secureStore,
                dataProvider: this.dataProvider
            });
            this.migrationDone = true;
        });
    }
    partialUpdate() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.migrate();
            throw new Error('NOT IMPLEMENTED');
        });
    }
    read() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.migrate();
            return this.dataProvider.read(this.key);
        });
    }
    write(entity) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.migrate();
            return this.dataProvider.write(entity);
        });
    }
    delete(entity) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.migrate();
            return this.dataProvider.delete(entity);
        });
    }
    getAll() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.migrate();
            return this.dataProvider.getAll();
        });
    }
}
exports.ApiHubSettingsService = ApiHubSettingsService;
function getInstance(logger) {
    return new ApiHubSettingsService(logger);
}
exports.getInstance = getInstance;
//# sourceMappingURL=service.js.map