import type { Editor } from 'mem-fs-editor';
import type { IWriter, AnnotationsData } from '../../../types';
/**
 * Handles the creation and writing of annotations data changes for a project.
 */
export declare class AnnotationsWriter implements IWriter<AnnotationsData> {
    private fs;
    private projectPath;
    /**
     * @param {Editor} fs - The filesystem editor instance.
     * @param {string} projectPath - The root path of the project.
     */
    constructor(fs: Editor, projectPath: string);
    /**
     * Constructs the content for an annotation change based on provided data.
     *
     * @param {AnnotationsData} data - The data object containing information needed to construct the content property.
     * @returns {object} The constructed content object for the annotation change.
     */
    private constructContent;
    /**
     * Determines the appropriate filename for the annotation file based on user answers.
     *
     * @param {AnnotationsData} data - The answers object containing user choices.
     * @returns {string | undefined} The determined filename for the annotation file.
     */
    private getAnnotationFileName;
    /**
     * Writes the annotation change to the project based on the provided data.
     *
     * @param {AnnotationsData} data - The annotations data containing all the necessary information to construct and write the change.
     * @returns {Promise<void>} A promise that resolves when the change writing process is completed.
     */
    write(data: AnnotationsData): Promise<void>;
}
//# sourceMappingURL=annotations-writer.d.ts.map