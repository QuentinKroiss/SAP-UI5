"use strict";

sap.ui.define(["sap/m/MessageToast", "sap/ui/rta/command/CommandFactory"], function (MessageToast, CommandFactory) {
  "use strict";

  /**
   * Class responsible for handling rta calls
   */
  class CommandExecutor {
    /**
     *
     * @param rta Runtime Authoring
     */
    constructor(rta) {
      this.rta = rta;
    }

    /**
     * Generates command based on given values
     *
     * @param runtimeControl Managed object
     * @param commandName Command name
     * @param modifiedValue Modified value/s
     * @param designMetadata Design time metadata
     * @param flexSettings Additional flex settings
     */
    async getCommand(runtimeControl, commandName, modifiedValue, designMetadata, flexSettings) {
      try {
        return await CommandFactory.getCommandFor(runtimeControl, commandName, modifiedValue, designMetadata, flexSettings);
      } catch (e) {
        const errorMsg = `Could not get command for '${commandName}'. ${e.message}`;
        MessageToast.show(errorMsg);
        throw new Error(errorMsg);
      }
    }

    /**
     * Pushed and executes the provided command
     *
     * @param command Command
     */
    async pushAndExecuteCommand(command) {
      try {
        /**
         * The change will have pending state and will only be saved to the workspace when the user clicks save icon
         */
        await this.rta.getCommandStack().pushAndExecute(command);
      } catch (e) {
        MessageToast.show(e.message);
        throw new Error(e.message);
      }
    }
  }
  return CommandExecutor;
});
//# sourceMappingURL=command-executor.js.map