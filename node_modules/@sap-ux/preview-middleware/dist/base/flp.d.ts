/// <reference path="../../../../types/ui5.d.ts" />
import type { ReaderCollection } from '@ui5/fs';
import type { Router } from 'express';
import type { App, FlpConfig, MiddlewareConfig, RtaConfig, TestConfig } from '../types';
import type { Logger, ToolsLogger } from '@sap-ux/logger';
import type { MiddlewareUtils } from '@ui5/server';
import type { Manifest, UI5FlexLayer } from '@sap-ux/project-access';
import { type AdpPreviewConfig } from '@sap-ux/adp-tooling';
/**
 * Enhanced request handler that exposes a list of endpoints for the cds-plugin-ui5.
 */
export type EnhancedRouter = Router & {
    getAppPages?: () => string[];
};
export interface CustomConnector {
    applyConnector: string;
    writeConnector: string;
    custom: boolean;
}
export interface FlexConnector {
    connector: string;
    layers: string[];
    url?: string;
}
/**
 * Internal structure used to fill the sandbox.html template
 */
export interface TemplateConfig {
    basePath: string;
    apps: Record<string, {
        title: string;
        description: string;
        additionalInformation: string;
        applicationType: 'URL';
        url: string;
        applicationDependencies?: {
            manifest: boolean;
        };
    }>;
    ui5: {
        libs: string;
        theme: string;
        flex: (CustomConnector | FlexConnector)[];
        bootstrapOptions: string;
        resources: Record<string, string>;
    };
    init?: string;
    flex?: {
        [key: string]: unknown;
        layer: UI5FlexLayer;
        developerMode: boolean;
        pluginScript?: string;
    };
    locateReuseLibsScript?: boolean;
}
/**
 * Class handling preview of a sandbox FLP.
 */
export declare class FlpSandbox {
    private readonly project;
    private readonly utils;
    private readonly logger;
    protected templateConfig: TemplateConfig;
    readonly config: FlpConfig;
    readonly rta?: RtaConfig;
    readonly test?: TestConfig[];
    readonly router: EnhancedRouter;
    /**
     * Constructor setting defaults and keeping reference to workspace resources.
     *
     * @param config configuration from the ui5.yaml
     * @param project reference to the project provided by the UI5 CLI
     * @param utils middleware utilities provided by the UI5 CLI
     * @param logger logger instance
     */
    constructor(config: Partial<MiddlewareConfig>, project: ReaderCollection, utils: MiddlewareUtils, logger: Logger);
    /**
     * Initialize the FLP sandbox router.
     *
     * @param manifest application manifest
     * @param componentId optional componentId e.g. for adaptation projects
     * @param resources optional additional resource mappings
     */
    init(manifest: Manifest, componentId?: string, resources?: Record<string, string>): Promise<void>;
    /**
     * Generates the FLP sandbox for an editor.
     *
     * @param rta runtime authoring configuration
     * @param editor editor configuration
     * @returns FLP sandbox html
     */
    private generateSandboxForEditor;
    /**
     * Add additional routes for configured editors.
     *
     * @param rta runtime authoring configuration
     */
    private addEditorRoutes;
    /**
     * Add routes for html and scripts required for a local FLP.
     */
    private addStandardRoutes;
    /**
     * Try finding a locate-reuse-libs script in the project.
     *
     * @returns the location of the locate-reuse-libs script or undefined.
     */
    private hasLocateReuseLibsScript;
    /**
     * Add additional routes for apps also to be shown in the local FLP.
     */
    private addRoutesForAdditionalApps;
    /**
     * Retrieves the configuration settings for UI5 flexibility services.
     *
     * @returns An array of flexibility service configurations, each specifying a connector
     *          and its options, such as the layers it applies to and its service URL, if applicable.
     */
    private getFlexSettings;
    /**
     * Create required routes for flex.
     */
    private createFlexHandler;
    /**
     * Add routes for html and scripts required for a local test FLP.
     *
     * @param configs test configurations
     * @param id application id from manifest
     */
    private addTestRoutes;
    /**
     * Add an application to the local FLP preview.
     *
     * @param manifest manifest of the additional target app
     * @param app configuration for the preview
     */
    addApp(manifest: Manifest, app: App): Promise<void>;
    /**
     * Get the i18n text of the given property.
     *
     * @param projectRoot absolute path to the project root
     * @param propertyValue value of the property
     * @returns i18n text of the property
     * @private
     */
    private getI18nTextFromProperty;
    /**
     * Gets the UI5 libs dependencies from manifest.json.
     *
     * @param manifest application manifest
     * @returns UI5 libs that should preloaded
     */
    private getUI5Libs;
}
/**
 * Initialize the preview for an adaptation project.
 *
 * @param rootProject reference to the project
 * @param config configuration from the ui5.yaml
 * @param flp FlpSandbox instance
 * @param util middleware utilities provided by the UI5 CLI
 * @param logger logger instance
 */
export declare function initAdp(rootProject: ReaderCollection, config: AdpPreviewConfig, flp: FlpSandbox, util: MiddlewareUtils, logger: ToolsLogger): Promise<void>;
//# sourceMappingURL=flp.d.ts.map