/// <reference path="../../../../types/ui5.d.ts" />
import type { Logger } from '@sap-ux/logger';
import type { ReaderCollection } from '@ui5/fs';
/**
 * Structure of a flex change.
 */
export interface FlexChange {
    [key: string]: string | object | undefined;
    changeType: string;
    reference: string;
    moduleName?: string;
    content?: {
        codeRef?: string;
        fragmentPath?: string;
    };
}
/**
 * Read changes from the file system and return them.
 *
 * @param project reference to the UI5 project
 * @param logger logger instance
 * @returns object with the file name as key and the file content as value
 */
export declare function readChanges(project: ReaderCollection, logger: Logger): Promise<Record<string, FlexChange>>;
/**
 * Writes flex changes to the user's workspace.
 *
 * @param data JS object to be stored as change
 * @param data.fileName file name that is required for a valid change
 * @param data.fileType file type that is required
 * @param webappPath path to the webapp folder
 * @param logger logger instance
 * @returns object with success flag and optional message
 */
export declare function writeChange(data: object & {
    fileName?: string;
    fileType?: string;
}, webappPath: string, logger: Logger): {
    success: boolean;
    message?: string;
};
/**
 * Deletes an existing flex change from the file system if it exists.
 *
 * @param data JS object of the change to be deleted
 * @param data.fileName file name that is required for a valid change
 * @param webappPath path to the webapp folder
 * @param logger logger instance
 * @returns object with success flag and optional message
 */
export declare function deleteChange(data: object & {
    fileName?: string;
}, webappPath: string, logger: Logger): {
    success: boolean;
    message?: string;
};
//# sourceMappingURL=flex.d.ts.map