import { AdtService } from './adt-service';
import type { AdtCategory, TransportRequest } from '../../types';
/**
 * TransportChecksService implements ADT requests for fetching a list of available transport requests
 * for a given package name and a given app name.
 */
export declare class TransportChecksService extends AdtService {
    /**
     * @see AdtService.getAdtCatagory()
     */
    private static adtCategory;
    /**
     * @see AdtService.getAdtCatagory()
     * @returns AdtCategory
     */
    static getAdtCatagory(): AdtCategory;
    static LocalPackageError: string;
    /**
     * TransportChecksService API function to fetch a list of available transport requests.
     *
     * @param packageName Package name for deployment
     * @param appName Fiori project name for deployment. A new project that has not been deployed before is also allowed
     * @returns A list of transport requests that can be used for deploy
     */
    getTransportRequests(packageName: string, appName: string): Promise<TransportRequest[]>;
    /**
     * Get a list of valid transport requests
     * from ADT transportcheckes response response.
     *
     * @param xml Raw XML string from ADT transportcheckes reponse data
     * @returns a list of valid transport requests can be used for deploy config
     */
    private getTransportRequestList;
    /**
     * Parses the document to find and log the <CTS_MESSAGE> with severity 'E' in <MESSAGES>.
     *
     * @param doc document
     */
    private logErrorMsgs;
    /**
     * Provide a list of transport requests available for the input package name and project name
     * in a ADT CTS request.
     *
     * @param doc document
     * @returns A list of transport requests
     * @throws For errors or other unkonwn reasons no transport number found, an error is thrown.
     * If error message equals TransportChecksService.LocalPackageError, it indicates the input
     * package is a local package and no transport request is required.
     * @see TransportChecksService.LocalPackageError
     */
    private getTransportList;
    /**
     * This function processes ADT response for new project name that have not been deployed before,
     * all the available transport requests are returned.
     *
     * @param doc document
     * @returns transport numbers
     */
    private getTransportListForNewProject;
    /**
     * This function processes ADT response for existing project name that has been locked.
     * A single, previously provided transport requests is returned in the list.
     *
     * @param doc document
     * @returns transport numbers
     */
    private getLockedTransport;
    /**
     * Convert transport request in XML element of ADT response to typed object.
     *
     * @param transportReqEle XML element of transport request data in ADT response
     * @returns JSON object format of input XML element
     */
    private convertTransportRequest;
}
//# sourceMappingURL=transportcheck-service.d.ts.map