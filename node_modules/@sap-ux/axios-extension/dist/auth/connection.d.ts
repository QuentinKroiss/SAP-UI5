import type { AxiosResponse } from 'axios';
import type { ServiceProvider } from '../base/service-provider';
export declare enum CSRF {
    RequestHeaderName = "X-Csrf-Token",
    RequestHeaderValue = "Fetch",
    ResponseHeaderName = "x-csrf-token"
}
/** Default connection timeout (milliseconds) */
export declare const defaultTimeout: number;
/**
 * Helper class for managing cookies.
 */
export declare class Cookies {
    private readonly cookies;
    /**
     * Update the cookies based on 'set-cookie' headers of a response.
     *
     * @param response http response containing a headers object
     * @returns cookies object
     */
    setCookies(response: AxiosResponse): Cookies;
    /**
     * Update cookies based on a string representing a cookie.
     *
     * @param cookieString string representing a cookie
     * @returns cookies object
     */
    addCookie(cookieString: string): Cookies;
    /**
     * Serialize all cookies as string formatted for the 'Cookie' header.
     *
     * @returns serialized cookies
     */
    toString(): string;
}
/**
 * Attach a connection handler to the given service provider.
 *
 * @param provider any service provider
 */
export declare function attachConnectionHandler(provider: ServiceProvider): void;
//# sourceMappingURL=connection.d.ts.map