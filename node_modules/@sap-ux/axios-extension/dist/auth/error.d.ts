import type { AxiosResponse } from 'axios';
/** Wraps `Error`. Used as base class for other specific errors */
export declare abstract class BaseError<T> extends Error {
    readonly cause: T;
    /**
     * Constructor taking a message and any object.
     *
     * @param message human readable error message
     * @param cause object causing the issue
     */
    constructor(message: string, cause?: T);
}
/**
 * Error representing a connection problem.
 */
export declare class ConnectionError extends BaseError<AxiosResponse> {
}
/**
 * Error representing a timeout.
 */
export declare class TimeoutError extends BaseError<Error> {
}
/**
 * Error representing a timeout from a UAA service.
 */
export declare class UAATimeoutError extends TimeoutError {
}
//# sourceMappingURL=error.d.ts.map