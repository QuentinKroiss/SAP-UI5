import { ServiceInfo } from '@sap-ux/btp-utils';
import type { Axios, InternalAxiosRequestConfig } from 'axios';
import type { ServiceProvider } from '../base/service-provider';
import type { AbapServiceProvider } from '../abap';
import { RefreshTokenChanged, Uaa } from './uaa';
export * from './connection';
export * from './error';
export { ServiceInfo, RefreshTokenChanged, Uaa };
/**
 * @param provider Basic Auth Provider
 */
export declare function attachBasicAuthInterceptor(provider: Axios): void;
/**
 * @param provider  Abap Service Provider
 * @param service Service Information
 * @param refreshToken refreshToken
 * @param refreshTokenUpdateCb refreshTokenUpdate callback function
 */
export declare function attachUaaAuthInterceptor(provider: AbapServiceProvider, service: ServiceInfo, refreshToken?: string, refreshTokenUpdateCb?: RefreshTokenChanged): void;
/**
 * Get the reentrace ticket from the backend and add it to the header.
 *
 * @param options options
 * @param options.provider an instance of an ABAP service provider
 */
export declare function attachReentranceTicketAuthInterceptor({ provider }: {
    provider: ServiceProvider;
}): void;
/**
 * Get the interceptor that fetches and uses reentrance tickets from the backend.
 *
 * @param options options
 * @param options.provider an instance of an ABAP service provider
 * @param options.ejectCallback  eject Callback Function
 * @returns the interceptor function to fetch and use reentrace tickets
 */
export declare function getReentranceTicketAuthInterceptor({ provider, ejectCallback }: {
    provider: ServiceProvider;
    ejectCallback: () => void;
}): (request: InternalAxiosRequestConfig) => Promise<InternalAxiosRequestConfig<any>>;
//# sourceMappingURL=index.d.ts.map