"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ODataRequestError = exports.isAxiosError = void 0;
/**
 * Type guard to narrow an unknown exception to the AxiosError type if it is compatible.
 *
 * @param e unknown error
 * @returns exception cast to AxiosError if it is one
 */
function isAxiosError(e) {
    return typeof e === 'object' && e !== null && 'isAxiosError' in e;
}
exports.isAxiosError = isAxiosError;
/**
 * Error object that is to be thrown if an OData service responds with an error
 */
class ODataRequestError extends Error {
    /**
     * Helper function to check if a parsed OData response contains an error.
     *
     * @param odata odata object
     * @returns boolean
     */
    static containsError(odata) {
        if (odata === null || odata === void 0 ? void 0 : odata['error']) {
            return true;
        }
        else {
            return false;
        }
    }
    /**
     * Constructor extracting message and code from the error and putting them into an error message.
     *
     * @param responseData response Data
     */
    constructor(responseData) {
        const error = responseData['error'];
        super(`${error.message} (${error.code})`);
        this.name = this.constructor.name;
    }
}
exports.ODataRequestError = ODataRequestError;
//# sourceMappingURL=odata-request-error.js.map