import type { Element } from 'xml-js';
import type { XMLDocument } from '@xml-tools/ast';
import type { MacrosXMLPath, ExtensionLogger, FileData, SchemaDefinition } from '@sap/ux-specification-types';
export interface TraverseData {
    fullSchema: SchemaDefinition;
    schema: SchemaDefinition;
    element: Element;
    contextPath: MacrosXMLPath;
    config: object;
    parent?: TraverseData;
}
export type TraverseCallback = (traverseData: TraverseData, property: SchemaDefinition, config: object, name: string) => boolean;
/**
 * Method traverses schema together with XML element.
 * @param {TraverseData} traverseData Traverse data object.
 * @param {TraverseCallback} callback Callbck to handle export or import.
 * @returns {boolean} Is changes applied during export or import.
 */
export declare function traverseSchema(traverseData: TraverseData, callback: TraverseCallback): boolean;
/**
 * Method parses XML file and returns parsed object.
 * @param {FileData} xmlFile XML file.
 * @param {boolean} providePositions - If true then parsing result will contain information about elements and attributes positions.
 * @param {ExtensionLogger} [logger] - Logger class for logging messages.
 * @returns {Element | undefined} Parsed XML.
 */
export declare function parseXML(xmlFile: FileData, providePositions: true, logger?: ExtensionLogger): XMLDocument | undefined;
export declare function parseXML(xmlFile: FileData, providePositions: false, logger?: ExtensionLogger): Element | undefined;
/**
 * Resolves definition key for custom extension fragment.
 * @param {string} fragmentName Name of the fragment.
 * @returns {string} Definition key for custom extension fragment.
 */
export declare function getCustomExtensionFragmentDefinitionKey(fragmentName: string): string;
/**
 * Method find first renderable element for passed definition element.
 * @param element Definition element.
 * @returns First renderable element.
 */
export declare function getRootElement(element?: Element): Element | undefined;
//# sourceMappingURL=macros.d.ts.map