import { PageTypeV4, SchemaType } from '@sap/ux-specification-types';
import type { v4, ImportListReportV4Parameters } from '@sap/ux-specification-types';
import type { MetadataInstanceInterface } from '../../../common/decoration/factory';
/**
 * Adds manifest settings to the config.json of LR or ALP V4
 * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data
 * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled
 * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata
 * @param {PageTypeV4} pageType - page type
 * @param {string} routingId - page key in manifest
 * @param {SchemaType} schemaType - allows distinction of LR and ALP scenario
 */
export declare function addSettings(importParameters: ImportListReportV4Parameters, config: v4.ListReportConfigV4, factory: MetadataInstanceInterface, pageType: PageTypeV4, routingId: string, schemaType: SchemaType): void;
/**
 * Creates the configuration file content for a list report V4
 * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data
 *
 * @returns {ListReportConfig} - the configuration (JSON) for the list report
 */
export declare function createListReportConfig(importParameters: ImportListReportV4Parameters, schemaType: SchemaType): v4.ListReportConfigV4 | undefined;
//# sourceMappingURL=listReport.d.ts.map