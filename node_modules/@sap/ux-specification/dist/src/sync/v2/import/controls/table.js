"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addFlexForTable = void 0;
const ux_specification_types_1 = require("@sap/ux-specification-types");
function addFlexForTable(config, change, jsonSchema) {
    if (change.controlType.endsWith(ux_specification_types_1.DefinitionName.Table)) {
        config[change.propertyId] = change.newValue;
    }
    else if (change.controlType === ux_specification_types_1.ControlType.TableColumn) {
        const schemaProperty = (jsonSchema?.definitions[ux_specification_types_1.DefinitionName.TableColumn]).properties[change.propertyId];
        if (!schemaProperty) {
            return;
        }
        const idParts = change.controlId.split('-');
        const lastIdPart = idParts[idParts.length - 1];
        // As the last stable Id part is still too long in some cases, strip off the fixed parts.
        // It must the be added again by the export!
        const annotationPart = lastIdPart.split('template:::TableColumn:::');
        const colId = annotationPart[annotationPart.length - 1]
            .replace(/sSmartTableId.+?:::/, '')
            .replace('::com.sap.vocabularies', ux_specification_types_1.VOCWITHCOLONS)
            .replace('/', ':2f');
        if (!config.columns) {
            config.columns = {};
        }
        if (!config.columns[colId]) {
            config.columns[colId] = {};
        }
        config.columns[colId][change.propertyId] = change.newValue;
    }
}
exports.addFlexForTable = addFlexForTable;
//# sourceMappingURL=table.js.map