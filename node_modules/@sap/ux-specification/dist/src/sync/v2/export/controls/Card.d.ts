import type { v2, ColorPaletteType, SapOvpTabSetting, SapOvpPlotAreaDef, SapOvpTimeAxisDef } from '@sap/ux-specification-types';
export declare function exportColorPalette(manifestSection: unknown, configPart: object, key: string): void;
export declare function exportDefaultSpan(manifestSection: unknown, configPart: object, key: string): void;
export declare class ChartSettingsType implements v2.ChartSettingsType {
    showDataLabel?: boolean;
}
export declare class DefaultSpanObject implements v2.DefaultSpanObject {
    cols: number;
    rows: number;
    showOnlyHeader?: boolean;
    minimumTitleRow?: number;
    minimumSubTitleRow?: number;
}
export declare class CommonCardSettings implements v2.CommonCardSettings {
    entitySet?: string;
    title: string;
    subTitle?: string;
    annotationPath?: string;
    dataPointAnnotationPath?: string;
    selectionPresentationAnnotationPath?: string;
    kpiAnnotationPath?: string;
    category?: string;
    dynamicSubtitleAnnotationPath?: string;
    valueSelectionInfo?: string;
    showFilterInHeader?: boolean;
    sortBy?: string;
    sortOrder?: 'ascending' | 'descending';
    identificationAnnotationPath?: string;
    selectionAnnotationPath?: string;
    presentationAnnotationPath?: string;
    enableLocaleCurrencyFormatting?: boolean;
    defaultSpan?: v2.DefaultSpanObject | 'auto';
    requireAppAuthorization?: string;
    showSortingInHeader?: boolean;
    tabs?: SapOvpTabSetting[];
    addODataSelect?: boolean;
    showRefresh?: boolean;
    customParams?: string;
}
export declare class CustomCard implements v2.CustomCard {
    model: string;
    template: v2.CardTemplateType;
    settings?: v2.CustomCardSettings;
}
export declare class ListCardSettings extends CommonCardSettings implements v2.ListCardSettings {
    showLineItemDetail?: boolean;
    imageSupported?: boolean;
    enableAddToInsights?: boolean;
    listFlavor?: v2.ListFlavorType;
    listType?: v2.ListTypeType;
}
export declare class ListCard implements v2.ListCard {
    model: string;
    template: v2.CardTemplateType.list | v2.CardTemplateType.listv4;
    settings: ListCardSettings;
}
export declare class AnalyticalCardSettings extends CommonCardSettings implements v2.AnalyticalCardSettings {
    chartAnnotationPath?: string;
    ignoreSapText?: boolean;
    enableAddToInsights?: boolean;
    navigation?: 'dataPointNav' | 'chartNav' | 'headerNav' | 'noHeaderNav';
    valueSelectionInfo?: string;
    chartProperties?: {
        plotArea?: SapOvpPlotAreaDef;
        timeAxis?: SapOvpTimeAxisDef;
    };
    colorPalette?: ColorPaletteType;
    bEnableStableColors?: boolean;
}
export declare class AnalyticalCardSettingsv4 extends AnalyticalCardSettings implements v2.AnalyticalCardSettingsv4 {
    measureAggregate?: v2.MeasureAggregateSettings;
}
export declare class AnalyticalCard implements v2.AnalyticalCard {
    model: string;
    template: v2.CardTemplateType.analytical | v2.CardTemplateType.analyticalv4;
    settings: AnalyticalCardSettings | AnalyticalCardSettingsv4;
}
export declare class StackCardSettings extends CommonCardSettings implements v2.StackCardSettings {
    itemText?: string;
    objectStreamCardsNavigationProperty?: string;
    objectStreamCardsSettings?: {
        showFirstActionInFooter?: boolean;
        annotationPath?: string;
    };
}
export declare class StackCard implements v2.StackCard {
    model: string;
    template: v2.CardTemplateType.stack;
    settings: StackCardSettings;
}
export declare class LinkListCardSettings extends CommonCardSettings implements v2.LinkListCardSettings {
    listFlavor?: v2.LinkListFlavorType;
    headerAnnotationPath?: string;
    staticContent?: v2.StaticContent[];
}
export declare class LinklistCard implements v2.LinklistCard {
    model: string;
    template: v2.CardTemplateType.linklist | v2.CardTemplateType.linklistv4;
    settings: LinkListCardSettings;
}
export declare class TableCardSettings extends CommonCardSettings implements v2.TableCardSettings {
    showLineItemDetail?: boolean;
    enableAddToInsights?: boolean;
}
export declare class TableCard implements v2.TableCard {
    model: string;
    template: v2.CardTemplateType.table | v2.CardTemplateType.tablev4;
    settings: TableCardSettings;
}
//# sourceMappingURL=Card.d.ts.map