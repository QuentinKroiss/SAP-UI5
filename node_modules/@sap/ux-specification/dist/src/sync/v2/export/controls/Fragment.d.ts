import { v2, ViewTemplateType } from '@sap/ux-specification-types';
import type { ExportResults, FileData, ExtensionLogger } from '@sap/ux-specification-types';
export declare const FRAGMENT_DEFINITION = "core:FragmentDefinition";
export declare const SAP_UI_TABLE = "sap.ui.table";
/**
 * Method which receives fragment definition node and reads root column definition.
 * @param {unknown} definition - Application or Page Config object.
 * @param {unknown} fragment - fragment definition
 * @returns {unknown | undefined} Root column read from definition.
 */
export declare function getRootCustomColumnFromFragmentJSON(definition: unknown, fragment?: unknown): string | unknown | undefined;
/**
 * Identifies the right extensions based on a pattern, then deletes all corresponding columns and cells
 * @param manifestSection - Section in manifest.json comprising the extensions
 * @param pattern - Search string to identify the extension in manifest
 * @param appId - application ID
 * @param fragments - list of all fragments
 */
export declare function deleteColumnFromFragment(manifestSection: object, pattern: string, appId: string, fragments: FileData[]): void;
/**
 * The function transfers ALL properties of one or more custom columns to a given fragment, or creates a new one if necesary.
 * @param {ExportResults} exportResults - export result comprising fragments and manifest
 * @param manifestPath - path to the current section of the manifest that describes the extension
 * @param config - current config part, describing the new image of the extension
 * @param appId - application ID
 * @param viewTemplateType - name of the view template that shall be applied
 * @param {ExtensionLogger} logger - logger instance for exceptions
 */
export declare function exportCustomColumnsToFragment(exportResults: ExportResults, manifestPath: string, config: v2.TableCustomColumns, appId: string, viewTemplateType: ViewTemplateType, logger?: ExtensionLogger): void;
/**
 * Determines the manifest path of a column extension.
 * @param {string[]} page Page object from manifest.
 * @param {string} entitySet Table's entity set.
 * @param {string} [additionalKey] Key provided when defining the FacetID or QuickVariantSelectionX.
 * @param {string} [tableColumnExtensionType] Column extension type.
 */
export declare const getCustomColumnPath: (page: v2.SapUiAppPageV2, entitySet: string, additionalKey?: string, tableColumnExtensionType?: string) => {
    path: string;
    viewTemplateType: ViewTemplateType;
};
//# sourceMappingURL=Fragment.d.ts.map