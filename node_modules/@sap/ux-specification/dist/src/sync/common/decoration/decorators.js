"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTextForDeprecated = exports.validity = exports.validityMetadataKey = exports.getPageLayoutInformation = exports.getChildId = exports.childId = exports.pageLayoutInformation = exports.getReflectMetadata = exports.syncRule = exports.reflectMetadataKey = void 0;
require("reflect-metadata");
exports.reflectMetadataKey = Symbol('specificationMetadataKey');
const syncRule = (propSpec) => {
    return Reflect.metadata(exports.reflectMetadataKey, propSpec);
};
exports.syncRule = syncRule;
function getReflectMetadata(target, propertyName) {
    let rule;
    if (target) {
        rule = Reflect.getMetadata(exports.reflectMetadataKey, target, propertyName);
    }
    return rule;
}
exports.getReflectMetadata = getReflectMetadata;
const pageLayoutInformation = (pageInfo) => (constructor) => {
    constructor.prototype.pageLayoutInformation = pageInfo;
};
exports.pageLayoutInformation = pageLayoutInformation;
const childIdKey = Symbol('childId');
const childId = (id) => {
    return Reflect.metadata(childIdKey, id);
};
exports.childId = childId;
const getChildId = (target, propertyName) => {
    return Reflect.getMetadata(childIdKey, target, propertyName);
};
exports.getChildId = getChildId;
const getPageLayoutInformation = (target) => {
    return Object.getPrototypeOf(target).pageLayoutInformation;
};
exports.getPageLayoutInformation = getPageLayoutInformation;
/*
 * Validity decorator and functions for it
 */
exports.validityMetadataKey = Symbol('validityMetadataKey');
const validity = (propSpec) => {
    return Reflect.metadata(exports.validityMetadataKey, propSpec);
};
exports.validity = validity;
function getTextForDeprecated(key, validityInformation) {
    let text = `${key} is deprecated`;
    if (validityInformation && validityInformation.deprecated) {
        text = validityInformation.deprecated.since ? `${text} since ${validityInformation.deprecated.since}` : text;
        text = validityInformation.deprecated.text ? `${text}. ${validityInformation.deprecated.text}` : text;
    }
    return text;
}
exports.getTextForDeprecated = getTextForDeprecated;
//# sourceMappingURL=decorators.js.map