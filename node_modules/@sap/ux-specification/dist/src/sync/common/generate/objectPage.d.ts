import type { ConvertedMetadata, EntitySet, EntityType } from '@sap-ux/vocabularies-types';
import type { FacetConfig, GenerateAppSchemaParameters } from '@sap/ux-specification-types';
import { FioriElementsVersion, SectionType, v2 } from '@sap/ux-specification-types';
import type { Definition } from 'typescript-json-schema';
/**
 * Adds definitions for forms in object page sections to the app schema
 * @param {SectionType} sectionType - prefix to distinguish Section and HeaderSection
 * @param {FacetConfig} section - section definition, as prepared from the annotations
 * @param {object} appSchemaSection - current definition of facet or section in the JSON schema
 * @param {object} appSchema - app specific schema that gets enhanced
 * @param {FioriElementsVersion} version - Fiori Elements version
 * @param {string} facetKey - facet key
 * @returns {string | undefined} target id of form
 */
export declare function handleForm(sectionType: SectionType, section: FacetConfig, appSchemaSection: Definition, appSchema: Definition, version: FioriElementsVersion, facetKey: string): string | undefined;
/**
 * Replaces an alias in an annotation ID or reference, based on the AVT references' list
 * @param annotationIdentifier - annotation ID or reference
 * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool
 * @returns the converted string
 */
export declare function replaceAlias(annotationIdentifier: string, oDataServiceAVT: ConvertedMetadata): string;
/**
 * Common routine to determine the name and the ID of a header action
 * @param action - action as given by AVT
 * @param entityType - entity type by AVT
 * @returns an object comprising action name and action id
 */
export declare function getActionNameAndId(item: any, oDataServiceAVT: ConvertedMetadata): {
    actionName: string;
    actionId: string;
    namespace: string;
};
/**
 * Add Object Page Footer Action Buttons to app-specific schema
 *
 * @param {object} appSchema Schema of the app
 * @param {GenerateAppSchemaParameters} generateParameters - Schema parameters
 * @param {FioriElementsVersion} version - Fiori elements versions
 * @param {function} addFooterActionCallBack - Callback function, either V2 or V4
 * @param {SapUiAppPagesV2} pages - pages found in manifest
 */
export declare function addFooterActions(appSchema: Definition, generateParameters: GenerateAppSchemaParameters, version: FioriElementsVersion, addFooterActionCallBack: any, pages?: v2.SapUiAppPagesV2): void;
/**
 * Add Object Page Header Action Buttons to app-specific schema
 * @param {object} appSchema Schema of the app
 * @param {EntityType} entityType - current entity type
 * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool
 * @param {function} addHeaderActionCallBack - Callback function, either V2 or V4
 */
export declare function addHeaderActions(appSchema: Definition, entityType: EntityType, entitySet: EntitySet, oDataServiceAVT: ConvertedMetadata, addHeaderActionCallBack: any, isV2?: boolean): void;
/**
 * Adds common Object Page Header definitions to the app schema
 * @param appSchema - app-specific JSOn schema
 * @param entityType - current entity Type
 */
export declare function addCommonHeaderSchema(appSchema: Definition, entityType: EntityType): void;
/**
 * Common logic to determine the EntitySet of a given EntityType
 * @param {EntityType} - entity type
 * @param {ConvertedMetadata} serviceAVT - AVT converter output, comprising all annotation information
 * @returns the entity set as defined in AVT, if found
 */
export declare function determineEntitySetOfEntityType(entityType: EntityType, serviceAVT: ConvertedMetadata): EntitySet | undefined;
//# sourceMappingURL=objectPage.d.ts.map