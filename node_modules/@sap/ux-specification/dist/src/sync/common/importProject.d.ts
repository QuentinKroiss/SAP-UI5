import type { ConvertedMetadata, EntitySet, EntityType } from '@sap-ux/vocabularies-types';
import type { File, ImportProjectParameters, ExtensionLogger } from '@sap/ux-specification-types';
export declare function getEntitySetByEntitySetName(entitySetName: string, oDataServiceAVT: ConvertedMetadata): EntitySet;
/**
 * The function returns an EntityType, EntitySet based on the given contextPath or entitySet
 * @param {ConvertedMetadata} oDataServiceAVT service AVT
 * @param {string} contextPath contextPath of a page
 * @param {string} entitySetName entitySet of a page
 * @param {ExtensionLogger} [logger] - Logger class for logging messages
 *
 * @returns {EntityType} entityType of a page
 */
export declare function getEntityTypeEntitySetFromContextPath(oDataServiceAVT: ConvertedMetadata, contextPath?: string, entitySetName?: string, logger?: ExtensionLogger): {
    entityType: EntityType;
    entitySet: EntitySet;
};
/**
 * Import the schema and config files for a given project
 * @param {ImportProjectParameters} importParameters - files of the project: manifest, flex changes, odata files
 */
export declare function importProjectSchema(importProjectParameters: ImportProjectParameters): Promise<File[]>;
/**
 * Import the schema and config files for a given project
 * @param {ImportProjectParameters} importParameters - files of the project: manifest, flex changes, odata files
 */
export declare function importProjectSchemaAndConfig(importProjectParameters: ImportProjectParameters): Promise<File[]>;
//# sourceMappingURL=importProject.d.ts.map