{
  "version": 3,
  "sources": ["../../types/src/index.ts", "../../types/src/common/page.ts", "../../types/src/common/types.ts", "../../types/src/common/Application.ts", "../../types/src/common/webapp/manifest/Manifest.ts", "../../types/src/common/webapp/manifest/sapUi5.ts", "../../types/src/common/color.ts", "../../types/src/apiTypes.ts", "../../types/src/v2/index.ts", "../../types/src/v2/controls/Card.ts", "../../types/src/v2/controls/FilterBar.ts", "../../types/src/v2/controls/Table.ts", "../../types/src/v2/controls/AnalyticalListPageChart.ts", "../../types/src/v2/controls/ObjectPageSection.ts", "../../types/src/v2/controls/ObjectPageTable.ts", "../../types/src/v2/webapp/manifest/sapUiPageV2.ts", "../../types/src/v2/webapp/manifest/sapUi5.ts", "../../types/src/v2/overviewPage.ts", "../../types/src/v4/index.ts", "../../types/src/v4/controls/CustomAction.ts", "../../types/src/v4/controls/Table.ts", "../../types/src/v4/controls/FilterBar.ts", "../../types/src/v4/controls/ToolBar.ts", "../../types/src/v4/controls/ObjectPageLayout.ts", "../../types/src/v4/controls/ObjectPageSection.ts", "../../types/src/v4/controls/ObjectPageTable.ts", "../../types/src/v4/webapp/manifest/sapUiPageV4.ts", "../../types/src/v4/webapp/manifest/sapUi5.ts", "../../types/src/v4/webapp/manifest/ManifestSettings.ts", "../../types/src/v4/pages/ObjectPageConfigV4.ts", "../../types/src/v4/pages/ListReportConfigV4.ts", "../../types/src/apiTypes.ts", "../../types/src/v2/index.ts", "../../types/src/v2/controls/Card.ts", "../../types/src/v2/controls/FilterBar.ts", "../../types/src/v2/controls/Table.ts", "../../types/src/v2/controls/AnalyticalListPageChart.ts", "../../types/src/v2/controls/ObjectPageSection.ts", "../../types/src/v2/controls/ObjectPageTable.ts", "../../types/src/v2/webapp/manifest/sapUiPageV2.ts", "../../types/src/v2/webapp/manifest/sapUi5.ts", "../../types/src/v2/overviewPage.ts", "../../types/src/v4/index.ts", "../../types/src/v4/controls/CustomAction.ts", "../../types/src/v4/controls/Table.ts", "../../types/src/v4/controls/FilterBar.ts", "../../types/src/v4/controls/ToolBar.ts", "../../types/src/v4/controls/ObjectPageLayout.ts", "../../types/src/v4/controls/ObjectPageSection.ts", "../../types/src/v4/controls/ObjectPageTable.ts", "../../types/src/v4/webapp/manifest/sapUiPageV4.ts", "../../types/src/v4/webapp/manifest/sapUi5.ts", "../../types/src/v4/webapp/manifest/ManifestSettings.ts", "../../types/src/v4/pages/ObjectPageConfigV4.ts", "../../types/src/v4/pages/ListReportConfigV4.ts", "../../types/src/index.ts", "../../../node_modules/deepmerge/dist/cjs.js", "../../../node_modules/@sap-ux/annotation-converter/src/utils.ts", "../../../node_modules/@sap-ux/annotation-converter/src/converter.ts", "../../../node_modules/@sap-ux/annotation-converter/src/writeback.ts", "../../../node_modules/@sap-ux/annotation-converter/src/index.ts", "../../../node_modules/@sap-ux/edmx-parser/src/utils.ts", "../../../node_modules/@sap-ux/edmx-parser/src/merger.ts", "../../../node_modules/sax/lib/sax.js", "../../../node_modules/xml-js/lib/array-helper.js", "../../../node_modules/xml-js/lib/options-helper.js", "../../../node_modules/xml-js/lib/xml2js.js", "../../../node_modules/xml-js/lib/xml2json.js", "../../../node_modules/xml-js/lib/js2xml.js", "../../../node_modules/xml-js/lib/json2xml.js", "../../../node_modules/xml-js/lib/index.js", "../../../node_modules/@sap-ux/edmx-parser/src/v2annotationsSupport.ts", "../../../node_modules/@sap-ux/edmx-parser/src/parser.ts", "../../../node_modules/@sap-ux/edmx-parser/src/index.ts", "../../../node_modules/reflect-metadata/Reflect.js", "../../../node_modules/@ui5/flexibility-utils/src/changeUtils.js", "../../../node_modules/@ui5/flexibility-utils/index.js", "../../../node_modules/ejs/lib/utils.js", "../../../node_modules/ejs/package.json", "../../../node_modules/ejs/lib/ejs.js", "../../../node_modules/chevrotain/src/version.ts", "../../../node_modules/chevrotain/src/utils/utils.ts", "../../../node_modules/regexp-to-ast/lib/regexp-to-ast.js", "../../../node_modules/chevrotain/src/scan/reg_exp_parser.ts", "../../../node_modules/chevrotain/src/scan/reg_exp.ts", "../../../node_modules/chevrotain/src/scan/lexer.ts", "../../../node_modules/chevrotain/src/scan/tokens.ts", "../../../node_modules/chevrotain/src/scan/lexer_errors_public.ts", "../../../node_modules/chevrotain/src/scan/lexer_public.ts", "../../../node_modules/chevrotain/src/scan/tokens_public.ts", "../../../node_modules/chevrotain/src/parse/grammar/gast/gast_public.ts", "../../../node_modules/chevrotain/src/parse/grammar/rest.ts", "../../../node_modules/chevrotain/src/parse/grammar/gast/gast_visitor_public.ts", "../../../node_modules/chevrotain/src/parse/grammar/gast/gast.ts", "../../../node_modules/chevrotain/src/parse/grammar/first.ts", "../../../node_modules/chevrotain/src/parse/constants.ts", "../../../node_modules/chevrotain/src/parse/grammar/follow.ts", "../../../node_modules/chevrotain/src/parse/errors_public.ts", "../../../node_modules/chevrotain/src/parse/grammar/resolver.ts", "../../../node_modules/chevrotain/src/parse/grammar/interpreter.ts", "../../../node_modules/chevrotain/src/parse/grammar/lookahead.ts", "../../../node_modules/chevrotain/src/parse/grammar/checks.ts", "../../../node_modules/chevrotain/src/parse/grammar/gast/gast_resolver_public.ts", "../../../node_modules/chevrotain/src/parse/exceptions_public.ts", "../../../node_modules/chevrotain/src/parse/parser/traits/recoverable.ts", "../../../node_modules/chevrotain/src/parse/grammar/keys.ts", "../../../node_modules/chevrotain/src/parse/parser/traits/looksahead.ts", "../../../node_modules/chevrotain/src/parse/cst/cst.ts", "../../../node_modules/chevrotain/src/lang/lang_extensions.ts", "../../../node_modules/chevrotain/src/parse/cst/cst_visitor.ts", "../../../node_modules/chevrotain/src/parse/parser/traits/tree_builder.ts", "../../../node_modules/chevrotain/src/parse/parser/traits/lexer_adapter.ts", "../../../node_modules/chevrotain/src/parse/parser/traits/recognizer_api.ts", "../../../node_modules/chevrotain/src/parse/parser/traits/recognizer_engine.ts", "../../../node_modules/chevrotain/src/parse/parser/traits/error_handler.ts", "../../../node_modules/chevrotain/src/parse/parser/traits/context_assist.ts", "../../../node_modules/chevrotain/src/parse/parser/traits/gast_recorder.ts", "../../../node_modules/chevrotain/src/parse/parser/traits/perf_tracer.ts", "../../../node_modules/chevrotain/src/parse/parser/parser.ts", "../../../node_modules/chevrotain/src/diagrams/render_public.ts", "../../../node_modules/chevrotain/src/generate/generate.ts", "../../../node_modules/chevrotain/src/generate/generate_public.ts", "../../../node_modules/chevrotain/src/api.ts", "../../../node_modules/@xml-tools/parser/lib/lexer.js", "../../../node_modules/@xml-tools/parser/lib/parser.js", "../../../node_modules/@xml-tools/parser/lib/api.js", "../../../node_modules/lodash/lodash.js", "../../../node_modules/@xml-tools/common/lib/find-next-textual-token.js", "../../../node_modules/@xml-tools/common/lib/xml-ns-key.js", "../../../node_modules/@xml-tools/common/lib/api.js", "../../../node_modules/@xml-tools/ast/lib/utils.js", "../../../node_modules/@xml-tools/ast/lib/constants.js", "../../../node_modules/@xml-tools/ast/lib/build-ast.js", "../../../node_modules/@xml-tools/ast/lib/visit-ast.js", "../../../node_modules/@xml-tools/ast/lib/api.js", "../src/index.ts", "../src/api.ts", "../src/sync/common/utils.ts", "../../../node_modules/i18next/dist/esm/i18next.js", "../src/extensionLogger.ts", "../src/sync/v2/generate/objectPage.ts", "../src/sync/common/decoration/control.ts", "../src/sync/common/decoration/decorators.ts", "../src/sync/common/flexUtils.ts", "../src/sync/common/decoration/flex.ts", "../src/sync/common/import/utils.ts", "../src/sync/common/generate/objectPage.ts", "../src/sync/v4/utils/StableIdHelper.ts", "../src/sync/v2/generate/utils.ts", "../src/sync/v2/types.ts", "../src/sync/common/generate/utils.ts", "../src/sync/common/distTagEvaluator.ts", "../src/sync/common/dist_tag.json", "../package.json", "../src/sync/common/importProject.ts", "../src/sync/v2/import/app/appProvider.ts", "../src/sync/common/appProvider.ts", "../src/sync/v2/import/common/index.ts", "../src/sync/v2/import/controls/table.ts", "../src/sync/v2/export/manifest.ts", "../src/sync/v2/export/controls/index.ts", "../src/sync/v2/application.ts", "../src/sync/v2/export/controls/Card.ts", "../src/sync/v2/export/controls/Field.ts", "../src/sync/v2/export/controls/FilterBar.ts", "../src/sync/v2/export/controls/FormAction.ts", "../src/sync/v2/export/controls/Fragment.ts", "../src/sync/v2/export/view-controller-generator.ts", "../src/sync/v2/export/controls/Table.ts", "../src/sync/v2/export/controls/Action.ts", "../src/sync/v2/export/controls/TableColumn.ts", "../src/sync/v2/export/controls/ToolBar.ts", "../src/sync/v2/export/controls/AnalyticalListPageChart.ts", "../src/sync/v2/export/controls/AnalyticalListPageKPI.ts", "../src/sync/v2/export/controls/ObjectPageHeader.ts", "../src/sync/v2/export/controls/ObjectPageHeaderAction.ts", "../src/sync/v2/export/controls/ObjectPageHeaderSection.ts", "../src/sync/v2/export/controls/ObjectPageFooterAction.ts", "../src/sync/v2/export/controls/ObjectPageLayout.ts", "../src/sync/v2/export/controls/ObjectPageCustomSection.ts", "../src/sync/v2/export/controls/ObjectPageSectionsV2.ts", "../src/sync/v2/export/controls/ObjectPageChart.ts", "../src/sync/v2/export/controls/ObjectPageTable.ts", "../src/sync/v2/export/controls/ObjectPageToolBarAction.ts", "../src/sync/v2/import/pages/listReport.ts", "../src/i18n/i18n.ts", "../src/sync/common/i18n.json", "../src/sync/i18n.ts", "../src/sync/v2/import/utils.ts", "../src/sync/v2/export/pages/index.ts", "../src/sync/v2/export/pages/AnalyticalListPage.ts", "../src/sync/v2/export/pages/ListReport.ts", "../src/sync/v2/export/pages/ObjectPage.ts", "../src/sync/v2/export/pages/OverviewPage.ts", "../src/sync/common/decoration/factory.ts", "../src/sync/v2/export/factory.ts", "../src/sync/v2/import/pages/analyticalListPage.ts", "../src/sync/v2/import/pages/objectPage.ts", "../src/sync/v2/import/app/ovpProvider.ts", "../src/sync/v2/import/pages/overviewPage.ts", "../src/sync/v2/export/export.ts", "../src/sync/v4/utils/utils.ts", "../src/sync/v4/generate/listReport.ts", "../src/sync/v4/generate/objectPage.ts", "../src/sync/v4/utils/macros.ts", "../src/sync/v4/generate/fpm-custom-page/generator.ts", "../src/sync/v4/generate/fpm-custom-page/annotations.ts", "../src/sync/v4/generate/fpm-custom-page/utils.ts", "../src/sync/v4/generate/fpm-custom-page/extensions.ts", "../../../node_modules/uuid/dist/esm-node/rng.js", "../../../node_modules/uuid/dist/esm-node/stringify.js", "../../../node_modules/uuid/dist/esm-node/native.js", "../../../node_modules/uuid/dist/esm-node/v4.js", "../src/sync/v4/generate/fpm-custom-page/pageExtensions.ts", "../src/sync/v4/generate/freestylePage.ts", "../src/sync/v4/generate/generate.ts", "../src/sync/v4/application.ts", "../src/sync/v4/sync-rules/controllerExtensions.ts", "../src/sync/v4/import/pages/listReport.ts", "../src/sync/v4/import/utils.ts", "../src/sync/v4/export/controls/index.ts", "../src/sync/v4/export/controls/Table.ts", "../src/sync/v4/export/controls/TableColumn.ts", "../src/sync/v4/export/controls/ToolBar.ts", "../src/sync/v4/export/controls/ToolBarAction.ts", "../src/sync/v4/export/controls/ObjectPageToolBarAction.ts", "../src/sync/v4/export/controls/ObjectPageForm.ts", "../src/sync/v4/export/controls/ObjectPageFormAction.ts", "../src/sync/v4/export/controls/FilterBar.ts", "../src/sync/v4/export/controls/Header.ts", "../src/sync/v4/export/controls/HeaderAction.ts", "../src/sync/v4/export/controls/ObjectPageTableColumn.ts", "../src/sync/v4/export/controls/ObjectPageHeader.ts", "../src/sync/v4/export/controls/ObjectPageFooter.ts", "../src/sync/v4/export/controls/ObjectPageHeaderSection.ts", "../src/sync/v4/export/controls/ObjectPageLayout.ts", "../src/sync/v4/export/controls/ObjectPageTable.ts", "../src/sync/v4/export/controls/ObjectPageCustomHeaderSection.ts", "../src/sync/v4/export/controls/ObjectPageCustomSection.ts", "../src/sync/v4/export/controls/ObjectPageHeaderAction.ts", "../src/sync/v4/export/controls/ObjectPageFooterAction.ts", "../src/sync/v4/export/pages/index.ts", "../src/sync/v4/export/pages/ListReport.ts", "../src/sync/v4/export/pages/ObjectPage.ts", "../src/sync/v4/export/pages/FreestylePage.ts", "../src/sync/v4/export/factory.ts", "../src/sync/v4/import/pages/objectPage.ts", "../src/sync/v4/import/pages/fpmCustomPage.ts", "../src/sync/v4/import/app/appProvider.ts", "../src/specification/schemaAccess.ts", "../src/sync/v2/generate/listReport.ts", "../src/sync/v2/generate/analyticalListReport.ts", "../src/sync/v2/generate/overviewPage.ts", "../src/sync/v2/generate/generate.ts", "../src/sync/v2/export/exportPage.ts", "../src/sync/v4/export/exportCustomColumn.ts", "../src/sync/v4/export/utils.ts", "../src/sync/v4/export/manifest.ts", "../src/sync/v4/export/flexibleColumnLayout.ts", "../src/sync/v4/export/export.ts", "../src/sync/v4/export/fpmCustomPage.ts", "../src/project.ts"],
  "sourcesContent": ["export * from './common';\nexport * from './apiTypes';\nexport * as v2 from './v2';\nexport * as v4 from './v4';\n", "import type { FlexibleColumnLayoutType, ManifestSettingsType } from './types';\n\nexport enum PageTypeV2 {\n    ObjectPage = 'ObjectPage',\n    ListReport = 'ListReport',\n    OverviewPage = 'OverviewPage',\n    CustomPage = 'CustomPage',\n    AnalyticalListPage = 'AnalyticalListPage'\n}\n\nexport enum PageTypeV4 {\n    ObjectPage = 'ObjectPage',\n    ListReport = 'ListReport',\n    CustomPage = 'CustomPage',\n    FPMCustomPage = 'FPMCustomPage',\n    AnalyticalListPage = 'AnalyticalListPage'\n}\n\nexport const PageType = { ...PageTypeV2, ...PageTypeV4 };\nexport type PageType = typeof PageType;\n\nexport const PAGETYPE_VIEW_EXTENSION_TEMPLATE_MAP: Map<PageTypeV2, string> = new Map([\n    [PageTypeV2.ListReport, 'sap.suite.ui.generic.template.ListReport.view.ListReport'],\n    [PageTypeV2.AnalyticalListPage, 'sap.suite.ui.generic.template.AnalyticalListPage.view.AnalyticalListPage'],\n    [PageTypeV2.ObjectPage, 'sap.suite.ui.generic.template.ObjectPage.view.Details']\n]);\n\nexport interface PageConfig {\n    $schema?: string;\n}\n\nexport interface CustomPageConfig extends PageConfig {\n    $filePath?: string;\n}\n\nexport interface PageBase {\n    name?: string;\n    entitySet?: string;\n    contextPath?: string;\n    navigationProperty?: string;\n    config?: PageConfig;\n    navigation?: { [property: string]: string | object };\n    variantManagement?: string;\n    defaultLayoutType?: FlexibleColumnLayoutType;\n}\n\nexport enum FioriElementsVersion {\n    v2 = 'v2',\n    v4 = 'v4'\n}\nexport enum OdataVersion {\n    v2 = 'v2',\n    v4 = 'v4'\n}\nexport interface Target {\n    fioriElements: FioriElementsVersion;\n    odata: OdataVersion;\n}\n\nexport interface PagesBase {\n    [key: string]: PageBase;\n}\nexport interface SapUiGenericAppPageSettings {\n    [key: string]: ManifestSettingsType;\n}\n\nexport interface SapUiGenericAppPage {\n    entitySet: string;\n    navigationProperty?: string;\n    component: {\n        name: string;\n        settings?: SapUiGenericAppPageSettings;\n    };\n    pages?: SapUiGenericAppPage[] | { [pageId: string]: SapUiGenericAppPage };\n}\n\nexport interface SapUiGenericAppPageMap {\n    [key: string]: SapUiGenericAppPage;\n}\n\nexport interface SapUiGenericApp {\n    pages: SapUiGenericAppPage[] | SapUiGenericAppPageMap;\n    _version?: string;\n    settings?: object;\n}\n", "import type { EntityType } from '@sap-ux/vocabularies-types';\nimport type { Definition } from 'typescript-json-schema';\nimport type { Manifest } from './webapp/manifest';\n\nexport enum FlexibleColumnLayoutType {\n    OneColumn = 'OneColumn',\n    TwoColumnsBeginExpanded = 'TwoColumnsBeginExpanded',\n    TwoColumnsMidExpanded = 'TwoColumnsMidExpanded',\n    MidColumnFullScreen = 'MidColumnFullScreen',\n    ThreeColumnsMidExpanded = 'ThreeColumnsMidExpanded',\n    ThreeColumnsEndExpanded = 'ThreeColumnsEndExpanded',\n    ThreeColumnsMidExpandedEndHidden = 'ThreeColumnsMidExpandedEndHidden',\n    ThreeColumnsBeginExpandedEndHidden = 'ThreeColumnsBeginExpandedEndHidden',\n    EndColumnFullScreen = 'EndColumnFullScreen'\n}\n\nexport const enum FlexChangeLayer {\n    Vendor = 'VENDOR',\n    Customer = 'CUSTOMER_BASE'\n}\n\nexport type ManifestSettingsType = boolean | number | string | object;\n\n/**\n * Type for all available schema types, e.g. Application, ListReport, ObjectPage, ...\n */\nexport enum SchemaType {\n    Application = 'Application',\n    ObjectPage = 'ObjectPage',\n    ListReport = 'ListReport',\n    OverviewPage = 'OverviewPage',\n    AnalyticalListPage = 'AnalyticalListPage',\n    FreestylePage = 'FreestylePage',\n    FPMCustomPage = 'FPMCustomPage',\n    BuildingBlocks = 'BuildingBlocks'\n}\n\nexport enum ExportArtifacts {\n    flex = 'flex',\n    manifest = 'manifest'\n}\n\nexport enum ALPViewType {\n    Primary = 'primary',\n    Secondary = 'secondary'\n}\n\nexport enum SectionType {\n    Section = 'Section',\n    SubSection = 'SubSection',\n    HeaderSection = 'HeaderSection'\n}\n\nexport enum ArtifactType {\n    Manifest = 'Manifest',\n    FlexChange = 'FlexChange',\n    Annotation = 'Annotation',\n    XMLProperty = 'XMLProperty'\n}\n\nexport enum ActionType {\n    Annotation = 'Annotation',\n    Copy = 'Copy',\n    Criticality = 'Criticality',\n    Custom = 'Custom',\n    Standard = 'Standard'\n}\n\nexport enum ControlType {\n    Table = 'sap.m.Table',\n    TableColumn = 'sap.m.Column',\n    SmartTable = 'sap.ui.comp.smarttable.SmartTable',\n    SmartFilterBar = 'sap.ui.comp.smartfilterbar.SmartFilterBar',\n    SmartChart = 'sap.ui.comp.smartchart.SmartChart',\n    Group = 'sap.ui.comp.smartform.Group',\n    GroupElement = 'sap.ui.comp.smartform.GroupElement',\n    Button = 'sap.m.Button',\n    ToolbarButton = 'sap.m.OverflowToolbarButton',\n    Avatar = 'sap.f.Avatar',\n    ObjectPageDynamicHeaderTitle = 'sap.uxap.ObjectPageDynamicHeaderTitle',\n    ObjectPageGridProperties = 'sap.ui.layout.GridData',\n    ObjectPageHeader = 'sap.uxap.ObjectPageHeader',\n    ObjectPageLayout = 'sap.uxap.ObjectPageLayout',\n    HeaderAction = 'sap.uxap.ObjectPageHeaderActionButton',\n    ObjectPageHeaderSection = 'sap.m.VBox',\n    DynamicPage = 'sap.f.DynamicPage',\n    Form = 'sap.ui.layout.form',\n    Chart = 'sap.suite.ui.microchart',\n    Section = 'sap.uxap.ObjectPageSection',\n    SubSection = 'sap.uxap.ObjectPageSubSection'\n}\n\nexport interface ChangeContent {\n    property: string;\n    newValue?: ManifestSettingsType;\n    newBinding?: string | object;\n}\n\nexport enum Visualization {\n    LineItem = 'LineItem',\n    Chart = 'Chart'\n}\n\nexport enum DirName {\n    Sapux = 'src',\n    Schemas = '.schemas',\n    Pages = 'pages',\n    Webapp = 'webapp',\n    Temp = '.tmp',\n    Changes = 'changes',\n    LocalService = 'localService',\n    Controller = 'controller',\n    View = 'view',\n    Fragment = 'fragment',\n    Ext = 'ext',\n    VSCode = '.vscode'\n}\nexport enum FileName {\n    App = 'app.json'\n}\n\nexport const FacetTitlePrefix = 'Facet ID: ';\nexport const ActionTitlePrefix = 'Action ID: ';\n\nexport enum ChangeIndicator {\n    NoChange = 'NoChange',\n    Created = 'Created',\n    Updated = 'Updated',\n    Deleted = 'Deleted'\n}\n\nexport interface FileData {\n    dataSourceUri: string;\n    fileContent: string;\n}\n\nexport interface FileDataResult extends FileData {\n    changeIndicator: ChangeIndicator;\n}\n\nexport interface ExportResults {\n    manifest: Manifest;\n    flexChanges?: string[];\n    fragments?: FileDataResult[];\n    views?: FileDataResult[];\n    manifestChangeIndicator: ChangeIndicator;\n}\n\nexport const defaultExportResult: ExportResults = {\n    manifest: {\n        'sap.ui5': {\n            flexEnabled: true,\n            routing: {\n                targets: {}\n            }\n        },\n        'sap.app': {}\n    } as Manifest,\n    manifestChangeIndicator: ChangeIndicator.NoChange,\n    flexChanges: [],\n    fragments: [],\n    views: []\n};\n\n/**\n * Taken over from https://github.com/sap-staging/ui5-flexibility-utils/blob/origin/master/src/changeUtils.js\n */\nexport interface ChangeDefinition {\n    controlId: string; // ID of the control containing all prefixes excluding the application ID prefix\n    controlType: string; // This is NOT in the API so far, but we need it\n    type: string; // Change type, i.e. <code>propertyChange</code>\n    content: ChangeContent; // Content of the change needed by the corresponding change handler\n    isCustomer: boolean; // Flag indicating whether the project is related to a customer project\n    sapui5Version: string; // SAPUI5 version for which the change is created\n    creatingTool: string; // Name of the tool calling this function for support reasons\n    id: string; // UID of the change;\n    reference: string; // Reference to the application;\n    appVersion: string; // Version of the application;\n    creation: string; // String with the creation timestamp;\n}\n/**\n * Taken over from https://github.com/sap-staging/ui5-flexibility-utils/blob/origin/master/src/changeUtils.js\n */\nexport interface ChangeDefinitionInCreation {\n    controlId: string; // ID of the control containing all prefixes excluding the application ID prefix\n    controlType: string; // This is NOT in the API so far, but we need it\n    type?: string; // Change type, i.e. <code>propertyChange</code>\n    content: ChangeContent; // Content of the change needed by the corresponding change handler\n    isCustomer?: boolean; // Flag indicating whether the project is related to a customer project\n    sapui5Version?: string; // SAPUI5 version for which the change is created\n    creatingTool?: string; // Name of the tool calling this function (this is needed for support reasons)\n}\n\nexport type CreateFlexChange = (change: ChangeDefinitionInCreation, manifest: Manifest) => string;\nexport type exportFlexValue = (flexChange: ChangeDefinitionInCreation, configObject: object, key: string) => void;\nexport type importFlexValue = (flexChange: ChangeDefinitionInCreation, configObject: object, key: string) => void;\n\nexport type ControlTypeFunction = () => ControlType;\nexport type ControlIdFunction = (\n    baseId: string,\n    idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    controlType?: ControlTypeFunction,\n    title?: string\n) => string;\n\nexport interface FlexAdapter {\n    controlId: ControlIdFunction;\n    controlType: ControlTypeFunction;\n    createFlexChange: CreateFlexChange;\n    exportFlexValue?: exportFlexValue;\n    importFlexValue?: importFlexValue;\n}\n\nexport type ManifestPath = (pageKeys?: string[], manifest?: Manifest, ...pathParts) => string;\n\nexport type ExportHandlerFunction = (\n    manifestSection: unknown,\n    configObject: unknown,\n    key: string,\n    manifestKey?: string,\n    ...pathParts: string[]\n) => unknown;\n\nexport interface ManifestConverter {\n    path: ManifestPath;\n    key?: string;\n    import?:\n        | ((manifestSection: unknown, sectionId?: string, propertyKey?: string, breadcrumbs?: string[]) => unknown)\n        | boolean;\n    export?: ExportHandlerFunction | boolean;\n    delete?:\n        | ((\n              manifestSection: unknown,\n              configObject: unknown,\n              key: string,\n              manifestKey: string,\n              syncRuleKey?: string,\n              config?: object\n          ) => unknown)\n        | boolean;\n}\n\nexport interface SyncRule {\n    flex?: FlexAdapter;\n    manifest?: ManifestConverter;\n    generate?: (schema: object, definition: object, propertyName: string) => unknown;\n    xml?: (config) => string;\n}\n\nexport interface Content {\n    property: string;\n    oldValue?: ManifestSettingsType;\n    newValue: ManifestSettingsType;\n}\nexport interface Selector {\n    id: string;\n    type: string;\n    idIsLocal?: boolean;\n}\n\nexport interface PageLayoutInformation {\n    id: string;\n    pageId: string;\n}\n\nexport interface FakeLRepSettings {\n    isKeyUser: boolean;\n    isAtoAvailable: boolean;\n    isProductiveSystem: boolean;\n}\n\nexport interface ValidityInformation {\n    since: string;\n    deprecated?: Deprecated;\n}\n\nexport interface DeprecatedProperties {\n    [key: string]: ValidityInformation;\n}\n\nexport interface Deprecated {\n    since: string;\n    text?: string;\n}\n\nexport enum FacetBase {\n    LineItem = 'LineItem',\n    CollectionFacet = 'CollectionFacet',\n    Chart = 'Chart',\n    Form = 'Form',\n    Identification = 'Identification',\n    DataPoint = 'DataPoint',\n    Address = 'Address',\n    Contact = 'Contact',\n    PresentationVariant = 'PresentationVariant',\n    Unknown = ''\n}\n\nexport interface FacetConfig {\n    base: FacetBase;\n    lineItem?: string[];\n    Label?: string;\n    ID?: string;\n    entityType?: EntityType;\n    annotationPath?: string;\n    target?: object;\n    Title?: string;\n    facets?: FacetConfigs;\n    namespace?: string;\n}\n\nexport interface SubSectionConfig {\n    base: FacetBase;\n    Label?: string;\n    ID?: string;\n    facets: FacetConfigs;\n    annotationPath?: string;\n    entityType?: EntityType;\n    target?: object;\n    namespace?: string;\n}\n\nexport interface FacetConfigs {\n    [key: string]: FacetConfig | SubSectionConfig;\n}\n\nexport interface File {\n    dataSourceUri: string;\n    fileContent: string;\n}\n\nexport interface Files {\n    [name: string]: object;\n}\n\nexport interface FacetSection {\n    key: string;\n    label?: string;\n    ID?: string;\n    custom?: boolean;\n    entityType?: EntityType;\n    namespace?: string;\n    // Custom section title\n    title?: string;\n}\n\nexport interface SchemaFilePath {\n    filename: string;\n    path: string;\n}\n\nexport interface ObjectPageSectionData {\n    target: string;\n    key?: string;\n}\n\nexport const BindingPropertyRegexAsString = \"^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$\";\n\nexport enum ViewTemplateType {\n    ResponsiveTableColumnsExtension = 'ResponsiveTableColumnsExtension',\n    AnalyticalTableColumnsExtension = 'AnalyticalTableColumnsExtension',\n    TreeTableColumnsExtension = 'TreeTableColumnsExtension',\n    GridTableColumnsExtension = 'GridTableColumnsExtension',\n    ResponsiveTableCellsExtension = 'ResponsiveTableCellsExtension'\n}\n\n//Definitions for elements in app schema\nexport enum DefinitionName {\n    Action = 'Action',\n    Actions = 'Actions',\n    ActionsLR = 'Actions<LineItems>',\n    ALPChart = 'ALPChart',\n    ALPChartView = 'ALPChartView',\n    ALPTable = 'ALPTable',\n    ALPTableView = 'ALPTableView',\n    AnalyticalListPageFilterBar = 'AnalyticalListPageFilterBar',\n    AnnotationPathAsObject = 'AnnotationPathAsObject',\n    ChartSettings = 'ChartSettings',\n    ChartToolBarAction = 'ChartToolBarAction',\n    CommonHeaderFacetSettings = 'CommonHeaderFacetSettings',\n    CompactFilters = 'CompactFilters',\n    CustomFooterActionOP = 'CustomFooterActionOP',\n    CustomHeaderAction = 'CustomHeaderAction',\n    CustomHeaderActionOP = 'CustomHeaderActionOP',\n    CustomFormActionOP = 'CustomFormActionOP',\n    CustomTableAction = 'CustomTableAction',\n    CustomTableActionOP = 'CustomTableActionOP',\n    CustomColumn = 'TableCustomColumn',\n    CustomColumnOP = 'TableCustomColumnOP',\n    CustomColumns = 'TableCustomColumns',\n    CustomSections = 'CustomSections',\n    FieldPath = 'FieldPath',\n    Field = 'Field',\n    Fields = 'Fields',\n    Fields4Dialog = 'Fields4Dialog',\n    FilterBar = 'FilterBar',\n    FilterBarVisualFilters = 'FilterBarVisualFilters',\n    Footer = 'Footer',\n    FooterAction = 'FooterAction',\n    FooterActionV4 = 'FooterActionV4',\n    FooterActions = 'FooterActions',\n    FooterActionsLR = 'FooterActions<LineItems>',\n    Form = 'Form',\n    FormAction = 'FormAction',\n    GenericActions = 'GenericActions',\n    GenericColumnsOP = 'GenericColumnsOP',\n    GenericFooter = 'GenericFooter',\n    GenericSections = 'GenericSections',\n    GenericSubSections = 'GenericSubSections',\n    GlobalTableSettings = 'GlobalTableSettings',\n    Header = 'Header',\n    HeaderActions = 'HeaderActions',\n    HeaderActionsStandard = 'HeaderActionsStandard',\n    HeaderActionStandard = 'HeaderActionStandard',\n    ObjectPageHeaderAction = 'ObjectPageHeaderAction',\n    ObjectPageHeaderActionStandard = 'ObjectPageHeaderActionStandard',\n    ObjectPageHeaderActions = 'ObjectPageHeaderActions',\n    HeaderSections = 'HeaderSections',\n    LineItems = 'LineItems',\n    LineItemsOfView = 'LineItemsOfView',\n    ListReportFilterBar = 'ListReportFilterBar',\n    LRTableView = 'LRTableView',\n    LRChartView = 'LRChartView',\n    MultiEditV2 = 'MultiEdit',\n    MultiTableModeV4 = 'MultiTableModeV4',\n    ObjectPageChart = 'ObjectPageChart',\n    ObjectPageCustomHeaderSectionFragment = 'ObjectPageCustomHeaderSectionFragment',\n    ObjectPageCustomSectionFragment = 'ObjectPageCustomSectionFragment',\n    ObjectPageCustomSubSectionFragment = 'ObjectPageCustomSubSectionFragment',\n    ObjectPageForm = 'ObjectPageForm',\n    ObjectPageFooter = 'ObjectPageFooter',\n    ObjectPageFooterAction = 'ObjectPageFooterAction',\n    ObjectPageFooterActions = 'ObjectPageFooterActions',\n    ObjectPageFooterActionStandard = 'ObjectPageFooterActionStandard',\n    ObjectPageHeader = 'ObjectPageHeader',\n    ObjectPageHeaderSectionForm = 'ObjectPageHeaderSectionForm',\n    ObjectPageHeaderSectionChart = 'ObjectPageHeaderSectionChart',\n    ObjectPageHeaderSectionDataPoint = 'ObjectPageHeaderSectionDataPoint',\n    ObjectPageHeaderSectionContact = 'ObjectPageHeaderSectionContact',\n    ObjectPageHeaderSectionAddress = 'ObjectPageHeaderSectionAddress',\n    ObjectPageLayout = 'ObjectPageLayout',\n    ObjectPagePresentationVariant = 'ObjectPagePresentationVariant',\n    ObjectPageSectionAddress = 'ObjectPageSectionAddress',\n    ObjectPageSectionChart = 'ObjectPageSectionChart',\n    ObjectPageSectionContact = 'ObjectPageSectionContact',\n    ObjectPageSectionDataPoint = 'ObjectPageSectionDataPoint',\n    ObjectPageSectionForm = 'ObjectPageSectionForm',\n    ObjectPageSectionPresentationVariant = 'ObjectPageSectionPresentationVariant',\n    ObjectPageSectionTableV4 = 'ObjectPageSectionTableV4',\n    ObjectPageSubSections = 'ObjectPageSubSections',\n    ObjectPageTable = 'ObjectPageTable',\n    ObjectPageTableColumn = 'ObjectPageTableColumn',\n    ObjectPageToolBar = 'ObjectPageToolBar',\n    ObjectPageToolBarAction = 'ObjectPageToolBarAction',\n    ObjectPageToolBarActions = 'ObjectPageToolBarActions',\n    Position = 'Position',\n    PositionOP = 'PositionOP',\n    QuickVariant = 'QuickVariant',\n    QuickVariantSelectionOP = 'QuickVariantSelectionOP',\n    QuickVariantSelectionV4OP = 'QuickVariantSelectionV4OP',\n    RelatedFacetKeys = 'RelatedFacetKeys',\n    Sections = 'Sections',\n    SectionActions = 'SectionActions',\n    SelectionFields = 'SelectionFields',\n    Table = 'Table',\n    TableSPV = 'TableSPV',\n    TableColumn = 'TableColumn',\n    TableViewExtension = 'TableViewExtension',\n    ToolBarAction = 'ToolBarAction',\n    ToolBarLR = 'ToolBar<LineItems>',\n    ToolBar = 'ToolBar',\n    ViewTableColumn = 'ViewTableColumn',\n    ViewCustomColumn = 'ViewTableCustomColumn',\n    ViewCustomAction = 'ViewTableCustomAction',\n    ViewChartToolBar = 'ViewChartToolBar',\n    ViewToolBarAction = 'ViewToolBarAction',\n    ViewPosition = 'ViewPosition',\n    ViewCustomActionPosition = 'ViewCustomActionPosition',\n    VisualFilters = 'VisualFilters',\n    VisualFilter = 'VisualFilter',\n    CustomActionPosition = 'CustomActionPosition',\n    CustomActionPositionOP = 'CustomActionPositionOP',\n    CustomHeaderActionPosition = 'CustomHeaderActionPosition',\n    CustomHeaderActionPositionOP = 'CustomHeaderActionPositionOP',\n    CustomFooterActionPositionOP = 'CustomFooterActionPositionOP',\n    CustomExtensionFragment = 'CustomExtensionFragment',\n    CustomFilterField = 'CustomFilterField',\n    CustomFilterFieldPosition = 'CustomFilterFieldPosition',\n    SaveAndEdit = 'SaveAndEdit'\n}\n\nexport enum PropertyName {\n    actions = 'actions',\n    annotationPath = 'annotationPath',\n    chart = 'chart',\n    columns = 'columns',\n    defaultPath = 'defaultPath',\n    defaultTemplateAnnotationPath = 'defaultTemplateAnnotationPath',\n    footer = 'footer',\n    header = 'header',\n    sections = 'sections',\n    table = 'table',\n    views = 'views',\n    visualFilters = 'visualFilters',\n    selectionFields = 'selectionFields'\n}\n\nexport enum SchemaTag {\n    annotationPath = 'annotationPath',\n    annotationType = 'annotationType',\n    artifactType = 'artifactType',\n    controlType = 'controlType',\n    actionType = 'actionType',\n    dataType = 'dataType',\n    fullyQualifiedName = 'fullyQualifiedName',\n    hidden = 'hidden',\n    isViewNode = 'isViewNode',\n    key = 'key',\n    keys = 'keys',\n    target = 'target',\n    propertyIndex = 'propertyIndex'\n}\n\nexport enum SchemaKeyName {\n    id = 'ID',\n    value = 'Value',\n    action = 'Action',\n    target = 'Target',\n    key = 'Key',\n    semanticObject = 'SemanticObject'\n}\n\nexport const MANIFESTPATH = 'webapp/manifest.json';\nexport const VOCWITHSLASH = '/@com.sap.vocabularies';\nexport const VOCWITHCOLONS = '::@com.sap.vocabularies';\nexport const UIVOCABULARY = 'com.sap.vocabularies.UI.v1';\nexport const UIVOCABULARYDOT = 'com.sap.vocabularies.UI.v1.';\nexport const UIVOCABULARYALPHADOT = '@com.sap.vocabularies.UI.v1.';\nexport const QUICKVARPATH = '/quickVariantSelection';\nexport const QUICKVARPATHX = '/quickVariantSelectionX';\nexport const DATESETTINGSPATH = '/filterSettings/dateSettings';\nexport const FRAGMENTNAMEPART = '.fragment.';\n\nexport interface MacrosXMLPathInfo {\n    name: string;\n    index: number;\n}\nexport type MacrosXMLPath = Array<MacrosXMLPathInfo>;\n\nexport enum MacrosPropertyType {\n    Control = 'Control',\n    Property = 'Property',\n    Aggregation = 'Aggregation',\n    Event = 'Event'\n}\n\nexport interface SelectionPositionRange {\n    startOffset: number;\n    endOffset: number;\n    startLine: number;\n    endLine: number;\n    startColumn: number;\n    endColumn: number;\n}\n\nexport interface MacrosSchemaMetadata {\n    // Absolute path in XML to target element\n    path?: MacrosXMLPath;\n    // Control full name\n    controlName?: string;\n    // Type of property - SAPUI5 control and it's subtypes.\n    type?: MacrosPropertyType;\n    // Position in file.\n    position?: SelectionPositionRange;\n    // File path\n    filePath?: string;\n    // Macros id\n    internalId?: string;\n    // Default aggregation\n    defaultAggregation?: string;\n    // Namespaces\n    namespaces?: string[];\n}\n\nexport interface SchemaDefinitionKey {\n    name: SchemaKeyName;\n    value: string;\n}\n\nexport interface SchemaDefinition extends Definition {\n    isViewNode?: boolean;\n    propertyIndex?: number;\n    metadata?: MacrosSchemaMetadata;\n    hidden?: boolean;\n    annotationPath?: string;\n    keys?: SchemaDefinitionKey[];\n}\n", "import type { Target } from './page';\nimport type { Pages as PagesV2, AppSettings as AppSettingsV2 } from '../v2';\nimport type { Pages as PagesV4, AppSettings as AppSettingsV4 } from '../v4';\nimport type { FlexibleColumnLayoutType } from './types';\n\nexport enum DraftDiscardEnabledSettings {\n    restricted = 'restricted'\n}\nexport interface DraftDiscardConfirmationSettings {\n    /**\n     * Allows applications to turn off the discard draft confirmation popup in various scenarios\n     */\n    enabled: DraftDiscardEnabledSettings;\n}\n\nexport enum TableColumnVerticalAlignment {\n    Top = 'Top',\n    Middle = 'Middle',\n    Bottom = 'Bottom'\n}\n\nexport enum StatePreservationMode {\n    persistence = 'persistence',\n    discovery = 'discovery'\n}\n\nexport interface Application {\n    $schema?: string;\n    id?: string;\n    pages?: PagesV2 | PagesV4;\n    home?: string;\n    target?: Target;\n    settings?: AppSettingsV2 | AppSettingsV4;\n}\n\nexport enum FlexibleColumnLayoutAggregations {\n    BeginColumnPages = 'beginColumnPages',\n    MidColumnPages = 'midColumnPages',\n    EndColumnPages = 'endColumnPages'\n}\n\nexport interface FlexibleColumnLayout {\n    defaultTwoColumnLayoutType?: FlexibleColumnLayoutType;\n    defaultThreeColumnLayoutType?: FlexibleColumnLayoutType;\n}\n\nexport interface CommonAppSettings {\n    /**\n     * To change the application header, in your project artifacts, change the i18n property file\n     * for your app under webapp/i18n/i18n.properties ->appTitle. Then, refer to the title as\n     * {{appTitle}} in the sap.app section of the manifest file.\n     * @i18nClassification TIT: Title of the application\n     */\n    title?: string;\n    /**\n     * To change the application header, in your project artifacts, change the i18n property file\n     * for your app under webapp/i18n/i18n.properties ->appDescription. Then, refer to the description\n     * as {{appDescription}} in the sap.app section of the manifest file.\n     * @i18nClassification TIT: Description of the application\n     */\n    description?: string;\n    /**\n     * Allows you to enable key user adaptation for an application.\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/ccd45ba3f0b446a0901b2c9d42b8ad53\n     */\n    flexEnabled?: boolean;\n}\n", "import type * as ManifestNamespace from '@ui5/manifest/types/manifest';\nimport type { ChartColor } from '../../color';\n\nexport { ManifestNamespace };\n\nexport enum DataSourceType {\n    OData = 'OData',\n    ODataAnnotation = 'ODataAnnotation'\n}\n\nexport type ODataVersionType = '2.0' | '4.0';\n\nexport interface CrossNavigation {\n    inbounds?: {\n        [key: string]: ManifestNamespace.Inbound;\n    };\n}\n\nexport interface SapAppSourceTemplate {\n    id: string;\n    version?: string;\n    toolsId?: string;\n}\n\nexport interface SapApp {\n    id?: string;\n    title?: string;\n    type?: string;\n    description?: string;\n    dataSources?: SapAppDataSources | SapAppDataSourcesWithOptions;\n    offline?: boolean;\n    resources?: string;\n    sourceTemplate?: SapAppSourceTemplate;\n    crossNavigation?: CrossNavigation;\n}\n\nexport interface SapAppDataSources {\n    [key: string]: ManifestNamespace.DataSource;\n    mainService: ManifestNamespace.DataSource;\n}\n\nexport type SapAppDataSourceWithOptions = ManifestNamespace.DataSource & {\n    isLocal: boolean;\n    order: number;\n    isActive: boolean;\n};\n\nexport interface SapAppDataSourcesWithOptions {\n    [key: string]: SapAppDataSourceWithOptions;\n}\n\nexport enum ManifestSection {\n    ui = 'sap.ui',\n    app = 'sap.app',\n    generic = 'sap.ui.generic.app',\n    ovp = 'sap.ovp',\n    ui5 = 'sap.ui5'\n}\n\nexport const GENERICAPPSETTINGS = `${ManifestSection.generic}/settings`;\n\n/*--- types for colorPalette ---*/\n\nexport type SemanticColoringType = {\n    /**\n     * color contains the value of the color for the particular state\n     */\n    color: ChartColor;\n    /**\n     * The legend text for the color\n     */\n    legendText: string;\n};\n\nexport type ColorPaletteMapEntryType = {\n    /**\n     * color contains the value of the color for the particular state\n     */\n    color: ChartColor;\n    dimensionValue: string;\n    /**\n     * If the index property is maintained, legends will be positioned in that order\n     */\n    index?: number;\n};\n\nexport enum ColorPaletteDefinitionType {\n    SemanticColoring = 'SemanticColoring',\n    StableColoring = 'StableColoring',\n    MapDimensionValues = 'MapDimensionValues'\n}\n\n/**\n * Semantic coloring, up to four colors can be defined\n */\nexport interface ColorPaletteSemanticColoringType {\n    colorPaletteType: ColorPaletteDefinitionType.SemanticColoring;\n    '0': SemanticColoringType;\n    '1': SemanticColoringType;\n    '2'?: SemanticColoringType;\n    '3'?: SemanticColoringType;\n}\n\n/**\n * For donut charts, a specific color can be mapped to a particular dimension value, so that a stable coloring can be enabled\n */\nexport type ColorPaletteStableColoringType = {\n    colorPaletteType: ColorPaletteDefinitionType.StableColoring;\n    dimensionValueToColor: {\n        [key: string]: string;\n    };\n};\n\n/**\n * For columnn stack charts, rules can be defined to map a specific color to a particular dimension value\n */\nexport type ColorPaletteMapDimensionType = {\n    colorPaletteType: ColorPaletteDefinitionType.MapDimensionValues;\n    /**\n     * For each dimension value to be colored, color and dimensionValue needs to be customized as a rule\n     */\n    dimensionSettings: {\n        [key: string]: {\n            [key: string]: ColorPaletteMapEntryType;\n        };\n    };\n};\n\nexport type ColorPaletteType =\n    | ColorPaletteSemanticColoringType\n    | ColorPaletteStableColoringType\n    | ColorPaletteMapDimensionType;\n\n// Export ui5/manifest definitions under the former names from ux-specification/types\nexport type Inbound = ManifestNamespace.Inbound;\nexport type Manifest = ManifestNamespace.SAPJSONSchemaForWebApplicationManifestFile;\nexport type ObjectStreamCardsSettingsDef = ManifestNamespace.ObjectStreamCardsSettingsDef;\nexport type SapUi5Routing = ManifestNamespace.Routing;\nexport type SapOvp = ManifestNamespace.JSONSchemaForSAPOVPNamespace;\nexport type SapOvpDefaultSpanDef = ManifestNamespace.DefaultSpanDef;\nexport type SapOvpPlotAreaDef = ManifestNamespace.PlotAreaDef;\nexport type SapOvpTimeAxisDef = ManifestNamespace.TimeAxisDef;\nexport type SapOvpTabSetting = ManifestNamespace.TabSetting & {\n    colorPalette?: ColorPaletteType;\n};\n\nexport type SappAppDataSource = ManifestNamespace.DataSource;\nexport interface SapAppDataSourceSettings extends ManifestNamespace.Setting, ManifestNamespace.Setting1 {}\n", "import type { FlexibleColumnLayoutAggregations } from '../../Application';\nimport type { FlexibleColumnLayoutType } from '../../types';\n\nexport const FIORI_FCL_ROOT_VIEW_NAME = 'sap.fe.templates.RootContainer.view.Fcl';\n\nexport const FIORI_FCL_ROOT_ID = 'appRootView';\n\nexport enum ViewTypes {\n    XML = 'XML',\n    HTML = 'HTML',\n    JSON = 'JSON'\n    /** Deprecated as of version 1.90\n     * JS\n     * */\n}\n\nexport interface SapUi5RootView {\n    viewName: typeof FIORI_FCL_ROOT_VIEW_NAME | string;\n    type: ViewTypes;\n    id: typeof FIORI_FCL_ROOT_ID | string;\n    async?: boolean;\n}\n\nexport interface SapUi5OdataModel {\n    preload?: boolean;\n    dataSource: string;\n    settings?: {\n        bundleUrl?: string;\n        bundleName?: string;\n    };\n}\n\nexport interface SapUi5ResourceModel {\n    type: string;\n    uri?: string;\n}\n\nexport type SapUi5RoutingRouteTarget = string | string[];\n\nexport interface SapUi5RoutingRoute {\n    name: string;\n    pattern: string;\n    target: SapUi5RoutingRouteTarget;\n    layout?: FlexibleColumnLayoutType;\n}\n\nexport const SAPUI5_VIEW_CLASS = 'sap.ui.core.mvc.View';\nexport const SAPUI5_FRAGMENT_CLASS = 'sap.ui.core.Fragment';\n\nexport interface SapUi5ViewPath {\n    key: string;\n    annotationPath?: string;\n    entitySet?: string;\n    label?: string;\n    template?: string;\n    keepPreviousPersonalization?: boolean;\n    visible?: string;\n}\n\nexport interface SapUi5RoutingTargetSettingsViews {\n    shownCounts?: boolean;\n    paths?: Array<SapUi5ViewPath>;\n}\n\nexport interface SapUi5RoutingTargetNavigation {\n    detail: object;\n}\n\nexport interface SapUi5RoutingTargetSettings {\n    entitySet?: string;\n    contextPath?: string;\n    navigation?: { [key: string]: SapUi5RoutingTargetNavigation };\n    content?: {\n        header?: {\n            facets?: {};\n        };\n        body?: {\n            sections?: {\n                subSections?: {};\n            };\n        };\n        footer?: {\n            actions?: {};\n        };\n        controlConfiguration?: {};\n    };\n    variantManagement?: string;\n    controlConfiguration?: object;\n    viewPath?: string;\n    views?: SapUi5RoutingTargetSettingsViews;\n}\n\nexport interface SapUi5RoutingTargetBase {\n    options?: {\n        settings: SapUi5RoutingTargetSettings;\n    };\n    controlAggregation?: FlexibleColumnLayoutAggregations;\n    contextPattern?: string;\n}\n\nexport interface SapUi5RoutingTarget extends SapUi5RoutingTargetBase {\n    type: string;\n    id: string;\n    name: string;\n}\n\nexport interface Dependencies {\n    minUI5Version?: string;\n    libs?: { [key: string]: { lazy?: boolean } };\n    components?: { [key: string]: { lazy?: boolean } };\n}\n", "//Copy from https://ui5.sap.com/resources/sap/viz/library-dbg.js as enum\n\nexport enum ChartColor {\n    // Qualitative color\n    'sapUiChartPaletteQualitativeHue1' = 'sapUiChartPaletteQualitativeHue1',\n    'sapUiChartPaletteQualitativeHue2' = 'sapUiChartPaletteQualitativeHue2',\n    'sapUiChartPaletteQualitativeHue3' = 'sapUiChartPaletteQualitativeHue3',\n    'sapUiChartPaletteQualitativeHue4' = 'sapUiChartPaletteQualitativeHue4',\n    'sapUiChartPaletteQualitativeHue5' = 'sapUiChartPaletteQualitativeHue5',\n    'sapUiChartPaletteQualitativeHue6' = 'sapUiChartPaletteQualitativeHue6',\n    'sapUiChartPaletteQualitativeHue7' = 'sapUiChartPaletteQualitativeHue7',\n    'sapUiChartPaletteQualitativeHue8' = 'sapUiChartPaletteQualitativeHue8',\n    'sapUiChartPaletteQualitativeHue9' = 'sapUiChartPaletteQualitativeHue9',\n    'sapUiChartPaletteQualitativeHue10' = 'sapUiChartPaletteQualitativeHue10',\n    'sapUiChartPaletteQualitativeHue11' = 'sapUiChartPaletteQualitativeHue11',\n    'sapUiChartPaletteQualitativeHue12' = 'sapUiChartPaletteQualitativeHue12',\n    'sapUiChartPaletteQualitativeHue13' = 'sapUiChartPaletteQualitativeHue13',\n    'sapUiChartPaletteQualitativeHue14' = 'sapUiChartPaletteQualitativeHue14',\n    'sapUiChartPaletteQualitativeHue15' = 'sapUiChartPaletteQualitativeHue15',\n    'sapUiChartPaletteQualitativeHue16' = 'sapUiChartPaletteQualitativeHue16',\n    'sapUiChartPaletteQualitativeHue17' = 'sapUiChartPaletteQualitativeHue17',\n    'sapUiChartPaletteQualitativeHue18' = 'sapUiChartPaletteQualitativeHue18',\n    'sapUiChartPaletteQualitativeHue19' = 'sapUiChartPaletteQualitativeHue19',\n    'sapUiChartPaletteQualitativeHue20' = 'sapUiChartPaletteQualitativeHue20',\n    'sapUiChartPaletteQualitativeHue21' = 'sapUiChartPaletteQualitativeHue21',\n    'sapUiChartPaletteQualitativeHue22' = 'sapUiChartPaletteQualitativeHue22',\n    // Semantic color\n    'sapUiChartPaletteSemanticBadLight3' = 'sapUiChartPaletteSemanticBadLight3',\n    'sapUiChartPaletteSemanticBadLight2' = 'sapUiChartPaletteSemanticBadLight2',\n    'sapUiChartPaletteSemanticBadLight1' = 'sapUiChartPaletteSemanticBadLight1',\n    'sapUiChartPaletteSemanticBad' = 'sapUiChartPaletteSemanticBad',\n    'sapUiChartPaletteSemanticBadDark1' = 'sapUiChartPaletteSemanticBadDark1',\n    'sapUiChartPaletteSemanticBadDark2' = 'sapUiChartPaletteSemanticBadDark2',\n    'sapUiChartPaletteSemanticCriticalLight3' = 'sapUiChartPaletteSemanticCriticalLight3',\n    'sapUiChartPaletteSemanticCriticalLight2' = 'sapUiChartPaletteSemanticCriticalLight2',\n    'sapUiChartPaletteSemanticCriticalLight1' = 'sapUiChartPaletteSemanticCriticalLight1',\n    'sapUiChartPaletteSemanticCritical' = 'sapUiChartPaletteSemanticCritical',\n    'sapUiChartPaletteSemanticCriticalDark1' = 'sapUiChartPaletteSemanticCriticalDark1',\n    'sapUiChartPaletteSemanticCriticalDark2' = 'sapUiChartPaletteSemanticCriticalDark2',\n    'sapUiChartPaletteSemanticGoodLight3' = 'sapUiChartPaletteSemanticGoodLight3',\n    'sapUiChartPaletteSemanticGoodLight2' = 'sapUiChartPaletteSemanticGoodLight2',\n    'sapUiChartPaletteSemanticGoodLight1' = 'sapUiChartPaletteSemanticGoodLight1',\n    'sapUiChartPaletteSemanticGood' = 'sapUiChartPaletteSemanticGood',\n    'sapUiChartPaletteSemanticGoodDark1' = 'sapUiChartPaletteSemanticGoodDark1',\n    'sapUiChartPaletteSemanticGoodDark2' = 'sapUiChartPaletteSemanticGoodDark2',\n    'sapUiChartPaletteSemanticNeutralLight3' = 'sapUiChartPaletteSemanticNeutralLight3',\n    'sapUiChartPaletteSemanticNeutralLight2' = 'sapUiChartPaletteSemanticNeutralLight2',\n    'sapUiChartPaletteSemanticNeutralLight1' = 'sapUiChartPaletteSemanticNeutralLight1',\n    'sapUiChartPaletteSemanticNeutral' = 'sapUiChartPaletteSemanticNeutral',\n    'sapUiChartPaletteSemanticNeutralDark1' = 'sapUiChartPaletteSemanticNeutralDark1',\n    'sapUiChartPaletteSemanticNeutralDark2' = 'sapUiChartPaletteSemanticNeutralDark2',\n    'sapUiChartPaletteNoSemDiv1Dark2' = 'sapUiChartPaletteNoSemDiv1Dark2',\n    'sapUiChartPaletteNoSemDiv1Dark1' = 'sapUiChartPaletteNoSemDiv1Dark1',\n    'sapUiChartPaletteNoSemDiv1' = 'sapUiChartPaletteNoSemDiv1',\n    'sapUiChartPaletteNoSemDiv1Light1' = 'sapUiChartPaletteNoSemDiv1Light1',\n    'sapUiChartPaletteNoSemDiv1Light2' = 'sapUiChartPaletteNoSemDiv1Light2',\n    'sapUiChartPaletteNoSemDiv1Light3' = 'sapUiChartPaletteNoSemDiv1Light3',\n    // Sequential color\n    'sapUiChartPaletteSequentialHue1Light3' = 'sapUiChartPaletteSequentialHue1Light3',\n    'sapUiChartPaletteSequentialHue1Light2' = 'sapUiChartPaletteSequentialHue1Light2',\n    'sapUiChartPaletteSequentialHue1Light1' = 'sapUiChartPaletteSequentialHue1Light1',\n    'sapUiChartPaletteSequentialHue1' = 'sapUiChartPaletteSequentialHue1',\n    'sapUiChartPaletteSequentialHue1Dark1' = 'sapUiChartPaletteSequentialHue1Dark1',\n    'sapUiChartPaletteSequentialHue1Dark2' = 'sapUiChartPaletteSequentialHue1Dark2',\n    'sapUiChartPaletteSequentialHue2Light3' = 'sapUiChartPaletteSequentialHue2Light3',\n    'sapUiChartPaletteSequentialHue2Light2' = 'sapUiChartPaletteSequentialHue2Light2',\n    'sapUiChartPaletteSequentialHue2Light1' = 'sapUiChartPaletteSequentialHue2Light1',\n    'sapUiChartPaletteSequentialHue2' = 'sapUiChartPaletteSequentialHue2',\n    'sapUiChartPaletteSequentialHue2Dark1' = 'sapUiChartPaletteSequentialHue2Dark1',\n    'sapUiChartPaletteSequentialHue2Dark2' = 'sapUiChartPaletteSequentialHue2Dark2',\n    'sapUiChartPaletteSequentialHue3Light3' = 'sapUiChartPaletteSequentialHue3Light3',\n    'sapUiChartPaletteSequentialHue3Light2' = 'sapUiChartPaletteSequentialHue3Light2',\n    'sapUiChartPaletteSequentialHue3Light1' = 'sapUiChartPaletteSequentialHue3Light1',\n    'sapUiChartPaletteSequentialHue3' = 'sapUiChartPaletteSequentialHue3',\n    'sapUiChartPaletteSequentialHue3Dark1' = 'sapUiChartPaletteSequentialHue3Dark1',\n    'sapUiChartPaletteSequentialHue3Dark2' = 'sapUiChartPaletteSequentialHue3Dark2',\n    'sapUiChartPaletteSequentialHue6Light3' = 'sapUiChartPaletteSequentialHue6Light3',\n    'sapUiChartPaletteSequentialHue6Light2' = 'sapUiChartPaletteSequentialHue6Light2',\n    'sapUiChartPaletteSequentialHue6Light1' = 'sapUiChartPaletteSequentialHue6Light1',\n    'sapUiChartPaletteSequentialHue6' = 'sapUiChartPaletteSequentialHue6',\n    'sapUiChartPaletteSequentialHue6Dark1' = 'sapUiChartPaletteSequentialHue6Dark1',\n    'sapUiChartPaletteSequentialHue6Dark2' = 'sapUiChartPaletteSequentialHue6Dark2',\n    'sapUiChartPaletteSequentialNeutralLight3' = 'sapUiChartPaletteSequentialNeutralLight3',\n    'sapUiChartPaletteSequentialNeutralLight2' = 'sapUiChartPaletteSequentialNeutralLight2',\n    'sapUiChartPaletteSequentialNeutralLight1' = 'sapUiChartPaletteSequentialNeutralLight1',\n    'sapUiChartPaletteSequentialNeutral' = 'sapUiChartPaletteSequentialNeutral',\n    'sapUiChartPaletteSequentialNeutralDark1' = 'sapUiChartPaletteSequentialNeutralDark1',\n    'sapUiChartPaletteSequentialNeutralDark2' = 'sapUiChartPaletteSequentialNeutralDark2',\n    'sapUiChoroplethRegionBG' = 'sapUiChoroplethRegionBG',\n    'sapUiChartZeroAxisColor' = 'sapUiChartZeroAxisColor',\n    'sapUiNegativeElement' = 'sapUiNegativeElement',\n    'sapUiCriticalElement' = 'sapUiCriticalElement',\n    'sapUiPositiveElement' = 'sapUiPositiveElement',\n    'sapUiNeutralElement' = 'sapUiNeutralElement'\n}\n", "import type { Definition } from 'typescript-json-schema';\nimport type { ConvertedMetadata, EntitySet, EntityType } from '@sap-ux/vocabularies-types';\nimport type { Editor } from 'mem-fs-editor';\nimport type {\n    CustomPage as FPMCustomPage,\n    CustomTableColumn as FPMCustomTableColumn,\n    CustomSection as FPMCustomSection,\n    ObjectPage as FPMObjectPage,\n    CustomAction as FPMCustomAction,\n    CustomView as FPMCustomView,\n    ControllerExtension as FPMControllerExtension,\n    CustomSubSection as FPMCustomSubSection,\n    CustomHeaderSection as FPMCustomHeaderSection,\n    CustomFilter as FPMCustomFilter\n} from '@sap-ux/fe-fpm-writer';\nimport type { FioriElementsVersion, Manifest, v2, v4, File } from '.';\nimport type { SchemaType, FileData, FlexChangeLayer, ExportResults } from './common/types';\n\n// Export types from fpm-writer\nexport type { ControllerExtensionPageType, TargetControl as CustomActionTargetControl } from '@sap-ux/fe-fpm-writer';\n\nexport type MessageMetadataType = (object | string | number)[];\n\nexport const enum LogSeverity {\n    Error = 'error',\n    Warning = 'warning',\n    Info = 'info'\n}\n\nexport const LogSeverityLabel = {\n    [LogSeverity.Error]: 'Error',\n    [LogSeverity.Warning]: 'Warning',\n    [LogSeverity.Info]: 'Information'\n};\n\nexport type LogMessage = string | object | undefined;\n\nexport type ConfigEntityPath = Array<string | number>;\n\nexport interface RangePosition {\n    line: number;\n    character: number;\n}\nexport interface Range {\n    start: RangePosition;\n    end: RangePosition;\n}\n\nexport interface Location {\n    path: string;\n    range?: Range | string[];\n}\n\n/**\n * Interface used to define a logger for the specificaton API\n */\nexport interface ExtensionLogger {\n    info: (message: string, ...meta: MessageMetadataType) => void;\n    warning: (message: string, ...meta: MessageMetadataType) => void;\n    error: (message: string, ...meta: MessageMetadataType) => void;\n}\n\n/*********************************************************************\n * Types for app schema generation\n *********************************************************************/\n\n/**\n * Types for V2 schema generation\n */\nexport type GenerateListReportV2 = {\n    [SchemaType.ListReport]: {\n        genericSchema: object;\n        entitySet: string;\n        annotations: FileData[];\n        manifest: Manifest;\n        fragments: FileData[];\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateObjectPageV2 = {\n    [SchemaType.ObjectPage]: {\n        genericSchema: object;\n        entitySet: string;\n        annotations: FileData[];\n        manifest: Manifest;\n        fragments: FileData[];\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateOverviewPageV2 = {\n    [SchemaType.OverviewPage]: {\n        genericSchema: object;\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateAnalyticalListPageV2 = {\n    [SchemaType.AnalyticalListPage]: {\n        genericSchema: object;\n        entitySet: string;\n        annotations: object[];\n        manifest: Manifest;\n        fragments: FileData[];\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateSchemaV2Type =\n    | GenerateListReportV2\n    | GenerateObjectPageV2\n    | GenerateOverviewPageV2\n    | GenerateAnalyticalListPageV2;\n\nexport interface GenerateSchemaV2 {\n    [FioriElementsVersion.v2]: GenerateSchemaV2Type;\n}\n\n/**\n * Types for V4 schema generation\n */\nexport type GenerateListReportV4 = {\n    [SchemaType.ListReport]: {\n        genericSchema: object;\n        entitySet?: string;\n        contextPath?: string;\n        annotations: FileData[];\n        logger?: ExtensionLogger;\n        manifest?: Manifest;\n    };\n};\n\nexport type GenerateObjectPageV4 = {\n    [SchemaType.ObjectPage]: {\n        genericSchema: object;\n        entitySet?: string;\n        contextPath?: string;\n        annotations: FileData[];\n        manifest: Manifest;\n        logger?: ExtensionLogger;\n        genericMacrosSchema?: object;\n        fragments?: FileData[];\n    };\n};\n\nexport type GenerateAnalyticalListPageV4 = {\n    [SchemaType.AnalyticalListPage]: {\n        genericSchema: object;\n        entitySet?: string;\n        contextPath?: string;\n        annotations: FileData[];\n        logger?: ExtensionLogger;\n        manifest?: Manifest;\n    };\n};\n\nexport type GenerateFreestylePageV4 = {\n    [SchemaType.FreestylePage]: {\n        genericSchema: object;\n        annotations: FileData[];\n        manifest: Manifest;\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateFPMPageV4 = {\n    [SchemaType.FPMCustomPage]: {\n        genericSchema: object;\n        views: FileData[];\n        manifest: Manifest;\n        routingId: string;\n        annotations: FileData[];\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateSchemaV4Type =\n    | GenerateListReportV4\n    | GenerateObjectPageV4\n    | GenerateAnalyticalListPageV4\n    | GenerateFreestylePageV4\n    | GenerateFPMPageV4;\n\nexport interface GenerateSchemaV4 {\n    [FioriElementsVersion.v4]: GenerateSchemaV4Type;\n}\n\n/**\n * Union type for schema generation\n */\nexport type GenerateSchemaParameters = SyncBaseParameters & (GenerateSchemaV2 | GenerateSchemaV4);\n\n/*********************************************************************\n * Types for export of config\n *********************************************************************/\n\n/**\n * Types for v2 export\n */\n\nexport type ExportObjectPageV2Parameters = {\n    appId: string;\n    page: v2.Page;\n    manifest: Manifest;\n    jsonSchema: object;\n    fragments?: FileData[];\n    logger?: ExtensionLogger;\n};\nexport type ExportObjectPageV2 = {\n    [SchemaType.ObjectPage]: ExportObjectPageV2Parameters;\n};\nexport type ExportObjectPageV2WithPathParameters = ExportObjectPageV2Parameters & {\n    entityPath: ConfigEntityPath;\n};\nexport type ExportObjectPageWithPathV2 = {\n    [SchemaType.ObjectPage]: ExportObjectPageV2WithPathParameters;\n};\n\nexport type ExportListReportV2Parameters = ExportObjectPageV2Parameters & {\n    views?: FileData[];\n};\nexport type ExportListReportV2 = {\n    [SchemaType.ListReport]: ExportListReportV2Parameters;\n};\nexport type ExportListReportWithPathV2Parameters = ExportListReportV2Parameters & {\n    entityPath: ConfigEntityPath;\n};\nexport type ExportListReportWithPathV2 = {\n    [SchemaType.ListReport]: ExportListReportWithPathV2Parameters;\n};\n\nexport type ExportAnalyticalListPageV2Parameters = ExportListReportV2Parameters;\nexport type ExportAnalyticalListPageV2 = {\n    [SchemaType.AnalyticalListPage]: ExportAnalyticalListPageV2Parameters;\n};\nexport type ExportALPWithPathV2Parameters = ExportAnalyticalListPageV2Parameters & {\n    entityPath: ConfigEntityPath;\n};\nexport type ExportALPWithPathV2 = {\n    [SchemaType.AnalyticalListPage]: ExportALPWithPathV2Parameters;\n};\n\nexport type ExportOverviewPageV2Parameters = {\n    page: v2.Page;\n    manifest: object;\n    jsonSchema: object;\n    logger?: ExtensionLogger;\n};\n\nexport type ExportOverviewPageV2 = {\n    [SchemaType.OverviewPage]: ExportOverviewPageV2Parameters;\n};\nexport type ExportOVPWithPathParameters = ExportOverviewPageV2Parameters & {\n    entityPath: ConfigEntityPath;\n};\nexport type ExportOVPWithPathV2 = {\n    [SchemaType.OverviewPage]: ExportOVPWithPathParameters;\n};\n\nexport type ExportAppV2 = {\n    [SchemaType.Application]: {\n        application: v2.ApplicationV2;\n        manifest: Manifest;\n        jsonSchema: object;\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type ExportPageUnitionType =\n    | ExportALPWithPathV2Parameters\n    | ExportAnalyticalListPageV2Parameters\n    | ExportListReportV2Parameters\n    | ExportListReportWithPathV2Parameters\n    | ExportObjectPageV2WithPathParameters\n    | ExportObjectPageV2Parameters;\n\n/**\n * Types for v4 export\n */\nexport type ExportListReportV4Parameters = {\n    appId: string;\n    page: v4.PageV4;\n    manifest: Manifest;\n    jsonSchema: object;\n    logger?: ExtensionLogger;\n    appRootPath?: string;\n};\nexport type ExportListReportV4 = {\n    [SchemaType.ListReport]: ExportListReportV4Parameters;\n};\nexport type ExportListReportV4WithPathParameters = ExportListReportV4Parameters & {\n    entityPath: ConfigEntityPath;\n};\nexport type ExportListReportWithPathV4 = {\n    [SchemaType.ListReport]: ExportListReportV4WithPathParameters;\n};\n\nexport type ExportAnalyticalListPageV4Parameters = ExportListReportV4Parameters;\nexport type ExportALPVWithPath4Parameters = ExportAnalyticalListPageV4Parameters & {\n    entityPath: ConfigEntityPath;\n};\nexport type ExportAnalyticalListPageV4 = {\n    [SchemaType.AnalyticalListPage]: ExportAnalyticalListPageV4Parameters;\n};\nexport type ExportALPWithPathV4 = {\n    [SchemaType.AnalyticalListPage]: ExportALPVWithPath4Parameters;\n};\n\nexport type ExportObjectPageV4Parameters = {\n    appId: string;\n    page: v4.Page;\n    manifest: Manifest;\n    jsonSchema: object;\n    fragments?: FileData[];\n    logger?: ExtensionLogger;\n    appRootPath?: string;\n};\nexport type ExportObjectPageWithPathV4Parameters = ExportObjectPageV4Parameters & {\n    entityPath: ConfigEntityPath;\n};\nexport type ExportObjectPageV4 = {\n    [SchemaType.ObjectPage]: ExportObjectPageV4Parameters;\n};\nexport type ExportObjectPageWithPathV4 = {\n    [SchemaType.ObjectPage]: ExportObjectPageWithPathV4Parameters;\n};\n\nexport type ExportFPMCustomPageV4Parameters = {\n    appId: string;\n    page: v4.Page;\n    manifest: Manifest;\n    jsonSchema: object;\n    fragments: FileData[];\n    views: FileData[];\n    logger?: ExtensionLogger;\n    appRootPath?: string;\n};\nexport type ExportFPMCustomPageV4 = {\n    [SchemaType.FPMCustomPage]: ExportFPMCustomPageV4Parameters;\n};\n\nexport type ExportAppV4 = {\n    [SchemaType.Application]: {\n        application: v4.ApplicationV4;\n        manifest: Manifest;\n        jsonSchema: object;\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type ExportParametersV4Type =\n    | ExportListReportV4\n    | ExportObjectPageV4\n    | ExportAppV4\n    | ExportAnalyticalListPageV4\n    | ExportFPMCustomPageV4;\nexport interface ExportParametersV4 {\n    [FioriElementsVersion.v4]: ExportParametersV4Type;\n}\nexport type ExportParametersWithPathV4Type =\n    | ExportListReportWithPathV4\n    | ExportObjectPageWithPathV4\n    | ExportALPWithPathV4;\nexport interface ExportV4WithPath {\n    [FioriElementsVersion.v4]: ExportParametersWithPathV4Type;\n}\n\nexport interface UI5Version {\n    ui5Version?: string;\n    layer?: FlexChangeLayer;\n}\n\nexport type ExportParametersV2Type =\n    | ExportListReportV2\n    | ExportObjectPageV2\n    | ExportOverviewPageV2\n    | ExportAppV2\n    | ExportAnalyticalListPageV2;\n\nexport type ExportV2WithPathType =\n    | ExportListReportWithPathV2\n    | ExportObjectPageWithPathV2\n    | ExportOVPWithPathV2\n    | ExportALPWithPathV2;\n\nexport interface ExportParametersV2 {\n    [FioriElementsVersion.v2]: ExportParametersV2Type;\n}\nexport interface ExportV2WithPath {\n    [FioriElementsVersion.v2]: ExportV2WithPathType;\n}\n\n/**\n * Union types for export\n */\nexport type ExportConfigParameters = UI5Version & SyncBaseParameters & (ExportParametersV2 | ExportParametersV4);\nexport type ExportConfigWithPath = UI5Version & SyncBaseParameters & (ExportV2WithPath | ExportV4WithPath);\n\n/*********************************************************************\n * Types for import, creation of config\n *********************************************************************/\n\nexport type CommonImportParameters = {\n    manifest: Manifest;\n    flex: string[];\n    jsonSchema: object;\n    fragments?: FileData[];\n    logger?: ExtensionLogger;\n};\n\n/**\n * Types for v2 import\n */\nexport type ImportListReportV2Parameters = CommonImportParameters;\n\nexport type ImportListReportV2 = {\n    [SchemaType.ListReport]: ImportListReportV2Parameters;\n};\n\nexport type ImportObjectPageV2Parameters = CommonImportParameters & {\n    entitySet: string;\n};\nexport type ImportObjectPageV2 = {\n    [SchemaType.ObjectPage]: ImportObjectPageV2Parameters;\n};\n\nexport type ImportOverviewPageV2Parameters = {\n    manifest: Manifest;\n    jsonSchema: object;\n    logger?: ExtensionLogger;\n};\nexport type ImportOverviewPageV2 = {\n    [SchemaType.OverviewPage]: ImportOverviewPageV2Parameters;\n};\n\nexport type ImportALPV2Parameters = CommonImportParameters;\nexport type ImportAnalyticalListPageV2 = {\n    [SchemaType.AnalyticalListPage]: ImportALPV2Parameters;\n};\n\n/**\n * Types for v4 import\n */\nexport type ImportListReportV4Parameters = {\n    manifest: Manifest;\n    jsonSchema: Definition;\n    logger?: ExtensionLogger;\n};\nexport type ImportListReportV4 = {\n    [SchemaType.ListReport]: ImportListReportV4Parameters;\n};\n\nexport type ImportObjectPageV4Parameters = {\n    manifest: Manifest;\n    jsonSchema: Definition;\n    routingId: string;\n    logger?: ExtensionLogger;\n    fragments?: FileData[];\n};\nexport type ImportObjectPageV4 = {\n    [SchemaType.ObjectPage]: ImportObjectPageV4Parameters;\n};\n\nexport type ImportAnalyticalListPageV4Parameters = ImportListReportV4Parameters;\nexport type ImportAnalyticalListPageV4 = {\n    [SchemaType.AnalyticalListPage]: ImportAnalyticalListPageV4Parameters;\n};\n\nexport type ImportFPMCustomPageV4Parameters = {\n    manifest: Manifest;\n    jsonSchema: Definition;\n    routingId: string;\n    fragments: FileData[];\n    views: FileData[];\n    logger?: ExtensionLogger;\n};\nexport type ImportFPMCustomPageV4 = {\n    [SchemaType.FPMCustomPage]: ImportFPMCustomPageV4Parameters;\n};\n\nexport type ImportParametersV4Type =\n    | ImportListReportV4\n    | ImportObjectPageV4\n    | ImportAnalyticalListPageV4\n    | ImportFPMCustomPageV4;\n\nexport interface ImportParametersV4 {\n    [FioriElementsVersion.v4]: ImportParametersV4Type;\n}\n\nexport type ImportParametersV2Type =\n    | ImportListReportV2\n    | ImportObjectPageV2\n    | ImportOverviewPageV2\n    | ImportAnalyticalListPageV2;\nexport interface ImportParametersV2 {\n    [FioriElementsVersion.v2]: ImportParametersV2Type;\n}\n\nexport type ImportResultsV2 =\n    | v2.ListReportConfigV2\n    | v2.ObjectPageConfigV2\n    | v2.OverviewPageConfigV2\n    | v2.AnalyticalListPageConfigV2;\nexport type ImportResultsV4 = v4.ListReportConfigV4 | v4.ObjectPageConfigV4;\n\nexport type ImportConfigParameters = SyncBaseParameters & (ImportParametersV2 | ImportParametersV4);\n\nexport interface Schemas {\n    [type: string]: object;\n}\n\nexport interface ExtensionFiles {\n    views: FileData[];\n    fragments: FileData[];\n}\n\nexport type ImportAllConfigsParameters = {\n    manifest: Manifest;\n    appSchemas: Schemas;\n    templateType: TemplateType;\n    serviceAVT: ConvertedMetadata;\n    logger?: ExtensionLogger;\n    flexChanges?: string[];\n    fragments?: FileData[];\n    views?: FileData[];\n};\n\nexport type ImportResults = ImportResultsV2 | ImportResultsV4;\n\n/**\n * Types for project import\n */\nexport interface ImportProjectParameters extends SyncBaseParameters {\n    manifest: Manifest;\n    annotations: FileData[];\n    flex?: string[];\n    fragments?: FileData[];\n    views?: FileData[];\n    logger?: ExtensionLogger;\n}\n\nexport enum TemplateType {\n    ListReportObjectPageV2 = 'ListReportObjectPageV2',\n    ListReportObjectPageV4 = 'ListReportObjectPageV4',\n    OverviewPageV2 = 'OverviewPageV2',\n    AnalyticalListPageV2 = 'AnalyticalListPageV2',\n    AnalyticalListPageV4 = 'AnalyticalListPageV4',\n    FreestylePageV4 = 'FreestylePageV4'\n}\n\nexport interface GenerateAppSchemaParameters extends SyncBaseParameters {\n    templateType: TemplateType;\n    manifest: Manifest;\n    serviceAVT: ConvertedMetadata;\n    fioriElementsVersion: FioriElementsVersion;\n    entitySet?: EntitySet;\n    fragments?: FileData[];\n    views?: FileData[];\n    logger?: ExtensionLogger;\n    entityType?: EntityType;\n}\n\nexport enum CustomExtensionType {\n    CustomPage = 'CustomPage',\n    CustomColumn = 'CustomColumn',\n    CustomSection = 'CustomSection',\n    ObjectPage = 'ObjectPage',\n    CustomAction = 'CustomAction',\n    CustomView = 'CustomView',\n    ControllerExtension = 'ControllerExtension',\n    CustomSubSection = 'CustomSubSection',\n    CustomFilterField = 'CustomFilterField',\n    CustomHeaderSection = 'CustomHeaderSection'\n}\n\nexport interface GenerateCustomExtensionParams {\n    customExtension: CustomExtensionType;\n    basePath: string;\n    data: CustomExtensionData;\n    fsEditor?: Editor;\n}\n\nexport type CustomExtensionData =\n    | FPMCustomPage\n    | FPMCustomTableColumn\n    | FPMCustomSubSection\n    | FPMCustomHeaderSection\n    | FPMCustomSection\n    | FPMObjectPage\n    | FPMCustomAction\n    | FPMCustomView\n    | FPMControllerExtension\n    | FPMCustomFilter;\n\n/**\n * API Version\n */\nexport interface ApiVersion {\n    version?: string;\n    fpmWriter?: string;\n}\n\n/**\n * API Feature toggles\n */\nexport enum Features {\n    BuildingBlocks = 'BuildingBlocks'\n}\n// Value from enum or any string to allow freedom from outside\nexport type FeatureToggle = Features | string;\n\nexport interface SyncBaseParameters {\n    featureToggles?: FeatureToggle[];\n}\n\n/**\n * API interface\n */\nexport interface Specification {\n    getGenericSchema: (version: FioriElementsVersion, schemaType: SchemaType) => Promise<JSON>;\n    generateSchema: (params: GenerateSchemaParameters) => object;\n    exportConfig: (params: ExportConfigParameters) => ExportResults;\n    importConfig: (params: ImportConfigParameters) => ImportResults;\n    importProject: (params: ImportProjectParameters) => Promise<File[]>;\n    getApiVersion: () => ApiVersion;\n    importProjectSchema: (params: ImportProjectParameters) => Promise<File[]>;\n    generateCustomExtension: (params: GenerateCustomExtensionParams) => Editor;\n}\n", "export * from './controls';\nexport * from './webapp';\nexport * from './page';\nexport * from './pages';\nexport * from './overviewPage';\nexport * from './application';\nexport * from './ApplicationV2';\n", "import type {\n    ColorPaletteType,\n    ObjectStreamCardsSettingsDef,\n    SapOvpPlotAreaDef,\n    SapOvpTabSetting,\n    SapOvpTimeAxisDef\n} from '../../common';\n\nexport interface DefaultSpanObject {\n    /**\n     * Represents the number of the number of grid columns\n     */\n    cols: number;\n    /**\n     * Represents the number of the number of grid rows\n     */\n    rows: number;\n    /**\n     * Represents if user wants to show only header part of card in resizable layout\n     */\n    showOnlyHeader?: boolean;\n    /**\n     * If user wants to show more text in title then he/she can configure no of lines to be shown in title(Maximum allowed 3 lines)\n     */\n    minimumTitleRow?: number;\n    /**\n     * If user wants to show more text in title then he/she can configure no of lines to be shown in sub-title(Maximum allowed 2 lines)\n     */\n    minimumSubTitleRow?: number;\n}\n\nexport interface CommonCardSettings {\n    /**\n     * Represents the dominant entity set that will be displayed in the given card.\n     */\n    entitySet?: string;\n    /**\n     * The language-dependent title of the card, used in the card header.\n     * @i18nClassification TIT: Title of the card, used in the card header\n     */\n    title: string;\n    /**\n     * The language-dependent subtitle of the card, used in the card header.\n     * @i18nClassification TIT: Subtitle of the card, used in the card header\n     */\n    subTitle?: string;\n    /**\n     * Represents the annotation path.\n     */\n    annotationPath?: string;\n    /**\n     * Represents the identification annotation path.\n     */\n    identificationAnnotationPath?: string;\n    /**\n     * Represents the data point annotation path.\n     */\n    dataPointAnnotationPath?: string;\n    /**\n     * Represents the selection annotation path.\n     */\n    selectionAnnotationPath?: string;\n    /**\n     * Represents the presentation annotation path.\n     */\n    presentationAnnotationPath?: string;\n    /**\n     * Represents the selection presentation annotation path.\n     */\n    selectionPresentationAnnotationPath?: string;\n    /**\n     * Represents the KPI annotation path.\n     */\n    kpiAnnotationPath?: string;\n    /**\n     * The category of the card, as used in the card header.\n     */\n    category?: string;\n    /**\n     * To load cards with specific requirements, define a default size as part of the card definition in the descriptor file.\n     */\n    defaultSpan?: DefaultSpanObject | 'auto';\n    /**\n     * Define an authorization check at card level.\n     */\n    requireAppAuthorization?: string;\n    /**\n     * Represents the card with view switch control.\n     */\n    tabs?: SapOvpTabSetting[];\n    /**\n     * add $Select parameter in data fetch URL\n     */\n    addODataSelect?: boolean;\n    /**\n     * Defines the property by which the list shall be sorted.\n     */\n    sortBy?: string;\n    /**\n     * Sort order (ascending or descending)\n     */\n    sortOrder?: 'ascending' | 'descending';\n    /**\n     * Represents the dynamic subtitle annotation path.\n     */\n    dynamicSubtitleAnnotationPath?: string;\n    /**\n     * Show or hide refresh option under card more actions, default value is true.\n     */\n    showRefresh?: boolean;\n    /**\n     * Represents the flag to indicate the use of object number/smart field.\n     */\n    enableLocaleCurrencyFormatting?: boolean;\n    /**\n     * Represents a switch to Show or Hide Filters in Cards Headers in OVP application.\n     */\n    showFilterInHeader?: boolean;\n    /**\n     * Represents a switch to Show or Hide Sorting in Cards Headers in OVP application.\n     */\n    showSortingInHeader?: boolean;\n    /**\n     * Custom parameters for intent-based navigation to the target application.\n     * Enter the name of the custom parameter function defined in your custom controller file.\n     */\n    customParams?: string;\n}\n\nexport enum ChartCardType {\n    cardBubble = 'cardBubble',\n    cardchartsline = 'cardchartsline',\n    cardchartsdonut = 'cardchartsdonut'\n}\n\nexport enum CardTemplateType {\n    analytical = 'sap.ovp.cards.charts.analytical',\n    analyticalv4 = 'sap.ovp.cards.v4.charts.analytical',\n    list = 'sap.ovp.cards.list',\n    listv4 = 'sap.ovp.cards.v4.list',\n    linklist = 'sap.ovp.cards.linklist',\n    linklistv4 = 'sap.ovp.cards.v4.linklist',\n    table = 'sap.ovp.cards.table',\n    tablev4 = 'sap.ovp.cards.v4.table',\n    stack = 'sap.ovp.cards.stack'\n}\n\nexport const cardTemplateTypeMap = {\n    'sap.ovp.cards.charts.analytical': 'AnalyticalCard',\n    'sap.ovp.cards.v4.charts.analytical': 'AnalyticalCard',\n    'sap.ovp.cards.list': 'ListCard',\n    'sap.ovp.cards.v4.list': 'ListCard',\n    'sap.ovp.cards.linklist': 'LinklistCard',\n    'sap.ovp.cards.v4.linklist': 'LinklistCard',\n    'sap.ovp.cards.table': 'TableCard',\n    'sap.ovp.cards.v4.table': 'TableCard',\n    'sap.ovp.cards.stack': 'StackCard'\n};\n\n// Map for anyOf definitions\nexport const cardTemplateSettingsMap = {\n    'sap.ovp.cards.charts.analytical': 'AnalyticalCardSettings',\n    'sap.ovp.cards.v4.charts.analytical': 'AnalyticalCardSettingsv4'\n};\n\nexport enum CardSettingsType {\n    analyticalCardSettings = 'analyticalCardSettings',\n    analyticalCardSettingsv4 = 'analyticalCardSettingsv4',\n    listCardSettings = 'listCardSettings',\n    listCardSettingsv4 = 'listCardSettingsv4',\n    stackCardSettings = 'stackCardSettings',\n    linkListCardSettings = 'linkListCardSettings',\n    tableCardSettings = 'tableCardSettings',\n    tableCardSettingsv4 = 'tableCardSettingsv4'\n}\n\nexport enum MeasureAggregateValues {\n    average = 'average',\n    max = 'max',\n    min = 'min',\n    sum = 'sum',\n    count = '$count'\n}\n\nexport interface MeasureAggregateSettings {\n    Axis1?: MeasureAggregateValues;\n    Axis2?: MeasureAggregateValues;\n    Axis3?: MeasureAggregateValues;\n}\n\n/**\n * Custom Card\n * @isViewNode true\n */\nexport interface CustomCard {\n    /**\n     * Represents the model for the card\n     */\n    model: string;\n    /**\n     * Represents the card component path to use for this card.\n     * @TJS-pattern ^(?!(sap.ovp.cards.charts.analytical|sap.ovp.cards.v4.charts.analytical|sap.ovp.cards.linklist|sap.ovp.cards.v4.linklist|sap.ovp.cards.list|sap.ovp.cards.v4.list|sap.ovp.cards.stack|sap.ovp.cards.table|sap.ovp.cards.v4.table)$).*$\n     */\n    template: string; // due the extension concept for cards, this can be any string\n    /**\n     * Represents the properties that are passed to the custom card.\n     */\n    settings?: CustomCardSettings;\n}\n/**\n * List Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface ListCard {\n    /**\n     * Represents the model for the List Card\n     */\n    model: string;\n    /**\n     * Represents the card component path to use for this List Card.\n     */\n    template: CardTemplateType.list | CardTemplateType.listv4;\n    /**\n     * Represents the properties that are passed to the list card.\n     */\n    settings?: ListCardSettings;\n}\n\n/**\n * Stack Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface StackCard {\n    /**\n     * Represents the model for the StackCard.\n     */\n    model: string;\n    /**\n     * Represents the Stack Card component path to use for this card.\n     */\n    template: CardTemplateType.stack;\n    /**\n     * Represents the properties that are passed to the stack card.\n     */\n    settings?: StackCardSettings;\n}\n\n/**\n * Link List Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface LinklistCard {\n    /**\n     * Represents the model for the Link list Card.\n     */\n    model?: string;\n    /**\n     * Represents the Link list Card component path to use for this card.\n     */\n    template: CardTemplateType.linklist | CardTemplateType.linklistv4;\n    /**\n     * Represents the properties that are passed to the link list card.\n     */\n    settings?: LinkListCardSettings;\n}\n\n/**\n * Table Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface TableCard {\n    /**\n     * Represents the model for the TableCard.\n     */\n    model: string;\n    /**\n     * Represents the Table Card component path to use for this card.\n     */\n    template: CardTemplateType.table | CardTemplateType.tablev4;\n    /**\n     * Represents the properties that are passed to the table card.\n     */\n    settings?: TableCardSettings;\n}\n\n/**\n * Analytical Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface AnalyticalCard {\n    /**\n     * Represents the model for the Analytical Card\n     */\n    model: string;\n    /**\n     * Represents the Analytical Card component path to use for this card.\n     */\n    template: CardTemplateType.analytical | CardTemplateType.analyticalv4;\n    /**\n     * Represents the properties that are passed to the analytical card.\n     */\n    settings?: AnalyticalCardSettings | AnalyticalCardSettingsv4;\n}\n\nexport type CardNavigationType = 'dataPointNav' | 'chartNav' | 'headerNav' | 'noHeaderNav';\n\n/**\n * @displayName settings\n */\nexport type CustomCardSettings = CommonCardSettings;\n\n/**\n * @displayName settings\n */\nexport interface AnalyticalCardSettings extends CommonCardSettings {\n    /**\n     * Represents the chart annotation path.\n     */\n    chartAnnotationPath?: string;\n    /**\n     * Represents the flag to indicate priority of number formatting over sap text.\n     */\n    ignoreSapText?: boolean;\n    /**\n     * Removes the option to add cards to the Insights section.\n     */\n    enableAddToInsights?: boolean;\n    /**\n     * Represents the configuration to alter the navigation mode in OVP Analytical Cards.\n     */\n    navigation?: CardNavigationType;\n    /**\n     * Represents things like people, number of items.\n     */\n    valueSelectionInfo?: string;\n    /**\n     * This property is responsible for setting specific chart settings.\n     */\n    chartProperties?: {\n        plotArea?: SapOvpPlotAreaDef;\n        timeAxis?: SapOvpTimeAxisDef;\n    };\n    /**\n     * Color palette for semantic coloring.\n     * @controlProperty colorPaletteType\n     */\n    colorPalette?: ColorPaletteType;\n    /**\n     * Enables the configuration of an analytical card with column stack chart, to map the dimension values to specific colors\n     */\n    bEnableStableColors?: boolean;\n}\n\n/**\n * @displayName settings\n */\nexport interface AnalyticalCardSettingsv4 extends AnalyticalCardSettings {\n    /**\n     *\n     */\n    measureAggregate?: MeasureAggregateSettings;\n}\n\nexport enum ListFlavorType {\n    standard = 'standard',\n    bar = 'bar',\n    carousel = 'carousel'\n}\n\nexport enum ListTypeType {\n    extended = 'extended',\n    condensed = 'condensed'\n}\n\nexport enum SortOrderType {\n    ascending = 'ascending',\n    descending = 'descending'\n}\n\n/**\n * @displayName settings\n */\nexport interface ListCardSettings extends CommonCardSettings {\n    /**\n     * Represents the flavor of the list to use in this card. The flavor can be bar chart, carousel or standard.\n     */\n    listFlavor?: ListFlavorType;\n    /**\n     * Represents the type of list to use for this card. The list can be extended to display more information or condensed to take up less space on the card.\n     */\n    listType?: ListTypeType;\n    /**\n     * Flag for show line item detail in list and table card.\n     */\n    showLineItemDetail?: boolean;\n    /**\n     * Removes the option to add cards to the Insights section.\n     */\n    enableAddToInsights?: boolean;\n    /**\n     * Flag for enabling images in a condensed list card.\n     */\n    imageSupported?: boolean;\n    /**\n     * Represents things like people, number of items.\n     */\n    valueSelectionInfo?: string;\n}\n\n/**\n * @displayName settings\n */\nexport interface StackCardSettings extends CommonCardSettings {\n    /**\n     * Represents the user defined string in placeholder card.\n     */\n    itemText?: string;\n    /**\n     * The navigation property used to display information from a secondary entity set.\n     */\n    objectStreamCardsNavigationProperty?: string;\n    /**\n     * Configures additional settings for the cards displayed in the object stream.\n     */\n    objectStreamCardsSettings?: ObjectStreamCardsSettingsDef;\n}\n\n/**\n * @displayName settings\n */\nexport interface TableCardSettings extends CommonCardSettings {\n    /**\n     * Flag for show line item detail in list and table card.\n     */\n    showLineItemDetail?: boolean;\n    /**\n     * Removes the option to add cards to the Insights section.\n     */\n    enableAddToInsights?: boolean;\n    /**\n     * Represents things like people, number of items.\n     */\n    valueSelectionInfo?: string;\n}\n\nexport enum LinkListFlavorType {\n    standard = 'standard',\n    carousel = 'carousel'\n}\n\n/**\n * @displayName settings\n */\nexport interface LinkListCardSettings extends CommonCardSettings {\n    /**\n     * listFlavor represents the flavor of the list to use in this card. The flavor can be bar chart, carousel or standard.\n     */\n    listFlavor?: LinkListFlavorType;\n    /**\n     * headerAnnotationPath represents the path to a HeaderInfo annotation.\n     */\n    headerAnnotationPath?: string;\n    /**\n     * staticContent represents the static content of a static link list card.\n     */\n    staticContent?: StaticContent[];\n}\n\nexport interface StaticContent {\n    /**\n     * The language-dependent title of the StaticContent.\n     * @i18nClassification TIT: Title of the StaticContent\n     */\n    title: string;\n    /**\n     * The language-dependent subtitle of the StaticContent.\n     * @i18nClassification TIT: Subtitle of the StaticContent\n     */\n    subTitle?: string;\n    /**\n     * The uri for the image of the StaticContent.\n     */\n    imageUri?: string;\n    /**\n     * The uri for the target of the StaticContent.\n     */\n    targetUri?: string;\n    /**\n     * The alternative text for the image of the StaticContent.\n     * @i18nClassification ALT: The alternative text for the image of the StaticContent\n     */\n    imageAltText?: string;\n    /**\n     * Used to provide intent based navigation.\n     */\n    semanticObject?: string;\n    /**\n     * Used to provide intent based navigation.\n     */\n    action?: string;\n    /**\n     * Open static content in a new window.\n     */\n    openInNewWindow?: boolean;\n}\n", "export const enum DateRangeType {\n    DATERANGE = 'DATERANGE',\n    DATE = 'DATE',\n    FROM = 'FROM',\n    TO = 'TO',\n    DAYS = 'DAYS',\n    LASTDAYS = 'LASTDAYS',\n    LASTWEEKS = 'LASTWEEKS',\n    WEEK = 'WEEK',\n    LASTMONTHS = 'LASTMONTHS',\n    MONTH = 'MONTH',\n    QUARTER = 'QUARTER',\n    LASTQUARTERS = 'LASTQUARTERS',\n    LASTYEARS = 'LASTYEARS',\n    LASTYEAR = 'LASTYEAR',\n    YEAR = 'YEAR',\n    NEXTDAYS = 'NEXTDAYS',\n    NEXTWEEKS = 'NEXTWEEKS',\n    NEXTMONTHS = 'NEXTMONTHS',\n    NEXTQUARTERS = 'NEXTQUARTERS',\n    NEXTYEARS = 'NEXTYEARS',\n    NEXT = 'NEXT',\n    SPECIFICMONTH = 'SPECIFICMONTH',\n    YESTERDAY = 'YESTERDAY',\n    YEARTODATE = 'YEARTODATE',\n    TODAY = 'TODAY',\n    TOMORROW = 'TOMORROW',\n    THISWEEK = 'THISWEEK',\n    LASTWEEK = 'LASTWEEK',\n    LAST2WEEKS = 'LAST2WEEKS',\n    LAST3WEEKS = 'LAST3WEEKS',\n    LAST4WEEKS = 'LAST4WEEKS',\n    LAST5WEEKS = 'LAST5WEEKS',\n    NEXTWEEK = 'NEXTWEEK',\n    NEXT2WEEKS = 'NEXT2WEEKS',\n    NEXT3WEEKS = 'NEXT3WEEKS',\n    NEXT4WEEKS = 'NEXT4WEEKS',\n    NEXT5WEEKS = 'NEXT5WEEKS',\n    THISMONTH = 'THISMONTH',\n    LASTMONTH = 'LASTMONTH',\n    NEXTMONTH = 'NEXTMONTH',\n    THISQUARTER = 'THISQUARTER',\n    LASTQUARTER = 'LASTQUARTER',\n    NEXTQUARTER = 'NEXTQUARTER',\n    QUARTER1 = 'QUARTER1',\n    QUARTER2 = 'QUARTER2',\n    QUARTER3 = 'QUARTER3',\n    QUARTER4 = 'QUARTER4',\n    TODAYFROMTO = 'TODAYFROMTO'\n}\n\nexport const enum DefaultDateRangeValueType {\n    YESTERDAY = 'YESTERDAY',\n    TODAY = 'TODAY',\n    THISWEEK = 'THISWEEK',\n    LASTWEEK = 'LASTWEEK',\n    THISMONTH = 'THISMONTH',\n    TOMORROW = 'TOMORROW',\n    LASTMONTH = 'LASTMONTH',\n    THISQUARTER = 'THISQUARTER',\n    LASTQUARTER = 'LASTQUARTER',\n    THISYEAR = 'THISYEAR',\n    LASTYEAR = 'LASTYEAR',\n    LAST2WEEKS = 'LAST2WEEKS',\n    LAST3WEEKS = 'LAST3WEEKS',\n    LAST4WEEKS = 'LAST4WEEKS',\n    LAST5WEEKS = 'LAST5WEEKS',\n    YEARTODATE = 'YEARTODATE',\n    QUARTER1 = 'QUARTER1',\n    QUARTER2 = 'QUARTER2',\n    QUARTER3 = 'QUARTER3',\n    QUARTER4 = 'QUARTER4',\n    DATETOYEAR = 'DATETOYEAR'\n}\n\n/**\n * Filter Field\n * @isViewNode true\n */\nexport type SelectionField = {} | SelectionFieldDateSettings;\n\n/**\n * Filter Field for Date Settings\n * @isViewNode true\n */\nexport interface SelectionFieldDateSettings {\n    /**\n     * The selectedValues property is a set of standard date range values that you want to include or exclude.\n     */\n    selectedValues?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n    /**\n     * This property references a JS class, which you use to modify the date range value list. You can either remove standard data range values or add custom values.\n     * The customDateRangeImplementation setting takes priority followed by filter and selectedValues when excluding date range types.\n     */\n    customDateRangeImplementation?: string;\n    /**\n     * You can use the filter settings to include and exclude specific date range values.\n     */\n    filter?: FilterType[];\n    /**\n     * You can set a default value for semantic date range.\n     */\n    defaultValue?: DefaultDateRange;\n}\n\n/**\n * Filter Fields\n * @isViewNode true\n */\nexport interface SelectionFields {\n    [key: string]: SelectionField;\n}\n\nexport const enum FilterPathType {\n    key = 'key',\n    catgory = 'category'\n}\n\nexport type FilterType = {\n    /**\n     * Choose 'key' to define filter values for single values of the date range, or 'category' to filter by a whole subset.\n     */\n    path: FilterPathType;\n    /**\n     * The 'contains' string specifies a filter describing a set of values of the date range type.\n     */\n    contains?: string;\n    /**\n     * Defines a single value of the standard date range type.\n     */\n    equals?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n};\n\nexport interface DefaultDateRange {\n    /**\n     * The operation property is the value that will be set for semantic date range.\n     */\n    operation: DefaultDateRangeValueType;\n}\n\nexport interface DateRange {\n    /**\n     * If set to true all date fields with filter restriction interval will be treated as DateTimeRange filters.\n     */\n    useDateRange?: boolean;\n    /**\n     * The selectedValues property is a set of standard date range values that you want to include or exclude.\n     */\n    selectedValues?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n}\n\nexport interface CommonFilterBar {\n    /**\n     * Controls whether smart variant management is active. Default is true.\n     */\n    smartVariantManagement?: boolean;\n    /**\n     * If liveMode is set, the search will be automatically triggered when a filter value is set.\n     */\n\n    liveMode?: boolean;\n    /**\n     * If you set the flag to true, then standard variant management is not available in the app. The app name is displayed instead.\n     * If you set the flag to false or if the flag is not at all contained in the manifest of the app, the standard variant management is available and can be enabled or disabled.\n     */\n    variantManagementHidden?: boolean;\n    /**\n     * You can choose an app-specific title by setting the corresponding value for the subTitleIfVariantMgmtHidden property.\n     * @i18nClassification TIT: Subtitle if variant management is hidden\n     */\n    subTitleIfVariantMgmtHidden?: string;\n    /**\n     * Use to set date settings for fields in smart filter bar\n     */\n    dateSettings?: DateRange;\n    /**\n     * Handles visibility of the Clear button on the FilterBar.\n     */\n    showClearOnFB?: boolean;\n    /**\n     * Handles visibility of the Filter button on the FilterBar.\n     */\n    showFilterConfiguration?: boolean;\n    /**\n     * Handles visibility of the Restore button on the FilterBar.\n     */\n    showRestoreOnFB?: boolean;\n    /**\n     * @isViewNode true\n     * Selection Fields\n     */\n    selectionFields?: SelectionFields;\n}\n\n/**\n * Filter Bar\n * @isViewNode true\n */\nexport interface ListReportFilterBar extends CommonFilterBar {\n    /**\n     * Lets you to add default values for FilterBar using SelectionVariant annotation\n     */\n    annotationPath?: string;\n}\n\n/**\n * Filter Bar\n * @isViewNode true\n */\nexport interface AnalyticalListPageFilterBar extends CommonFilterBar {\n    /**\n     * Go button is displayed for compact filters when this is set to true\n     */\n    showGoButtonOnFilterBar?: boolean;\n    /**\n     * Lets you to add default values for FilterBar using SelectionVariant annotation\n     */\n    filterDefaultsFromSelectionVariant?: boolean;\n}\n", "import type { SAPUI5_FRAGMENT_CLASS } from '../../common/webapp/manifest/sapUi5';\nimport type { ToolBar } from './ToolBar';\nimport type { Action } from './Action';\nimport type { PopinLayout } from 'sap/m/library';\nimport type { smarttable } from 'sap/ui/comp/library';\nimport type { TextAlign } from 'sap/ui/core/library';\n\n/**\n * Column\n * @isViewNode true\n */\nexport interface TableColumn {\n    /**\n     * The width property defines the width of the column.\n     */\n    width?: string;\n    /**\n     * The hAlign property defines the horizontal alignment of the column content.\n     */\n    hAlign?: TextAlign;\n}\n\n/**\n * Column Action\n * @isViewNode true\n */\nexport interface TableColumnAction extends Action, TableColumn {}\n\n/**\n * Custom Column\n * @isViewNode true\n */\nexport interface TableCustomColumn {\n    /**\n     * In case the fragment needs to be re-used for multiple tabs, the id property must be set to make the ids unique.\n     * @artifactType XMLProperty\n     */\n    id?: string;\n    /**\n     * The label of the custom column, preferably as an i18n key.\n     * @i18nClassification COL: Custom column header text\n     * @artifactType XMLProperty\n     */\n    text?: string;\n    /**\n     * The column key\n     * @artifactType XMLProperty\n     */\n    columnKey: string;\n    /**\n     * The index of the column in the overall collection; if undefined, the custom column will be added at the end of the table.\n     * @minimum 0\n     * @hidden true\n     * @artifactType XMLProperty\n     */\n    columnIndex?: number;\n    /**\n     * If the content of your custom column refers to a property (such as{Price}), you need to include a corresponding 'leadingProperty' entry in the column definition.\n     * @artifactType XMLProperty\n     */\n    leadingProperty?: string;\n    /**\n     * The UI5 control used for your extension\n     * @artifactType Manifest\n     */\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    /**\n     * The relative path to your fragment with path segments separated by '.'. The first element is the app ID.\n     * @artifactType Manifest\n     */\n    fragmentName: string;\n    /**\n     * In case of a responsive table, you additionally need to specify a fragment for the table cells.\n     * @artifactType Manifest\n     */\n    cellsFragmentName?: string;\n    /**\n     * If you use QuickVariantSelectionX, you need to define the extensions per tab. 'tabKey' is the key provided when defining the QuickVariantSelectionX.\n     * @hidden true\n     * @artifactType Manifest\n     */\n    tabKey?: string;\n    /**\n     * Type of custom column view extension.\n     * @artifactType Manifest\n     */\n    extensionType: TableColumnExtensionTypeV2;\n}\n\nexport enum customColumnViewTypes {\n    XML = 'XML'\n}\n\nexport enum TableTypeV2 {\n    ResponsiveTable = 'ResponsiveTable',\n    GridTable = 'GridTable',\n    AnalyticalTable = 'AnalyticalTable',\n    TreeTable = 'TreeTable'\n}\n\nexport enum TableColumnExtensionTypeV2 {\n    ResponsiveTableColumnsExtension = 'ResponsiveTableColumnsExtension',\n    AnalyticalTableColumnsExtension = 'AnalyticalTableColumnsExtension',\n    TreeTableColumnsExtension = 'TreeTableColumnsExtension',\n    GridTableColumnsExtension = 'GridTableColumnsExtension'\n}\n\nexport type AnyTableType =\n    | TableTypeV2.AnalyticalTable\n    | TableTypeV2.ResponsiveTable\n    | TableTypeV2.GridTable\n    | TableTypeV2.TreeTable;\nexport type AnyTable = AnalyticalTable | ResponsiveTable | GridTable | TreeTable;\n\n/**\n * Custom Columns\n * @isViewNode true\n */\nexport type TableCustomColumns = Array<TableCustomColumn>;\n\nexport interface GenericColumns {\n    [key: string]: TableColumn | TableCustomColumns | TableColumnAction;\n}\n\nexport interface QuickVariant {\n    /**\n     * A key entry that is used for initializing the corresponding SegmentedButton item. This entry is mandatory.\n     */\n    key: string;\n    /**\n     * Use annotationPath to define a specific variant that points to a SelectionVariant or SelectionPresentationVariant annotation.\n     */\n    annotationPath: string;\n}\n\nexport interface QuickVariantX extends QuickVariant {\n    /**\n     * Represents the entity set that will be displayed in this variant\n     */\n    entitySet: string;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n    /**\n     * The 'Select All' button is disabled by default. To enable it, set selectAll to true.\n     */\n    selectAll?: boolean;\n    /**\n     * If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.\n     */\n    selectionLimit?: number;\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: AnyTableType;\n    /**\n     * To enable navigation for charts, you have to set the property to \"true\" and maintain an internal navigation target in the manifest.\n     */\n    showItemNavigationOnChart?: boolean;\n    /**\n     *  Used to enable inline deletion in a responsive table of list report and object page\n     */\n    inlineDelete?: boolean;\n}\n\nexport interface QuickVariantSelection {\n    /**\n     * To show the number of records available, set showCounts to true.\n     */\n    showCounts?: boolean;\n    /**\n     * The variants section contains a set of entries that point to SelectionVariants or SelectionPresentationVariants defined in the annotations.\n     */\n    variants: {\n        [key: string]: QuickVariant;\n    };\n}\n\nexport interface QuickVariantSelectionX extends QuickVariantSelection {\n    /**\n     * When set to true, this enables automatic binding of the table with either the tableBindingPath (if it exists) or the entitySet property.\n     */\n    enableAutoBinding?: boolean;\n    /**\n     * The variants section contains a set of entries that point to SelectionVariants or SelectionPresentationVariants defined in the annotations.\n     */\n    variants: {\n        [key: string]: QuickVariantX;\n    };\n}\n\nexport interface CreateWithFilters {\n    /**\n     * For the new create action to use the filter settings as input, set strategy to \"extension\" and implement the extension function as mentioned in help.sap.com for SAP S/4 HANA, section \u201CPrefilling Fields When Creating a New Entity Using an Extension Point\u201C.\n     */\n    strategy: Strategy;\n}\n\nexport enum Strategy {\n    extension = 'extension'\n}\n\nexport interface MultiEdit {\n    /**\n     * When multiEdit is enabled, by default the dialog displays editable fields corresponding to columns that are currently displayed in the table.\n     */\n    enabled?: boolean;\n    /**\n     * Use annotationPath to define a mass edit dialog that points to a FieldGroup annotation with a qualifier.\n     */\n    annotationPath?: string;\n    /**\n     * You can choose to hide certain fields from being displayed in key user adaptation and restrict them from being added to the Mass Edit dialog.\n     */\n    ignoredFields?: IgnoredFieldsType[];\n}\n\nexport const enum IgnoredFieldsType {\n    GENERICPROPERTY = 'GENERICPROPERTY'\n}\n\nexport enum DefaultContentView {\n    charttable = 'charttable',\n    chart = 'chart',\n    table = 'table'\n}\n\nexport enum DefaultFilterMode {\n    visual = 'visual',\n    compact = 'compact'\n}\n\nexport enum LoadDataOnAppLaunchSettings {\n    always = 'always',\n    never = 'never',\n    ifAnyFilterExist = 'ifAnyFilterExist'\n}\n\nexport interface DataLoadSettings {\n    /**\n     * Change the default behavior for autoloading of data.\n     * For multi-view scenarios, you can also change the setting enableAutobinding to False under quickVariantSelectionX instead of using the loadDataOnAppLaunch setting.\n     */\n    loadDataOnAppLaunch: LoadDataOnAppLaunchSettings;\n}\n\nexport interface Fields4Dialog {\n    fields: string[];\n}\n\nexport interface CommonTableSettings<COLS = GenericColumns> {\n    /**\n     * You can enable the creation of objects that have a maximum of 8 data fields through a dialog in the list report page.\n     */\n    createWithParameterDialog?: Fields4Dialog;\n    /**\n     * The 'Select All' button is disabled by default. To enable it, set selectAll to true.\n     */\n    selectAll?: boolean;\n    /**\n     * If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.\n     */\n    selectionLimit?: number;\n    /**\n     * The showTablePersonalisation attribute can be set to false to hide the table personalization button.\n     */\n    showTablePersonalisation?: boolean;\n    /**\n     * useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.\n     */\n    useExportToExcel?: boolean;\n    /**\n     * Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.\n     */\n    exportType?: smarttable.ExportType;\n    /**\n     * Set to false if the table does not occupy the entire space available in the container.\n     */\n    fitContainer?: boolean;\n    /**\n     * If copy is set to true, the Copy to Clipboard button is shown in the table toolbar.\n     * By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured for the corresponding table.\n     */\n    copy?: boolean;\n    /**\n     * With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have added to your annotations beforehand.\n     */\n    quickVariantSelection?: QuickVariantSelection;\n    /**\n     * Switch on the multiple view feature (Multiple table mode with charts) and link to the variants you have added to your annotations.\n     */\n    quickVariantSelectionX?: QuickVariantSelectionX;\n    /**\n     * For analytical tables, grid tables and tree tables you can define a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * If you have enabled harmonized variant management, by default, you cannot set a filter in the table personalization settings.\n     * To enable filtering, set the enableTableFilterInPageVariant property to true.\n     */\n    enableTableFilterInPageVariant?: boolean;\n    /**\n     * Change the default behavior for autoloading of data.\n     */\n    dataLoadSettings?: DataLoadSettings;\n    /**\n     * Tool Bar\n     */\n    toolBar?: ToolBar;\n    /**\n     * Columns\n     * @isViewNode true\n     */\n    columns?: COLS;\n}\n\nexport interface ResponsiveTableCommonSettings extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable;\n    /**\n     * Set includeItemInSelection to true if you want items to be selectable when they are clicked rather than after the selection control has been set.\n     */\n    includeItemInSelection?: boolean;\n    /**\n     * popinLayout defines the layout in which the table pop-in rows are rendered.\n     */\n    popinLayout?: PopinLayout;\n    /**\n     * createWithFilters adds a new create action that uses the filter settings as input.\n     */\n    createWithFilters?: CreateWithFilters;\n    /**\n     * growingThreshold defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.\n     */\n    growingThreshold?: number;\n    /**\n     * Allows you to edit a single object or multiple objects using a dialog in the list report page.\n     */\n    multiEdit?: MultiEdit;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ResponsiveTableWithMultiSelect extends ResponsiveTableCommonSettings {\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ResponsiveTableWithInlineDelete extends ResponsiveTableCommonSettings {\n    /**\n     *  Used to enable inline deletion in a responsive table of list report and object page\n     */\n    inlineDelete?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ResponsiveTable\n    extends ResponsiveTableCommonSettings,\n        ResponsiveTableWithMultiSelect,\n        ResponsiveTableWithInlineDelete {}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface TreeTable extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.TreeTable;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface AnalyticalTable extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.AnalyticalTable;\n    /**\n     * Represents the SelectionPresentationVariant qualifier. ALP looks for SelectionPresentationVariant with this qualifier and if not found, it looks for PresentationVariant with this qualifier.\n     */\n    qualifier?: string;\n    /**\n     * Determines the visualization of content area\n     */\n    defaultContentView?: DefaultContentView;\n    /**\n     * Determines the filter mode that is used\n     */\n    defaultFilterMode?: DefaultFilterMode;\n    /**\n     * Lets you define title for the content area\n     * @i18nClassification TIT: Title for the content area\n     */\n    contentTitle?: string;\n    /**\n     * All filter fields will be set as in parameter\n     */\n    allFiltersAsInParameters?: boolean;\n    //TODO keyPerformanceIndicators\n    /**\n     * createWithFilters adds a new create action that uses the filter settings as input.\n     */\n    createWithFilters?: CreateWithFilters;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface TableALPCommonSettings extends CommonTableSettings {\n    /**\n     * Represents the SelectionPresentationVariant qualifier. ALP looks for SelectionPresentationVariant with this qualifier and if not found, it looks for PresentationVariant with this qualifier.\n     */\n    qualifier?: string;\n    /**\n     * Determines the visualization of content area\n     */\n    defaultContentView?: DefaultContentView;\n    /**\n     * Determines the filter mode that is used\n     */\n    defaultFilterMode?: DefaultFilterMode;\n    /**\n     * Lets you define title for the content area\n     * @i18nClassification TIT: Title for the content area\n     */\n    contentTitle?: string;\n    /**\n     * This setting allows developer to determine chart / table interaction. 'true' would mean chart act as filter for table, 'false' would mean that matching table rows are highlighted but table is not filtered.\n     */\n    autoHide?: boolean;\n    /**\n     * All filter fields will be set as in parameter\n     */\n    allFiltersAsInParameters?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ALPResponsiveTable extends TableALPCommonSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable;\n    /**\n     * growingThreshold defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.\n     */\n    growingThreshold?: number;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ALPGridTable extends TableALPCommonSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.GridTable;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ALPAnalyticalTable extends TableALPCommonSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.AnalyticalTable;\n}\n\nexport interface TableALP extends ALPResponsiveTable, ALPGridTable, ALPAnalyticalTable {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable & TableTypeV2.GridTable & TableTypeV2.AnalyticalTable;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface GridTable extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.GridTable;\n    /**\n     * createWithFilters adds a new create action that uses the filter settings as input.\n     */\n    createWithFilters?: CreateWithFilters;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n", "export enum ChartType {\n    bar = 'bar',\n    column = 'column',\n    line = 'line',\n    combination = 'combination',\n    pie = 'pie',\n    donut = 'donut',\n    scatter = 'scatter',\n    bubble = 'bubble',\n    heatmap = 'heatmap',\n    bullet = 'bullet',\n    verticalBullet = 'vertical_bullet',\n    stackedBar = 'stacked_bar',\n    stackedColumn = 'stacked_column',\n    stackedCombination = 'stacked_combination',\n    horizontalStackedCombination = 'horizontal_stacked_combination',\n    dualBar = 'dual_bar',\n    dualColumn = 'dual_column',\n    dualLine = 'dual_line',\n    dualStackedBar = 'dual_stacked_bar',\n    dualStackedColumn = 'dual_stacked_column',\n    dualCombination = 'dual_combination',\n    dualStackedCombination = 'dual_stacked_combination',\n    dualHorizontalCombination = 'dual_horizontal_combination',\n    dualHorizontalStackedCombination = 'dual_horizontal_stacked_combination',\n    hundredStackedBar = '100_stacked_bar',\n    hundredStackedColumn = '100_stacked_column',\n    hundredDualStackedBar = '100_dual_stacked_bar',\n    hundredDualStackedColumn = '100_dual_stacked_column',\n    waterfall = 'waterfall',\n    horizontalWaterfall = 'horizontal_waterfall'\n}\n\n/**\n * Chart\n * @isViewNode true\n */\nexport interface ChartSettings {\n    /**\n     * Controls the visibility of the legend button.\n     */\n    showLegendButton?: boolean;\n    /**\n     * Controls the visibility of the chart download button.\n     */\n    showDownloadButton?: boolean;\n    /**\n     * Controls the visibility of the chart type button.\n     */\n    showChartTypeSelectionButton?: boolean;\n    /**\n     * Comma-separated value fields do not showup in the list of available chart types.\n     */\n    ignoredChartTypes?: ChartType[];\n    /**\n     * Controls the visibility of the data label.\n     */\n    showDataLabel?: boolean;\n}\n", "import type {\n    ObjectPageResponsiveTableWithMultiSelect,\n    ObjectPageResponsiveTableWithInlineDelete,\n    ObjectPageAnalyticalTable,\n    ObjectPageGridTable,\n    ObjectPageTreeTable,\n    ObjectPageChart,\n    ObjectPageForm\n} from './index';\nimport type { ViewTypes, SAPUI5_FRAGMENT_CLASS, SAPUI5_VIEW_CLASS } from '../../common/webapp/manifest/sapUi5';\n\n/**\n * Section\n * @isViewNode true\n */\nexport interface ObjectPageSectionV2 {\n    /**\n     * Allows you to define if the section should be visible on the screen.\n     */\n    visible?: boolean;\n}\n\n/**\n * Form\n * @isViewNode true\n */\nexport interface ObjectPageSectionFormV2 extends ObjectPageSectionV2 {\n    form?: ObjectPageForm;\n}\n\nexport type AnyObjectPageTableType =\n    | ObjectPageResponsiveTableWithMultiSelect\n    | ObjectPageResponsiveTableWithInlineDelete\n    | ObjectPageAnalyticalTable\n    | ObjectPageGridTable\n    | ObjectPageTreeTable;\n\n/**\n * Table\n * @isViewNode true\n */\nexport interface ObjectPageSectionTableV2 extends ObjectPageSectionV2 {\n    table?: AnyObjectPageTableType;\n}\n\n/**\n * Chart\n * @isViewNode true\n */\nexport interface ObjectPageSectionChartV2 extends ObjectPageSectionV2 {\n    chart?: ObjectPageChart;\n}\n\nexport interface ObjectPageSectionContactV2 extends ObjectPageSectionV2 {\n    /**\n     * Contact\n     *  @isViewNode true\n     */\n    contact?: object;\n}\n\nexport interface ObjectPageSectionAddressV2 extends ObjectPageSectionV2 {\n    /**\n     * Address\n     *  @isViewNode true\n     */\n    address?: object;\n}\n\nexport interface ObjectPageSubSectionContactV2 extends ObjectPageSectionV2 {\n    /**\n     * Contact\n     *  @isViewNode true\n     */\n    contact?: object;\n}\n\nexport interface ObjectPageSubSectionAddressV2 {\n    /**\n     * Address\n     *  @isViewNode true\n     */\n    address?: object;\n}\n\nexport type AnySubSectionType =\n    | ObjectPageSectionTableV2\n    | ObjectPageSectionChartV2\n    | ObjectPageSectionFormV2\n    | ObjectPageSubSectionContactV2\n    | ObjectPageSubSectionAddressV2;\n\nexport interface GenericSubSections {\n    [key: string]: AnySubSectionType;\n}\n\n/**\n * Subsection\n * @isViewNode true\n */\nexport interface ObjectPageSubSectionV2 extends ObjectPageSectionV2 {\n    subsections?: GenericSubSections;\n}\n\nexport type AnySectionType =\n    | ObjectPageSectionTableV2\n    | ObjectPageSectionChartV2\n    | ObjectPageSectionFormV2\n    | ObjectPageSectionContactV2\n    | ObjectPageSectionAddressV2\n    | ObjectPageSectionV2\n    | ObjectPageSubSectionV2;\n\nexport interface GenericSections {\n    [key: string]: AnySectionType;\n}\n\nexport type CustomSectionTypeV2 = ObjectPageCustomSectionView | ObjectPageCustomSectionFragment;\n\n/**\n * Custom Sections\n * @isViewNode true\n */\nexport interface CustomSections {\n    custom?: CustomSectionTypeV2[];\n}\n\nexport interface ObjectPageCustomSectionBase {\n    relatedFacet: string;\n    relativePosition: SectionPosition;\n    /**\n     * The label of the custom section, preferably as an i18n key\n     * @i18nClassification TIT: Custom section title\n     */\n    title: string;\n}\n\n/**\n * View\n * @isViewNode true\n */\nexport interface ObjectPageCustomSectionView extends ObjectPageCustomSectionBase {\n    className: typeof SAPUI5_VIEW_CLASS;\n    viewName: string;\n    type: ViewTypes;\n}\n\n/**\n * Fragment\n * @isViewNode true\n */\nexport interface ObjectPageCustomSectionFragment extends ObjectPageCustomSectionBase {\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    fragmentName: string;\n    type: ExtensionFragmentTypes;\n}\n\nexport enum SectionPosition {\n    AfterFacet = 'AfterFacet',\n    BeforeFacet = 'BeforeFacet',\n    ReplaceFacet = 'ReplaceFacet'\n}\n\nexport enum ExtensionFragmentTypes {\n    XML = 'XML'\n}\n", "import type { GenericColumns, TableTypeV2, QuickVariant } from './Table';\nimport type { ObjectPageToolBar } from './ObjectPageToolBar';\nimport type { PopinLayout } from 'sap/m/library';\nimport type { smarttable } from 'sap/ui/comp/library';\n\nexport interface QuickVariantSelectionOP {\n    /**\n     * To show the number of records available, set showCounts to true.\n     */\n    showCounts?: boolean;\n    /**\n     * The variants section contains a set of entries that point to SelectionVariants or SelectionPresentationVariants defined in the annotations.\n     */\n    variants: {\n        [key: number]: QuickVariant;\n    };\n}\n\nexport interface Fields4DialogOP {\n    fields: string[];\n}\n\nexport enum CreateMode {\n    creationRows = 'creationRows',\n    creationRowsHiddenInEditMode = 'creationRowsHiddenInEditMode',\n    inline = 'inline'\n}\n\nexport interface ObjectPageCommonTableSettings {\n    /**\n     * The 'Select All' button is disabled by default. To enable it, set selectAll to true.\n     */\n    selectAll?: boolean;\n    /**\n     * If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.\n     */\n    selectionLimit?: number;\n    /**\n     * Following values are possible to set for createMode property:\n     * - creationRows: Used to enable empty rows mode.  In create or edit mode, two new empty rows are added to the table\n     * - creationRowsHiddenInEditMode: Starting SAPUI5 version 1.110, to hide empty rows in edit mode, set \"createMode\" as \"creationRowsHiddenInEditMode\". Empty rows are added to the table only when you click the Create button.\n     * - inline: In create or edit mode, users can choose 'Create Entry' to add new entries to a section in a table (not recommended, use creationRows instead)\n     */\n    createMode?: CreateMode;\n    /**\n     * If createMode is set to inline, you can use this setting to disable the default sort order.\n     */\n    disableDefaultInlineCreateSort?: boolean;\n    /**\n     * Set this property to true to enable variant management for the table.\n     */\n    variantManagement?: boolean;\n    /**\n     *  If copy is set to true, the Copy button is shown in the table toolbar.\n     */\n    copy?: boolean;\n}\n\nexport interface CommonTableSettingsForSections<COLS = GenericColumns> extends ObjectPageCommonTableSettings {\n    /**\n     * useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.\n     */\n    useExportToExcel?: boolean;\n    /**\n     * Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.\n     */\n    exportType?: smarttable.ExportType;\n    /**\n     *  With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.\n     */\n    editable?: boolean;\n    /**\n     * You can enable the creation of objects that have a maximum of 8 data fields through a dialog in the list report page.\n     */\n    createWithParameterDialog?: Fields4DialogOP;\n    /**\n     * If copy is set to true, the Copy to Clipboard button is shown in the table toolbar.\n     * By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured for the corresponding table.\n     */\n    copy?: boolean;\n    /**\n     * With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have been added to your annotations before.\n     */\n    quickVariantSelection?: QuickVariantSelectionOP;\n    /**\n     * Tool Bar\n     */\n    toolBar?: ObjectPageToolBar;\n    /**\n     * Columns\n     */\n    columns?: COLS;\n}\n\n/**\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTableCommonSettings extends CommonTableSettingsForSections {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable;\n    /**\n     * Set includeItemInSelection to true if you want items to be selectable when clicked, rather than after the selection control has been set.\n     */\n    includeItemInSelection?: boolean;\n    /**\n     * popinLayout defines the layout in which the table pop-in rows shall be rendered.\n     */\n    popinLayout?: PopinLayout;\n    /**\n     * growingThreshold defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.\n     */\n    growingThreshold?: number;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTableWithMultiSelect extends ObjectPageResponsiveTableCommonSettings {\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTableWithInlineDelete extends ObjectPageResponsiveTableCommonSettings {\n    /**\n     *  Used to enable inline deletion in a responsive table of list report and object page\n     */\n    inlineDelete?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTable\n    extends ObjectPageResponsiveTableCommonSettings,\n        ObjectPageResponsiveTableWithMultiSelect,\n        ObjectPageResponsiveTableWithInlineDelete {}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageAnalyticalTable extends CommonTableSettingsForSections {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.AnalyticalTable;\n    /**\n     * For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageGridTable extends CommonTableSettingsForSections {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.GridTable;\n    /**\n     * For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageTreeTable extends CommonTableSettingsForSections {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.TreeTable;\n    /**\n     * For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\nexport interface GlobalTableSettings extends ObjectPageCommonTableSettings {\n    /**\n     * Use type to define the default table type.\n     */\n    type?: TableTypeV2;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n    /**\n     * For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     *  Used to enable inline deletion in a responsive table of list report and object page\n     */\n    inlineDelete?: boolean;\n}\n", "import type { SapUiGenericAppPageSettings } from '../../../common/page';\nimport type { FlexibleColumnLayout, FlexibleColumnLayoutType } from '../../../common';\n\nexport interface SapUiAppV2 {\n    pages: SapUiAppPagesV2;\n    _version?: string;\n    settings?: SapUiAppSettingsV2;\n}\n\nexport interface SapUiAppPagesV2 {\n    [key: string]: SapUiAppPageV2;\n}\n\nexport const FE_TEMPLATE_V2 = 'sap.suite.ui.generic.template';\nexport const FE_TEMPLATE_V2_OBJECT_PAGE = 'sap.suite.ui.generic.template.ObjectPage';\nexport const FE_TEMPLATE_V2_LIST_REPORT = 'sap.suite.ui.generic.template.ListReport';\nexport const FE_TEMPLATE_V2_ALP = 'sap.suite.ui.generic.template.AnalyticalListPage';\n\nexport interface SapUiAppPageV2 {\n    entitySet?: string;\n    navigationProperty?: string;\n    component?: {\n        name: string;\n        list?: boolean;\n        settings?: SapUiGenericAppPageSettings;\n        sections?: {\n            sectionIds?: SapUiGenericAppPageSettings;\n        };\n    };\n    pages?: SapUiAppPagesV2;\n    defaultLayoutType?: FlexibleColumnLayoutType;\n}\n\nexport interface SapUiAppSettingsV2 {\n    flexibleColumnLayout?: FlexibleColumnLayout;\n}\n", "import type {\n    SapUi5RootView,\n    SapUi5OdataModel,\n    SapUi5ResourceModel,\n    SapUi5RoutingRoute,\n    SAPUI5_FRAGMENT_CLASS,\n    SAPUI5_VIEW_CLASS,\n    ViewTypes,\n    SapUi5RoutingTargetBase,\n    SapUi5RoutingTarget,\n    Dependencies\n} from '../../../common/webapp/manifest/sapUi5';\nimport type { ManifestSection } from '../../..';\n\nexport interface SapUi5 {\n    flexEnabled?: boolean;\n    resources?: object;\n    dependencies?: Dependencies;\n    models?: { [key: string]: SapUi5OdataModel | SapUi5ResourceModel };\n    routing?: SapUi5RoutingV2;\n    [key: string]: string | object | boolean;\n    rootView?: SapUi5RootView;\n    extends?: SapUi5Extends;\n}\n\nexport interface SapUi5RoutingV2 {\n    routes?: SapUi5RoutingRoute[];\n    targets: SapUi5RoutingTargetsV2;\n}\n\nexport interface SapUi5RoutingTargetsV2 {\n    [key: string]: SapUi5RoutingTarget | SapUi5RoutingTargetCustomPageV2;\n}\n\nexport interface SapUi5RoutingTargetCustomPageV2 extends SapUi5RoutingTargetBase {\n    viewId: string;\n    viewName: string;\n    viewLevel?: number;\n    title?: string;\n}\n\n// SAPUI5 EXTENDS\nexport const SAPUI5_VIEW_EXTENSION = 'sap.ui.viewExtensions';\nexport const SAPUI5_CONTROLLER_EXTENSION = 'sap.ui.controllerExtensions';\n\nexport interface SapUi5Extends {\n    extensions?: SapUi5Extensions;\n}\n\nexport interface SapUi5Extensions {\n    [SAPUI5_VIEW_EXTENSION]?: SapUi5ViewExtensions;\n    // Added it here, but sync logic is not supported yet\n    [SAPUI5_CONTROLLER_EXTENSION]?: SapUi5ControllerExtensions;\n}\nexport const SAPUI5_VIEW_EXTENSION_OBJECT_PAGE = 'sap.suite.ui.generic.template.ObjectPage.view.Details';\nexport const SAPUI5_VIEW_EXTENSION_LIST_REPORT = 'sap.suite.ui.generic.template.ListReport.view.ListReport';\nexport const SAPUI5_VIEW_EXTENSION_ANALYTICAL_LIST_PAGE =\n    'sap.suite.ui.generic.template.AnalyticalListPage.view.AnalyticalListPage';\n\n// VIEW EXTENDS\nexport interface SapUi5PageViewExtensions {\n    [key: string]: SapUi5ViewExtensionView | SapUi5ViewExtensionFragment;\n}\n\nexport interface SapUi5ViewExtensions {\n    [SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]?: SapUi5PageViewExtensions;\n    [SAPUI5_VIEW_EXTENSION_LIST_REPORT]?: SapUi5PageViewExtensions;\n}\n\nexport interface SapUi5ViewExtensionBase {\n    type: ViewTypes;\n}\n\nexport interface SapUi5ViewExtensionView extends SapUi5ViewExtensionBase {\n    className: typeof SAPUI5_VIEW_CLASS;\n    viewName: string;\n}\n\nexport interface SapUi5ViewExtensionFragment extends SapUi5ViewExtensionBase {\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    fragmentName: string;\n}\n\n// CONTROLLER EXTENDS\nexport interface SapUi5ControllerExtensions {\n    [SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]?: SapUi5PageControllerExtensions;\n    [SAPUI5_VIEW_EXTENSION_LIST_REPORT]?: SapUi5PageControllerExtensions;\n}\n\nexport interface SapUi5PageControllerExtensions {\n    [key: string]: SapUi5ControllerExtension;\n}\n\nexport interface SapUi5ControllerExtension {\n    controllerName: string;\n    [ManifestSection.generic]: { [key: string]: SapUi5ControllerExtensionSettings };\n}\n\n// Currently sync does not support controller extensions\nexport interface SapUi5ControllerExtensionSettings {\n    EntitySet: string;\n    Actions?: unknown;\n    Header?: unknown;\n    Sections?: unknown;\n}\n", "import type {\n    DateRangeType,\n    FilterType,\n    DefaultDateRange,\n    DateRange,\n    ListCard,\n    AnalyticalCard,\n    StackCard,\n    LinklistCard,\n    TableCard,\n    CustomCard\n} from './controls';\n\n/**\n * @isViewNode false\n */\nexport interface SelectedValues {\n    /**\n     * The selectedValues property is a set of standard date range values that you want to include or exclude.\n     */\n    selectedValues?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n    /**\n     * This property references a JS class, which you use to modify the date range value list. You can either remove standard data range values or add custom values.\n     * The customDateRangeImplementation setting takes priority followed by filter and selectedValues when excluding date range types.\n     */\n    customDateRangeImplementation?: string;\n    /**\n     * You can use the filter settings to include and exclude specific date range values.\n     */\n    filter?: FilterType[];\n    /**\n     * You can set a default value for semantic date range.\n     */\n    defaultValue?: DefaultDateRange;\n}\n\nexport interface DateRangeOVP extends DateRange {\n    /**\n     * For a fields' list you can define the set of standard date range values separately.\n     */\n    fields?: {\n        [field: string]: SelectedValues;\n    };\n}\n\nexport type FilterSettingsType = {\n    /**\n     * Represents the object to store date type filter fields configuration\n     */\n    dateSettings?: DateRangeOVP;\n};\n\nenum LoadDataOnAppLaunchType {\n    always = 'always',\n    never = 'never',\n    ifAnyFilterExist = 'ifAnyFilterExist'\n}\n\nexport type DataLoadSettingsType = {\n    /**\n     * Data load behaviour options on application launch. The default value is 'always'.\n     */\n    loadDataOnAppLaunch?: LoadDataOnAppLaunchType;\n    [k: string]: unknown;\n};\n\nexport enum ContainerLayoutType {\n    fixed = 'fixed',\n    resizable = 'resizable'\n}\n\nexport type CardType = ListCard | AnalyticalCard | StackCard | LinklistCard | TableCard | CustomCard;\n\nexport interface ChartSettingsType {\n    /**\n     * Flag to enable data labels on analytical charts. The default value is false.\n     */\n    showDataLabel?: boolean;\n}\n\nexport type ResizableLayoutVariantType = {};\n", "export * from './controls';\nexport * from './webapp';\nexport * from './page';\nexport * from './pages';\nexport * from './application';\nexport * from './ApplicationV4';\n", "export enum ActionPlacement {\n    After = 'After',\n    Before = 'Before'\n}\n\nexport interface CustomActionPosition {\n    /**\n     * The key of another action to be used as placement anchor.\n     * @artifactType Manifest\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor action.\n     * @artifactType Manifest\n     */\n    placement: ActionPlacement;\n}\n\n/**\n * Action\n * @isViewNode true\n */\nexport interface CustomAction {\n    /**\n     * The text that is displayed on the button (typically a binding to an i18n entry).\n     * @i18nClassification COL: Custom action text\n     * @artifactType Manifest\n     */\n    text: string;\n\n    /**\n     * Defines the position of the action relative to other actions.\n     * @artifactType Manifest\n     */\n    position?: CustomActionPosition;\n\n    /**\n     * Relevant for extension actions; allows the definition of a target action handler.\n     * @artifactType Manifest\n     */\n    press: string;\n\n    /**\n     * Allows you to define if the action button is visible on the screen.\n     * @artifactType Manifest\n     */\n    visible?: boolean;\n\n    /**\n     * Allows you to define if the action should be enabled. The default value is \"true\".\n     * @artifactType Manifest\n     */\n    enabled?: boolean;\n}\n\nexport interface CustomActionPositionOP extends CustomActionPosition {\n    /**\n     * The key of another action to be used as placement anchor.\n     * @artifactType Manifest\n     */\n    anchor?: string;\n}\n\nexport interface CustomActionOP extends CustomAction {\n    /**\n     * Defines the position of the action relative to other actions.\n     * @artifactType Manifest\n     */\n    position?: CustomActionPositionOP;\n}\n", "import type {\n    TableColumn,\n    TableColumnAction,\n    TableCustomColumn,\n    ViewTableColumn,\n    ViewTableColumnAction,\n    ViewTableCustomColumn\n} from '../webapp/manifest/ManifestSettings';\nimport type { ToolBar, ViewChartToolBar } from './ToolBar';\n\nexport enum SelectionMode {\n    Multi = 'Multi',\n    None = 'None',\n    Single = 'Single',\n    Auto = 'Auto'\n}\n\nexport enum TableTypeV4 {\n    ResponsiveTable = 'ResponsiveTable',\n    GridTable = 'GridTable',\n    AnalyticalTable = 'AnalyticalTable',\n    TreeTable = 'TreeTable'\n}\n\nexport enum InitialLoadType {\n    Disabled = 'Disabled',\n    Enabled = 'Enabled',\n    Auto = 'Auto'\n}\n\nexport enum DefaultPathType {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Both = 'both'\n}\n\nexport interface PersonalizationType {\n    /**\n     * Defines whether the user can add and remove columns to a given table.\n     */\n    column?: boolean;\n    /**\n     * Defines whether the user can sort a given table.\n     */\n    sort?: boolean;\n    /**\n     * Defines whether the user can filter data of a given table.\n     */\n    filter?: boolean;\n}\n\nexport interface ViewPersonalizationType {\n    /**\n     * Defines whether the user can add and remove columns to a given table.\n     */\n    column?: boolean;\n    /**\n     * Defines whether the user can sort a given table.\n     */\n    sort?: boolean;\n    /**\n     * Defines whether the user can filter data of a given table.\n     */\n    filter?: boolean;\n}\n\nexport interface AnnotationPathAsObject {\n    annotationPath: string;\n}\n\n//Not used by specification anymore, but there are some tests using it in tools-suite that needs to be adapted\nexport interface AnnotationPathWithKey {\n    key: string;\n    annotationPath: string;\n    entitySet?: string;\n}\n\nexport interface QuickVariantSelectionV4 {\n    /**\n     * List of annotation paths referring to SelectionVariant annotations\n     */\n    paths: AnnotationPathAsObject[];\n    /**\n     * You can hide the table and display only the titles of the tabs. To do so, add the hideTableTitle option and set it to true.\n     */\n    hideTableTitle?: boolean;\n    /**\n     * You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.\n     */\n    showCounts?: boolean;\n}\n\nexport interface GenericColumns {\n    [key: string]: TableColumn | TableColumnAction | TableCustomColumn;\n}\n\n/**\n * View Columns\n * @isViewNode true\n */\nexport interface ViewColumns {\n    [key: string]: ViewTableColumn | ViewTableColumnAction | ViewTableCustomColumn;\n}\n\n// Note: TableSettings are reused by OP: LR only properties must not be added here.\nexport interface TableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec\n     */\n    type?: TableTypeV4;\n    /**\n     * Allows you to enable or disable row selection and choose between single or multiple row selection.\n     *\n     * - Auto: This type is now deprecated. Choose any of the following modes.\n     * - Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar. In edit mode, multiple selection is possible with the delete button.\n     * - Single: This type allows single table selection if relevant actions are available in the toolbar. In edit mode, multiple selection is possible with the Delete button.\n     * - None: No table selection is possible in display mode. In edit mode, the selection (including multiple row selection) is still possible when the Delete button is available in the table toolbar.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/116b5d82e8c545e2a56e1b51b8b0a9bd\n     */\n    selectionMode?: SelectionMode;\n    /**\n     * The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.\n     */\n    selectAll?: boolean;\n    /**\n     * You can define how many items can be selected at a time using the selectionLimit.\n     */\n    selectionLimit?: number;\n    /**\n     * By default, export is enabled in the List Report and on the Object Page. When enabled, the Export button is displayed in the table toolbar.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd\n     */\n    enableExport?: boolean;\n    /**\n     * With quickVariantSelection you can switch on the multiple view feature (single table mode). It links to SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) you must have added to your annotations beforehand.\n     */\n    quickVariantSelection?: QuickVariantSelectionV4;\n    /**\n     * Allows you to set the content density to condensed for ui.table on the List Report and Object Page.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c\n     */\n    condensedTableLayout?: boolean;\n    /**\n     *  Leading property that decides between either a recursive hierarchy or data aggregation.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec\n     */\n    hierarchyQualifier?: string;\n}\n\nexport type ViewTypeV4 = LRTableView | LRChartView | TableViewExtension | boolean;\n\n/**\n * Views\n * @isViewNode true\n */\nexport interface MultiTableModeV4 {\n    /**\n     * List of annotation paths\n     */\n    [key: string]: ViewTypeV4;\n    /**\n     * You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.\n     */\n    showCounts?: boolean;\n}\n\n/**\n * Chart View\n * @isViewNode true\n */\nexport interface ALPChartView {\n    /**\n     * The primary annotation path can be either UI.Chart, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath: string;\n    /**\n     * Chart Toolbar\n     * @isViewNode true\n     */\n    toolBar?: ViewChartToolBar;\n}\n\nexport interface CommonViewSettings {\n    /**\n     * Unique tab identifier.\n     * @hidden true\n     */\n    key: string;\n    /**\n     * @hidden true\n     */\n    index: number;\n    /**\n     * To use charts in multiple table mode, define a UI.Chart annotation, including a qualifier.\n     * Reference the UI.Chart annotation in your SelectionPresentationVariant or PresentationVariant for your view.\n     */\n    annotationPath: string;\n    /**\n     * Each chart can be based on a different entitySet.\n     */\n    entitySet?: string;\n}\n\n/**\n * Chart View\n * @isViewNode true\n */\nexport interface LRChartView extends CommonViewSettings {\n    /**\n     * Chart Toolbar\n     * @isViewNode true\n     */\n    toolBar?: ViewChartToolBar;\n    /**\n     * Specifies whether the view is visible or not\n     */\n    visible?: boolean;\n}\n\n/**\n * Table View\n * @isViewNode true\n */\nexport interface ALPTableView extends TableSettings {\n    /**\n     * The secondary annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath: string;\n    /**\n     * Allows you to define whether or not the data in the table is automatically loaded\n     *\n     * - Auto (default): An initial load of data only occurs if some default filter values have been set in the filter bar\n     * - Enabled: An initial load of data occurs for the standard variant\n     * - Disabled: An initial load of data does not occur for the standard variant, and the user has to actively click the Go button.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/#/topic/9f4e1192f1384b85bc160288e17f69c4\n     */\n    initialLoad?: InitialLoadType;\n    /**\n     * Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\n     * By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\n     * Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.\n     */\n    personalization?: ViewPersonalizationType;\n    /**\n     * Table Toolbar\n     */\n    toolBar?: ToolBar;\n    columns?: ViewColumns;\n}\n\n/**\n * Table View Extension\n * @isViewNode true\n */\nexport interface TableViewExtension {\n    /**\n     * Unique tab identifier.\n     * @hidden true\n     */\n    key: string;\n    /**\n     * @hidden true\n     */\n    index: number;\n    /**\n     * View title (localization supported).\n     * @i18nClassification TIT: Custom view title\n     */\n    label?: string;\n    /**\n     * The name contains sap.app.id as a prefix, followed by the path in the app/webapp folder and the name of the XML view.\n     */\n    template: string;\n    /**\n     * Specifies whether the view is visible or not\n     */\n    visible?: boolean;\n}\n\n/**\n * Table View\n * @isViewNode true\n */\nexport interface LRTableView extends TableSettings {\n    /**\n     * Unique tab identifier.\n     * @hidden true\n     */\n    key: string;\n    /**\n     * @hidden true\n     */\n    index: number;\n    /**\n     * The annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath: string;\n    /**\n     * Each table can be based on a different entitySet.\n     */\n    entitySet?: string;\n    /**\n     *  The tab keeps the default LineItem ID (without the key), so the variant is applied to it.\n     */\n    keepPreviousPersonalization?: boolean;\n    /**\n     * Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\n     * By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\n     * Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.\n     */\n    personalization?: ViewPersonalizationType;\n    /**\n     * Table Toolbar\n     */\n    toolBar?: ToolBar;\n    /**\n     * Columns\n     */\n    columns?: ViewColumns;\n    /**\n     * Specifies whether the view is visible or not\n     */\n    visible?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n */\nexport interface Table extends TableSettings {\n    /**\n     * The secondary annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath?: string;\n    /**\n     * Allows you to define whether or not the data in the table is automatically loaded\n     *\n     * - Auto (default): An initial load of data only occurs if some default filter values have been set in the filter bar\n     * - Enabled: An initial load of data occurs for the standard variant\n     * - Disabled: An initial load of data does not occur for the standard variant, and the user has to actively click the Go button.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/#/topic/9f4e1192f1384b85bc160288e17f69c4\n     */\n    initialLoad?: InitialLoadType;\n    /**\n     * Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\n     * By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\n     * Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.\n     */\n    personalization?: PersonalizationType;\n    views?: MultiTableModeV4;\n    /**\n     * Tool Bar\n     */\n    toolBar?: ToolBar;\n    columns?: GenericColumns;\n}\n", "import type { Availability } from '..';\n\nexport enum LayoutType {\n    Compact = 'Compact',\n    CompactVisual = 'CompactVisual'\n}\n\nexport enum InitialLayoutType {\n    Compact = 'Compact',\n    Visual = 'Visual'\n}\n\n/**\n * Visual Filter\n * @isViewNode true\n */\nexport interface VisualFilter {\n    /**\n     * Defines where the selection field should be shown.\n     *\n     * - Default: The filter field is shown by default in the filter bar (both the regular filter fields as well as the corresponding visual filter fields).\n     * - Adaptation: The filter field is initially not shown but is only available under Adapt Filters.\n     * - Hidden: The filter field is not visible in the filter bar or within the Adapt Filters dialog.\n     * @artifactType Manifest\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2\n     */\n    availability?: Availability;\n    /**\n     * The valuelist annotation corresponding to the visual filter representation.\n     * @artifactType Manifest\n     * @hidden true\n     */\n    visualFilterValueList?: string;\n}\n\nexport type SelectionField = {};\n\n/**\n * Filter Fields\n * @isViewNode true\n */\nexport interface SelectionFields {\n    [key: string]: SelectionField | CustomFilterField;\n}\n\n/**\n * Compact Filters\n * @isViewNode true\n */\nexport interface CompactFilters {\n    [key: string]: SelectionField;\n}\n\n/**\n * Visual Filters\n * @isViewNode true\n */\nexport interface VisualFilters {\n    [key: string]: VisualFilter;\n}\n\nexport enum FilterFieldPlacement {\n    After = 'After',\n    Before = 'Before'\n}\n\nexport interface CustomFilterFieldPosition {\n    /**\n     * The key of another filter field is to be used as a placement anchor.\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor filter field.\n     */\n    placement: FilterFieldPlacement;\n}\n\n/**\n * Custom Filter Field\n * @isViewNode true\n */\nexport interface CustomFilterField {\n    /**\n     * A static or i18n binding string.\n     * @i18nClassification COL: Custom filter field label\n     */\n    label: string;\n    /**\n     * The full path to the property to be filtered.\n     */\n    property: string;\n    /**\n     * The path to the XML template containing the filter control.\n     */\n    template: string;\n    /**\n     * If filter field is mandatory, i.e. it requires a value.\n     */\n    required?: boolean;\n    /**\n     * Defines the position of the filter field relative to another filter field.\n     */\n    position?: CustomFilterFieldPosition;\n}\n\n/**\n * Filter Bar\n * @isViewNode true\n */\nexport interface FilterBar {\n    /**\n     * Allows you to hide the filter bar.\n     * @artifactType Manifest\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/4bd7590569c74c61a0124c6e370030f6\n     */\n    hideFilterBar?: boolean;\n\n    /**\n     * @isViewNode true\n     */\n    selectionFields?: SelectionFields | CompactFilters;\n\n    /**\n     * @isViewNode true\n     */\n    visualFilters?: VisualFilters;\n\n    /**\n     * Allows you to specify the default filter mode on the initial load.\n     * @artifactType Manifest\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2\n     */\n    initialLayout?: InitialLayoutType;\n\n    /**\n     * Allows you to specify the layout of the filter bar.\n     *\n     * - Compact: This setting shows filter fields in compact mode.\n     * - CompactVisual: This setting shows filter fields in both compact and visual modes.\n     *\n     * @artifactType Manifest\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2\n     */\n    layout?: LayoutType;\n}\n", "import type { ActionAfterExecutionConfiguration } from '../webapp/manifest/ManifestSettings';\nimport type { CustomAction, CustomActionPosition } from './CustomAction';\n\ninterface ActionAfterExecutionConfigurationToolBarLR extends ActionAfterExecutionConfiguration {}\n\nexport enum SelectType {\n    single = 'single',\n    multi = 'multi'\n}\n\n/**\n * Action\n * @isViewNode true\n */\nexport interface ToolBarAction {\n    /**\n     * Enables single selection for a bound action\n     */\n    enableOnSelect?: SelectType;\n\n    /**\n     * Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)\n     */\n    afterExecution?: ActionAfterExecutionConfigurationToolBarLR;\n}\n\n/**\n * Action\n * @isViewNode true\n */\nexport interface ViewToolBarAction {\n    /**\n     * Enables single selection for a bound action\n     */\n    enableOnSelect?: SelectType;\n\n    /**\n     * Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)\n     */\n    afterExecution?: ActionAfterExecutionConfigurationToolBarLR;\n}\nexport type ChartToolBarAction = {};\n\n/**\n * Actions\n * @isViewNode true\n */\nexport interface Actions {\n    [key: string]: ToolBarAction | CustomTableAction;\n}\n\n/**\n * Actions\n * @isViewNode true\n */\nexport interface ViewActions {\n    [key: string]: ViewToolBarAction | ChartToolBarAction | ViewTableCustomAction;\n}\n\n/**\n * Table Toolbar\n * @isViewNode true\n */\nexport interface ToolBar {\n    actions: Actions;\n}\n\n/**\n * Chart Toolbar\n * @isViewNode true\n */\nexport interface ViewChartToolBar {\n    actions: ViewActions;\n}\n\nexport interface CustomTableAction extends CustomAction {\n    /**\n     * Indicates whether the action requires a selection of items.\n     * @artifactType XMLProperty\n     */\n    requiresSelection?: boolean;\n}\n\nexport interface ViewCustomActionPosition extends CustomActionPosition {\n    /**\n     * The key of another action to be used as placement anchor.\n     * @artifactType Manifest\n     */\n    anchor?: string;\n}\n\nexport interface ViewTableCustomAction extends CustomTableAction {\n    /**\n     * Defines the position of the action relative to other actions.\n     * @artifactType Manifest\n     */\n    position?: ViewCustomActionPosition;\n}\n", "export enum SectionLayoutType {\n    Tabs = 'Tabs',\n    Page = 'Page'\n}\n\n/**\n * Page Layout\n * @isViewNode true\n */\nexport interface ObjectPageLayout {\n    /**\n     * Allows you to define the layout of the sections.\n     *\n     * - Page (default): In this mode, all the sections and subsections are added to the same page.\n     * - Tabs: In this mode, the sections are represented as tabs under the header facet.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/#/topic/facfea09018d4376acaceddb7e3f03b6\n     */\n    sectionLayout?: SectionLayoutType;\n}\n", "import type { ObjectPageSectionTableV4 } from './ObjectPageTable';\nimport type { SAPUI5_FRAGMENT_CLASS } from '../../common/webapp/manifest/sapUi5';\nimport type { ObjectPageToolBar } from './ObjectPageToolBar';\nimport type { ObjectPageForm } from './ObjectPageForm';\n\nexport interface ObjectPageSectionForm {\n    /**\n     * Form\n     *  @isViewNode true\n     */\n    form?: ObjectPageForm;\n}\n\nexport interface ObjectPageSectionDataPoint {\n    /**\n     * Data Point\n     *  @isViewNode true\n     */\n    dataPoint?: object;\n}\n\nexport interface ObjectPageSectionContact {\n    /**\n     * Contact\n     *  @isViewNode true\n     */\n    contact?: object;\n}\n\nexport interface ObjectPageSectionAddress {\n    /**\n     * Address\n     *  @isViewNode true\n     */\n    address?: object;\n}\n\nexport interface ObjectPageChart {\n    /**\n     * Chart Toolbar\n     * @isViewNode true\n     */\n    toolBar?: ObjectPageToolBar;\n}\n\nexport interface ObjectPageSectionChart {\n    /**\n     * Chart\n     * @isViewNode true\n     */\n    chart?: ObjectPageChart;\n}\n\nexport interface ObjectPageSectionPresentationVariant {\n    /**\n     * Presentation Variant\n     */\n    [key: string]: ObjectPageSectionTableV4 | ObjectPageSectionChart;\n}\n\nexport type ObjectPageSection =\n    | ObjectPageSectionTableV4\n    | ObjectPageSectionForm\n    | ObjectPageSectionDataPoint\n    | ObjectPageSectionContact\n    | ObjectPageSectionAddress\n    | ObjectPageSectionPresentationVariant\n    | ObjectPageSubSections;\n\nexport interface GenericSections {\n    [key: string]: ObjectPageSection;\n}\n\nexport interface GenericSubSections {\n    [key: string]: ObjectPageSection | ObjectPageCustomSubSectionFragment;\n}\n\n/**\n * Subsections\n * @isViewNode true\n */\nexport interface ObjectPageSubSections {\n    subsections: GenericSubSections;\n}\n\n/**\n * @displayName Placement\n */\nexport enum SectionPosition {\n    After = 'After',\n    Before = 'Before'\n}\n\nexport enum CustomSectionViewTypesV4 {\n    XML = 'XML'\n}\n\n/**\n * Custom Sections\n * @isViewNode true\n */\nexport interface CustomSections {\n    /**\n     * Custom Sections\n     * @isViewNode true\n     */\n    custom?: ObjectPageCustomSectionFragment[];\n}\n\nexport interface ObjectPageCustomSectionBase {\n    /**\n     * Use the key of another facet/section as a placement anchor.\n     * @artifactType Manifest\n     * @displayName Anchor\n     */\n    relatedFacet?: string;\n    /**\n     * Define the placement, either before or after the anchor facet/section.\n     * @artifactType Manifest\n     */\n    relativePosition?: SectionPosition;\n    /**\n     * The unique ID of a section.\n     * @artifactType Manifest\n     */\n    id: string;\n    /**\n     * @hidden true\n     */\n    type: CustomSectionViewTypesV4;\n    /**\n     * The label of a custom section, preferably as an i18n key.\n     * @artifactType Manifest\n     * @i18nClassification TIT: Custom section title\n     */\n    title: string;\n}\n\n/**\n * Fragment\n * @isViewNode true\n */\nexport interface ObjectPageCustomSectionFragment extends ObjectPageCustomSectionBase {\n    /**\n     * @hidden true\n     */\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    /**\n     * The path to the XML template containing the section control.\n     * @artifactType Manifest\n     */\n    fragmentName: string;\n}\n\n/**\n * Custom Sub Section\n * @isViewNode true\n */\nexport type ObjectPageCustomSubSectionFragment = Omit<ObjectPageCustomSectionFragment, 'id' | 'type' | 'className'>;\n", "import type { AnnotationPathAsObject, TableSettings } from '.';\nimport type {\n    Placement,\n    ObjectPageTableColumn as ObjectPageTableColumnIF,\n    ObjectPageTableColumnAction,\n    TableCustomColumn\n} from '../webapp/manifest/ManifestSettings';\nimport type { ObjectPageToolBar } from './ObjectPageToolBar';\n\nexport interface PositionOP {\n    /**\n     * The key of another column to be used as placement anchor.\n     * @artifactType Manifest\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor column.\n     * @artifactType Manifest\n     */\n    placement: Placement;\n}\n\nexport interface TableCustomColumnOP extends TableCustomColumn {\n    /**\n     * Defines the position of the column relative to other columns.\n     * @artifactType Manifest\n     */\n    position?: PositionOP;\n}\n\n/**\n * Table\n * @isViewNode true\n */\nexport interface ObjectPageTable extends TableSettingsOP {\n    /**\n     * By setting enableFullScreen to true you can enable the full screen mode for this table; this will display a new button on the table toolbar allowing the user to open the table in a fullscreen dialog.\n     */\n    enableFullScreen?: boolean;\n    /**\n     * In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.\n     */\n    enablePaste?: boolean;\n    /**\n     * Tool Bar\n     */\n    toolBar?: ObjectPageToolBar;\n}\n\n/**\n * Table Section\n * @isViewNode true\n */\nexport interface ObjectPageSectionTableV4 {\n    table?: ObjectPageTable;\n}\n\nexport enum TableCreationModeType {\n    NewPage = 'NewPage',\n    InlineCreationRows = 'InlineCreationRows',\n    Inline = 'Inline'\n}\n\nexport interface TableCreationModeOP {\n    /**\n     * The name property of TableCreationMode defines the creation mode; possible values are:\n     * - NewPage: The create action leads to a new page.\n     * - InlineCreationRows: No create button will be rendered, an empty row is directly given.\n     * - Inline: The create action leads to a new row at the table (not recommended, use InlineCreationRows instead).\n     * The default is \"NewPage\".\n     */\n    name?: TableCreationModeType;\n    /**\n     * In case of inline creation mode you can decide if the new row will be created at the end of the table, or direcly after the currently selected table. The default value is \"true\".\n     */\n    createAtEnd?: boolean;\n    /**\n     * Supported starting SAPUI5 version 1.111.0, If set to 'true', the empty rows will be hidden when editing an existing object. Selecting the table's Create button will display the empty rows. The default value is \"true\".\n     */\n    inlineCreationRowsHiddenInEditMode?: boolean;\n}\n\nexport interface PersonalizationTypeOP {\n    /**\n     * Defines whether the user can add and remove columns to a given table.\n     */\n    column?: boolean;\n    /**\n     * Defines whether the user can sort a given table.\n     */\n    sort?: boolean;\n    /**\n     * Defines whether the user can filter data of a given table.\n     */\n    filter?: boolean;\n}\n\nexport interface QuickVariantSelectionV4OP {\n    /**\n     * List of annotation paths referring to SelectionVariant annotations\n     */\n    paths: AnnotationPathAsObject[];\n    /**\n     * You can hide the table and display only the titles of the tabs. To do so, add the hideTableTitle option and set it to true.\n     */\n    hideTableTitle?: boolean;\n    /**\n     * You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.\n     */\n    showCounts?: boolean;\n}\n\nexport interface GenericColumnsOP {\n    [key: string]: ObjectPageTableColumnIF | ObjectPageTableColumnAction | TableCustomColumnOP;\n}\n\nexport interface TableSettingsOP extends TableSettings {\n    /**\n     * Defines the page behavior when a new record is created.\n     */\n    creationMode?: TableCreationModeOP;\n\n    /**\n     * Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\n     * By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\n     * Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.\n     */\n    personalization?: PersonalizationTypeOP;\n\n    /**\n     * With quickVariantSelection you can switch on the multiple view feature (single table mode). It links to SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) you must have added to your annotations beforehand.\n     */\n    quickVariantSelection?: QuickVariantSelectionV4OP;\n\n    columns?: GenericColumnsOP;\n}\n", "import type { SapUiGenericAppPageSettings } from '../../../common/page';\n\nexport interface SapUiAppV4 {\n    pages: SapUiAppPageV4[] | SapUiGenericAppPageMapV4;\n    _version?: string;\n    settings?: object;\n}\n\nexport interface SapUiGenericAppPageMapV4 {\n    [key: string]: SapUiAppPageV4;\n}\n\nexport interface SapUiNavDetailsV4 {\n    detail?: {\n        route?: string;\n    };\n}\n\nexport type SapUi5MultiViewPath = {\n    key: string;\n    annotationPath: string;\n};\n\nexport type SapUi5MultiViewPaths = SapUi5MultiViewPath[];\n\nexport type SapUi5ALPPaths = [\n    {\n        primary: [\n            {\n                annotationPath: string;\n            }\n        ];\n        secondary: [\n            {\n                annotationPath: string;\n            }\n        ];\n        defaultPath: string;\n    }\n];\n\nexport type SapUi5Views = {\n    paths: SapUi5MultiViewPaths | SapUi5ALPPaths;\n    showCounts?: boolean;\n};\n\nexport interface SapUiGenericAppPageCustomFilterField {\n    label: string;\n    property: string;\n    required?: boolean;\n    position: SapUi5RoutingTargetContentPosition;\n}\n\nexport interface SapUiGenericAppPageSettingsV4 extends SapUiGenericAppPageSettings {\n    ['@com.sap.vocabularies.UI.v1.SelectionFields']: SapUiGenericAppPageCustomFilterField;\n}\n\nexport type SapUiPageSettingsV4 = SapUiGenericAppPageSettings & {\n    entitySet?: string;\n    navigation?: {\n        [key: string]: SapUiNavDetailsV4;\n    };\n    controlConfiguration?: SapUiGenericAppPageSettingsV4;\n    content?: SapUi5RoutingTargetContent;\n    views?: SapUi5Views;\n    defaultTemplateAnnotationPath?: string;\n};\n\nexport interface SapUiAppPageV4 {\n    type: string;\n    id: string;\n    name: string;\n    options: {\n        settings?: SapUiPageSettingsV4;\n    };\n}\n\nexport const FE_TEMPLATE_V4 = 'sap.fe.templates';\nexport const FE_TEMPLATE_V4_CUSTOM_PAGE = 'sap.fe.core.fpm';\nexport const FE_TEMPLATE_V4_OBJECT_PAGE = 'sap.fe.templates.ObjectPage';\nexport const FE_TEMPLATE_V4_LIST_REPORT = 'sap.fe.templates.ListReport';\nexport const FE_TEMPLATE_V4_ALP = 'sap.fe.templates.AnalyticalListPage';\nexport interface SapUiAppPagesV4 {\n    [key: string]: SapUiAppPageV4;\n}\nexport interface SapUi5RoutingTargetContent {\n    header?: object;\n    body?: SapUi5RoutingTargetContentBody;\n    footer?: object;\n}\n\nexport interface SapUi5RoutingTargetContentBody {\n    sections?: SapUi5RoutingTargetContentSections;\n}\n\nexport interface SapUi5RoutingTargetContentSections {\n    [key: string]: SapUi5RoutingTargetContentSection | SapUi5RoutingTargetContentSubSectionsWrapper;\n}\n\nexport interface SapUi5RoutingTargetContentSubSections {\n    [key: string]: SapUi5RoutingTargetContentSection;\n}\n\nexport interface SapUi5RoutingTargetContentSubSectionsWrapper {\n    subSections: SapUi5RoutingTargetContentSubSections;\n}\n\nexport const SAPUI5_FRAGMENT_TYPE_V4 = 'XMLFragment';\nexport interface SapUi5RoutingTargetContentSection {\n    // Currently only xml fragment is supported\n    type: typeof SAPUI5_FRAGMENT_TYPE_V4;\n    name?: string;\n    title: string;\n    position: SapUi5RoutingTargetContentPosition;\n    template?: string;\n    templateEdit?: string;\n}\n\nexport enum SectionPositionV4 {\n    AfterFacet = 'AfterFacet',\n    BeforeFacet = 'BeforeFacet'\n}\n\nexport interface SapUi5RoutingTargetContentPosition {\n    placement: SectionPositionV4;\n    anchor: string;\n}\n", "import type {\n    SapUi5RootView,\n    SapUi5OdataModel,\n    SapUi5ResourceModel,\n    SapUi5RoutingRoute,\n    ViewTypes,\n    SapUi5RoutingTargetSettings,\n    SapUi5RoutingTargetBase,\n    SapUi5RoutingTarget,\n    Dependencies\n} from '../../../common/webapp/manifest/sapUi5';\nimport type { SapUiGenericAppPageSettings } from '../../../common/page';\nimport type { FlexibleColumnLayout } from '../../../common';\n\nexport interface FlexibleColumnLayoutV4 extends FlexibleColumnLayout {\n    /**\n     * To limit Flexible Column Layout to two columns. The third level will be displayed in full screen and not in a third column.\n     */\n    limitFCLToTwoColumns?: boolean;\n}\n\nexport interface SapUi5V4 {\n    flexEnabled?: boolean;\n    resources?: object;\n    dependencies?: Dependencies;\n    models?: { [key: string]: SapUi5OdataModel | SapUi5ResourceModel };\n    routing?: SapUi5RoutingV4;\n    [key: string]: string | object | boolean;\n    rootView?: SapUi5RootView;\n    extends?: SapUi5ExtendsV4;\n}\n\nexport interface SapUi5RoutingV4 {\n    config?: SapUi5RoutingConfig;\n    routes?: SapUi5RoutingRoute[];\n    targets: SapUi5RoutingTargetsV4;\n}\n\nexport type RoutingTargetOptions =\n    | SapUi5RoutingTarget\n    | SapUi5RoutingTargetCustomPageV4\n    | SapUi5RoutingTargetCustomPageV4New;\n\nexport interface SapUi5RoutingTargetsV4 {\n    [key: string]: RoutingTargetOptions;\n}\n\nexport interface SapUi5RoutingTargetCustomPageV4New extends SapUi5RoutingTarget {\n    options?: {\n        settings: SapUi5RoutingTargetSettings & SapUi5CommonCustomPageV4;\n    };\n}\n\nexport interface SapUi5CommonCustomPageV4 extends SapUi5RoutingTargetBase {\n    viewName: string;\n    controlConfiguration?: SapUiGenericAppPageSettings;\n}\n\nexport interface SapUi5RoutingTargetCustomPageV4 extends SapUi5CommonCustomPageV4 {\n    viewId: string;\n    viewLevel?: number;\n    viewType?: ViewTypes;\n    viewPath?: string;\n    path?: string;\n    title?: string;\n}\n\nexport const FIORI_FCL_ROUTER_CLASS = 'sap.f.routing.Router';\nexport type RouterClass = typeof FIORI_FCL_ROUTER_CLASS | string;\nexport interface SapUi5RoutingConfig {\n    routerClass?: RouterClass;\n    flexibleColumnLayout?: FlexibleColumnLayoutV4;\n    viewType?: ViewTypes;\n    viewPath?: string;\n    path?: string;\n}\n\nexport interface SapUi5DependenciesV4 {\n    minUI5Version?: string;\n    incompatibleLimitation?: boolean;\n    libs?: SapUi5DependenciesLibV4;\n}\n\nexport const SAPUI5_DEPENDENCY_LIB_SAP_F = 'sap.f';\nexport interface SapUi5DependenciesLibV4 {\n    [SAPUI5_DEPENDENCY_LIB_SAP_F]?: SapUi5DependencyLibV4;\n    [key: string]: SapUi5DependencyLibV4;\n}\n\nexport interface SapUi5DependencyLibV4 {\n    minVersion?: string;\n    lazy?: boolean;\n}\n\nexport interface SapUi5ExtendsV4 {\n    extensions?: SapUi5ExtensionsV4;\n}\n\nexport const SAPUI5_CONTROLLER_EXTENSION = 'sap.ui.controllerExtensions';\nexport const SAPUI5_VIEW_EXTENSION_OBJECT_PAGE = 'sap.fe.templates.ObjectPage.ObjectPageController';\nexport const SAPUI5_VIEW_EXTENSION_LIST_REPORT = 'sap.fe.templates.ListReport.ListReportController';\n\nexport interface SapUi5ExtensionsV4 {\n    [SAPUI5_CONTROLLER_EXTENSION]?: SapUi5ControllerExtensionsV4;\n}\n\nexport interface SapUi5ControllerExtensionsV4 {\n    [SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]?: SapUi5ControllerExtensionV4;\n    [SAPUI5_VIEW_EXTENSION_LIST_REPORT]?: SapUi5ControllerExtensionV4;\n    [key: string]: SapUi5ControllerExtensionV4;\n}\n\nexport interface SapUi5ControllerExtensionV4 {\n    controllerName?: string;\n    controllerNames?: string[];\n}\n", "// Copies of sap.fe type definitions\nexport enum Placement {\n    After = 'After',\n    Before = 'Before'\n}\n\nexport interface Position {\n    /**\n     * The key of another column to be used as placement anchor.\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor column.\n     */\n    placement: Placement;\n}\n\nexport interface ViewPosition {\n    /**\n     * The key of another column to be used as placement anchor.\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor column.\n     */\n    placement: Placement;\n}\n\nexport type Positionable = {\n    /**\n     *   Defines the position of the column relative to other columns.\n     */\n    position?: Position;\n};\n\nexport interface ActionAfterExecutionConfiguration {\n    /**\n     * Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d\n     */\n    navigateToInstance?: boolean;\n    /**\n     * Allows you to scroll to the newly created or changed item after you have performed an action.\n     */\n    enableAutoScroll?: boolean;\n}\n\nexport enum Availability {\n    'Default' = 'Default',\n    'Adaptation' = 'Adaptation',\n    'Hidden' = 'Hidden'\n}\n\nexport enum HorizontalAlign {\n    'Begin' = 'Begin',\n    'Center' = 'Center',\n    'End' = 'End'\n}\n\n/**\n * Table Column\n * @isViewNode true\n */\nexport interface TableColumn {\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize\n     * @descriptionSrcURL https://ui5.sap.com/api/sap.ui.core.CSSSize\n     */\n    width?: string;\n    /**\n     * Defines where the column should be shown.\n     * Default: it will be shown by default in the table.\n     * Adaptation: it will initially not be shown in the table but be available via end user adaptation.\n     * Hidden: the column is neither available in the table nor in adaptation.\n     */\n    availability?: Availability;\n}\n\n/**\n * Table Column\n * @isViewNode true\n */\nexport interface ViewTableColumn {\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize\n     * @descriptionSrcURL https://ui5.sap.com/api/sap.ui.core.CSSSize\n     */\n    width?: string;\n    /**\n     * Defines where the column should be shown.\n     * Default: it will be shown by default in the table.\n     * Adaptation: it will initially not be shown in the table but be available via end user adaptation.\n     * Hidden: the column is neither available in the table nor in adaptation.\n     */\n    availability?: Availability;\n}\n\n/**\n * Table Column\n * @isViewNode true\n */\nexport interface ObjectPageTableColumn {\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize\n     * @descriptionSrcURL https://ui5.sap.com/api/sap.ui.core.CSSSize\n     */\n    width?: string;\n    /**\n     * Defines where the column should be shown.\n     * Default: it will be shown by default in the table.\n     * Adaptation: it will initially not be shown in the table but be available via end user adaptation.\n     * Hidden: the column is neither available in the table nor in adaptation.\n     */\n    availability?: Availability;\n}\n\n/**\n * Inline Action\n * @isViewNode true\n */\nexport interface TableColumnAction extends TableColumn {\n    /**\n     * Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)\n     */\n    afterExecution?: ActionAfterExecutionConfiguration;\n}\n\n/**\n * Inline Action\n * @isViewNode true\n */\nexport interface ViewTableColumnAction extends ViewTableColumn {\n    /**\n     * Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)\n     */\n    afterExecution?: ActionAfterExecutionConfiguration;\n}\n\nexport type ColumnPropertiesType = string[];\n\n/**\n * Inline Action for Object Page\n * @isViewNode true\n */\nexport interface ObjectPageTableColumnAction extends ObjectPageTableColumn {}\n\n/**\n * Custom Column\n * @isViewNode true\n */\nexport interface TableCustomColumn {\n    /**\n     * Defines the position of the column relative to other columns.\n     * @artifactType Manifest\n     */\n    position?: Position;\n    /**\n     * The header is shown on the table as header, as well as in the add/remove dialog.\n     * @i18nClassification COL: Custom column header text\n     * @artifactType Manifest\n     */\n    header: string;\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize\n     * @artifactType Manifest\n     * @descriptionSrcURL https://ui5.sap.com/api/sap.ui.core.CSSSize\n     */\n    width?: string;\n    /**\n     * Relevant for extension columns; allows the definition of a target fragment.\n     * @artifactType Manifest\n     */\n    template: string;\n    /**\n     * Aligns the header as well as the content horizontally.\n     * @artifactType Manifest\n     */\n    horizontalAlign?: HorizontalAlign;\n    /**\n     * Defines where the column should be shown.\n     * - Default: it will be shown by default in the table.\n     * - Adaptation: it will initially not be shown in the table but be available via end user adaptation\n     * - Hidden: the column is neither available in the table nor in adaptation\n     * @artifactType Manifest\n     */\n    availability?: Availability;\n    /**\n     * If provided and sorting is enabled for the table the custom column header can be clicked. This will lead to a list of properties (or one) that can be sorted by, they are displayed as the labels of the properties, corresponding to their definition in the annotations.\n     * @artifactType Manifest\n     */\n    properties?: ColumnPropertiesType;\n}\n\n/**\n * Custom Column\n * @isViewNode true\n */\nexport interface ViewTableCustomColumn {\n    /**\n     *   Defines the position of the column relative to other columns.\n     * @artifactType Manifest\n     */\n    position?: ViewPosition;\n    /**\n     * The header is shown on the table as header, as well as in the add/remove dialog.\n     * @i18nClassification COL: Custom column header text\n     * @artifactType Manifest\n     */\n    header: string;\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize\n     * @artifactType Manifest\n     * @descriptionSrcURL https://ui5.sap.com/api/sap.ui.core.CSSSize\n     */\n    width?: string;\n    /**\n     * Relevant for extension columns; allows the definition of a target fragment.\n     * @artifactType Manifest\n     */\n    template: string;\n    /**\n     * Aligns the header as well as the content horizontally.\n     * @artifactType Manifest\n     */\n    horizontalAlign?: HorizontalAlign;\n    /**\n     * Defines where the column should be shown.\n     * - Default: it will be shown by default in the table.\n     * - Adaptation: it will initially not be shown in the table but be available via end user adaptation\n     * - Hidden: the column is neither available in the table nor in adaptation\n     * @artifactType Manifest\n     */\n    availability?: Availability;\n    /**\n     * If provided and sorting is enabled for the table the custom column header can be clicked. This will lead to a list of properties (or one) that can be sorted by, they are displayed as the labels of the properties, corresponding to their definition in the annotations.\n     * @artifactType Manifest\n     */\n    properties?: ColumnPropertiesType;\n}\n", "import type { PageConfig } from '../../common';\nimport type {\n    ObjectPageHeader,\n    ObjectPageLayout,\n    GenericSections,\n    CustomSections,\n    ObjectPageFooter\n} from '../controls';\n\nexport enum VariantManagementTypeObjectPage {\n    None = 'None',\n    Control = 'Control'\n}\n\nexport interface ObjectPageConfigV4 extends PageConfig {\n    header?: ObjectPageHeader;\n    layout?: ObjectPageLayout;\n    /**\n     * Allows you to enable and disable variant management for tables.\n     *\n     * - None (default): No variant management is possible by default.\n     * - Control: Individual personalization for each control is possible.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/f26d42bea11c4deda82c7a2e00c9bc05.html\n     */\n    variantManagement?: VariantManagementTypeObjectPage;\n\n    sections?: GenericSections | CustomSections;\n\n    footer?: ObjectPageFooter;\n}\n", "import type { PageConfig } from '../../common';\nimport type { ALPChartView, ALPTableView, DefaultPathType, FilterBar, Header, Table } from '../controls';\n\nexport enum VariantManagementTypeListReport {\n    None = 'None',\n    Control = 'Control',\n    Page = 'Page'\n}\n\nexport interface ListReportConfigV4 extends PageConfig {\n    /**\n     * variantManagement defines how the variant management of page personalizations is controlled.\n     * - None - No variant management by default.\n     * - Control - Individual personalizations for each control.\n     */\n    variantManagement?: VariantManagementTypeListReport;\n    /**\n     * Header\n     */\n    header?: Header;\n    /**\n     * Filter Bar\n     */\n    filterBar?: FilterBar;\n\n    /**\n     * Chart\n     */\n    chart?: ALPChartView;\n\n    /**\n     * Table\n     */\n    table?: Table | ALPTableView;\n\n    /**\n     * defaultTemplateAnnotationPath must be a reference to a SelectionPresentationVariant.\n     * You use the SelectionPresentationVariant to configure the default visualizations and default filter values of the main content area.\n     */\n    defaultTemplateAnnotationPath?: string;\n\n    /**\n     * Allows you to set the initial view mode\n     *\n     * - primary: This property loads the app in chart-only view.\n     * - secondary: This property loads the app in table-only view.\n     * - both: This property loads the app in hybrid view.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/2a9df06673d34f72b238549d49da8bfb\n     */\n    defaultPath?: DefaultPathType;\n}\n", "import type { Definition } from 'typescript-json-schema';\nimport type { ConvertedMetadata, EntitySet, EntityType } from '@sap-ux/vocabularies-types';\nimport type { Editor } from 'mem-fs-editor';\nimport type {\n    CustomPage as FPMCustomPage,\n    CustomTableColumn as FPMCustomTableColumn,\n    CustomSection as FPMCustomSection,\n    ObjectPage as FPMObjectPage,\n    CustomAction as FPMCustomAction,\n    CustomView as FPMCustomView,\n    ControllerExtension as FPMControllerExtension,\n    CustomSubSection as FPMCustomSubSection,\n    CustomHeaderSection as FPMCustomHeaderSection,\n    CustomFilter as FPMCustomFilter\n} from '@sap-ux/fe-fpm-writer';\nimport type { FioriElementsVersion, Manifest, v2, v4, File } from '.';\nimport type { SchemaType, FileData, FlexChangeLayer, ExportResults } from './common/types';\n\n// Export types from fpm-writer\nexport type { ControllerExtensionPageType, TargetControl as CustomActionTargetControl } from '@sap-ux/fe-fpm-writer';\n\nexport type MessageMetadataType = (object | string | number)[];\n\nexport const enum LogSeverity {\n    Error = 'error',\n    Warning = 'warning',\n    Info = 'info'\n}\n\nexport const LogSeverityLabel = {\n    [LogSeverity.Error]: 'Error',\n    [LogSeverity.Warning]: 'Warning',\n    [LogSeverity.Info]: 'Information'\n};\n\nexport type LogMessage = string | object | undefined;\n\nexport type ConfigEntityPath = Array<string | number>;\n\nexport interface RangePosition {\n    line: number;\n    character: number;\n}\nexport interface Range {\n    start: RangePosition;\n    end: RangePosition;\n}\n\nexport interface Location {\n    path: string;\n    range?: Range | string[];\n}\n\n/**\n * Interface used to define a logger for the specificaton API\n */\nexport interface ExtensionLogger {\n    info: (message: string, ...meta: MessageMetadataType) => void;\n    warning: (message: string, ...meta: MessageMetadataType) => void;\n    error: (message: string, ...meta: MessageMetadataType) => void;\n}\n\n/*********************************************************************\n * Types for app schema generation\n *********************************************************************/\n\n/**\n * Types for V2 schema generation\n */\nexport type GenerateListReportV2 = {\n    [SchemaType.ListReport]: {\n        genericSchema: object;\n        entitySet: string;\n        annotations: FileData[];\n        manifest: Manifest;\n        fragments: FileData[];\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateObjectPageV2 = {\n    [SchemaType.ObjectPage]: {\n        genericSchema: object;\n        entitySet: string;\n        annotations: FileData[];\n        manifest: Manifest;\n        fragments: FileData[];\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateOverviewPageV2 = {\n    [SchemaType.OverviewPage]: {\n        genericSchema: object;\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateAnalyticalListPageV2 = {\n    [SchemaType.AnalyticalListPage]: {\n        genericSchema: object;\n        entitySet: string;\n        annotations: object[];\n        manifest: Manifest;\n        fragments: FileData[];\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateSchemaV2Type =\n    | GenerateListReportV2\n    | GenerateObjectPageV2\n    | GenerateOverviewPageV2\n    | GenerateAnalyticalListPageV2;\n\nexport interface GenerateSchemaV2 {\n    [FioriElementsVersion.v2]: GenerateSchemaV2Type;\n}\n\n/**\n * Types for V4 schema generation\n */\nexport type GenerateListReportV4 = {\n    [SchemaType.ListReport]: {\n        genericSchema: object;\n        entitySet?: string;\n        contextPath?: string;\n        annotations: FileData[];\n        logger?: ExtensionLogger;\n        manifest?: Manifest;\n    };\n};\n\nexport type GenerateObjectPageV4 = {\n    [SchemaType.ObjectPage]: {\n        genericSchema: object;\n        entitySet?: string;\n        contextPath?: string;\n        annotations: FileData[];\n        manifest: Manifest;\n        logger?: ExtensionLogger;\n        genericMacrosSchema?: object;\n        fragments?: FileData[];\n    };\n};\n\nexport type GenerateAnalyticalListPageV4 = {\n    [SchemaType.AnalyticalListPage]: {\n        genericSchema: object;\n        entitySet?: string;\n        contextPath?: string;\n        annotations: FileData[];\n        logger?: ExtensionLogger;\n        manifest?: Manifest;\n    };\n};\n\nexport type GenerateFreestylePageV4 = {\n    [SchemaType.FreestylePage]: {\n        genericSchema: object;\n        annotations: FileData[];\n        manifest: Manifest;\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateFPMPageV4 = {\n    [SchemaType.FPMCustomPage]: {\n        genericSchema: object;\n        views: FileData[];\n        manifest: Manifest;\n        routingId: string;\n        annotations: FileData[];\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateSchemaV4Type =\n    | GenerateListReportV4\n    | GenerateObjectPageV4\n    | GenerateAnalyticalListPageV4\n    | GenerateFreestylePageV4\n    | GenerateFPMPageV4;\n\nexport interface GenerateSchemaV4 {\n    [FioriElementsVersion.v4]: GenerateSchemaV4Type;\n}\n\n/**\n * Union type for schema generation\n */\nexport type GenerateSchemaParameters = SyncBaseParameters & (GenerateSchemaV2 | GenerateSchemaV4);\n\n/*********************************************************************\n * Types for export of config\n *********************************************************************/\n\n/**\n * Types for v2 export\n */\n\nexport type ExportObjectPageV2Parameters = {\n    appId: string;\n    page: v2.Page;\n    manifest: Manifest;\n    jsonSchema: object;\n    fragments?: FileData[];\n    logger?: ExtensionLogger;\n};\nexport type ExportObjectPageV2 = {\n    [SchemaType.ObjectPage]: ExportObjectPageV2Parameters;\n};\nexport type ExportObjectPageV2WithPathParameters = ExportObjectPageV2Parameters & {\n    entityPath: ConfigEntityPath;\n};\nexport type ExportObjectPageWithPathV2 = {\n    [SchemaType.ObjectPage]: ExportObjectPageV2WithPathParameters;\n};\n\nexport type ExportListReportV2Parameters = ExportObjectPageV2Parameters & {\n    views?: FileData[];\n};\nexport type ExportListReportV2 = {\n    [SchemaType.ListReport]: ExportListReportV2Parameters;\n};\nexport type ExportListReportWithPathV2Parameters = ExportListReportV2Parameters & {\n    entityPath: ConfigEntityPath;\n};\nexport type ExportListReportWithPathV2 = {\n    [SchemaType.ListReport]: ExportListReportWithPathV2Parameters;\n};\n\nexport type ExportAnalyticalListPageV2Parameters = ExportListReportV2Parameters;\nexport type ExportAnalyticalListPageV2 = {\n    [SchemaType.AnalyticalListPage]: ExportAnalyticalListPageV2Parameters;\n};\nexport type ExportALPWithPathV2Parameters = ExportAnalyticalListPageV2Parameters & {\n    entityPath: ConfigEntityPath;\n};\nexport type ExportALPWithPathV2 = {\n    [SchemaType.AnalyticalListPage]: ExportALPWithPathV2Parameters;\n};\n\nexport type ExportOverviewPageV2Parameters = {\n    page: v2.Page;\n    manifest: object;\n    jsonSchema: object;\n    logger?: ExtensionLogger;\n};\n\nexport type ExportOverviewPageV2 = {\n    [SchemaType.OverviewPage]: ExportOverviewPageV2Parameters;\n};\nexport type ExportOVPWithPathParameters = ExportOverviewPageV2Parameters & {\n    entityPath: ConfigEntityPath;\n};\nexport type ExportOVPWithPathV2 = {\n    [SchemaType.OverviewPage]: ExportOVPWithPathParameters;\n};\n\nexport type ExportAppV2 = {\n    [SchemaType.Application]: {\n        application: v2.ApplicationV2;\n        manifest: Manifest;\n        jsonSchema: object;\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type ExportPageUnitionType =\n    | ExportALPWithPathV2Parameters\n    | ExportAnalyticalListPageV2Parameters\n    | ExportListReportV2Parameters\n    | ExportListReportWithPathV2Parameters\n    | ExportObjectPageV2WithPathParameters\n    | ExportObjectPageV2Parameters;\n\n/**\n * Types for v4 export\n */\nexport type ExportListReportV4Parameters = {\n    appId: string;\n    page: v4.PageV4;\n    manifest: Manifest;\n    jsonSchema: object;\n    logger?: ExtensionLogger;\n    appRootPath?: string;\n};\nexport type ExportListReportV4 = {\n    [SchemaType.ListReport]: ExportListReportV4Parameters;\n};\nexport type ExportListReportV4WithPathParameters = ExportListReportV4Parameters & {\n    entityPath: ConfigEntityPath;\n};\nexport type ExportListReportWithPathV4 = {\n    [SchemaType.ListReport]: ExportListReportV4WithPathParameters;\n};\n\nexport type ExportAnalyticalListPageV4Parameters = ExportListReportV4Parameters;\nexport type ExportALPVWithPath4Parameters = ExportAnalyticalListPageV4Parameters & {\n    entityPath: ConfigEntityPath;\n};\nexport type ExportAnalyticalListPageV4 = {\n    [SchemaType.AnalyticalListPage]: ExportAnalyticalListPageV4Parameters;\n};\nexport type ExportALPWithPathV4 = {\n    [SchemaType.AnalyticalListPage]: ExportALPVWithPath4Parameters;\n};\n\nexport type ExportObjectPageV4Parameters = {\n    appId: string;\n    page: v4.Page;\n    manifest: Manifest;\n    jsonSchema: object;\n    fragments?: FileData[];\n    logger?: ExtensionLogger;\n    appRootPath?: string;\n};\nexport type ExportObjectPageWithPathV4Parameters = ExportObjectPageV4Parameters & {\n    entityPath: ConfigEntityPath;\n};\nexport type ExportObjectPageV4 = {\n    [SchemaType.ObjectPage]: ExportObjectPageV4Parameters;\n};\nexport type ExportObjectPageWithPathV4 = {\n    [SchemaType.ObjectPage]: ExportObjectPageWithPathV4Parameters;\n};\n\nexport type ExportFPMCustomPageV4Parameters = {\n    appId: string;\n    page: v4.Page;\n    manifest: Manifest;\n    jsonSchema: object;\n    fragments: FileData[];\n    views: FileData[];\n    logger?: ExtensionLogger;\n    appRootPath?: string;\n};\nexport type ExportFPMCustomPageV4 = {\n    [SchemaType.FPMCustomPage]: ExportFPMCustomPageV4Parameters;\n};\n\nexport type ExportAppV4 = {\n    [SchemaType.Application]: {\n        application: v4.ApplicationV4;\n        manifest: Manifest;\n        jsonSchema: object;\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type ExportParametersV4Type =\n    | ExportListReportV4\n    | ExportObjectPageV4\n    | ExportAppV4\n    | ExportAnalyticalListPageV4\n    | ExportFPMCustomPageV4;\nexport interface ExportParametersV4 {\n    [FioriElementsVersion.v4]: ExportParametersV4Type;\n}\nexport type ExportParametersWithPathV4Type =\n    | ExportListReportWithPathV4\n    | ExportObjectPageWithPathV4\n    | ExportALPWithPathV4;\nexport interface ExportV4WithPath {\n    [FioriElementsVersion.v4]: ExportParametersWithPathV4Type;\n}\n\nexport interface UI5Version {\n    ui5Version?: string;\n    layer?: FlexChangeLayer;\n}\n\nexport type ExportParametersV2Type =\n    | ExportListReportV2\n    | ExportObjectPageV2\n    | ExportOverviewPageV2\n    | ExportAppV2\n    | ExportAnalyticalListPageV2;\n\nexport type ExportV2WithPathType =\n    | ExportListReportWithPathV2\n    | ExportObjectPageWithPathV2\n    | ExportOVPWithPathV2\n    | ExportALPWithPathV2;\n\nexport interface ExportParametersV2 {\n    [FioriElementsVersion.v2]: ExportParametersV2Type;\n}\nexport interface ExportV2WithPath {\n    [FioriElementsVersion.v2]: ExportV2WithPathType;\n}\n\n/**\n * Union types for export\n */\nexport type ExportConfigParameters = UI5Version & SyncBaseParameters & (ExportParametersV2 | ExportParametersV4);\nexport type ExportConfigWithPath = UI5Version & SyncBaseParameters & (ExportV2WithPath | ExportV4WithPath);\n\n/*********************************************************************\n * Types for import, creation of config\n *********************************************************************/\n\nexport type CommonImportParameters = {\n    manifest: Manifest;\n    flex: string[];\n    jsonSchema: object;\n    fragments?: FileData[];\n    logger?: ExtensionLogger;\n};\n\n/**\n * Types for v2 import\n */\nexport type ImportListReportV2Parameters = CommonImportParameters;\n\nexport type ImportListReportV2 = {\n    [SchemaType.ListReport]: ImportListReportV2Parameters;\n};\n\nexport type ImportObjectPageV2Parameters = CommonImportParameters & {\n    entitySet: string;\n};\nexport type ImportObjectPageV2 = {\n    [SchemaType.ObjectPage]: ImportObjectPageV2Parameters;\n};\n\nexport type ImportOverviewPageV2Parameters = {\n    manifest: Manifest;\n    jsonSchema: object;\n    logger?: ExtensionLogger;\n};\nexport type ImportOverviewPageV2 = {\n    [SchemaType.OverviewPage]: ImportOverviewPageV2Parameters;\n};\n\nexport type ImportALPV2Parameters = CommonImportParameters;\nexport type ImportAnalyticalListPageV2 = {\n    [SchemaType.AnalyticalListPage]: ImportALPV2Parameters;\n};\n\n/**\n * Types for v4 import\n */\nexport type ImportListReportV4Parameters = {\n    manifest: Manifest;\n    jsonSchema: Definition;\n    logger?: ExtensionLogger;\n};\nexport type ImportListReportV4 = {\n    [SchemaType.ListReport]: ImportListReportV4Parameters;\n};\n\nexport type ImportObjectPageV4Parameters = {\n    manifest: Manifest;\n    jsonSchema: Definition;\n    routingId: string;\n    logger?: ExtensionLogger;\n    fragments?: FileData[];\n};\nexport type ImportObjectPageV4 = {\n    [SchemaType.ObjectPage]: ImportObjectPageV4Parameters;\n};\n\nexport type ImportAnalyticalListPageV4Parameters = ImportListReportV4Parameters;\nexport type ImportAnalyticalListPageV4 = {\n    [SchemaType.AnalyticalListPage]: ImportAnalyticalListPageV4Parameters;\n};\n\nexport type ImportFPMCustomPageV4Parameters = {\n    manifest: Manifest;\n    jsonSchema: Definition;\n    routingId: string;\n    fragments: FileData[];\n    views: FileData[];\n    logger?: ExtensionLogger;\n};\nexport type ImportFPMCustomPageV4 = {\n    [SchemaType.FPMCustomPage]: ImportFPMCustomPageV4Parameters;\n};\n\nexport type ImportParametersV4Type =\n    | ImportListReportV4\n    | ImportObjectPageV4\n    | ImportAnalyticalListPageV4\n    | ImportFPMCustomPageV4;\n\nexport interface ImportParametersV4 {\n    [FioriElementsVersion.v4]: ImportParametersV4Type;\n}\n\nexport type ImportParametersV2Type =\n    | ImportListReportV2\n    | ImportObjectPageV2\n    | ImportOverviewPageV2\n    | ImportAnalyticalListPageV2;\nexport interface ImportParametersV2 {\n    [FioriElementsVersion.v2]: ImportParametersV2Type;\n}\n\nexport type ImportResultsV2 =\n    | v2.ListReportConfigV2\n    | v2.ObjectPageConfigV2\n    | v2.OverviewPageConfigV2\n    | v2.AnalyticalListPageConfigV2;\nexport type ImportResultsV4 = v4.ListReportConfigV4 | v4.ObjectPageConfigV4;\n\nexport type ImportConfigParameters = SyncBaseParameters & (ImportParametersV2 | ImportParametersV4);\n\nexport interface Schemas {\n    [type: string]: object;\n}\n\nexport interface ExtensionFiles {\n    views: FileData[];\n    fragments: FileData[];\n}\n\nexport type ImportAllConfigsParameters = {\n    manifest: Manifest;\n    appSchemas: Schemas;\n    templateType: TemplateType;\n    serviceAVT: ConvertedMetadata;\n    logger?: ExtensionLogger;\n    flexChanges?: string[];\n    fragments?: FileData[];\n    views?: FileData[];\n};\n\nexport type ImportResults = ImportResultsV2 | ImportResultsV4;\n\n/**\n * Types for project import\n */\nexport interface ImportProjectParameters extends SyncBaseParameters {\n    manifest: Manifest;\n    annotations: FileData[];\n    flex?: string[];\n    fragments?: FileData[];\n    views?: FileData[];\n    logger?: ExtensionLogger;\n}\n\nexport enum TemplateType {\n    ListReportObjectPageV2 = 'ListReportObjectPageV2',\n    ListReportObjectPageV4 = 'ListReportObjectPageV4',\n    OverviewPageV2 = 'OverviewPageV2',\n    AnalyticalListPageV2 = 'AnalyticalListPageV2',\n    AnalyticalListPageV4 = 'AnalyticalListPageV4',\n    FreestylePageV4 = 'FreestylePageV4'\n}\n\nexport interface GenerateAppSchemaParameters extends SyncBaseParameters {\n    templateType: TemplateType;\n    manifest: Manifest;\n    serviceAVT: ConvertedMetadata;\n    fioriElementsVersion: FioriElementsVersion;\n    entitySet?: EntitySet;\n    fragments?: FileData[];\n    views?: FileData[];\n    logger?: ExtensionLogger;\n    entityType?: EntityType;\n}\n\nexport enum CustomExtensionType {\n    CustomPage = 'CustomPage',\n    CustomColumn = 'CustomColumn',\n    CustomSection = 'CustomSection',\n    ObjectPage = 'ObjectPage',\n    CustomAction = 'CustomAction',\n    CustomView = 'CustomView',\n    ControllerExtension = 'ControllerExtension',\n    CustomSubSection = 'CustomSubSection',\n    CustomFilterField = 'CustomFilterField',\n    CustomHeaderSection = 'CustomHeaderSection'\n}\n\nexport interface GenerateCustomExtensionParams {\n    customExtension: CustomExtensionType;\n    basePath: string;\n    data: CustomExtensionData;\n    fsEditor?: Editor;\n}\n\nexport type CustomExtensionData =\n    | FPMCustomPage\n    | FPMCustomTableColumn\n    | FPMCustomSubSection\n    | FPMCustomHeaderSection\n    | FPMCustomSection\n    | FPMObjectPage\n    | FPMCustomAction\n    | FPMCustomView\n    | FPMControllerExtension\n    | FPMCustomFilter;\n\n/**\n * API Version\n */\nexport interface ApiVersion {\n    version?: string;\n    fpmWriter?: string;\n}\n\n/**\n * API Feature toggles\n */\nexport enum Features {\n    BuildingBlocks = 'BuildingBlocks'\n}\n// Value from enum or any string to allow freedom from outside\nexport type FeatureToggle = Features | string;\n\nexport interface SyncBaseParameters {\n    featureToggles?: FeatureToggle[];\n}\n\n/**\n * API interface\n */\nexport interface Specification {\n    getGenericSchema: (version: FioriElementsVersion, schemaType: SchemaType) => Promise<JSON>;\n    generateSchema: (params: GenerateSchemaParameters) => object;\n    exportConfig: (params: ExportConfigParameters) => ExportResults;\n    importConfig: (params: ImportConfigParameters) => ImportResults;\n    importProject: (params: ImportProjectParameters) => Promise<File[]>;\n    getApiVersion: () => ApiVersion;\n    importProjectSchema: (params: ImportProjectParameters) => Promise<File[]>;\n    generateCustomExtension: (params: GenerateCustomExtensionParams) => Editor;\n}\n", "export * from './controls';\nexport * from './webapp';\nexport * from './page';\nexport * from './pages';\nexport * from './overviewPage';\nexport * from './application';\nexport * from './ApplicationV2';\n", "import type {\n    ColorPaletteType,\n    ObjectStreamCardsSettingsDef,\n    SapOvpPlotAreaDef,\n    SapOvpTabSetting,\n    SapOvpTimeAxisDef\n} from '../../common';\n\nexport interface DefaultSpanObject {\n    /**\n     * Represents the number of the number of grid columns\n     */\n    cols: number;\n    /**\n     * Represents the number of the number of grid rows\n     */\n    rows: number;\n    /**\n     * Represents if user wants to show only header part of card in resizable layout\n     */\n    showOnlyHeader?: boolean;\n    /**\n     * If user wants to show more text in title then he/she can configure no of lines to be shown in title(Maximum allowed 3 lines)\n     */\n    minimumTitleRow?: number;\n    /**\n     * If user wants to show more text in title then he/she can configure no of lines to be shown in sub-title(Maximum allowed 2 lines)\n     */\n    minimumSubTitleRow?: number;\n}\n\nexport interface CommonCardSettings {\n    /**\n     * Represents the dominant entity set that will be displayed in the given card.\n     */\n    entitySet?: string;\n    /**\n     * The language-dependent title of the card, used in the card header.\n     * @i18nClassification TIT: Title of the card, used in the card header\n     */\n    title: string;\n    /**\n     * The language-dependent subtitle of the card, used in the card header.\n     * @i18nClassification TIT: Subtitle of the card, used in the card header\n     */\n    subTitle?: string;\n    /**\n     * Represents the annotation path.\n     */\n    annotationPath?: string;\n    /**\n     * Represents the identification annotation path.\n     */\n    identificationAnnotationPath?: string;\n    /**\n     * Represents the data point annotation path.\n     */\n    dataPointAnnotationPath?: string;\n    /**\n     * Represents the selection annotation path.\n     */\n    selectionAnnotationPath?: string;\n    /**\n     * Represents the presentation annotation path.\n     */\n    presentationAnnotationPath?: string;\n    /**\n     * Represents the selection presentation annotation path.\n     */\n    selectionPresentationAnnotationPath?: string;\n    /**\n     * Represents the KPI annotation path.\n     */\n    kpiAnnotationPath?: string;\n    /**\n     * The category of the card, as used in the card header.\n     */\n    category?: string;\n    /**\n     * To load cards with specific requirements, define a default size as part of the card definition in the descriptor file.\n     */\n    defaultSpan?: DefaultSpanObject | 'auto';\n    /**\n     * Define an authorization check at card level.\n     */\n    requireAppAuthorization?: string;\n    /**\n     * Represents the card with view switch control.\n     */\n    tabs?: SapOvpTabSetting[];\n    /**\n     * add $Select parameter in data fetch URL\n     */\n    addODataSelect?: boolean;\n    /**\n     * Defines the property by which the list shall be sorted.\n     */\n    sortBy?: string;\n    /**\n     * Sort order (ascending or descending)\n     */\n    sortOrder?: 'ascending' | 'descending';\n    /**\n     * Represents the dynamic subtitle annotation path.\n     */\n    dynamicSubtitleAnnotationPath?: string;\n    /**\n     * Show or hide refresh option under card more actions, default value is true.\n     */\n    showRefresh?: boolean;\n    /**\n     * Represents the flag to indicate the use of object number/smart field.\n     */\n    enableLocaleCurrencyFormatting?: boolean;\n    /**\n     * Represents a switch to Show or Hide Filters in Cards Headers in OVP application.\n     */\n    showFilterInHeader?: boolean;\n    /**\n     * Represents a switch to Show or Hide Sorting in Cards Headers in OVP application.\n     */\n    showSortingInHeader?: boolean;\n    /**\n     * Custom parameters for intent-based navigation to the target application.\n     * Enter the name of the custom parameter function defined in your custom controller file.\n     */\n    customParams?: string;\n}\n\nexport enum ChartCardType {\n    cardBubble = 'cardBubble',\n    cardchartsline = 'cardchartsline',\n    cardchartsdonut = 'cardchartsdonut'\n}\n\nexport enum CardTemplateType {\n    analytical = 'sap.ovp.cards.charts.analytical',\n    analyticalv4 = 'sap.ovp.cards.v4.charts.analytical',\n    list = 'sap.ovp.cards.list',\n    listv4 = 'sap.ovp.cards.v4.list',\n    linklist = 'sap.ovp.cards.linklist',\n    linklistv4 = 'sap.ovp.cards.v4.linklist',\n    table = 'sap.ovp.cards.table',\n    tablev4 = 'sap.ovp.cards.v4.table',\n    stack = 'sap.ovp.cards.stack'\n}\n\nexport const cardTemplateTypeMap = {\n    'sap.ovp.cards.charts.analytical': 'AnalyticalCard',\n    'sap.ovp.cards.v4.charts.analytical': 'AnalyticalCard',\n    'sap.ovp.cards.list': 'ListCard',\n    'sap.ovp.cards.v4.list': 'ListCard',\n    'sap.ovp.cards.linklist': 'LinklistCard',\n    'sap.ovp.cards.v4.linklist': 'LinklistCard',\n    'sap.ovp.cards.table': 'TableCard',\n    'sap.ovp.cards.v4.table': 'TableCard',\n    'sap.ovp.cards.stack': 'StackCard'\n};\n\n// Map for anyOf definitions\nexport const cardTemplateSettingsMap = {\n    'sap.ovp.cards.charts.analytical': 'AnalyticalCardSettings',\n    'sap.ovp.cards.v4.charts.analytical': 'AnalyticalCardSettingsv4'\n};\n\nexport enum CardSettingsType {\n    analyticalCardSettings = 'analyticalCardSettings',\n    analyticalCardSettingsv4 = 'analyticalCardSettingsv4',\n    listCardSettings = 'listCardSettings',\n    listCardSettingsv4 = 'listCardSettingsv4',\n    stackCardSettings = 'stackCardSettings',\n    linkListCardSettings = 'linkListCardSettings',\n    tableCardSettings = 'tableCardSettings',\n    tableCardSettingsv4 = 'tableCardSettingsv4'\n}\n\nexport enum MeasureAggregateValues {\n    average = 'average',\n    max = 'max',\n    min = 'min',\n    sum = 'sum',\n    count = '$count'\n}\n\nexport interface MeasureAggregateSettings {\n    Axis1?: MeasureAggregateValues;\n    Axis2?: MeasureAggregateValues;\n    Axis3?: MeasureAggregateValues;\n}\n\n/**\n * Custom Card\n * @isViewNode true\n */\nexport interface CustomCard {\n    /**\n     * Represents the model for the card\n     */\n    model: string;\n    /**\n     * Represents the card component path to use for this card.\n     * @TJS-pattern ^(?!(sap.ovp.cards.charts.analytical|sap.ovp.cards.v4.charts.analytical|sap.ovp.cards.linklist|sap.ovp.cards.v4.linklist|sap.ovp.cards.list|sap.ovp.cards.v4.list|sap.ovp.cards.stack|sap.ovp.cards.table|sap.ovp.cards.v4.table)$).*$\n     */\n    template: string; // due the extension concept for cards, this can be any string\n    /**\n     * Represents the properties that are passed to the custom card.\n     */\n    settings?: CustomCardSettings;\n}\n/**\n * List Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface ListCard {\n    /**\n     * Represents the model for the List Card\n     */\n    model: string;\n    /**\n     * Represents the card component path to use for this List Card.\n     */\n    template: CardTemplateType.list | CardTemplateType.listv4;\n    /**\n     * Represents the properties that are passed to the list card.\n     */\n    settings?: ListCardSettings;\n}\n\n/**\n * Stack Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface StackCard {\n    /**\n     * Represents the model for the StackCard.\n     */\n    model: string;\n    /**\n     * Represents the Stack Card component path to use for this card.\n     */\n    template: CardTemplateType.stack;\n    /**\n     * Represents the properties that are passed to the stack card.\n     */\n    settings?: StackCardSettings;\n}\n\n/**\n * Link List Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface LinklistCard {\n    /**\n     * Represents the model for the Link list Card.\n     */\n    model?: string;\n    /**\n     * Represents the Link list Card component path to use for this card.\n     */\n    template: CardTemplateType.linklist | CardTemplateType.linklistv4;\n    /**\n     * Represents the properties that are passed to the link list card.\n     */\n    settings?: LinkListCardSettings;\n}\n\n/**\n * Table Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface TableCard {\n    /**\n     * Represents the model for the TableCard.\n     */\n    model: string;\n    /**\n     * Represents the Table Card component path to use for this card.\n     */\n    template: CardTemplateType.table | CardTemplateType.tablev4;\n    /**\n     * Represents the properties that are passed to the table card.\n     */\n    settings?: TableCardSettings;\n}\n\n/**\n * Analytical Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface AnalyticalCard {\n    /**\n     * Represents the model for the Analytical Card\n     */\n    model: string;\n    /**\n     * Represents the Analytical Card component path to use for this card.\n     */\n    template: CardTemplateType.analytical | CardTemplateType.analyticalv4;\n    /**\n     * Represents the properties that are passed to the analytical card.\n     */\n    settings?: AnalyticalCardSettings | AnalyticalCardSettingsv4;\n}\n\nexport type CardNavigationType = 'dataPointNav' | 'chartNav' | 'headerNav' | 'noHeaderNav';\n\n/**\n * @displayName settings\n */\nexport type CustomCardSettings = CommonCardSettings;\n\n/**\n * @displayName settings\n */\nexport interface AnalyticalCardSettings extends CommonCardSettings {\n    /**\n     * Represents the chart annotation path.\n     */\n    chartAnnotationPath?: string;\n    /**\n     * Represents the flag to indicate priority of number formatting over sap text.\n     */\n    ignoreSapText?: boolean;\n    /**\n     * Removes the option to add cards to the Insights section.\n     */\n    enableAddToInsights?: boolean;\n    /**\n     * Represents the configuration to alter the navigation mode in OVP Analytical Cards.\n     */\n    navigation?: CardNavigationType;\n    /**\n     * Represents things like people, number of items.\n     */\n    valueSelectionInfo?: string;\n    /**\n     * This property is responsible for setting specific chart settings.\n     */\n    chartProperties?: {\n        plotArea?: SapOvpPlotAreaDef;\n        timeAxis?: SapOvpTimeAxisDef;\n    };\n    /**\n     * Color palette for semantic coloring.\n     * @controlProperty colorPaletteType\n     */\n    colorPalette?: ColorPaletteType;\n    /**\n     * Enables the configuration of an analytical card with column stack chart, to map the dimension values to specific colors\n     */\n    bEnableStableColors?: boolean;\n}\n\n/**\n * @displayName settings\n */\nexport interface AnalyticalCardSettingsv4 extends AnalyticalCardSettings {\n    /**\n     *\n     */\n    measureAggregate?: MeasureAggregateSettings;\n}\n\nexport enum ListFlavorType {\n    standard = 'standard',\n    bar = 'bar',\n    carousel = 'carousel'\n}\n\nexport enum ListTypeType {\n    extended = 'extended',\n    condensed = 'condensed'\n}\n\nexport enum SortOrderType {\n    ascending = 'ascending',\n    descending = 'descending'\n}\n\n/**\n * @displayName settings\n */\nexport interface ListCardSettings extends CommonCardSettings {\n    /**\n     * Represents the flavor of the list to use in this card. The flavor can be bar chart, carousel or standard.\n     */\n    listFlavor?: ListFlavorType;\n    /**\n     * Represents the type of list to use for this card. The list can be extended to display more information or condensed to take up less space on the card.\n     */\n    listType?: ListTypeType;\n    /**\n     * Flag for show line item detail in list and table card.\n     */\n    showLineItemDetail?: boolean;\n    /**\n     * Removes the option to add cards to the Insights section.\n     */\n    enableAddToInsights?: boolean;\n    /**\n     * Flag for enabling images in a condensed list card.\n     */\n    imageSupported?: boolean;\n    /**\n     * Represents things like people, number of items.\n     */\n    valueSelectionInfo?: string;\n}\n\n/**\n * @displayName settings\n */\nexport interface StackCardSettings extends CommonCardSettings {\n    /**\n     * Represents the user defined string in placeholder card.\n     */\n    itemText?: string;\n    /**\n     * The navigation property used to display information from a secondary entity set.\n     */\n    objectStreamCardsNavigationProperty?: string;\n    /**\n     * Configures additional settings for the cards displayed in the object stream.\n     */\n    objectStreamCardsSettings?: ObjectStreamCardsSettingsDef;\n}\n\n/**\n * @displayName settings\n */\nexport interface TableCardSettings extends CommonCardSettings {\n    /**\n     * Flag for show line item detail in list and table card.\n     */\n    showLineItemDetail?: boolean;\n    /**\n     * Removes the option to add cards to the Insights section.\n     */\n    enableAddToInsights?: boolean;\n    /**\n     * Represents things like people, number of items.\n     */\n    valueSelectionInfo?: string;\n}\n\nexport enum LinkListFlavorType {\n    standard = 'standard',\n    carousel = 'carousel'\n}\n\n/**\n * @displayName settings\n */\nexport interface LinkListCardSettings extends CommonCardSettings {\n    /**\n     * listFlavor represents the flavor of the list to use in this card. The flavor can be bar chart, carousel or standard.\n     */\n    listFlavor?: LinkListFlavorType;\n    /**\n     * headerAnnotationPath represents the path to a HeaderInfo annotation.\n     */\n    headerAnnotationPath?: string;\n    /**\n     * staticContent represents the static content of a static link list card.\n     */\n    staticContent?: StaticContent[];\n}\n\nexport interface StaticContent {\n    /**\n     * The language-dependent title of the StaticContent.\n     * @i18nClassification TIT: Title of the StaticContent\n     */\n    title: string;\n    /**\n     * The language-dependent subtitle of the StaticContent.\n     * @i18nClassification TIT: Subtitle of the StaticContent\n     */\n    subTitle?: string;\n    /**\n     * The uri for the image of the StaticContent.\n     */\n    imageUri?: string;\n    /**\n     * The uri for the target of the StaticContent.\n     */\n    targetUri?: string;\n    /**\n     * The alternative text for the image of the StaticContent.\n     * @i18nClassification ALT: The alternative text for the image of the StaticContent\n     */\n    imageAltText?: string;\n    /**\n     * Used to provide intent based navigation.\n     */\n    semanticObject?: string;\n    /**\n     * Used to provide intent based navigation.\n     */\n    action?: string;\n    /**\n     * Open static content in a new window.\n     */\n    openInNewWindow?: boolean;\n}\n", "export const enum DateRangeType {\n    DATERANGE = 'DATERANGE',\n    DATE = 'DATE',\n    FROM = 'FROM',\n    TO = 'TO',\n    DAYS = 'DAYS',\n    LASTDAYS = 'LASTDAYS',\n    LASTWEEKS = 'LASTWEEKS',\n    WEEK = 'WEEK',\n    LASTMONTHS = 'LASTMONTHS',\n    MONTH = 'MONTH',\n    QUARTER = 'QUARTER',\n    LASTQUARTERS = 'LASTQUARTERS',\n    LASTYEARS = 'LASTYEARS',\n    LASTYEAR = 'LASTYEAR',\n    YEAR = 'YEAR',\n    NEXTDAYS = 'NEXTDAYS',\n    NEXTWEEKS = 'NEXTWEEKS',\n    NEXTMONTHS = 'NEXTMONTHS',\n    NEXTQUARTERS = 'NEXTQUARTERS',\n    NEXTYEARS = 'NEXTYEARS',\n    NEXT = 'NEXT',\n    SPECIFICMONTH = 'SPECIFICMONTH',\n    YESTERDAY = 'YESTERDAY',\n    YEARTODATE = 'YEARTODATE',\n    TODAY = 'TODAY',\n    TOMORROW = 'TOMORROW',\n    THISWEEK = 'THISWEEK',\n    LASTWEEK = 'LASTWEEK',\n    LAST2WEEKS = 'LAST2WEEKS',\n    LAST3WEEKS = 'LAST3WEEKS',\n    LAST4WEEKS = 'LAST4WEEKS',\n    LAST5WEEKS = 'LAST5WEEKS',\n    NEXTWEEK = 'NEXTWEEK',\n    NEXT2WEEKS = 'NEXT2WEEKS',\n    NEXT3WEEKS = 'NEXT3WEEKS',\n    NEXT4WEEKS = 'NEXT4WEEKS',\n    NEXT5WEEKS = 'NEXT5WEEKS',\n    THISMONTH = 'THISMONTH',\n    LASTMONTH = 'LASTMONTH',\n    NEXTMONTH = 'NEXTMONTH',\n    THISQUARTER = 'THISQUARTER',\n    LASTQUARTER = 'LASTQUARTER',\n    NEXTQUARTER = 'NEXTQUARTER',\n    QUARTER1 = 'QUARTER1',\n    QUARTER2 = 'QUARTER2',\n    QUARTER3 = 'QUARTER3',\n    QUARTER4 = 'QUARTER4',\n    TODAYFROMTO = 'TODAYFROMTO'\n}\n\nexport const enum DefaultDateRangeValueType {\n    YESTERDAY = 'YESTERDAY',\n    TODAY = 'TODAY',\n    THISWEEK = 'THISWEEK',\n    LASTWEEK = 'LASTWEEK',\n    THISMONTH = 'THISMONTH',\n    TOMORROW = 'TOMORROW',\n    LASTMONTH = 'LASTMONTH',\n    THISQUARTER = 'THISQUARTER',\n    LASTQUARTER = 'LASTQUARTER',\n    THISYEAR = 'THISYEAR',\n    LASTYEAR = 'LASTYEAR',\n    LAST2WEEKS = 'LAST2WEEKS',\n    LAST3WEEKS = 'LAST3WEEKS',\n    LAST4WEEKS = 'LAST4WEEKS',\n    LAST5WEEKS = 'LAST5WEEKS',\n    YEARTODATE = 'YEARTODATE',\n    QUARTER1 = 'QUARTER1',\n    QUARTER2 = 'QUARTER2',\n    QUARTER3 = 'QUARTER3',\n    QUARTER4 = 'QUARTER4',\n    DATETOYEAR = 'DATETOYEAR'\n}\n\n/**\n * Filter Field\n * @isViewNode true\n */\nexport type SelectionField = {} | SelectionFieldDateSettings;\n\n/**\n * Filter Field for Date Settings\n * @isViewNode true\n */\nexport interface SelectionFieldDateSettings {\n    /**\n     * The selectedValues property is a set of standard date range values that you want to include or exclude.\n     */\n    selectedValues?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n    /**\n     * This property references a JS class, which you use to modify the date range value list. You can either remove standard data range values or add custom values.\n     * The customDateRangeImplementation setting takes priority followed by filter and selectedValues when excluding date range types.\n     */\n    customDateRangeImplementation?: string;\n    /**\n     * You can use the filter settings to include and exclude specific date range values.\n     */\n    filter?: FilterType[];\n    /**\n     * You can set a default value for semantic date range.\n     */\n    defaultValue?: DefaultDateRange;\n}\n\n/**\n * Filter Fields\n * @isViewNode true\n */\nexport interface SelectionFields {\n    [key: string]: SelectionField;\n}\n\nexport const enum FilterPathType {\n    key = 'key',\n    catgory = 'category'\n}\n\nexport type FilterType = {\n    /**\n     * Choose 'key' to define filter values for single values of the date range, or 'category' to filter by a whole subset.\n     */\n    path: FilterPathType;\n    /**\n     * The 'contains' string specifies a filter describing a set of values of the date range type.\n     */\n    contains?: string;\n    /**\n     * Defines a single value of the standard date range type.\n     */\n    equals?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n};\n\nexport interface DefaultDateRange {\n    /**\n     * The operation property is the value that will be set for semantic date range.\n     */\n    operation: DefaultDateRangeValueType;\n}\n\nexport interface DateRange {\n    /**\n     * If set to true all date fields with filter restriction interval will be treated as DateTimeRange filters.\n     */\n    useDateRange?: boolean;\n    /**\n     * The selectedValues property is a set of standard date range values that you want to include or exclude.\n     */\n    selectedValues?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n}\n\nexport interface CommonFilterBar {\n    /**\n     * Controls whether smart variant management is active. Default is true.\n     */\n    smartVariantManagement?: boolean;\n    /**\n     * If liveMode is set, the search will be automatically triggered when a filter value is set.\n     */\n\n    liveMode?: boolean;\n    /**\n     * If you set the flag to true, then standard variant management is not available in the app. The app name is displayed instead.\n     * If you set the flag to false or if the flag is not at all contained in the manifest of the app, the standard variant management is available and can be enabled or disabled.\n     */\n    variantManagementHidden?: boolean;\n    /**\n     * You can choose an app-specific title by setting the corresponding value for the subTitleIfVariantMgmtHidden property.\n     * @i18nClassification TIT: Subtitle if variant management is hidden\n     */\n    subTitleIfVariantMgmtHidden?: string;\n    /**\n     * Use to set date settings for fields in smart filter bar\n     */\n    dateSettings?: DateRange;\n    /**\n     * Handles visibility of the Clear button on the FilterBar.\n     */\n    showClearOnFB?: boolean;\n    /**\n     * Handles visibility of the Filter button on the FilterBar.\n     */\n    showFilterConfiguration?: boolean;\n    /**\n     * Handles visibility of the Restore button on the FilterBar.\n     */\n    showRestoreOnFB?: boolean;\n    /**\n     * @isViewNode true\n     * Selection Fields\n     */\n    selectionFields?: SelectionFields;\n}\n\n/**\n * Filter Bar\n * @isViewNode true\n */\nexport interface ListReportFilterBar extends CommonFilterBar {\n    /**\n     * Lets you to add default values for FilterBar using SelectionVariant annotation\n     */\n    annotationPath?: string;\n}\n\n/**\n * Filter Bar\n * @isViewNode true\n */\nexport interface AnalyticalListPageFilterBar extends CommonFilterBar {\n    /**\n     * Go button is displayed for compact filters when this is set to true\n     */\n    showGoButtonOnFilterBar?: boolean;\n    /**\n     * Lets you to add default values for FilterBar using SelectionVariant annotation\n     */\n    filterDefaultsFromSelectionVariant?: boolean;\n}\n", "import type { SAPUI5_FRAGMENT_CLASS } from '../../common/webapp/manifest/sapUi5';\nimport type { ToolBar } from './ToolBar';\nimport type { Action } from './Action';\nimport type { PopinLayout } from 'sap/m/library';\nimport type { smarttable } from 'sap/ui/comp/library';\nimport type { TextAlign } from 'sap/ui/core/library';\n\n/**\n * Column\n * @isViewNode true\n */\nexport interface TableColumn {\n    /**\n     * The width property defines the width of the column.\n     */\n    width?: string;\n    /**\n     * The hAlign property defines the horizontal alignment of the column content.\n     */\n    hAlign?: TextAlign;\n}\n\n/**\n * Column Action\n * @isViewNode true\n */\nexport interface TableColumnAction extends Action, TableColumn {}\n\n/**\n * Custom Column\n * @isViewNode true\n */\nexport interface TableCustomColumn {\n    /**\n     * In case the fragment needs to be re-used for multiple tabs, the id property must be set to make the ids unique.\n     * @artifactType XMLProperty\n     */\n    id?: string;\n    /**\n     * The label of the custom column, preferably as an i18n key.\n     * @i18nClassification COL: Custom column header text\n     * @artifactType XMLProperty\n     */\n    text?: string;\n    /**\n     * The column key\n     * @artifactType XMLProperty\n     */\n    columnKey: string;\n    /**\n     * The index of the column in the overall collection; if undefined, the custom column will be added at the end of the table.\n     * @minimum 0\n     * @hidden true\n     * @artifactType XMLProperty\n     */\n    columnIndex?: number;\n    /**\n     * If the content of your custom column refers to a property (such as{Price}), you need to include a corresponding 'leadingProperty' entry in the column definition.\n     * @artifactType XMLProperty\n     */\n    leadingProperty?: string;\n    /**\n     * The UI5 control used for your extension\n     * @artifactType Manifest\n     */\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    /**\n     * The relative path to your fragment with path segments separated by '.'. The first element is the app ID.\n     * @artifactType Manifest\n     */\n    fragmentName: string;\n    /**\n     * In case of a responsive table, you additionally need to specify a fragment for the table cells.\n     * @artifactType Manifest\n     */\n    cellsFragmentName?: string;\n    /**\n     * If you use QuickVariantSelectionX, you need to define the extensions per tab. 'tabKey' is the key provided when defining the QuickVariantSelectionX.\n     * @hidden true\n     * @artifactType Manifest\n     */\n    tabKey?: string;\n    /**\n     * Type of custom column view extension.\n     * @artifactType Manifest\n     */\n    extensionType: TableColumnExtensionTypeV2;\n}\n\nexport enum customColumnViewTypes {\n    XML = 'XML'\n}\n\nexport enum TableTypeV2 {\n    ResponsiveTable = 'ResponsiveTable',\n    GridTable = 'GridTable',\n    AnalyticalTable = 'AnalyticalTable',\n    TreeTable = 'TreeTable'\n}\n\nexport enum TableColumnExtensionTypeV2 {\n    ResponsiveTableColumnsExtension = 'ResponsiveTableColumnsExtension',\n    AnalyticalTableColumnsExtension = 'AnalyticalTableColumnsExtension',\n    TreeTableColumnsExtension = 'TreeTableColumnsExtension',\n    GridTableColumnsExtension = 'GridTableColumnsExtension'\n}\n\nexport type AnyTableType =\n    | TableTypeV2.AnalyticalTable\n    | TableTypeV2.ResponsiveTable\n    | TableTypeV2.GridTable\n    | TableTypeV2.TreeTable;\nexport type AnyTable = AnalyticalTable | ResponsiveTable | GridTable | TreeTable;\n\n/**\n * Custom Columns\n * @isViewNode true\n */\nexport type TableCustomColumns = Array<TableCustomColumn>;\n\nexport interface GenericColumns {\n    [key: string]: TableColumn | TableCustomColumns | TableColumnAction;\n}\n\nexport interface QuickVariant {\n    /**\n     * A key entry that is used for initializing the corresponding SegmentedButton item. This entry is mandatory.\n     */\n    key: string;\n    /**\n     * Use annotationPath to define a specific variant that points to a SelectionVariant or SelectionPresentationVariant annotation.\n     */\n    annotationPath: string;\n}\n\nexport interface QuickVariantX extends QuickVariant {\n    /**\n     * Represents the entity set that will be displayed in this variant\n     */\n    entitySet: string;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n    /**\n     * The 'Select All' button is disabled by default. To enable it, set selectAll to true.\n     */\n    selectAll?: boolean;\n    /**\n     * If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.\n     */\n    selectionLimit?: number;\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: AnyTableType;\n    /**\n     * To enable navigation for charts, you have to set the property to \"true\" and maintain an internal navigation target in the manifest.\n     */\n    showItemNavigationOnChart?: boolean;\n    /**\n     *  Used to enable inline deletion in a responsive table of list report and object page\n     */\n    inlineDelete?: boolean;\n}\n\nexport interface QuickVariantSelection {\n    /**\n     * To show the number of records available, set showCounts to true.\n     */\n    showCounts?: boolean;\n    /**\n     * The variants section contains a set of entries that point to SelectionVariants or SelectionPresentationVariants defined in the annotations.\n     */\n    variants: {\n        [key: string]: QuickVariant;\n    };\n}\n\nexport interface QuickVariantSelectionX extends QuickVariantSelection {\n    /**\n     * When set to true, this enables automatic binding of the table with either the tableBindingPath (if it exists) or the entitySet property.\n     */\n    enableAutoBinding?: boolean;\n    /**\n     * The variants section contains a set of entries that point to SelectionVariants or SelectionPresentationVariants defined in the annotations.\n     */\n    variants: {\n        [key: string]: QuickVariantX;\n    };\n}\n\nexport interface CreateWithFilters {\n    /**\n     * For the new create action to use the filter settings as input, set strategy to \"extension\" and implement the extension function as mentioned in help.sap.com for SAP S/4 HANA, section \u201CPrefilling Fields When Creating a New Entity Using an Extension Point\u201C.\n     */\n    strategy: Strategy;\n}\n\nexport enum Strategy {\n    extension = 'extension'\n}\n\nexport interface MultiEdit {\n    /**\n     * When multiEdit is enabled, by default the dialog displays editable fields corresponding to columns that are currently displayed in the table.\n     */\n    enabled?: boolean;\n    /**\n     * Use annotationPath to define a mass edit dialog that points to a FieldGroup annotation with a qualifier.\n     */\n    annotationPath?: string;\n    /**\n     * You can choose to hide certain fields from being displayed in key user adaptation and restrict them from being added to the Mass Edit dialog.\n     */\n    ignoredFields?: IgnoredFieldsType[];\n}\n\nexport const enum IgnoredFieldsType {\n    GENERICPROPERTY = 'GENERICPROPERTY'\n}\n\nexport enum DefaultContentView {\n    charttable = 'charttable',\n    chart = 'chart',\n    table = 'table'\n}\n\nexport enum DefaultFilterMode {\n    visual = 'visual',\n    compact = 'compact'\n}\n\nexport enum LoadDataOnAppLaunchSettings {\n    always = 'always',\n    never = 'never',\n    ifAnyFilterExist = 'ifAnyFilterExist'\n}\n\nexport interface DataLoadSettings {\n    /**\n     * Change the default behavior for autoloading of data.\n     * For multi-view scenarios, you can also change the setting enableAutobinding to False under quickVariantSelectionX instead of using the loadDataOnAppLaunch setting.\n     */\n    loadDataOnAppLaunch: LoadDataOnAppLaunchSettings;\n}\n\nexport interface Fields4Dialog {\n    fields: string[];\n}\n\nexport interface CommonTableSettings<COLS = GenericColumns> {\n    /**\n     * You can enable the creation of objects that have a maximum of 8 data fields through a dialog in the list report page.\n     */\n    createWithParameterDialog?: Fields4Dialog;\n    /**\n     * The 'Select All' button is disabled by default. To enable it, set selectAll to true.\n     */\n    selectAll?: boolean;\n    /**\n     * If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.\n     */\n    selectionLimit?: number;\n    /**\n     * The showTablePersonalisation attribute can be set to false to hide the table personalization button.\n     */\n    showTablePersonalisation?: boolean;\n    /**\n     * useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.\n     */\n    useExportToExcel?: boolean;\n    /**\n     * Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.\n     */\n    exportType?: smarttable.ExportType;\n    /**\n     * Set to false if the table does not occupy the entire space available in the container.\n     */\n    fitContainer?: boolean;\n    /**\n     * If copy is set to true, the Copy to Clipboard button is shown in the table toolbar.\n     * By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured for the corresponding table.\n     */\n    copy?: boolean;\n    /**\n     * With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have added to your annotations beforehand.\n     */\n    quickVariantSelection?: QuickVariantSelection;\n    /**\n     * Switch on the multiple view feature (Multiple table mode with charts) and link to the variants you have added to your annotations.\n     */\n    quickVariantSelectionX?: QuickVariantSelectionX;\n    /**\n     * For analytical tables, grid tables and tree tables you can define a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * If you have enabled harmonized variant management, by default, you cannot set a filter in the table personalization settings.\n     * To enable filtering, set the enableTableFilterInPageVariant property to true.\n     */\n    enableTableFilterInPageVariant?: boolean;\n    /**\n     * Change the default behavior for autoloading of data.\n     */\n    dataLoadSettings?: DataLoadSettings;\n    /**\n     * Tool Bar\n     */\n    toolBar?: ToolBar;\n    /**\n     * Columns\n     * @isViewNode true\n     */\n    columns?: COLS;\n}\n\nexport interface ResponsiveTableCommonSettings extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable;\n    /**\n     * Set includeItemInSelection to true if you want items to be selectable when they are clicked rather than after the selection control has been set.\n     */\n    includeItemInSelection?: boolean;\n    /**\n     * popinLayout defines the layout in which the table pop-in rows are rendered.\n     */\n    popinLayout?: PopinLayout;\n    /**\n     * createWithFilters adds a new create action that uses the filter settings as input.\n     */\n    createWithFilters?: CreateWithFilters;\n    /**\n     * growingThreshold defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.\n     */\n    growingThreshold?: number;\n    /**\n     * Allows you to edit a single object or multiple objects using a dialog in the list report page.\n     */\n    multiEdit?: MultiEdit;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ResponsiveTableWithMultiSelect extends ResponsiveTableCommonSettings {\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ResponsiveTableWithInlineDelete extends ResponsiveTableCommonSettings {\n    /**\n     *  Used to enable inline deletion in a responsive table of list report and object page\n     */\n    inlineDelete?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ResponsiveTable\n    extends ResponsiveTableCommonSettings,\n        ResponsiveTableWithMultiSelect,\n        ResponsiveTableWithInlineDelete {}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface TreeTable extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.TreeTable;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface AnalyticalTable extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.AnalyticalTable;\n    /**\n     * Represents the SelectionPresentationVariant qualifier. ALP looks for SelectionPresentationVariant with this qualifier and if not found, it looks for PresentationVariant with this qualifier.\n     */\n    qualifier?: string;\n    /**\n     * Determines the visualization of content area\n     */\n    defaultContentView?: DefaultContentView;\n    /**\n     * Determines the filter mode that is used\n     */\n    defaultFilterMode?: DefaultFilterMode;\n    /**\n     * Lets you define title for the content area\n     * @i18nClassification TIT: Title for the content area\n     */\n    contentTitle?: string;\n    /**\n     * All filter fields will be set as in parameter\n     */\n    allFiltersAsInParameters?: boolean;\n    //TODO keyPerformanceIndicators\n    /**\n     * createWithFilters adds a new create action that uses the filter settings as input.\n     */\n    createWithFilters?: CreateWithFilters;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface TableALPCommonSettings extends CommonTableSettings {\n    /**\n     * Represents the SelectionPresentationVariant qualifier. ALP looks for SelectionPresentationVariant with this qualifier and if not found, it looks for PresentationVariant with this qualifier.\n     */\n    qualifier?: string;\n    /**\n     * Determines the visualization of content area\n     */\n    defaultContentView?: DefaultContentView;\n    /**\n     * Determines the filter mode that is used\n     */\n    defaultFilterMode?: DefaultFilterMode;\n    /**\n     * Lets you define title for the content area\n     * @i18nClassification TIT: Title for the content area\n     */\n    contentTitle?: string;\n    /**\n     * This setting allows developer to determine chart / table interaction. 'true' would mean chart act as filter for table, 'false' would mean that matching table rows are highlighted but table is not filtered.\n     */\n    autoHide?: boolean;\n    /**\n     * All filter fields will be set as in parameter\n     */\n    allFiltersAsInParameters?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ALPResponsiveTable extends TableALPCommonSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable;\n    /**\n     * growingThreshold defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.\n     */\n    growingThreshold?: number;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ALPGridTable extends TableALPCommonSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.GridTable;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ALPAnalyticalTable extends TableALPCommonSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.AnalyticalTable;\n}\n\nexport interface TableALP extends ALPResponsiveTable, ALPGridTable, ALPAnalyticalTable {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable & TableTypeV2.GridTable & TableTypeV2.AnalyticalTable;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface GridTable extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.GridTable;\n    /**\n     * createWithFilters adds a new create action that uses the filter settings as input.\n     */\n    createWithFilters?: CreateWithFilters;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n", "export enum ChartType {\n    bar = 'bar',\n    column = 'column',\n    line = 'line',\n    combination = 'combination',\n    pie = 'pie',\n    donut = 'donut',\n    scatter = 'scatter',\n    bubble = 'bubble',\n    heatmap = 'heatmap',\n    bullet = 'bullet',\n    verticalBullet = 'vertical_bullet',\n    stackedBar = 'stacked_bar',\n    stackedColumn = 'stacked_column',\n    stackedCombination = 'stacked_combination',\n    horizontalStackedCombination = 'horizontal_stacked_combination',\n    dualBar = 'dual_bar',\n    dualColumn = 'dual_column',\n    dualLine = 'dual_line',\n    dualStackedBar = 'dual_stacked_bar',\n    dualStackedColumn = 'dual_stacked_column',\n    dualCombination = 'dual_combination',\n    dualStackedCombination = 'dual_stacked_combination',\n    dualHorizontalCombination = 'dual_horizontal_combination',\n    dualHorizontalStackedCombination = 'dual_horizontal_stacked_combination',\n    hundredStackedBar = '100_stacked_bar',\n    hundredStackedColumn = '100_stacked_column',\n    hundredDualStackedBar = '100_dual_stacked_bar',\n    hundredDualStackedColumn = '100_dual_stacked_column',\n    waterfall = 'waterfall',\n    horizontalWaterfall = 'horizontal_waterfall'\n}\n\n/**\n * Chart\n * @isViewNode true\n */\nexport interface ChartSettings {\n    /**\n     * Controls the visibility of the legend button.\n     */\n    showLegendButton?: boolean;\n    /**\n     * Controls the visibility of the chart download button.\n     */\n    showDownloadButton?: boolean;\n    /**\n     * Controls the visibility of the chart type button.\n     */\n    showChartTypeSelectionButton?: boolean;\n    /**\n     * Comma-separated value fields do not showup in the list of available chart types.\n     */\n    ignoredChartTypes?: ChartType[];\n    /**\n     * Controls the visibility of the data label.\n     */\n    showDataLabel?: boolean;\n}\n", "import type {\n    ObjectPageResponsiveTableWithMultiSelect,\n    ObjectPageResponsiveTableWithInlineDelete,\n    ObjectPageAnalyticalTable,\n    ObjectPageGridTable,\n    ObjectPageTreeTable,\n    ObjectPageChart,\n    ObjectPageForm\n} from './index';\nimport type { ViewTypes, SAPUI5_FRAGMENT_CLASS, SAPUI5_VIEW_CLASS } from '../../common/webapp/manifest/sapUi5';\n\n/**\n * Section\n * @isViewNode true\n */\nexport interface ObjectPageSectionV2 {\n    /**\n     * Allows you to define if the section should be visible on the screen.\n     */\n    visible?: boolean;\n}\n\n/**\n * Form\n * @isViewNode true\n */\nexport interface ObjectPageSectionFormV2 extends ObjectPageSectionV2 {\n    form?: ObjectPageForm;\n}\n\nexport type AnyObjectPageTableType =\n    | ObjectPageResponsiveTableWithMultiSelect\n    | ObjectPageResponsiveTableWithInlineDelete\n    | ObjectPageAnalyticalTable\n    | ObjectPageGridTable\n    | ObjectPageTreeTable;\n\n/**\n * Table\n * @isViewNode true\n */\nexport interface ObjectPageSectionTableV2 extends ObjectPageSectionV2 {\n    table?: AnyObjectPageTableType;\n}\n\n/**\n * Chart\n * @isViewNode true\n */\nexport interface ObjectPageSectionChartV2 extends ObjectPageSectionV2 {\n    chart?: ObjectPageChart;\n}\n\nexport interface ObjectPageSectionContactV2 extends ObjectPageSectionV2 {\n    /**\n     * Contact\n     *  @isViewNode true\n     */\n    contact?: object;\n}\n\nexport interface ObjectPageSectionAddressV2 extends ObjectPageSectionV2 {\n    /**\n     * Address\n     *  @isViewNode true\n     */\n    address?: object;\n}\n\nexport interface ObjectPageSubSectionContactV2 extends ObjectPageSectionV2 {\n    /**\n     * Contact\n     *  @isViewNode true\n     */\n    contact?: object;\n}\n\nexport interface ObjectPageSubSectionAddressV2 {\n    /**\n     * Address\n     *  @isViewNode true\n     */\n    address?: object;\n}\n\nexport type AnySubSectionType =\n    | ObjectPageSectionTableV2\n    | ObjectPageSectionChartV2\n    | ObjectPageSectionFormV2\n    | ObjectPageSubSectionContactV2\n    | ObjectPageSubSectionAddressV2;\n\nexport interface GenericSubSections {\n    [key: string]: AnySubSectionType;\n}\n\n/**\n * Subsection\n * @isViewNode true\n */\nexport interface ObjectPageSubSectionV2 extends ObjectPageSectionV2 {\n    subsections?: GenericSubSections;\n}\n\nexport type AnySectionType =\n    | ObjectPageSectionTableV2\n    | ObjectPageSectionChartV2\n    | ObjectPageSectionFormV2\n    | ObjectPageSectionContactV2\n    | ObjectPageSectionAddressV2\n    | ObjectPageSectionV2\n    | ObjectPageSubSectionV2;\n\nexport interface GenericSections {\n    [key: string]: AnySectionType;\n}\n\nexport type CustomSectionTypeV2 = ObjectPageCustomSectionView | ObjectPageCustomSectionFragment;\n\n/**\n * Custom Sections\n * @isViewNode true\n */\nexport interface CustomSections {\n    custom?: CustomSectionTypeV2[];\n}\n\nexport interface ObjectPageCustomSectionBase {\n    relatedFacet: string;\n    relativePosition: SectionPosition;\n    /**\n     * The label of the custom section, preferably as an i18n key\n     * @i18nClassification TIT: Custom section title\n     */\n    title: string;\n}\n\n/**\n * View\n * @isViewNode true\n */\nexport interface ObjectPageCustomSectionView extends ObjectPageCustomSectionBase {\n    className: typeof SAPUI5_VIEW_CLASS;\n    viewName: string;\n    type: ViewTypes;\n}\n\n/**\n * Fragment\n * @isViewNode true\n */\nexport interface ObjectPageCustomSectionFragment extends ObjectPageCustomSectionBase {\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    fragmentName: string;\n    type: ExtensionFragmentTypes;\n}\n\nexport enum SectionPosition {\n    AfterFacet = 'AfterFacet',\n    BeforeFacet = 'BeforeFacet',\n    ReplaceFacet = 'ReplaceFacet'\n}\n\nexport enum ExtensionFragmentTypes {\n    XML = 'XML'\n}\n", "import type { GenericColumns, TableTypeV2, QuickVariant } from './Table';\nimport type { ObjectPageToolBar } from './ObjectPageToolBar';\nimport type { PopinLayout } from 'sap/m/library';\nimport type { smarttable } from 'sap/ui/comp/library';\n\nexport interface QuickVariantSelectionOP {\n    /**\n     * To show the number of records available, set showCounts to true.\n     */\n    showCounts?: boolean;\n    /**\n     * The variants section contains a set of entries that point to SelectionVariants or SelectionPresentationVariants defined in the annotations.\n     */\n    variants: {\n        [key: number]: QuickVariant;\n    };\n}\n\nexport interface Fields4DialogOP {\n    fields: string[];\n}\n\nexport enum CreateMode {\n    creationRows = 'creationRows',\n    creationRowsHiddenInEditMode = 'creationRowsHiddenInEditMode',\n    inline = 'inline'\n}\n\nexport interface ObjectPageCommonTableSettings {\n    /**\n     * The 'Select All' button is disabled by default. To enable it, set selectAll to true.\n     */\n    selectAll?: boolean;\n    /**\n     * If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.\n     */\n    selectionLimit?: number;\n    /**\n     * Following values are possible to set for createMode property:\n     * - creationRows: Used to enable empty rows mode.  In create or edit mode, two new empty rows are added to the table\n     * - creationRowsHiddenInEditMode: Starting SAPUI5 version 1.110, to hide empty rows in edit mode, set \"createMode\" as \"creationRowsHiddenInEditMode\". Empty rows are added to the table only when you click the Create button.\n     * - inline: In create or edit mode, users can choose 'Create Entry' to add new entries to a section in a table (not recommended, use creationRows instead)\n     */\n    createMode?: CreateMode;\n    /**\n     * If createMode is set to inline, you can use this setting to disable the default sort order.\n     */\n    disableDefaultInlineCreateSort?: boolean;\n    /**\n     * Set this property to true to enable variant management for the table.\n     */\n    variantManagement?: boolean;\n    /**\n     *  If copy is set to true, the Copy button is shown in the table toolbar.\n     */\n    copy?: boolean;\n}\n\nexport interface CommonTableSettingsForSections<COLS = GenericColumns> extends ObjectPageCommonTableSettings {\n    /**\n     * useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.\n     */\n    useExportToExcel?: boolean;\n    /**\n     * Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.\n     */\n    exportType?: smarttable.ExportType;\n    /**\n     *  With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.\n     */\n    editable?: boolean;\n    /**\n     * You can enable the creation of objects that have a maximum of 8 data fields through a dialog in the list report page.\n     */\n    createWithParameterDialog?: Fields4DialogOP;\n    /**\n     * If copy is set to true, the Copy to Clipboard button is shown in the table toolbar.\n     * By default, the Copy to Clipboard button is displayed in the table toolbar if the selection mode is configured for the corresponding table.\n     */\n    copy?: boolean;\n    /**\n     * With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have been added to your annotations before.\n     */\n    quickVariantSelection?: QuickVariantSelectionOP;\n    /**\n     * Tool Bar\n     */\n    toolBar?: ObjectPageToolBar;\n    /**\n     * Columns\n     */\n    columns?: COLS;\n}\n\n/**\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTableCommonSettings extends CommonTableSettingsForSections {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable;\n    /**\n     * Set includeItemInSelection to true if you want items to be selectable when clicked, rather than after the selection control has been set.\n     */\n    includeItemInSelection?: boolean;\n    /**\n     * popinLayout defines the layout in which the table pop-in rows shall be rendered.\n     */\n    popinLayout?: PopinLayout;\n    /**\n     * growingThreshold defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.\n     */\n    growingThreshold?: number;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTableWithMultiSelect extends ObjectPageResponsiveTableCommonSettings {\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTableWithInlineDelete extends ObjectPageResponsiveTableCommonSettings {\n    /**\n     *  Used to enable inline deletion in a responsive table of list report and object page\n     */\n    inlineDelete?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTable\n    extends ObjectPageResponsiveTableCommonSettings,\n        ObjectPageResponsiveTableWithMultiSelect,\n        ObjectPageResponsiveTableWithInlineDelete {}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageAnalyticalTable extends CommonTableSettingsForSections {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.AnalyticalTable;\n    /**\n     * For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageGridTable extends CommonTableSettingsForSections {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.GridTable;\n    /**\n     * For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageTreeTable extends CommonTableSettingsForSections {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.TreeTable;\n    /**\n     * For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\nexport interface GlobalTableSettings extends ObjectPageCommonTableSettings {\n    /**\n     * Use type to define the default table type.\n     */\n    type?: TableTypeV2;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n    /**\n     * For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     *  Used to enable inline deletion in a responsive table of list report and object page\n     */\n    inlineDelete?: boolean;\n}\n", "import type { SapUiGenericAppPageSettings } from '../../../common/page';\nimport type { FlexibleColumnLayout, FlexibleColumnLayoutType } from '../../../common';\n\nexport interface SapUiAppV2 {\n    pages: SapUiAppPagesV2;\n    _version?: string;\n    settings?: SapUiAppSettingsV2;\n}\n\nexport interface SapUiAppPagesV2 {\n    [key: string]: SapUiAppPageV2;\n}\n\nexport const FE_TEMPLATE_V2 = 'sap.suite.ui.generic.template';\nexport const FE_TEMPLATE_V2_OBJECT_PAGE = 'sap.suite.ui.generic.template.ObjectPage';\nexport const FE_TEMPLATE_V2_LIST_REPORT = 'sap.suite.ui.generic.template.ListReport';\nexport const FE_TEMPLATE_V2_ALP = 'sap.suite.ui.generic.template.AnalyticalListPage';\n\nexport interface SapUiAppPageV2 {\n    entitySet?: string;\n    navigationProperty?: string;\n    component?: {\n        name: string;\n        list?: boolean;\n        settings?: SapUiGenericAppPageSettings;\n        sections?: {\n            sectionIds?: SapUiGenericAppPageSettings;\n        };\n    };\n    pages?: SapUiAppPagesV2;\n    defaultLayoutType?: FlexibleColumnLayoutType;\n}\n\nexport interface SapUiAppSettingsV2 {\n    flexibleColumnLayout?: FlexibleColumnLayout;\n}\n", "import type {\n    SapUi5RootView,\n    SapUi5OdataModel,\n    SapUi5ResourceModel,\n    SapUi5RoutingRoute,\n    SAPUI5_FRAGMENT_CLASS,\n    SAPUI5_VIEW_CLASS,\n    ViewTypes,\n    SapUi5RoutingTargetBase,\n    SapUi5RoutingTarget,\n    Dependencies\n} from '../../../common/webapp/manifest/sapUi5';\nimport type { ManifestSection } from '../../..';\n\nexport interface SapUi5 {\n    flexEnabled?: boolean;\n    resources?: object;\n    dependencies?: Dependencies;\n    models?: { [key: string]: SapUi5OdataModel | SapUi5ResourceModel };\n    routing?: SapUi5RoutingV2;\n    [key: string]: string | object | boolean;\n    rootView?: SapUi5RootView;\n    extends?: SapUi5Extends;\n}\n\nexport interface SapUi5RoutingV2 {\n    routes?: SapUi5RoutingRoute[];\n    targets: SapUi5RoutingTargetsV2;\n}\n\nexport interface SapUi5RoutingTargetsV2 {\n    [key: string]: SapUi5RoutingTarget | SapUi5RoutingTargetCustomPageV2;\n}\n\nexport interface SapUi5RoutingTargetCustomPageV2 extends SapUi5RoutingTargetBase {\n    viewId: string;\n    viewName: string;\n    viewLevel?: number;\n    title?: string;\n}\n\n// SAPUI5 EXTENDS\nexport const SAPUI5_VIEW_EXTENSION = 'sap.ui.viewExtensions';\nexport const SAPUI5_CONTROLLER_EXTENSION = 'sap.ui.controllerExtensions';\n\nexport interface SapUi5Extends {\n    extensions?: SapUi5Extensions;\n}\n\nexport interface SapUi5Extensions {\n    [SAPUI5_VIEW_EXTENSION]?: SapUi5ViewExtensions;\n    // Added it here, but sync logic is not supported yet\n    [SAPUI5_CONTROLLER_EXTENSION]?: SapUi5ControllerExtensions;\n}\nexport const SAPUI5_VIEW_EXTENSION_OBJECT_PAGE = 'sap.suite.ui.generic.template.ObjectPage.view.Details';\nexport const SAPUI5_VIEW_EXTENSION_LIST_REPORT = 'sap.suite.ui.generic.template.ListReport.view.ListReport';\nexport const SAPUI5_VIEW_EXTENSION_ANALYTICAL_LIST_PAGE =\n    'sap.suite.ui.generic.template.AnalyticalListPage.view.AnalyticalListPage';\n\n// VIEW EXTENDS\nexport interface SapUi5PageViewExtensions {\n    [key: string]: SapUi5ViewExtensionView | SapUi5ViewExtensionFragment;\n}\n\nexport interface SapUi5ViewExtensions {\n    [SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]?: SapUi5PageViewExtensions;\n    [SAPUI5_VIEW_EXTENSION_LIST_REPORT]?: SapUi5PageViewExtensions;\n}\n\nexport interface SapUi5ViewExtensionBase {\n    type: ViewTypes;\n}\n\nexport interface SapUi5ViewExtensionView extends SapUi5ViewExtensionBase {\n    className: typeof SAPUI5_VIEW_CLASS;\n    viewName: string;\n}\n\nexport interface SapUi5ViewExtensionFragment extends SapUi5ViewExtensionBase {\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    fragmentName: string;\n}\n\n// CONTROLLER EXTENDS\nexport interface SapUi5ControllerExtensions {\n    [SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]?: SapUi5PageControllerExtensions;\n    [SAPUI5_VIEW_EXTENSION_LIST_REPORT]?: SapUi5PageControllerExtensions;\n}\n\nexport interface SapUi5PageControllerExtensions {\n    [key: string]: SapUi5ControllerExtension;\n}\n\nexport interface SapUi5ControllerExtension {\n    controllerName: string;\n    [ManifestSection.generic]: { [key: string]: SapUi5ControllerExtensionSettings };\n}\n\n// Currently sync does not support controller extensions\nexport interface SapUi5ControllerExtensionSettings {\n    EntitySet: string;\n    Actions?: unknown;\n    Header?: unknown;\n    Sections?: unknown;\n}\n", "import type {\n    DateRangeType,\n    FilterType,\n    DefaultDateRange,\n    DateRange,\n    ListCard,\n    AnalyticalCard,\n    StackCard,\n    LinklistCard,\n    TableCard,\n    CustomCard\n} from './controls';\n\n/**\n * @isViewNode false\n */\nexport interface SelectedValues {\n    /**\n     * The selectedValues property is a set of standard date range values that you want to include or exclude.\n     */\n    selectedValues?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n    /**\n     * This property references a JS class, which you use to modify the date range value list. You can either remove standard data range values or add custom values.\n     * The customDateRangeImplementation setting takes priority followed by filter and selectedValues when excluding date range types.\n     */\n    customDateRangeImplementation?: string;\n    /**\n     * You can use the filter settings to include and exclude specific date range values.\n     */\n    filter?: FilterType[];\n    /**\n     * You can set a default value for semantic date range.\n     */\n    defaultValue?: DefaultDateRange;\n}\n\nexport interface DateRangeOVP extends DateRange {\n    /**\n     * For a fields' list you can define the set of standard date range values separately.\n     */\n    fields?: {\n        [field: string]: SelectedValues;\n    };\n}\n\nexport type FilterSettingsType = {\n    /**\n     * Represents the object to store date type filter fields configuration\n     */\n    dateSettings?: DateRangeOVP;\n};\n\nenum LoadDataOnAppLaunchType {\n    always = 'always',\n    never = 'never',\n    ifAnyFilterExist = 'ifAnyFilterExist'\n}\n\nexport type DataLoadSettingsType = {\n    /**\n     * Data load behaviour options on application launch. The default value is 'always'.\n     */\n    loadDataOnAppLaunch?: LoadDataOnAppLaunchType;\n    [k: string]: unknown;\n};\n\nexport enum ContainerLayoutType {\n    fixed = 'fixed',\n    resizable = 'resizable'\n}\n\nexport type CardType = ListCard | AnalyticalCard | StackCard | LinklistCard | TableCard | CustomCard;\n\nexport interface ChartSettingsType {\n    /**\n     * Flag to enable data labels on analytical charts. The default value is false.\n     */\n    showDataLabel?: boolean;\n}\n\nexport type ResizableLayoutVariantType = {};\n", "export * from './controls';\nexport * from './webapp';\nexport * from './page';\nexport * from './pages';\nexport * from './application';\nexport * from './ApplicationV4';\n", "export enum ActionPlacement {\n    After = 'After',\n    Before = 'Before'\n}\n\nexport interface CustomActionPosition {\n    /**\n     * The key of another action to be used as placement anchor.\n     * @artifactType Manifest\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor action.\n     * @artifactType Manifest\n     */\n    placement: ActionPlacement;\n}\n\n/**\n * Action\n * @isViewNode true\n */\nexport interface CustomAction {\n    /**\n     * The text that is displayed on the button (typically a binding to an i18n entry).\n     * @i18nClassification COL: Custom action text\n     * @artifactType Manifest\n     */\n    text: string;\n\n    /**\n     * Defines the position of the action relative to other actions.\n     * @artifactType Manifest\n     */\n    position?: CustomActionPosition;\n\n    /**\n     * Relevant for extension actions; allows the definition of a target action handler.\n     * @artifactType Manifest\n     */\n    press: string;\n\n    /**\n     * Allows you to define if the action button is visible on the screen.\n     * @artifactType Manifest\n     */\n    visible?: boolean;\n\n    /**\n     * Allows you to define if the action should be enabled. The default value is \"true\".\n     * @artifactType Manifest\n     */\n    enabled?: boolean;\n}\n\nexport interface CustomActionPositionOP extends CustomActionPosition {\n    /**\n     * The key of another action to be used as placement anchor.\n     * @artifactType Manifest\n     */\n    anchor?: string;\n}\n\nexport interface CustomActionOP extends CustomAction {\n    /**\n     * Defines the position of the action relative to other actions.\n     * @artifactType Manifest\n     */\n    position?: CustomActionPositionOP;\n}\n", "import type {\n    TableColumn,\n    TableColumnAction,\n    TableCustomColumn,\n    ViewTableColumn,\n    ViewTableColumnAction,\n    ViewTableCustomColumn\n} from '../webapp/manifest/ManifestSettings';\nimport type { ToolBar, ViewChartToolBar } from './ToolBar';\n\nexport enum SelectionMode {\n    Multi = 'Multi',\n    None = 'None',\n    Single = 'Single',\n    Auto = 'Auto'\n}\n\nexport enum TableTypeV4 {\n    ResponsiveTable = 'ResponsiveTable',\n    GridTable = 'GridTable',\n    AnalyticalTable = 'AnalyticalTable',\n    TreeTable = 'TreeTable'\n}\n\nexport enum InitialLoadType {\n    Disabled = 'Disabled',\n    Enabled = 'Enabled',\n    Auto = 'Auto'\n}\n\nexport enum DefaultPathType {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Both = 'both'\n}\n\nexport interface PersonalizationType {\n    /**\n     * Defines whether the user can add and remove columns to a given table.\n     */\n    column?: boolean;\n    /**\n     * Defines whether the user can sort a given table.\n     */\n    sort?: boolean;\n    /**\n     * Defines whether the user can filter data of a given table.\n     */\n    filter?: boolean;\n}\n\nexport interface ViewPersonalizationType {\n    /**\n     * Defines whether the user can add and remove columns to a given table.\n     */\n    column?: boolean;\n    /**\n     * Defines whether the user can sort a given table.\n     */\n    sort?: boolean;\n    /**\n     * Defines whether the user can filter data of a given table.\n     */\n    filter?: boolean;\n}\n\nexport interface AnnotationPathAsObject {\n    annotationPath: string;\n}\n\n//Not used by specification anymore, but there are some tests using it in tools-suite that needs to be adapted\nexport interface AnnotationPathWithKey {\n    key: string;\n    annotationPath: string;\n    entitySet?: string;\n}\n\nexport interface QuickVariantSelectionV4 {\n    /**\n     * List of annotation paths referring to SelectionVariant annotations\n     */\n    paths: AnnotationPathAsObject[];\n    /**\n     * You can hide the table and display only the titles of the tabs. To do so, add the hideTableTitle option and set it to true.\n     */\n    hideTableTitle?: boolean;\n    /**\n     * You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.\n     */\n    showCounts?: boolean;\n}\n\nexport interface GenericColumns {\n    [key: string]: TableColumn | TableColumnAction | TableCustomColumn;\n}\n\n/**\n * View Columns\n * @isViewNode true\n */\nexport interface ViewColumns {\n    [key: string]: ViewTableColumn | ViewTableColumnAction | ViewTableCustomColumn;\n}\n\n// Note: TableSettings are reused by OP: LR only properties must not be added here.\nexport interface TableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec\n     */\n    type?: TableTypeV4;\n    /**\n     * Allows you to enable or disable row selection and choose between single or multiple row selection.\n     *\n     * - Auto: This type is now deprecated. Choose any of the following modes.\n     * - Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar. In edit mode, multiple selection is possible with the delete button.\n     * - Single: This type allows single table selection if relevant actions are available in the toolbar. In edit mode, multiple selection is possible with the Delete button.\n     * - None: No table selection is possible in display mode. In edit mode, the selection (including multiple row selection) is still possible when the Delete button is available in the table toolbar.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/116b5d82e8c545e2a56e1b51b8b0a9bd\n     */\n    selectionMode?: SelectionMode;\n    /**\n     * The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.\n     */\n    selectAll?: boolean;\n    /**\n     * You can define how many items can be selected at a time using the selectionLimit.\n     */\n    selectionLimit?: number;\n    /**\n     * By default, export is enabled in the List Report and on the Object Page. When enabled, the Export button is displayed in the table toolbar.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd\n     */\n    enableExport?: boolean;\n    /**\n     * With quickVariantSelection you can switch on the multiple view feature (single table mode). It links to SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) you must have added to your annotations beforehand.\n     */\n    quickVariantSelection?: QuickVariantSelectionV4;\n    /**\n     * Allows you to set the content density to condensed for ui.table on the List Report and Object Page.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c\n     */\n    condensedTableLayout?: boolean;\n    /**\n     *  Leading property that decides between either a recursive hierarchy or data aggregation.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec\n     */\n    hierarchyQualifier?: string;\n}\n\nexport type ViewTypeV4 = LRTableView | LRChartView | TableViewExtension | boolean;\n\n/**\n * Views\n * @isViewNode true\n */\nexport interface MultiTableModeV4 {\n    /**\n     * List of annotation paths\n     */\n    [key: string]: ViewTypeV4;\n    /**\n     * You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.\n     */\n    showCounts?: boolean;\n}\n\n/**\n * Chart View\n * @isViewNode true\n */\nexport interface ALPChartView {\n    /**\n     * The primary annotation path can be either UI.Chart, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath: string;\n    /**\n     * Chart Toolbar\n     * @isViewNode true\n     */\n    toolBar?: ViewChartToolBar;\n}\n\nexport interface CommonViewSettings {\n    /**\n     * Unique tab identifier.\n     * @hidden true\n     */\n    key: string;\n    /**\n     * @hidden true\n     */\n    index: number;\n    /**\n     * To use charts in multiple table mode, define a UI.Chart annotation, including a qualifier.\n     * Reference the UI.Chart annotation in your SelectionPresentationVariant or PresentationVariant for your view.\n     */\n    annotationPath: string;\n    /**\n     * Each chart can be based on a different entitySet.\n     */\n    entitySet?: string;\n}\n\n/**\n * Chart View\n * @isViewNode true\n */\nexport interface LRChartView extends CommonViewSettings {\n    /**\n     * Chart Toolbar\n     * @isViewNode true\n     */\n    toolBar?: ViewChartToolBar;\n    /**\n     * Specifies whether the view is visible or not\n     */\n    visible?: boolean;\n}\n\n/**\n * Table View\n * @isViewNode true\n */\nexport interface ALPTableView extends TableSettings {\n    /**\n     * The secondary annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath: string;\n    /**\n     * Allows you to define whether or not the data in the table is automatically loaded\n     *\n     * - Auto (default): An initial load of data only occurs if some default filter values have been set in the filter bar\n     * - Enabled: An initial load of data occurs for the standard variant\n     * - Disabled: An initial load of data does not occur for the standard variant, and the user has to actively click the Go button.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/#/topic/9f4e1192f1384b85bc160288e17f69c4\n     */\n    initialLoad?: InitialLoadType;\n    /**\n     * Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\n     * By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\n     * Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.\n     */\n    personalization?: ViewPersonalizationType;\n    /**\n     * Table Toolbar\n     */\n    toolBar?: ToolBar;\n    columns?: ViewColumns;\n}\n\n/**\n * Table View Extension\n * @isViewNode true\n */\nexport interface TableViewExtension {\n    /**\n     * Unique tab identifier.\n     * @hidden true\n     */\n    key: string;\n    /**\n     * @hidden true\n     */\n    index: number;\n    /**\n     * View title (localization supported).\n     * @i18nClassification TIT: Custom view title\n     */\n    label?: string;\n    /**\n     * The name contains sap.app.id as a prefix, followed by the path in the app/webapp folder and the name of the XML view.\n     */\n    template: string;\n    /**\n     * Specifies whether the view is visible or not\n     */\n    visible?: boolean;\n}\n\n/**\n * Table View\n * @isViewNode true\n */\nexport interface LRTableView extends TableSettings {\n    /**\n     * Unique tab identifier.\n     * @hidden true\n     */\n    key: string;\n    /**\n     * @hidden true\n     */\n    index: number;\n    /**\n     * The annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath: string;\n    /**\n     * Each table can be based on a different entitySet.\n     */\n    entitySet?: string;\n    /**\n     *  The tab keeps the default LineItem ID (without the key), so the variant is applied to it.\n     */\n    keepPreviousPersonalization?: boolean;\n    /**\n     * Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\n     * By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\n     * Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.\n     */\n    personalization?: ViewPersonalizationType;\n    /**\n     * Table Toolbar\n     */\n    toolBar?: ToolBar;\n    /**\n     * Columns\n     */\n    columns?: ViewColumns;\n    /**\n     * Specifies whether the view is visible or not\n     */\n    visible?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n */\nexport interface Table extends TableSettings {\n    /**\n     * The secondary annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath?: string;\n    /**\n     * Allows you to define whether or not the data in the table is automatically loaded\n     *\n     * - Auto (default): An initial load of data only occurs if some default filter values have been set in the filter bar\n     * - Enabled: An initial load of data occurs for the standard variant\n     * - Disabled: An initial load of data does not occur for the standard variant, and the user has to actively click the Go button.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/#/topic/9f4e1192f1384b85bc160288e17f69c4\n     */\n    initialLoad?: InitialLoadType;\n    /**\n     * Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\n     * By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\n     * Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.\n     */\n    personalization?: PersonalizationType;\n    views?: MultiTableModeV4;\n    /**\n     * Tool Bar\n     */\n    toolBar?: ToolBar;\n    columns?: GenericColumns;\n}\n", "import type { Availability } from '..';\n\nexport enum LayoutType {\n    Compact = 'Compact',\n    CompactVisual = 'CompactVisual'\n}\n\nexport enum InitialLayoutType {\n    Compact = 'Compact',\n    Visual = 'Visual'\n}\n\n/**\n * Visual Filter\n * @isViewNode true\n */\nexport interface VisualFilter {\n    /**\n     * Defines where the selection field should be shown.\n     *\n     * - Default: The filter field is shown by default in the filter bar (both the regular filter fields as well as the corresponding visual filter fields).\n     * - Adaptation: The filter field is initially not shown but is only available under Adapt Filters.\n     * - Hidden: The filter field is not visible in the filter bar or within the Adapt Filters dialog.\n     * @artifactType Manifest\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2\n     */\n    availability?: Availability;\n    /**\n     * The valuelist annotation corresponding to the visual filter representation.\n     * @artifactType Manifest\n     * @hidden true\n     */\n    visualFilterValueList?: string;\n}\n\nexport type SelectionField = {};\n\n/**\n * Filter Fields\n * @isViewNode true\n */\nexport interface SelectionFields {\n    [key: string]: SelectionField | CustomFilterField;\n}\n\n/**\n * Compact Filters\n * @isViewNode true\n */\nexport interface CompactFilters {\n    [key: string]: SelectionField;\n}\n\n/**\n * Visual Filters\n * @isViewNode true\n */\nexport interface VisualFilters {\n    [key: string]: VisualFilter;\n}\n\nexport enum FilterFieldPlacement {\n    After = 'After',\n    Before = 'Before'\n}\n\nexport interface CustomFilterFieldPosition {\n    /**\n     * The key of another filter field is to be used as a placement anchor.\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor filter field.\n     */\n    placement: FilterFieldPlacement;\n}\n\n/**\n * Custom Filter Field\n * @isViewNode true\n */\nexport interface CustomFilterField {\n    /**\n     * A static or i18n binding string.\n     * @i18nClassification COL: Custom filter field label\n     */\n    label: string;\n    /**\n     * The full path to the property to be filtered.\n     */\n    property: string;\n    /**\n     * The path to the XML template containing the filter control.\n     */\n    template: string;\n    /**\n     * If filter field is mandatory, i.e. it requires a value.\n     */\n    required?: boolean;\n    /**\n     * Defines the position of the filter field relative to another filter field.\n     */\n    position?: CustomFilterFieldPosition;\n}\n\n/**\n * Filter Bar\n * @isViewNode true\n */\nexport interface FilterBar {\n    /**\n     * Allows you to hide the filter bar.\n     * @artifactType Manifest\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/4bd7590569c74c61a0124c6e370030f6\n     */\n    hideFilterBar?: boolean;\n\n    /**\n     * @isViewNode true\n     */\n    selectionFields?: SelectionFields | CompactFilters;\n\n    /**\n     * @isViewNode true\n     */\n    visualFilters?: VisualFilters;\n\n    /**\n     * Allows you to specify the default filter mode on the initial load.\n     * @artifactType Manifest\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2\n     */\n    initialLayout?: InitialLayoutType;\n\n    /**\n     * Allows you to specify the layout of the filter bar.\n     *\n     * - Compact: This setting shows filter fields in compact mode.\n     * - CompactVisual: This setting shows filter fields in both compact and visual modes.\n     *\n     * @artifactType Manifest\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/33f3d807c10b47d9a8141692d2619dc2\n     */\n    layout?: LayoutType;\n}\n", "import type { ActionAfterExecutionConfiguration } from '../webapp/manifest/ManifestSettings';\nimport type { CustomAction, CustomActionPosition } from './CustomAction';\n\ninterface ActionAfterExecutionConfigurationToolBarLR extends ActionAfterExecutionConfiguration {}\n\nexport enum SelectType {\n    single = 'single',\n    multi = 'multi'\n}\n\n/**\n * Action\n * @isViewNode true\n */\nexport interface ToolBarAction {\n    /**\n     * Enables single selection for a bound action\n     */\n    enableOnSelect?: SelectType;\n\n    /**\n     * Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)\n     */\n    afterExecution?: ActionAfterExecutionConfigurationToolBarLR;\n}\n\n/**\n * Action\n * @isViewNode true\n */\nexport interface ViewToolBarAction {\n    /**\n     * Enables single selection for a bound action\n     */\n    enableOnSelect?: SelectType;\n\n    /**\n     * Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)\n     */\n    afterExecution?: ActionAfterExecutionConfigurationToolBarLR;\n}\nexport type ChartToolBarAction = {};\n\n/**\n * Actions\n * @isViewNode true\n */\nexport interface Actions {\n    [key: string]: ToolBarAction | CustomTableAction;\n}\n\n/**\n * Actions\n * @isViewNode true\n */\nexport interface ViewActions {\n    [key: string]: ViewToolBarAction | ChartToolBarAction | ViewTableCustomAction;\n}\n\n/**\n * Table Toolbar\n * @isViewNode true\n */\nexport interface ToolBar {\n    actions: Actions;\n}\n\n/**\n * Chart Toolbar\n * @isViewNode true\n */\nexport interface ViewChartToolBar {\n    actions: ViewActions;\n}\n\nexport interface CustomTableAction extends CustomAction {\n    /**\n     * Indicates whether the action requires a selection of items.\n     * @artifactType XMLProperty\n     */\n    requiresSelection?: boolean;\n}\n\nexport interface ViewCustomActionPosition extends CustomActionPosition {\n    /**\n     * The key of another action to be used as placement anchor.\n     * @artifactType Manifest\n     */\n    anchor?: string;\n}\n\nexport interface ViewTableCustomAction extends CustomTableAction {\n    /**\n     * Defines the position of the action relative to other actions.\n     * @artifactType Manifest\n     */\n    position?: ViewCustomActionPosition;\n}\n", "export enum SectionLayoutType {\n    Tabs = 'Tabs',\n    Page = 'Page'\n}\n\n/**\n * Page Layout\n * @isViewNode true\n */\nexport interface ObjectPageLayout {\n    /**\n     * Allows you to define the layout of the sections.\n     *\n     * - Page (default): In this mode, all the sections and subsections are added to the same page.\n     * - Tabs: In this mode, the sections are represented as tabs under the header facet.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/#/topic/facfea09018d4376acaceddb7e3f03b6\n     */\n    sectionLayout?: SectionLayoutType;\n}\n", "import type { ObjectPageSectionTableV4 } from './ObjectPageTable';\nimport type { SAPUI5_FRAGMENT_CLASS } from '../../common/webapp/manifest/sapUi5';\nimport type { ObjectPageToolBar } from './ObjectPageToolBar';\nimport type { ObjectPageForm } from './ObjectPageForm';\n\nexport interface ObjectPageSectionForm {\n    /**\n     * Form\n     *  @isViewNode true\n     */\n    form?: ObjectPageForm;\n}\n\nexport interface ObjectPageSectionDataPoint {\n    /**\n     * Data Point\n     *  @isViewNode true\n     */\n    dataPoint?: object;\n}\n\nexport interface ObjectPageSectionContact {\n    /**\n     * Contact\n     *  @isViewNode true\n     */\n    contact?: object;\n}\n\nexport interface ObjectPageSectionAddress {\n    /**\n     * Address\n     *  @isViewNode true\n     */\n    address?: object;\n}\n\nexport interface ObjectPageChart {\n    /**\n     * Chart Toolbar\n     * @isViewNode true\n     */\n    toolBar?: ObjectPageToolBar;\n}\n\nexport interface ObjectPageSectionChart {\n    /**\n     * Chart\n     * @isViewNode true\n     */\n    chart?: ObjectPageChart;\n}\n\nexport interface ObjectPageSectionPresentationVariant {\n    /**\n     * Presentation Variant\n     */\n    [key: string]: ObjectPageSectionTableV4 | ObjectPageSectionChart;\n}\n\nexport type ObjectPageSection =\n    | ObjectPageSectionTableV4\n    | ObjectPageSectionForm\n    | ObjectPageSectionDataPoint\n    | ObjectPageSectionContact\n    | ObjectPageSectionAddress\n    | ObjectPageSectionPresentationVariant\n    | ObjectPageSubSections;\n\nexport interface GenericSections {\n    [key: string]: ObjectPageSection;\n}\n\nexport interface GenericSubSections {\n    [key: string]: ObjectPageSection | ObjectPageCustomSubSectionFragment;\n}\n\n/**\n * Subsections\n * @isViewNode true\n */\nexport interface ObjectPageSubSections {\n    subsections: GenericSubSections;\n}\n\n/**\n * @displayName Placement\n */\nexport enum SectionPosition {\n    After = 'After',\n    Before = 'Before'\n}\n\nexport enum CustomSectionViewTypesV4 {\n    XML = 'XML'\n}\n\n/**\n * Custom Sections\n * @isViewNode true\n */\nexport interface CustomSections {\n    /**\n     * Custom Sections\n     * @isViewNode true\n     */\n    custom?: ObjectPageCustomSectionFragment[];\n}\n\nexport interface ObjectPageCustomSectionBase {\n    /**\n     * Use the key of another facet/section as a placement anchor.\n     * @artifactType Manifest\n     * @displayName Anchor\n     */\n    relatedFacet?: string;\n    /**\n     * Define the placement, either before or after the anchor facet/section.\n     * @artifactType Manifest\n     */\n    relativePosition?: SectionPosition;\n    /**\n     * The unique ID of a section.\n     * @artifactType Manifest\n     */\n    id: string;\n    /**\n     * @hidden true\n     */\n    type: CustomSectionViewTypesV4;\n    /**\n     * The label of a custom section, preferably as an i18n key.\n     * @artifactType Manifest\n     * @i18nClassification TIT: Custom section title\n     */\n    title: string;\n}\n\n/**\n * Fragment\n * @isViewNode true\n */\nexport interface ObjectPageCustomSectionFragment extends ObjectPageCustomSectionBase {\n    /**\n     * @hidden true\n     */\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    /**\n     * The path to the XML template containing the section control.\n     * @artifactType Manifest\n     */\n    fragmentName: string;\n}\n\n/**\n * Custom Sub Section\n * @isViewNode true\n */\nexport type ObjectPageCustomSubSectionFragment = Omit<ObjectPageCustomSectionFragment, 'id' | 'type' | 'className'>;\n", "import type { AnnotationPathAsObject, TableSettings } from '.';\nimport type {\n    Placement,\n    ObjectPageTableColumn as ObjectPageTableColumnIF,\n    ObjectPageTableColumnAction,\n    TableCustomColumn\n} from '../webapp/manifest/ManifestSettings';\nimport type { ObjectPageToolBar } from './ObjectPageToolBar';\n\nexport interface PositionOP {\n    /**\n     * The key of another column to be used as placement anchor.\n     * @artifactType Manifest\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor column.\n     * @artifactType Manifest\n     */\n    placement: Placement;\n}\n\nexport interface TableCustomColumnOP extends TableCustomColumn {\n    /**\n     * Defines the position of the column relative to other columns.\n     * @artifactType Manifest\n     */\n    position?: PositionOP;\n}\n\n/**\n * Table\n * @isViewNode true\n */\nexport interface ObjectPageTable extends TableSettingsOP {\n    /**\n     * By setting enableFullScreen to true you can enable the full screen mode for this table; this will display a new button on the table toolbar allowing the user to open the table in a fullscreen dialog.\n     */\n    enableFullScreen?: boolean;\n    /**\n     * In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.\n     */\n    enablePaste?: boolean;\n    /**\n     * Tool Bar\n     */\n    toolBar?: ObjectPageToolBar;\n}\n\n/**\n * Table Section\n * @isViewNode true\n */\nexport interface ObjectPageSectionTableV4 {\n    table?: ObjectPageTable;\n}\n\nexport enum TableCreationModeType {\n    NewPage = 'NewPage',\n    InlineCreationRows = 'InlineCreationRows',\n    Inline = 'Inline'\n}\n\nexport interface TableCreationModeOP {\n    /**\n     * The name property of TableCreationMode defines the creation mode; possible values are:\n     * - NewPage: The create action leads to a new page.\n     * - InlineCreationRows: No create button will be rendered, an empty row is directly given.\n     * - Inline: The create action leads to a new row at the table (not recommended, use InlineCreationRows instead).\n     * The default is \"NewPage\".\n     */\n    name?: TableCreationModeType;\n    /**\n     * In case of inline creation mode you can decide if the new row will be created at the end of the table, or direcly after the currently selected table. The default value is \"true\".\n     */\n    createAtEnd?: boolean;\n    /**\n     * Supported starting SAPUI5 version 1.111.0, If set to 'true', the empty rows will be hidden when editing an existing object. Selecting the table's Create button will display the empty rows. The default value is \"true\".\n     */\n    inlineCreationRowsHiddenInEditMode?: boolean;\n}\n\nexport interface PersonalizationTypeOP {\n    /**\n     * Defines whether the user can add and remove columns to a given table.\n     */\n    column?: boolean;\n    /**\n     * Defines whether the user can sort a given table.\n     */\n    sort?: boolean;\n    /**\n     * Defines whether the user can filter data of a given table.\n     */\n    filter?: boolean;\n}\n\nexport interface QuickVariantSelectionV4OP {\n    /**\n     * List of annotation paths referring to SelectionVariant annotations\n     */\n    paths: AnnotationPathAsObject[];\n    /**\n     * You can hide the table and display only the titles of the tabs. To do so, add the hideTableTitle option and set it to true.\n     */\n    hideTableTitle?: boolean;\n    /**\n     * You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.\n     */\n    showCounts?: boolean;\n}\n\nexport interface GenericColumnsOP {\n    [key: string]: ObjectPageTableColumnIF | ObjectPageTableColumnAction | TableCustomColumnOP;\n}\n\nexport interface TableSettingsOP extends TableSettings {\n    /**\n     * Defines the page behavior when a new record is created.\n     */\n    creationMode?: TableCreationModeOP;\n\n    /**\n     * Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\n     * By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\n     * Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.\n     */\n    personalization?: PersonalizationTypeOP;\n\n    /**\n     * With quickVariantSelection you can switch on the multiple view feature (single table mode). It links to SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) you must have added to your annotations beforehand.\n     */\n    quickVariantSelection?: QuickVariantSelectionV4OP;\n\n    columns?: GenericColumnsOP;\n}\n", "import type { SapUiGenericAppPageSettings } from '../../../common/page';\n\nexport interface SapUiAppV4 {\n    pages: SapUiAppPageV4[] | SapUiGenericAppPageMapV4;\n    _version?: string;\n    settings?: object;\n}\n\nexport interface SapUiGenericAppPageMapV4 {\n    [key: string]: SapUiAppPageV4;\n}\n\nexport interface SapUiNavDetailsV4 {\n    detail?: {\n        route?: string;\n    };\n}\n\nexport type SapUi5MultiViewPath = {\n    key: string;\n    annotationPath: string;\n};\n\nexport type SapUi5MultiViewPaths = SapUi5MultiViewPath[];\n\nexport type SapUi5ALPPaths = [\n    {\n        primary: [\n            {\n                annotationPath: string;\n            }\n        ];\n        secondary: [\n            {\n                annotationPath: string;\n            }\n        ];\n        defaultPath: string;\n    }\n];\n\nexport type SapUi5Views = {\n    paths: SapUi5MultiViewPaths | SapUi5ALPPaths;\n    showCounts?: boolean;\n};\n\nexport interface SapUiGenericAppPageCustomFilterField {\n    label: string;\n    property: string;\n    required?: boolean;\n    position: SapUi5RoutingTargetContentPosition;\n}\n\nexport interface SapUiGenericAppPageSettingsV4 extends SapUiGenericAppPageSettings {\n    ['@com.sap.vocabularies.UI.v1.SelectionFields']: SapUiGenericAppPageCustomFilterField;\n}\n\nexport type SapUiPageSettingsV4 = SapUiGenericAppPageSettings & {\n    entitySet?: string;\n    navigation?: {\n        [key: string]: SapUiNavDetailsV4;\n    };\n    controlConfiguration?: SapUiGenericAppPageSettingsV4;\n    content?: SapUi5RoutingTargetContent;\n    views?: SapUi5Views;\n    defaultTemplateAnnotationPath?: string;\n};\n\nexport interface SapUiAppPageV4 {\n    type: string;\n    id: string;\n    name: string;\n    options: {\n        settings?: SapUiPageSettingsV4;\n    };\n}\n\nexport const FE_TEMPLATE_V4 = 'sap.fe.templates';\nexport const FE_TEMPLATE_V4_CUSTOM_PAGE = 'sap.fe.core.fpm';\nexport const FE_TEMPLATE_V4_OBJECT_PAGE = 'sap.fe.templates.ObjectPage';\nexport const FE_TEMPLATE_V4_LIST_REPORT = 'sap.fe.templates.ListReport';\nexport const FE_TEMPLATE_V4_ALP = 'sap.fe.templates.AnalyticalListPage';\nexport interface SapUiAppPagesV4 {\n    [key: string]: SapUiAppPageV4;\n}\nexport interface SapUi5RoutingTargetContent {\n    header?: object;\n    body?: SapUi5RoutingTargetContentBody;\n    footer?: object;\n}\n\nexport interface SapUi5RoutingTargetContentBody {\n    sections?: SapUi5RoutingTargetContentSections;\n}\n\nexport interface SapUi5RoutingTargetContentSections {\n    [key: string]: SapUi5RoutingTargetContentSection | SapUi5RoutingTargetContentSubSectionsWrapper;\n}\n\nexport interface SapUi5RoutingTargetContentSubSections {\n    [key: string]: SapUi5RoutingTargetContentSection;\n}\n\nexport interface SapUi5RoutingTargetContentSubSectionsWrapper {\n    subSections: SapUi5RoutingTargetContentSubSections;\n}\n\nexport const SAPUI5_FRAGMENT_TYPE_V4 = 'XMLFragment';\nexport interface SapUi5RoutingTargetContentSection {\n    // Currently only xml fragment is supported\n    type: typeof SAPUI5_FRAGMENT_TYPE_V4;\n    name?: string;\n    title: string;\n    position: SapUi5RoutingTargetContentPosition;\n    template?: string;\n    templateEdit?: string;\n}\n\nexport enum SectionPositionV4 {\n    AfterFacet = 'AfterFacet',\n    BeforeFacet = 'BeforeFacet'\n}\n\nexport interface SapUi5RoutingTargetContentPosition {\n    placement: SectionPositionV4;\n    anchor: string;\n}\n", "import type {\n    SapUi5RootView,\n    SapUi5OdataModel,\n    SapUi5ResourceModel,\n    SapUi5RoutingRoute,\n    ViewTypes,\n    SapUi5RoutingTargetSettings,\n    SapUi5RoutingTargetBase,\n    SapUi5RoutingTarget,\n    Dependencies\n} from '../../../common/webapp/manifest/sapUi5';\nimport type { SapUiGenericAppPageSettings } from '../../../common/page';\nimport type { FlexibleColumnLayout } from '../../../common';\n\nexport interface FlexibleColumnLayoutV4 extends FlexibleColumnLayout {\n    /**\n     * To limit Flexible Column Layout to two columns. The third level will be displayed in full screen and not in a third column.\n     */\n    limitFCLToTwoColumns?: boolean;\n}\n\nexport interface SapUi5V4 {\n    flexEnabled?: boolean;\n    resources?: object;\n    dependencies?: Dependencies;\n    models?: { [key: string]: SapUi5OdataModel | SapUi5ResourceModel };\n    routing?: SapUi5RoutingV4;\n    [key: string]: string | object | boolean;\n    rootView?: SapUi5RootView;\n    extends?: SapUi5ExtendsV4;\n}\n\nexport interface SapUi5RoutingV4 {\n    config?: SapUi5RoutingConfig;\n    routes?: SapUi5RoutingRoute[];\n    targets: SapUi5RoutingTargetsV4;\n}\n\nexport type RoutingTargetOptions =\n    | SapUi5RoutingTarget\n    | SapUi5RoutingTargetCustomPageV4\n    | SapUi5RoutingTargetCustomPageV4New;\n\nexport interface SapUi5RoutingTargetsV4 {\n    [key: string]: RoutingTargetOptions;\n}\n\nexport interface SapUi5RoutingTargetCustomPageV4New extends SapUi5RoutingTarget {\n    options?: {\n        settings: SapUi5RoutingTargetSettings & SapUi5CommonCustomPageV4;\n    };\n}\n\nexport interface SapUi5CommonCustomPageV4 extends SapUi5RoutingTargetBase {\n    viewName: string;\n    controlConfiguration?: SapUiGenericAppPageSettings;\n}\n\nexport interface SapUi5RoutingTargetCustomPageV4 extends SapUi5CommonCustomPageV4 {\n    viewId: string;\n    viewLevel?: number;\n    viewType?: ViewTypes;\n    viewPath?: string;\n    path?: string;\n    title?: string;\n}\n\nexport const FIORI_FCL_ROUTER_CLASS = 'sap.f.routing.Router';\nexport type RouterClass = typeof FIORI_FCL_ROUTER_CLASS | string;\nexport interface SapUi5RoutingConfig {\n    routerClass?: RouterClass;\n    flexibleColumnLayout?: FlexibleColumnLayoutV4;\n    viewType?: ViewTypes;\n    viewPath?: string;\n    path?: string;\n}\n\nexport interface SapUi5DependenciesV4 {\n    minUI5Version?: string;\n    incompatibleLimitation?: boolean;\n    libs?: SapUi5DependenciesLibV4;\n}\n\nexport const SAPUI5_DEPENDENCY_LIB_SAP_F = 'sap.f';\nexport interface SapUi5DependenciesLibV4 {\n    [SAPUI5_DEPENDENCY_LIB_SAP_F]?: SapUi5DependencyLibV4;\n    [key: string]: SapUi5DependencyLibV4;\n}\n\nexport interface SapUi5DependencyLibV4 {\n    minVersion?: string;\n    lazy?: boolean;\n}\n\nexport interface SapUi5ExtendsV4 {\n    extensions?: SapUi5ExtensionsV4;\n}\n\nexport const SAPUI5_CONTROLLER_EXTENSION = 'sap.ui.controllerExtensions';\nexport const SAPUI5_VIEW_EXTENSION_OBJECT_PAGE = 'sap.fe.templates.ObjectPage.ObjectPageController';\nexport const SAPUI5_VIEW_EXTENSION_LIST_REPORT = 'sap.fe.templates.ListReport.ListReportController';\n\nexport interface SapUi5ExtensionsV4 {\n    [SAPUI5_CONTROLLER_EXTENSION]?: SapUi5ControllerExtensionsV4;\n}\n\nexport interface SapUi5ControllerExtensionsV4 {\n    [SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]?: SapUi5ControllerExtensionV4;\n    [SAPUI5_VIEW_EXTENSION_LIST_REPORT]?: SapUi5ControllerExtensionV4;\n    [key: string]: SapUi5ControllerExtensionV4;\n}\n\nexport interface SapUi5ControllerExtensionV4 {\n    controllerName?: string;\n    controllerNames?: string[];\n}\n", "// Copies of sap.fe type definitions\nexport enum Placement {\n    After = 'After',\n    Before = 'Before'\n}\n\nexport interface Position {\n    /**\n     * The key of another column to be used as placement anchor.\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor column.\n     */\n    placement: Placement;\n}\n\nexport interface ViewPosition {\n    /**\n     * The key of another column to be used as placement anchor.\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor column.\n     */\n    placement: Placement;\n}\n\nexport type Positionable = {\n    /**\n     *   Defines the position of the column relative to other columns.\n     */\n    position?: Position;\n};\n\nexport interface ActionAfterExecutionConfiguration {\n    /**\n     * Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d\n     */\n    navigateToInstance?: boolean;\n    /**\n     * Allows you to scroll to the newly created or changed item after you have performed an action.\n     */\n    enableAutoScroll?: boolean;\n}\n\nexport enum Availability {\n    'Default' = 'Default',\n    'Adaptation' = 'Adaptation',\n    'Hidden' = 'Hidden'\n}\n\nexport enum HorizontalAlign {\n    'Begin' = 'Begin',\n    'Center' = 'Center',\n    'End' = 'End'\n}\n\n/**\n * Table Column\n * @isViewNode true\n */\nexport interface TableColumn {\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize\n     * @descriptionSrcURL https://ui5.sap.com/api/sap.ui.core.CSSSize\n     */\n    width?: string;\n    /**\n     * Defines where the column should be shown.\n     * Default: it will be shown by default in the table.\n     * Adaptation: it will initially not be shown in the table but be available via end user adaptation.\n     * Hidden: the column is neither available in the table nor in adaptation.\n     */\n    availability?: Availability;\n}\n\n/**\n * Table Column\n * @isViewNode true\n */\nexport interface ViewTableColumn {\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize\n     * @descriptionSrcURL https://ui5.sap.com/api/sap.ui.core.CSSSize\n     */\n    width?: string;\n    /**\n     * Defines where the column should be shown.\n     * Default: it will be shown by default in the table.\n     * Adaptation: it will initially not be shown in the table but be available via end user adaptation.\n     * Hidden: the column is neither available in the table nor in adaptation.\n     */\n    availability?: Availability;\n}\n\n/**\n * Table Column\n * @isViewNode true\n */\nexport interface ObjectPageTableColumn {\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize\n     * @descriptionSrcURL https://ui5.sap.com/api/sap.ui.core.CSSSize\n     */\n    width?: string;\n    /**\n     * Defines where the column should be shown.\n     * Default: it will be shown by default in the table.\n     * Adaptation: it will initially not be shown in the table but be available via end user adaptation.\n     * Hidden: the column is neither available in the table nor in adaptation.\n     */\n    availability?: Availability;\n}\n\n/**\n * Inline Action\n * @isViewNode true\n */\nexport interface TableColumnAction extends TableColumn {\n    /**\n     * Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)\n     */\n    afterExecution?: ActionAfterExecutionConfiguration;\n}\n\n/**\n * Inline Action\n * @isViewNode true\n */\nexport interface ViewTableColumnAction extends ViewTableColumn {\n    /**\n     * Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)\n     */\n    afterExecution?: ActionAfterExecutionConfiguration;\n}\n\nexport type ColumnPropertiesType = string[];\n\n/**\n * Inline Action for Object Page\n * @isViewNode true\n */\nexport interface ObjectPageTableColumnAction extends ObjectPageTableColumn {}\n\n/**\n * Custom Column\n * @isViewNode true\n */\nexport interface TableCustomColumn {\n    /**\n     * Defines the position of the column relative to other columns.\n     * @artifactType Manifest\n     */\n    position?: Position;\n    /**\n     * The header is shown on the table as header, as well as in the add/remove dialog.\n     * @i18nClassification COL: Custom column header text\n     * @artifactType Manifest\n     */\n    header: string;\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize\n     * @artifactType Manifest\n     * @descriptionSrcURL https://ui5.sap.com/api/sap.ui.core.CSSSize\n     */\n    width?: string;\n    /**\n     * Relevant for extension columns; allows the definition of a target fragment.\n     * @artifactType Manifest\n     */\n    template: string;\n    /**\n     * Aligns the header as well as the content horizontally.\n     * @artifactType Manifest\n     */\n    horizontalAlign?: HorizontalAlign;\n    /**\n     * Defines where the column should be shown.\n     * - Default: it will be shown by default in the table.\n     * - Adaptation: it will initially not be shown in the table but be available via end user adaptation\n     * - Hidden: the column is neither available in the table nor in adaptation\n     * @artifactType Manifest\n     */\n    availability?: Availability;\n    /**\n     * If provided and sorting is enabled for the table the custom column header can be clicked. This will lead to a list of properties (or one) that can be sorted by, they are displayed as the labels of the properties, corresponding to their definition in the annotations.\n     * @artifactType Manifest\n     */\n    properties?: ColumnPropertiesType;\n}\n\n/**\n * Custom Column\n * @isViewNode true\n */\nexport interface ViewTableCustomColumn {\n    /**\n     *   Defines the position of the column relative to other columns.\n     * @artifactType Manifest\n     */\n    position?: ViewPosition;\n    /**\n     * The header is shown on the table as header, as well as in the add/remove dialog.\n     * @i18nClassification COL: Custom column header text\n     * @artifactType Manifest\n     */\n    header: string;\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://ui5.sap.com/api/sap.ui.core.CSSSize\n     * @artifactType Manifest\n     * @descriptionSrcURL https://ui5.sap.com/api/sap.ui.core.CSSSize\n     */\n    width?: string;\n    /**\n     * Relevant for extension columns; allows the definition of a target fragment.\n     * @artifactType Manifest\n     */\n    template: string;\n    /**\n     * Aligns the header as well as the content horizontally.\n     * @artifactType Manifest\n     */\n    horizontalAlign?: HorizontalAlign;\n    /**\n     * Defines where the column should be shown.\n     * - Default: it will be shown by default in the table.\n     * - Adaptation: it will initially not be shown in the table but be available via end user adaptation\n     * - Hidden: the column is neither available in the table nor in adaptation\n     * @artifactType Manifest\n     */\n    availability?: Availability;\n    /**\n     * If provided and sorting is enabled for the table the custom column header can be clicked. This will lead to a list of properties (or one) that can be sorted by, they are displayed as the labels of the properties, corresponding to their definition in the annotations.\n     * @artifactType Manifest\n     */\n    properties?: ColumnPropertiesType;\n}\n", "import type { PageConfig } from '../../common';\nimport type {\n    ObjectPageHeader,\n    ObjectPageLayout,\n    GenericSections,\n    CustomSections,\n    ObjectPageFooter\n} from '../controls';\n\nexport enum VariantManagementTypeObjectPage {\n    None = 'None',\n    Control = 'Control'\n}\n\nexport interface ObjectPageConfigV4 extends PageConfig {\n    header?: ObjectPageHeader;\n    layout?: ObjectPageLayout;\n    /**\n     * Allows you to enable and disable variant management for tables.\n     *\n     * - None (default): No variant management is possible by default.\n     * - Control: Individual personalization for each control is possible.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/f26d42bea11c4deda82c7a2e00c9bc05.html\n     */\n    variantManagement?: VariantManagementTypeObjectPage;\n\n    sections?: GenericSections | CustomSections;\n\n    footer?: ObjectPageFooter;\n}\n", "import type { PageConfig } from '../../common';\nimport type { ALPChartView, ALPTableView, DefaultPathType, FilterBar, Header, Table } from '../controls';\n\nexport enum VariantManagementTypeListReport {\n    None = 'None',\n    Control = 'Control',\n    Page = 'Page'\n}\n\nexport interface ListReportConfigV4 extends PageConfig {\n    /**\n     * variantManagement defines how the variant management of page personalizations is controlled.\n     * - None - No variant management by default.\n     * - Control - Individual personalizations for each control.\n     */\n    variantManagement?: VariantManagementTypeListReport;\n    /**\n     * Header\n     */\n    header?: Header;\n    /**\n     * Filter Bar\n     */\n    filterBar?: FilterBar;\n\n    /**\n     * Chart\n     */\n    chart?: ALPChartView;\n\n    /**\n     * Table\n     */\n    table?: Table | ALPTableView;\n\n    /**\n     * defaultTemplateAnnotationPath must be a reference to a SelectionPresentationVariant.\n     * You use the SelectionPresentationVariant to configure the default visualizations and default filter values of the main content area.\n     */\n    defaultTemplateAnnotationPath?: string;\n\n    /**\n     * Allows you to set the initial view mode\n     *\n     * - primary: This property loads the app in chart-only view.\n     * - secondary: This property loads the app in table-only view.\n     * - both: This property loads the app in hybrid view.\n     *\n     * @descriptionSrcURL https://ui5.sap.com/sdk/#/topic/2a9df06673d34f72b238549d49da8bfb\n     */\n    defaultPath?: DefaultPathType;\n}\n", "export * from './common';\nexport * from './apiTypes';\nexport * as v2 from './v2';\nexport * as v4 from './v4';\n", "'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n", "import type {\n    Annotation,\n    AnnotationList,\n    ArrayWithIndex,\n    ComplexType,\n    Index,\n    Reference,\n    TypeDefinition\n} from '@sap-ux/vocabularies-types';\n\nexport { EnumIsFlag } from '@sap-ux/vocabularies-types/vocabularies/EnumIsFlag';\nexport { TermToTypes } from '@sap-ux/vocabularies-types/vocabularies/TermToTypes';\nexport { VocabularyReferences as defaultReferences } from '@sap-ux/vocabularies-types/vocabularies/VocabularyReferences';\n\nexport type ReferencesWithMap = Reference[] & {\n    referenceMap?: Record<string, Reference>;\n    reverseReferenceMap?: Record<string, Reference>;\n};\n\nfunction splitAt(string: string, index: number): [string, string] {\n    return index < 0 ? [string, ''] : [string.substring(0, index), string.substring(index + 1)];\n}\n\nfunction substringAt(string: string, index: number) {\n    return index < 0 ? string : string.substring(0, index);\n}\n\n/**\n * Splits a string at the first occurrence of a separator.\n *\n * @param string    The string to split\n * @param separator Separator, e.g. a single character.\n * @returns An array consisting of two elements: the part before the first occurrence of the separator and the part after it. If the string does not contain the separator, the second element is the empty string.\n */\nexport function splitAtFirst(string: string, separator: string): [string, string] {\n    return splitAt(string, string.indexOf(separator));\n}\n\n/**\n * Splits a string at the last occurrence of a separator.\n *\n * @param string    The string to split\n * @param separator Separator, e.g. a single character.\n * @returns An array consisting of two elements: the part before the last occurrence of the separator and the part after it. If the string does not contain the separator, the second element is the empty string.\n */\nexport function splitAtLast(string: string, separator: string): [string, string] {\n    return splitAt(string, string.lastIndexOf(separator));\n}\n\n/**\n * Returns the substring before the first occurrence of a separator.\n *\n * @param string    The string\n * @param separator Separator, e.g. a single character.\n * @returns The substring before the first occurrence of the separator, or the input string if it does not contain the separator.\n */\nexport function substringBeforeFirst(string: string, separator: string): string {\n    return substringAt(string, string.indexOf(separator));\n}\n\n/**\n * Returns the substring before the last occurrence of a separator.\n *\n * @param string    The string\n * @param separator Separator, e.g. a single character.\n * @returns The substring before the last occurrence of the separator, or the input string if it does not contain the separator.\n */\nexport function substringBeforeLast(string: string, separator: string): string {\n    return substringAt(string, string.lastIndexOf(separator));\n}\n\n/**\n * Transform an unaliased string representation annotation to the aliased version.\n *\n * @param references currentReferences for the project\n * @param unaliasedValue the unaliased value\n * @returns the aliased string representing the same\n */\nexport function alias(references: ReferencesWithMap, unaliasedValue: string): string {\n    if (!references.reverseReferenceMap) {\n        references.reverseReferenceMap = references.reduce((map: Record<string, Reference>, ref) => {\n            map[ref.namespace] = ref;\n            return map;\n        }, {});\n    }\n    if (!unaliasedValue) {\n        return unaliasedValue;\n    }\n    const [namespace, value] = splitAtLast(unaliasedValue, '.');\n    const reference = references.reverseReferenceMap[namespace];\n    if (reference) {\n        return `${reference.alias}.${value}`;\n    } else if (unaliasedValue.includes('@')) {\n        // Try to see if it's an annotation Path like to_SalesOrder/@UI.LineItem\n        const [preAlias, postAlias] = splitAtFirst(unaliasedValue, '@');\n        return `${preAlias}@${alias(references, postAlias)}`;\n    } else {\n        return unaliasedValue;\n    }\n}\n\n/**\n * Transform an aliased string to its unaliased version given a set of references.\n *\n * @param references The references to use for unaliasing.\n * @param aliasedValue The aliased value\n * @param namespace The fallback namespace\n * @returns The equal unaliased string.\n */\nexport function unalias(\n    references: ReferencesWithMap,\n    aliasedValue: string | undefined,\n    namespace?: string\n): string | undefined {\n    const _unalias = (value: string) => {\n        if (!references.referenceMap) {\n            references.referenceMap = Object.fromEntries(references.map((ref) => [ref.alias, ref]));\n        }\n\n        // Aliases are of type 'SimpleIdentifier' and must not contain dots\n        const [maybeAlias, rest] = splitAtFirst(value, '.');\n\n        if (!rest || rest.includes('.')) {\n            // either there is no dot in the value or there is more than one --> nothing to do\n            return value;\n        }\n\n        const isAnnotation = maybeAlias.startsWith('@');\n        const valueToUnalias = isAnnotation ? maybeAlias.substring(1) : maybeAlias;\n        const knownReference = references.referenceMap[valueToUnalias];\n        if (knownReference) {\n            return isAnnotation ? `@${knownReference.namespace}.${rest}` : `${knownReference.namespace}.${rest}`;\n        }\n\n        // The alias could not be resolved using the references. Assume it is the \"global\" alias (= namespace)\n        return namespace && !isAnnotation ? `${namespace}.${rest}` : value;\n    };\n\n    return aliasedValue\n        ?.split('/')\n        .reduce((segments, segment) => {\n            // the segment could be an action, like \"doSomething(foo.bar)\"\n            const [first, rest] = splitAtFirst(segment, '(');\n            const subSegment = [_unalias(first)];\n\n            if (rest) {\n                const parameter = rest.slice(0, -1); // remove trailing \")\"\n                subSegment.push(`(${_unalias(parameter)})`);\n            }\n            segments.push(subSegment.join(''));\n\n            return segments;\n        }, [] as string[])\n        ?.join('/');\n}\n\n/**\n * Differentiate between a ComplexType and a TypeDefinition.\n *\n * @param complexTypeDefinition\n * @returns true if the value is a complex type\n */\nexport function isComplexTypeDefinition(\n    complexTypeDefinition?: ComplexType | TypeDefinition\n): complexTypeDefinition is ComplexType {\n    return (\n        !!complexTypeDefinition && complexTypeDefinition._type === 'ComplexType' && !!complexTypeDefinition.properties\n    );\n}\n\nexport function Decimal(value: number) {\n    return {\n        isDecimal() {\n            return true;\n        },\n        valueOf() {\n            return value;\n        },\n        toString() {\n            return value.toString();\n        }\n    };\n}\n\n/**\n * Defines a lazy property.\n *\n * The property is initialized by calling the init function on the first read access, or by directly assigning a value.\n *\n * @param object    The host object\n * @param property  The lazy property to add\n * @param init      The function that initializes the property's value\n */\nexport function lazy<Type, Key extends keyof Type>(object: Type, property: Key, init: () => Type[Key]) {\n    const initial = Symbol('initial');\n    let _value: Type[Key] | typeof initial = initial;\n\n    Object.defineProperty(object, property, {\n        enumerable: true,\n\n        get() {\n            if (_value === initial) {\n                _value = init();\n            }\n            return _value;\n        },\n\n        set(value: Type[Key]) {\n            _value = value;\n        }\n    });\n}\n\n/**\n * Creates a function that allows to find an array element by property value.\n *\n * @param array     The array\n * @param property  Elements in the array are searched by this property\n * @returns A function that can be used to find an element of the array by property value.\n */\nexport function createIndexedFind<T>(array: Array<T>, property: keyof T) {\n    const index: Map<T[keyof T], T | undefined> = new Map();\n\n    return function find(value: T[keyof T]) {\n        const element = index.get(value);\n\n        if (element?.[property] === value) {\n            return element;\n        }\n\n        return array.find((element) => {\n            if (!element?.hasOwnProperty(property)) {\n                return false;\n            }\n\n            const propertyValue = element[property];\n            index.set(propertyValue, element);\n            return propertyValue === value;\n        });\n    };\n}\n\n/**\n * Adds a 'get by value' function to an array.\n *\n * If this function is called with addIndex(myArray, 'name'), a new function 'by_name(value)' will be added that allows to\n * find a member of the array by the value of its 'name' property.\n *\n * @param array      The array\n * @param property   The property that will be used by the 'by_{property}()' function\n * @returns The array with the added function\n */\nexport function addGetByValue<T, P extends Extract<keyof T, string>>(array: Array<T>, property: P) {\n    const indexName: keyof Index<T, P> = `by_${property}`;\n\n    if (!array.hasOwnProperty(indexName)) {\n        Object.defineProperty(array, indexName, { writable: false, value: createIndexedFind(array, property) });\n    } else {\n        throw new Error(`Property '${indexName}' already exists`);\n    }\n    return array as ArrayWithIndex<T, P>;\n}\n\n/**\n * Merge annotations from different sources together by overwriting at the term level.\n *\n * @param references        References, used to resolve aliased annotation targets and aliased annotation terms.\n * @param annotationSources Annotation sources\n * @returns the resulting merged annotations\n */\nexport function mergeAnnotations(\n    references: Reference[],\n    ...annotationSources: { name: string; annotationList: AnnotationList[] }[]\n): Record<string, Annotation[]> {\n    return annotationSources.reduceRight((result, { name, annotationList }) => {\n        for (const { target, annotations } of annotationList) {\n            const annotationTarget = unalias(references, target) ?? target;\n            if (!result[annotationTarget]) {\n                result[annotationTarget] = [];\n            }\n\n            const annotationsOnTarget = annotations\n                .map((rawAnnotation): Annotation => {\n                    rawAnnotation.term = unalias(references, rawAnnotation.term) ?? rawAnnotation.term;\n\n                    (rawAnnotation as any).fullyQualifiedName = rawAnnotation.qualifier\n                        ? `${annotationTarget}@${rawAnnotation.term}#${rawAnnotation.qualifier}`\n                        : `${annotationTarget}@${rawAnnotation.term}`;\n\n                    (rawAnnotation as any).__source = name;\n\n                    return rawAnnotation as Annotation;\n                })\n                .filter(\n                    (annotation) =>\n                        !result[annotationTarget].some(\n                            (existingAnnotation) =>\n                                existingAnnotation.term === annotation.term &&\n                                existingAnnotation.qualifier === annotation.qualifier\n                        )\n                );\n\n            result[annotationTarget].push(...annotationsOnTarget);\n        }\n\n        return result;\n    }, {} as Record<string, Annotation[]>);\n}\n", "import type {\n    Action,\n    ActionImport,\n    ActionParameter,\n    Annotation,\n    AnnotationPath,\n    AnnotationRecord,\n    ArrayWithIndex,\n    BaseNavigationProperty,\n    ComplexType,\n    ConvertedMetadata,\n    EntityContainer,\n    EntitySet,\n    EntityType,\n    Expression,\n    FullyQualifiedName,\n    NavigationProperty,\n    NavigationPropertyPath,\n    PathAnnotationExpression,\n    Property,\n    PropertyPath,\n    RawAction,\n    RawActionImport,\n    RawAnnotation,\n    RawComplexType,\n    RawEntityContainer,\n    RawEntitySet,\n    RawEntityType,\n    RawMetadata,\n    RawNavigationPropertyBinding,\n    RawProperty,\n    RawSchema,\n    RawSingleton,\n    RawTypeDefinition,\n    RawV2NavigationProperty,\n    RawV4NavigationProperty,\n    RemoveAnnotationAndType,\n    ResolutionTarget,\n    Singleton,\n    TypeDefinition\n} from '@sap-ux/vocabularies-types';\nimport { VocabularyReferences } from '@sap-ux/vocabularies-types/vocabularies/VocabularyReferences';\nimport {\n    addGetByValue,\n    alias,\n    Decimal,\n    EnumIsFlag,\n    lazy,\n    mergeAnnotations,\n    splitAtFirst,\n    splitAtLast,\n    substringBeforeFirst,\n    substringBeforeLast,\n    TermToTypes,\n    unalias\n} from './utils';\n\n/**\n * Symbol to extend an annotation with the reference to its target.\n */\nconst ANNOTATION_TARGET = Symbol('Annotation Target');\n\n/**\n * Append an object to the list of visited objects if it is different from the last object in the list.\n *\n * @param objectPath    The list of visited objects\n * @param visitedObject The object\n * @returns The list of visited objects\n */\nfunction appendObjectPath(objectPath: any[], visitedObject: any): any[] {\n    if (objectPath[objectPath.length - 1] !== visitedObject) {\n        objectPath.push(visitedObject);\n    }\n    return objectPath;\n}\n\n/**\n * Resolves a (possibly relative) path.\n *\n * @param converter         Converter\n * @param startElement      The starting point in case of relative path resolution\n * @param path              The path to resolve\n * @param annotationsTerm   Only for error reporting: The annotation term\n * @returns An object containing the resolved target and the elements that were visited while getting to the target.\n */\nfunction resolveTarget<T>(\n    converter: Converter,\n    startElement: any,\n    path: string | undefined,\n    annotationsTerm?: string\n): ResolutionTarget<T> {\n    if (path === undefined) {\n        return { target: undefined, objectPath: [], messages: [] };\n    }\n\n    // absolute paths always start at the entity container\n    if (path.startsWith('/')) {\n        path = path.substring(1);\n        startElement = undefined; // will resolve to the entity container (see below)\n    }\n\n    const pathSegments = path.split('/').reduce((targetPath, segment) => {\n        if (segment.includes('@')) {\n            // Separate out the annotation\n            const [pathPart, annotationPart] = splitAtFirst(segment, '@');\n            targetPath.push(pathPart);\n            targetPath.push(`@${annotationPart}`);\n        } else {\n            targetPath.push(segment);\n        }\n        return targetPath;\n    }, [] as string[]);\n\n    // determine the starting point for the resolution\n    if (startElement === undefined) {\n        // no starting point given: start at the entity container\n        if (\n            pathSegments[0].startsWith(`${converter.rawSchema.namespace}.`) &&\n            pathSegments[0] !== converter.getConvertedEntityContainer()?.fullyQualifiedName\n        ) {\n            // We have a fully qualified name in the path that is not the entity container.\n            startElement =\n                converter.getConvertedEntityType(pathSegments[0]) ??\n                converter.getConvertedComplexType(pathSegments[0]) ??\n                converter.getConvertedAction(pathSegments[0]) ??\n                converter.getConvertedAction(`${pathSegments[0]}()`); // unbound action\n            pathSegments.shift(); // Let's remove the first path element\n        } else {\n            startElement = converter.getConvertedEntityContainer();\n        }\n    } else if (startElement[ANNOTATION_TARGET] !== undefined) {\n        // annotation: start at the annotation target\n        startElement = startElement[ANNOTATION_TARGET];\n    } else if (startElement._type === 'Property') {\n        // property: start at the entity type or complex type the property belongs to\n        const parentElementFQN = substringBeforeFirst(startElement.fullyQualifiedName, '/');\n        startElement =\n            converter.getConvertedEntityType(parentElementFQN) ?? converter.getConvertedComplexType(parentElementFQN);\n    }\n\n    const result = pathSegments.reduce(\n        (current: ResolutionTarget<any>, segment: string) => {\n            const error = (message: string) => {\n                current.messages.push({ message });\n                current.target = undefined;\n                return current;\n            };\n\n            if (current.target === undefined) {\n                return current;\n            }\n\n            current.objectPath = appendObjectPath(current.objectPath, current.target);\n\n            // Annotation\n            if (segment.startsWith('@') && segment !== '@$ui5.overload') {\n                const [vocabularyAlias, term] = converter.splitTerm(segment);\n                const annotation = current.target.annotations[vocabularyAlias.substring(1)]?.[term];\n\n                if (annotation !== undefined) {\n                    current.target = annotation;\n                    return current;\n                }\n                return error(\n                    `Annotation '${segment.substring(1)}' not found on ${current.target._type} '${\n                        current.target.fullyQualifiedName\n                    }'`\n                );\n            }\n\n            // $Path / $AnnotationPath syntax\n            if (current.target.$target) {\n                let subPath: string | undefined;\n                if (segment === '$AnnotationPath') {\n                    subPath = current.target.value;\n                } else if (segment === '$Path') {\n                    subPath = current.target.path;\n                }\n\n                if (subPath !== undefined) {\n                    const subTarget = resolveTarget(converter, current.target[ANNOTATION_TARGET], subPath);\n                    subTarget.objectPath.forEach((visitedSubObject: any) => {\n                        if (!current.objectPath.includes(visitedSubObject)) {\n                            current.objectPath = appendObjectPath(current.objectPath, visitedSubObject);\n                        }\n                    });\n\n                    current.target = subTarget.target;\n                    current.objectPath = appendObjectPath(current.objectPath, current.target);\n                    return current;\n                }\n            }\n\n            // traverse based on the element type\n            switch (current.target?._type) {\n                case 'Schema':\n                    // next element: EntityType, ComplexType, Action, EntityContainer ?\n\n                    break;\n                case 'EntityContainer':\n                    {\n                        const thisElement = current.target as EntityContainer;\n\n                        if (segment === '' || converter.unalias(segment) === thisElement.fullyQualifiedName) {\n                            return current;\n                        }\n\n                        // next element: EntitySet, Singleton or ActionImport?\n                        const nextElement: EntitySet | Singleton | ActionImport | undefined =\n                            thisElement.entitySets.by_name(segment) ??\n                            thisElement.singletons.by_name(segment) ??\n                            thisElement.actionImports.by_name(segment);\n\n                        if (nextElement) {\n                            current.target = nextElement;\n                            return current;\n                        }\n                    }\n                    break;\n\n                case 'EntitySet':\n                case 'Singleton': {\n                    const thisElement = current.target as EntitySet | Singleton;\n\n                    if (segment === '' || segment === '$Type') {\n                        // Empty Path after an EntitySet or Singleton means EntityType\n                        current.target = thisElement.entityType;\n                        return current;\n                    }\n\n                    if (segment === '$') {\n                        return current;\n                    }\n\n                    if (segment === '$NavigationPropertyBinding') {\n                        const navigationPropertyBindings = thisElement.navigationPropertyBinding;\n                        current.target = navigationPropertyBindings;\n                        return current;\n                    }\n\n                    // continue resolving at the EntitySet's or Singleton's type\n                    const result = resolveTarget(converter, thisElement.entityType, segment);\n                    current.target = result.target;\n                    current.objectPath = result.objectPath.reduce(appendObjectPath, current.objectPath);\n                    return current;\n                }\n\n                case 'EntityType':\n                    {\n                        const thisElement = current.target as EntityType;\n\n                        if (segment === '' || segment === '$Type') {\n                            return current;\n                        }\n\n                        const property = thisElement.entityProperties.by_name(segment);\n                        if (property) {\n                            current.target = property;\n                            return current;\n                        }\n\n                        const navigationProperty = thisElement.navigationProperties.by_name(segment);\n                        if (navigationProperty) {\n                            current.target = navigationProperty;\n                            return current;\n                        }\n\n                        const actionName = substringBeforeFirst(converter.unalias(segment), '(');\n                        const action = thisElement.actions[actionName];\n                        if (action) {\n                            current.target = action;\n                            return current;\n                        }\n                    }\n                    break;\n\n                case 'ActionImport': {\n                    // continue resolving at the Action\n                    const result = resolveTarget(converter, current.target.action, segment);\n                    current.target = result.target;\n                    current.objectPath = result.objectPath.reduce(appendObjectPath, current.objectPath);\n                    return current;\n                }\n\n                case 'Action': {\n                    const thisElement = current.target as Action;\n\n                    if (segment === '') {\n                        return current;\n                    }\n\n                    if (segment === '@$ui5.overload' || segment === '0') {\n                        return current;\n                    }\n\n                    if (segment === '$Parameter' && thisElement.isBound) {\n                        current.target = thisElement.parameters;\n                        return current;\n                    }\n\n                    const nextElement =\n                        thisElement.parameters[segment as any] ??\n                        thisElement.parameters.find((param: ActionParameter) => param.name === segment);\n\n                    if (nextElement) {\n                        current.target = nextElement;\n                        return current;\n                    }\n                    break;\n                }\n\n                case 'Property':\n                    {\n                        const thisElement = current.target as Property;\n\n                        // Property or NavigationProperty of the ComplexType\n                        const type = thisElement.targetType as ComplexType | undefined;\n                        if (type !== undefined) {\n                            const property = type.properties.by_name(segment);\n                            if (property) {\n                                current.target = property;\n                                return current;\n                            }\n\n                            const navigationProperty = type.navigationProperties.by_name(segment);\n                            if (navigationProperty) {\n                                current.target = navigationProperty;\n                                return current;\n                            }\n                        }\n                    }\n                    break;\n\n                case 'ActionParameter':\n                    const referencedType = (current.target as ActionParameter).typeReference;\n                    if (referencedType !== undefined) {\n                        const result = resolveTarget(converter, referencedType, segment);\n                        current.target = result.target;\n                        current.objectPath = result.objectPath.reduce(appendObjectPath, current.objectPath);\n                        return current;\n                    }\n                    break;\n\n                case 'NavigationProperty':\n                    // continue at the NavigationProperty's target type\n                    const result = resolveTarget(converter, (current.target as NavigationProperty).targetType, segment);\n                    current.target = result.target;\n                    current.objectPath = result.objectPath.reduce(appendObjectPath, current.objectPath);\n                    return current;\n\n                default:\n                    if (segment === '') {\n                        return current;\n                    }\n\n                    if (current.target[segment]) {\n                        current.target = current.target[segment];\n                        current.objectPath = appendObjectPath(current.objectPath, current.target);\n                        return current;\n                    }\n            }\n\n            return error(\n                `Element '${segment}' not found at ${current.target._type} '${current.target.fullyQualifiedName}'`\n            );\n        },\n        { target: startElement, objectPath: [], messages: [] }\n    );\n\n    // Diagnostics\n    result.messages.forEach((message) => converter.logError(message.message));\n    if (!result.target) {\n        if (annotationsTerm) {\n            const annotationType = inferTypeFromTerm(converter, annotationsTerm, startElement.fullyQualifiedName);\n            converter.logError(\n                'Unable to resolve the path expression: ' +\n                    '\\n' +\n                    path +\n                    '\\n' +\n                    '\\n' +\n                    'Hint: Check and correct the path values under the following structure in the metadata (annotation.xml file or CDS annotations for the application): \\n\\n' +\n                    '<Annotation Term = ' +\n                    annotationsTerm +\n                    '>' +\n                    '\\n' +\n                    '<Record Type = ' +\n                    annotationType +\n                    '>' +\n                    '\\n' +\n                    '<AnnotationPath = ' +\n                    path +\n                    '>'\n            );\n        } else {\n            converter.logError(\n                'Unable to resolve the path expression: ' +\n                    path +\n                    '\\n' +\n                    '\\n' +\n                    'Hint: Check and correct the path values under the following structure in the metadata (annotation.xml file or CDS annotations for the application): \\n\\n' +\n                    '<Annotation Term = ' +\n                    pathSegments[0] +\n                    '>' +\n                    '\\n' +\n                    '<PropertyValue  Path= ' +\n                    pathSegments[1] +\n                    '>'\n            );\n        }\n    }\n\n    return result;\n}\n\n/**\n * Typeguard to check if the path contains an annotation.\n *\n * @param pathStr the path to evaluate\n * @returns true if there is an annotation in the path.\n */\nfunction isAnnotationPath(pathStr: string): boolean {\n    return pathStr.includes('@');\n}\n\ntype AnnotationValue<T> = T & { [ANNOTATION_TARGET]: any };\n\nfunction mapPropertyPath(\n    converter: Converter,\n    propertyPath: { type: 'PropertyPath'; PropertyPath: string },\n    fullyQualifiedName: FullyQualifiedName,\n    currentTarget: any,\n    currentTerm: string\n) {\n    const result: Omit<AnnotationValue<PropertyPath>, '$target'> = {\n        type: 'PropertyPath',\n        value: propertyPath.PropertyPath,\n        fullyQualifiedName: fullyQualifiedName,\n        [ANNOTATION_TARGET]: currentTarget\n    };\n\n    lazy(\n        result as AnnotationValue<PropertyPath>,\n        '$target',\n        () => resolveTarget<Property>(converter, currentTarget, propertyPath.PropertyPath, currentTerm).target\n    );\n\n    return result as AnnotationValue<PropertyPath>;\n}\n\nfunction mapAnnotationPath(\n    converter: Converter,\n    annotationPath: { type: 'AnnotationPath'; AnnotationPath: string },\n    fullyQualifiedName: FullyQualifiedName,\n    currentTarget: any,\n    currentTerm: string\n) {\n    const result: Omit<AnnotationValue<AnnotationPath<any>>, '$target'> = {\n        type: 'AnnotationPath',\n        value: converter.unalias(annotationPath.AnnotationPath),\n        fullyQualifiedName: fullyQualifiedName,\n        [ANNOTATION_TARGET]: currentTarget\n    };\n\n    lazy(\n        result as AnnotationValue<AnnotationPath<any>>,\n        '$target',\n        () => resolveTarget(converter, currentTarget, result.value, currentTerm).target\n    );\n\n    return result as AnnotationValue<AnnotationPath<any>>;\n}\n\nfunction mapNavigationPropertyPath(\n    converter: Converter,\n    navigationPropertyPath: { type: 'NavigationPropertyPath'; NavigationPropertyPath: string },\n    fullyQualifiedName: FullyQualifiedName,\n    currentTarget: any,\n    currentTerm: string\n) {\n    const result: Omit<AnnotationValue<NavigationPropertyPath>, '$target'> = {\n        type: 'NavigationPropertyPath',\n        value: navigationPropertyPath.NavigationPropertyPath ?? '',\n        fullyQualifiedName: fullyQualifiedName,\n        [ANNOTATION_TARGET]: currentTarget\n    };\n\n    lazy(\n        result as AnnotationValue<NavigationPropertyPath>,\n        '$target',\n        () =>\n            resolveTarget<NavigationProperty>(\n                converter,\n                currentTarget,\n                navigationPropertyPath.NavigationPropertyPath,\n                currentTerm\n            ).target\n    );\n\n    return result as AnnotationValue<NavigationPropertyPath>;\n}\n\nfunction mapPath(\n    converter: Converter,\n    path: { type: 'Path'; Path: string },\n    fullyQualifiedName: FullyQualifiedName,\n    currentTarget: any,\n    currentTerm: string\n) {\n    const result: Omit<AnnotationValue<PathAnnotationExpression<any>>, '$target'> = {\n        type: 'Path',\n        path: path.Path,\n        fullyQualifiedName: fullyQualifiedName,\n        getValue(): any {\n            return undefined; // TODO: Required according to the type...\n        },\n        [ANNOTATION_TARGET]: currentTarget\n    };\n\n    lazy(\n        result as AnnotationValue<PathAnnotationExpression<any>>,\n        '$target',\n        () => resolveTarget<Property>(converter, currentTarget, path.Path, currentTerm).target\n    );\n\n    return result as AnnotationValue<PathAnnotationExpression<any>>;\n}\n\nfunction parseValue(\n    converter: Converter,\n    currentTarget: any,\n    currentTerm: string,\n    currentProperty: string,\n    currentSource: string,\n    propertyValue: Expression,\n    valueFQN: string\n) {\n    if (propertyValue === undefined) {\n        return undefined;\n    }\n    switch (propertyValue.type) {\n        case 'String':\n            return propertyValue.String;\n        case 'Int':\n            return propertyValue.Int;\n        case 'Bool':\n            return propertyValue.Bool;\n        case 'Decimal':\n            return Decimal(propertyValue.Decimal);\n        case 'Date':\n            return propertyValue.Date;\n        case 'EnumMember':\n            const splitEnum = propertyValue.EnumMember.split(' ').map((enumValue) => {\n                const unaliased = converter.unalias(enumValue) ?? '';\n                return alias(VocabularyReferences, unaliased);\n            });\n            if (splitEnum[0] !== undefined && EnumIsFlag[substringBeforeFirst(splitEnum[0], '/')]) {\n                return splitEnum;\n            }\n            return splitEnum[0];\n\n        case 'PropertyPath':\n            return mapPropertyPath(converter, propertyValue, valueFQN, currentTarget, currentTerm);\n\n        case 'NavigationPropertyPath':\n            return mapNavigationPropertyPath(converter, propertyValue, valueFQN, currentTarget, currentTerm);\n\n        case 'AnnotationPath':\n            return mapAnnotationPath(converter, propertyValue, valueFQN, currentTarget, currentTerm);\n\n        case 'Path': {\n            if (isAnnotationPath(propertyValue.Path)) {\n                // inline the target\n                return resolveTarget(converter, currentTarget, propertyValue.Path, currentTerm).target;\n            } else {\n                return mapPath(converter, propertyValue, valueFQN, currentTarget, currentTerm);\n            }\n        }\n\n        case 'Record':\n            return parseRecord(\n                converter,\n                currentTerm,\n                currentTarget,\n                currentProperty,\n                currentSource,\n                propertyValue.Record,\n                valueFQN\n            );\n\n        case 'Collection':\n            return parseCollection(\n                converter,\n                currentTarget,\n                currentTerm,\n                currentProperty,\n                currentSource,\n                propertyValue.Collection,\n                valueFQN\n            );\n        case 'Apply':\n        case 'Null':\n        case 'Not':\n        case 'Eq':\n        case 'Ne':\n        case 'Gt':\n        case 'Ge':\n        case 'Lt':\n        case 'Le':\n        case 'If':\n        case 'And':\n        case 'Or':\n        default:\n            return propertyValue;\n    }\n}\n\n/**\n * Infer the type of a term based on its type.\n *\n * @param converter         Converter\n * @param annotationsTerm   The annotation term\n * @param annotationTarget  The annotation target\n * @param currentProperty   The current property of the record\n * @returns The inferred type.\n */\nfunction inferTypeFromTerm(\n    converter: Converter,\n    annotationsTerm: string,\n    annotationTarget: string,\n    currentProperty?: string\n) {\n    let targetType = (TermToTypes as any)[annotationsTerm];\n    if (currentProperty) {\n        annotationsTerm = `${substringBeforeLast(annotationsTerm, '.')}.${currentProperty}`;\n        targetType = (TermToTypes as any)[annotationsTerm];\n    }\n\n    converter.logError(\n        `The type of the record used within the term ${annotationsTerm} was not defined and was inferred as ${targetType}.\nHint: If possible, try to maintain the Type property for each Record.\n<Annotations Target=\"${annotationTarget}\">\n\t<Annotation Term=\"${annotationsTerm}\">\n\t\t<Record>...</Record>\n\t</Annotation>\n</Annotations>`\n    );\n\n    return targetType;\n}\n\nfunction isDataFieldWithForAction(annotationContent: any) {\n    return (\n        annotationContent.hasOwnProperty('Action') &&\n        (annotationContent.$Type === 'com.sap.vocabularies.UI.v1.DataFieldForAction' ||\n            annotationContent.$Type === 'com.sap.vocabularies.UI.v1.DataFieldWithAction')\n    );\n}\n\nfunction parseRecordType(\n    converter: Converter,\n    currentTerm: string,\n    currentTarget: any,\n    currentProperty: string | undefined,\n    recordDefinition: AnnotationRecord\n) {\n    let targetType;\n    if (!recordDefinition.type && currentTerm) {\n        targetType = inferTypeFromTerm(converter, currentTerm, currentTarget.fullyQualifiedName, currentProperty);\n    } else {\n        targetType = converter.unalias(recordDefinition.type);\n    }\n    return targetType;\n}\n\nfunction parseRecord(\n    converter: Converter,\n    currentTerm: string,\n    currentTarget: any,\n    currentProperty: string | undefined,\n    currentSource: string,\n    annotationRecord: AnnotationRecord,\n    currentFQN: string\n) {\n    const record: any = {\n        $Type: parseRecordType(converter, currentTerm, currentTarget, currentProperty, annotationRecord),\n        fullyQualifiedName: currentFQN,\n        [ANNOTATION_TARGET]: currentTarget,\n        __source: currentSource\n    };\n\n    for (const propertyValue of annotationRecord.propertyValues) {\n        lazy(record, propertyValue.name, () =>\n            parseValue(\n                converter,\n                currentTarget,\n                currentTerm,\n                propertyValue.name,\n                currentSource,\n                propertyValue.value,\n                `${currentFQN}/${propertyValue.name}`\n            )\n        );\n    }\n\n    // annotations on the record\n    lazy(record, 'annotations', resolveAnnotationsOnAnnotation(converter, annotationRecord, record));\n\n    if (isDataFieldWithForAction(record)) {\n        lazy(record, 'ActionTarget', () => {\n            const actionName = converter.unalias(record.Action?.toString());\n\n            // (1) Bound action of the annotation target?\n            let actionTarget = currentTarget.actions[actionName];\n\n            if (!actionTarget) {\n                // (2) ActionImport (= unbound action)?\n                actionTarget = converter.getConvertedActionImport(actionName)?.action;\n            }\n\n            if (!actionTarget) {\n                // (3) Bound action of a different EntityType (the actionName is fully qualified in this case)\n                actionTarget = converter.getConvertedAction(actionName);\n                if (!actionTarget?.isBound) {\n                    actionTarget = undefined;\n                }\n            }\n\n            if (!actionTarget) {\n                converter.logError(\n                    `${record.fullyQualifiedName}: Unable to resolve '${record.Action}' ('${actionName}')`\n                );\n            }\n            return actionTarget;\n        });\n    }\n    return record;\n}\n\nexport type CollectionType =\n    | 'PropertyPath'\n    | 'Path'\n    | 'If'\n    | 'Apply'\n    | 'Null'\n    | 'And'\n    | 'Eq'\n    | 'Ne'\n    | 'Not'\n    | 'Gt'\n    | 'Ge'\n    | 'Lt'\n    | 'Le'\n    | 'Or'\n    | 'AnnotationPath'\n    | 'NavigationPropertyPath'\n    | 'Record'\n    | 'String'\n    | 'EmptyCollection';\n\n/**\n * Retrieve or infer the collection type based on its content.\n *\n * @param collectionDefinition\n * @returns the type of the collection\n */\nfunction getOrInferCollectionType(collectionDefinition: any[]): CollectionType {\n    let type: CollectionType = (collectionDefinition as any).type;\n    if (type === undefined && collectionDefinition.length > 0) {\n        const firstColItem = collectionDefinition[0];\n        if (firstColItem.hasOwnProperty('PropertyPath')) {\n            type = 'PropertyPath';\n        } else if (firstColItem.hasOwnProperty('Path')) {\n            type = 'Path';\n        } else if (firstColItem.hasOwnProperty('AnnotationPath')) {\n            type = 'AnnotationPath';\n        } else if (firstColItem.hasOwnProperty('NavigationPropertyPath')) {\n            type = 'NavigationPropertyPath';\n        } else if (\n            typeof firstColItem === 'object' &&\n            (firstColItem.hasOwnProperty('type') || firstColItem.hasOwnProperty('propertyValues'))\n        ) {\n            type = 'Record';\n        } else if (typeof firstColItem === 'string') {\n            type = 'String';\n        }\n    } else if (type === undefined) {\n        type = 'EmptyCollection';\n    }\n    return type;\n}\n\nfunction parseCollection(\n    converter: Converter,\n    currentTarget: any,\n    currentTerm: string,\n    currentProperty: string,\n    currentSource: string,\n    collectionDefinition: any[],\n    parentFQN: string\n) {\n    const collectionDefinitionType = getOrInferCollectionType(collectionDefinition);\n\n    switch (collectionDefinitionType) {\n        case 'PropertyPath':\n            return collectionDefinition.map((path, index) =>\n                mapPropertyPath(converter, path, `${parentFQN}/${index}`, currentTarget, currentTerm)\n            );\n\n        case 'Path':\n            // TODO: make lazy?\n            return collectionDefinition.map((pathValue) => {\n                return resolveTarget(converter, currentTarget, pathValue.Path, currentTerm).target;\n            });\n\n        case 'AnnotationPath':\n            return collectionDefinition.map((path, index) =>\n                mapAnnotationPath(converter, path, `${parentFQN}/${index}`, currentTarget, currentTerm)\n            );\n\n        case 'NavigationPropertyPath':\n            return collectionDefinition.map((path, index) =>\n                mapNavigationPropertyPath(converter, path, `${parentFQN}/${index}`, currentTarget, currentTerm)\n            );\n\n        case 'Record':\n            return collectionDefinition.map((recordDefinition, recordIdx) => {\n                return parseRecord(\n                    converter,\n                    currentTerm,\n                    currentTarget,\n                    currentProperty,\n                    currentSource,\n                    recordDefinition,\n                    `${parentFQN}/${recordIdx}`\n                );\n            });\n\n        case 'Apply':\n        case 'Null':\n        case 'If':\n        case 'Eq':\n        case 'Ne':\n        case 'Lt':\n        case 'Gt':\n        case 'Le':\n        case 'Ge':\n        case 'Not':\n        case 'And':\n        case 'Or':\n            return collectionDefinition.map((ifValue) => ifValue);\n\n        case 'String':\n            return collectionDefinition.map((stringValue) => {\n                if (typeof stringValue === 'string' || stringValue === undefined) {\n                    return stringValue;\n                } else {\n                    return stringValue.String;\n                }\n            });\n\n        default:\n            if (collectionDefinition.length === 0) {\n                return [];\n            }\n            throw new Error('Unsupported case');\n    }\n}\n\nfunction isV4NavigationProperty(\n    navProp: RawV2NavigationProperty | RawV4NavigationProperty\n): navProp is RawV4NavigationProperty {\n    return !!(navProp as BaseNavigationProperty).targetTypeName;\n}\n\nfunction convertAnnotation(converter: Converter, target: any, rawAnnotation: RawAnnotation): Annotation {\n    let annotation: any;\n    if (rawAnnotation.record) {\n        annotation = parseRecord(\n            converter,\n            rawAnnotation.term,\n            target,\n            '',\n            (rawAnnotation as any).__source,\n            rawAnnotation.record,\n            (rawAnnotation as any).fullyQualifiedName\n        );\n    } else if (rawAnnotation.collection === undefined) {\n        annotation = parseValue(\n            converter,\n            target,\n            rawAnnotation.term,\n            '',\n            (rawAnnotation as any).__source,\n            rawAnnotation.value ?? { type: 'Bool', Bool: true },\n            (rawAnnotation as any).fullyQualifiedName\n        );\n    } else if (rawAnnotation.collection) {\n        annotation = parseCollection(\n            converter,\n            target,\n            rawAnnotation.term,\n            '',\n            (rawAnnotation as any).__source,\n            rawAnnotation.collection,\n            (rawAnnotation as any).fullyQualifiedName\n        );\n    } else {\n        throw new Error('Unsupported case');\n    }\n\n    switch (typeof annotation) {\n        case 'string':\n            // eslint-disable-next-line no-new-wrappers\n            annotation = new String(annotation);\n            break;\n        case 'boolean':\n            // eslint-disable-next-line no-new-wrappers\n            annotation = new Boolean(annotation);\n            break;\n        case 'number':\n            annotation = new Number(annotation);\n            break;\n        default:\n            // do nothing\n            break;\n    }\n\n    annotation.fullyQualifiedName = (rawAnnotation as any).fullyQualifiedName;\n    annotation[ANNOTATION_TARGET] = target;\n\n    const [vocAlias, vocTerm] = converter.splitTerm(rawAnnotation.term);\n\n    annotation.term = converter.unalias(`${vocAlias}.${vocTerm}`, VocabularyReferences);\n    annotation.qualifier = rawAnnotation.qualifier;\n    annotation.__source = (rawAnnotation as any).__source;\n\n    try {\n        lazy(annotation, 'annotations', resolveAnnotationsOnAnnotation(converter, rawAnnotation, annotation));\n    } catch (e) {\n        // not an error: parseRecord() already adds annotations, but the other parseXXX functions don't, so this can happen\n    }\n\n    return annotation as Annotation;\n}\n\nclass Converter {\n    private annotationsByTarget: Record<FullyQualifiedName, Annotation[]>;\n\n    /**\n     * Get preprocessed annotations on the specified target.\n     *\n     * @param target    The annotation target\n     * @returns An array of annotations\n     */\n    getAnnotations(target: FullyQualifiedName): Annotation[] {\n        if (this.annotationsByTarget === undefined) {\n            const annotationSources = Object.keys(this.rawSchema.annotations).map((source) => ({\n                name: source,\n                annotationList: this.rawSchema.annotations[source]\n            }));\n\n            this.annotationsByTarget = mergeAnnotations(this.rawMetadata.references, ...annotationSources);\n        }\n\n        return this.annotationsByTarget[target] ?? [];\n    }\n\n    getConvertedEntityContainer() {\n        return this.getConvertedElement(\n            this.rawMetadata.schema.entityContainer.fullyQualifiedName,\n            this.rawMetadata.schema.entityContainer,\n            convertEntityContainer\n        );\n    }\n\n    getConvertedEntitySet(fullyQualifiedName: FullyQualifiedName) {\n        return this.convertedOutput.entitySets.by_fullyQualifiedName(fullyQualifiedName);\n    }\n\n    getConvertedSingleton(fullyQualifiedName: FullyQualifiedName) {\n        return this.convertedOutput.singletons.by_fullyQualifiedName(fullyQualifiedName);\n    }\n\n    getConvertedEntityType(fullyQualifiedName: FullyQualifiedName) {\n        return this.convertedOutput.entityTypes.by_fullyQualifiedName(fullyQualifiedName);\n    }\n\n    getConvertedComplexType(fullyQualifiedName: FullyQualifiedName) {\n        return this.convertedOutput.complexTypes.by_fullyQualifiedName(fullyQualifiedName);\n    }\n\n    getConvertedTypeDefinition(fullyQualifiedName: FullyQualifiedName) {\n        return this.convertedOutput.typeDefinitions.by_fullyQualifiedName(fullyQualifiedName);\n    }\n\n    getConvertedActionImport(fullyQualifiedName: FullyQualifiedName) {\n        let actionImport = this.convertedOutput.actionImports.by_fullyQualifiedName(fullyQualifiedName);\n        if (!actionImport) {\n            actionImport = this.convertedOutput.actionImports.by_name(fullyQualifiedName);\n        }\n        return actionImport;\n    }\n\n    getConvertedAction(fullyQualifiedName: FullyQualifiedName) {\n        return this.convertedOutput.actions.by_fullyQualifiedName(fullyQualifiedName);\n    }\n\n    convert<Converted, Raw extends RawType<Converted>>(\n        rawValue: Raw,\n        map: (converter: Converter, raw: Raw) => Converted\n    ): () => Converted;\n    convert<Converted, Raw extends RawType<Converted>, IndexProperty extends Extract<keyof Converted, string>>(\n        rawValue: Raw[],\n        map: (converter: Converter, raw: Raw) => Converted\n    ): () => ArrayWithIndex<Converted, IndexProperty>;\n    convert<Converted, Raw extends RawType<Converted>, IndexProperty extends Extract<keyof Converted, string>>(\n        rawValue: Raw | Raw[],\n        map: (converter: Converter, raw: Raw) => Converted\n    ): (() => Converted) | (() => ArrayWithIndex<Converted, IndexProperty>) {\n        if (Array.isArray(rawValue)) {\n            return () => {\n                const converted = rawValue.reduce((convertedElements, rawElement) => {\n                    const convertedElement = this.getConvertedElement(\n                        (rawElement as any).fullyQualifiedName,\n                        rawElement,\n                        map\n                    );\n                    if (convertedElement) {\n                        convertedElements.push(convertedElement);\n                    }\n                    return convertedElements;\n                }, [] as Converted[]);\n                addGetByValue(converted, 'name' as any);\n                addGetByValue(converted, 'fullyQualifiedName' as any);\n                return converted as ArrayWithIndex<Converted, IndexProperty>;\n            };\n        } else {\n            return () => this.getConvertedElement(rawValue.fullyQualifiedName, rawValue, map)!;\n        }\n    }\n\n    private rawMetadata: RawMetadata;\n    private convertedElements: Map<FullyQualifiedName, any> = new Map();\n    private convertedOutput: ConvertedMetadata;\n\n    rawSchema: RawSchema;\n\n    constructor(rawMetadata: RawMetadata, convertedOutput: ConvertedMetadata) {\n        this.rawMetadata = rawMetadata;\n        this.rawSchema = rawMetadata.schema;\n        this.convertedOutput = convertedOutput;\n    }\n\n    getConvertedElement<ConvertedType, RawType extends RemoveAnnotationAndType<ConvertedType>>(\n        fullyQualifiedName: FullyQualifiedName,\n        rawElement: RawType | undefined | ((fullyQualifiedName: FullyQualifiedName) => RawType | undefined),\n        map: (converter: Converter, raw: RawType) => ConvertedType\n    ): ConvertedType | undefined {\n        let converted: ConvertedType | undefined = this.convertedElements.get(fullyQualifiedName);\n        if (converted === undefined) {\n            const rawMetadata =\n                typeof rawElement === 'function' ? rawElement.apply(undefined, [fullyQualifiedName]) : rawElement;\n            if (rawMetadata !== undefined) {\n                converted = map.apply(undefined, [this, rawMetadata]);\n                this.convertedElements.set(fullyQualifiedName, converted);\n            }\n        }\n        return converted;\n    }\n\n    logError(message: string) {\n        this.convertedOutput.diagnostics.push({ message });\n    }\n\n    /**\n     * Split the alias from the term value.\n     *\n     * @param term the value of the term\n     * @returns the term alias and the actual term value\n     */\n    splitTerm(term: string) {\n        const aliased = alias(VocabularyReferences, term);\n        return splitAtLast(aliased, '.');\n    }\n\n    unalias(value: string | undefined, references = this.rawMetadata.references) {\n        return unalias(references, value, this.rawSchema.namespace) ?? '';\n    }\n}\n\ntype RawType<T> = RemoveAnnotationAndType<T> & { fullyQualifiedName: FullyQualifiedName };\n\nfunction resolveEntityType(converter: Converter, fullyQualifiedName: FullyQualifiedName) {\n    return () => {\n        let entityType = converter.getConvertedEntityType(fullyQualifiedName);\n\n        if (!entityType) {\n            converter.logError(`EntityType '${fullyQualifiedName}' not found`);\n            entityType = {} as EntityType;\n        }\n        return entityType;\n    };\n}\n\nfunction resolveNavigationPropertyBindings(\n    converter: Converter,\n    rawNavigationPropertyBindings: RawNavigationPropertyBinding\n) {\n    return () =>\n        Object.keys(rawNavigationPropertyBindings).reduce((navigationPropertyBindings, bindingPath) => {\n            const rawBindingTarget = rawNavigationPropertyBindings[bindingPath];\n\n            lazy(\n                navigationPropertyBindings,\n                bindingPath,\n                () =>\n                    // the NavigationPropertyBinding will lead to either an EntitySet or a Singleton, it cannot be undefined\n                    (converter.getConvertedEntitySet(rawBindingTarget) ??\n                        converter.getConvertedSingleton(rawBindingTarget))!\n            );\n            return navigationPropertyBindings;\n        }, {} as EntitySet['navigationPropertyBinding'] | Singleton['navigationPropertyBinding']);\n}\n\nfunction resolveAnnotations(converter: Converter, rawAnnotationTarget: any) {\n    const nestedAnnotations = rawAnnotationTarget.annotations;\n\n    return () =>\n        createAnnotationsObject(\n            converter,\n            rawAnnotationTarget,\n            nestedAnnotations ?? converter.getAnnotations(rawAnnotationTarget.fullyQualifiedName)\n        );\n}\n\nfunction resolveAnnotationsOnAnnotation(\n    converter: Converter,\n    annotationRecord: AnnotationRecord | RawAnnotation,\n    annotationTerm: any\n) {\n    return () => {\n        const currentFQN = annotationTerm.fullyQualifiedName;\n\n        // be graceful when resolving annotations on annotations: Sometimes they are referenced directly, sometimes they\n        // are part of the global annotations list\n        let annotations;\n        if (annotationRecord.annotations && annotationRecord.annotations.length > 0) {\n            annotations = annotationRecord.annotations;\n        } else {\n            annotations = converter.getAnnotations(currentFQN);\n        }\n\n        annotations?.forEach((annotation: any) => {\n            annotation.target = currentFQN;\n            annotation.__source = annotationTerm.__source;\n            annotation[ANNOTATION_TARGET] = annotationTerm[ANNOTATION_TARGET];\n            annotation.fullyQualifiedName = `${currentFQN}@${annotation.term}`;\n        });\n\n        return createAnnotationsObject(converter, annotationTerm, annotations ?? []);\n    };\n}\n\nfunction createAnnotationsObject(converter: Converter, target: any, rawAnnotations: RawAnnotation[]) {\n    return rawAnnotations.reduce((vocabularyAliases, annotation) => {\n        const [vocAlias, vocTerm] = converter.splitTerm(annotation.term);\n        const vocTermWithQualifier = `${vocTerm}${annotation.qualifier ? '#' + annotation.qualifier : ''}`;\n\n        if (vocabularyAliases[vocAlias] === undefined) {\n            vocabularyAliases[vocAlias] = {};\n        }\n\n        if (!vocabularyAliases[vocAlias].hasOwnProperty(vocTermWithQualifier)) {\n            lazy(vocabularyAliases[vocAlias], vocTermWithQualifier, () =>\n                converter.getConvertedElement(\n                    (annotation as Annotation).fullyQualifiedName,\n                    annotation,\n                    (converter, rawAnnotation) => convertAnnotation(converter, target, rawAnnotation)\n                )\n            );\n        }\n        return vocabularyAliases;\n    }, {} as any);\n}\n\n/**\n * Converts an EntityContainer.\n *\n * @param converter     Converter\n * @param rawEntityContainer    Unconverted EntityContainer\n * @returns The converted EntityContainer\n */\nfunction convertEntityContainer(converter: Converter, rawEntityContainer: RawEntityContainer): EntityContainer {\n    const convertedEntityContainer = rawEntityContainer as EntityContainer;\n\n    lazy(convertedEntityContainer, 'annotations', resolveAnnotations(converter, rawEntityContainer));\n\n    lazy(convertedEntityContainer, 'entitySets', converter.convert(converter.rawSchema.entitySets, convertEntitySet));\n\n    lazy(convertedEntityContainer, 'singletons', converter.convert(converter.rawSchema.singletons, convertSingleton));\n\n    lazy(\n        convertedEntityContainer,\n        'actionImports',\n        converter.convert(converter.rawSchema.actionImports, convertActionImport)\n    );\n\n    return convertedEntityContainer;\n}\n\n/**\n * Converts a Singleton.\n *\n * @param converter   Converter\n * @param rawSingleton  Unconverted Singleton\n * @returns The converted Singleton\n */\nfunction convertSingleton(converter: Converter, rawSingleton: RawSingleton): Singleton {\n    const convertedSingleton = rawSingleton as unknown as Singleton;\n\n    lazy(convertedSingleton, 'entityType', resolveEntityType(converter, rawSingleton.entityTypeName));\n    lazy(convertedSingleton, 'annotations', resolveAnnotations(converter, convertedSingleton));\n\n    const _rawNavigationPropertyBindings = rawSingleton.navigationPropertyBinding;\n    lazy(\n        convertedSingleton,\n        'navigationPropertyBinding',\n        resolveNavigationPropertyBindings(converter, _rawNavigationPropertyBindings)\n    );\n\n    return convertedSingleton;\n}\n\n/**\n * Converts an EntitySet.\n *\n * @param converter   Converter\n * @param rawEntitySet  Unconverted EntitySet\n * @returns The converted EntitySet\n */\nfunction convertEntitySet(converter: Converter, rawEntitySet: RawEntitySet): EntitySet {\n    const convertedEntitySet = rawEntitySet as unknown as EntitySet;\n\n    lazy(convertedEntitySet, 'entityType', resolveEntityType(converter, rawEntitySet.entityTypeName));\n    lazy(convertedEntitySet, 'annotations', resolveAnnotations(converter, convertedEntitySet));\n\n    const _rawNavigationPropertyBindings = rawEntitySet.navigationPropertyBinding;\n    lazy(\n        convertedEntitySet,\n        'navigationPropertyBinding',\n        resolveNavigationPropertyBindings(converter, _rawNavigationPropertyBindings)\n    );\n\n    return convertedEntitySet;\n}\n\n/**\n * Converts an EntityType.\n *\n * @param converter   Converter\n * @param rawEntityType  Unconverted EntityType\n * @returns The converted EntityType\n */\nfunction convertEntityType(converter: Converter, rawEntityType: RawEntityType): EntityType {\n    const convertedEntityType = rawEntityType as EntityType;\n\n    rawEntityType.keys.forEach((keyProp: any) => {\n        keyProp.isKey = true;\n    });\n\n    lazy(convertedEntityType, 'annotations', resolveAnnotations(converter, rawEntityType));\n\n    lazy(convertedEntityType, 'keys', converter.convert(rawEntityType.keys, convertProperty));\n    lazy(convertedEntityType, 'entityProperties', converter.convert(rawEntityType.entityProperties, convertProperty));\n    lazy(\n        convertedEntityType,\n        'navigationProperties',\n        converter.convert(rawEntityType.navigationProperties as any[], convertNavigationProperty)\n    );\n\n    lazy(convertedEntityType, 'actions', () =>\n        converter.rawSchema.actions\n            .filter(\n                (rawAction) =>\n                    rawAction.isBound &&\n                    (rawAction.sourceType === rawEntityType.fullyQualifiedName ||\n                        rawAction.sourceType === `Collection(${rawEntityType.fullyQualifiedName})`)\n            )\n            .reduce((actions, rawAction) => {\n                const name = `${converter.rawSchema.namespace}.${rawAction.name}`;\n                actions[name] = converter.getConvertedAction(rawAction.fullyQualifiedName)!;\n                return actions;\n            }, {} as EntityType['actions'])\n    );\n\n    convertedEntityType.resolvePath = (relativePath: string, includeVisitedObjects?: boolean) => {\n        const resolved = resolveTarget(converter, rawEntityType, relativePath);\n        if (includeVisitedObjects) {\n            return { target: resolved.target, visitedObjects: resolved.objectPath, messages: resolved.messages };\n        } else {\n            return resolved.target;\n        }\n    };\n\n    return convertedEntityType;\n}\n\n/**\n * Converts a Property.\n *\n * @param converter   Converter\n * @param rawProperty  Unconverted Property\n * @returns The converted Property\n */\nfunction convertProperty(converter: Converter, rawProperty: RawProperty): Property {\n    const convertedProperty = rawProperty as Property;\n\n    lazy(convertedProperty, 'annotations', resolveAnnotations(converter, rawProperty));\n\n    lazy(convertedProperty, 'targetType', () => {\n        const type = rawProperty.type;\n        const typeName = type.startsWith('Collection') ? type.substring(11, type.length - 1) : type;\n\n        return converter.getConvertedComplexType(typeName) ?? converter.getConvertedTypeDefinition(typeName);\n    });\n\n    return convertedProperty;\n}\n\n/**\n * Converts a NavigationProperty.\n *\n * @param converter   Converter\n * @param rawNavigationProperty  Unconverted NavigationProperty\n * @returns The converted NavigationProperty\n */\nfunction convertNavigationProperty(\n    converter: Converter,\n    rawNavigationProperty: RawV2NavigationProperty | RawV4NavigationProperty\n): NavigationProperty {\n    const convertedNavigationProperty = rawNavigationProperty as NavigationProperty;\n\n    convertedNavigationProperty.referentialConstraint = convertedNavigationProperty.referentialConstraint ?? [];\n\n    if (!isV4NavigationProperty(rawNavigationProperty)) {\n        const associationEnd = converter.rawSchema.associations\n            .find((association) => association.fullyQualifiedName === rawNavigationProperty.relationship)\n            ?.associationEnd.find((end) => end.role === rawNavigationProperty.toRole);\n\n        convertedNavigationProperty.isCollection = associationEnd?.multiplicity === '*';\n        convertedNavigationProperty.targetTypeName = associationEnd?.type ?? '';\n    }\n\n    lazy(\n        convertedNavigationProperty,\n        'targetType',\n        resolveEntityType(converter, (rawNavigationProperty as NavigationProperty).targetTypeName)\n    );\n\n    lazy(convertedNavigationProperty, 'annotations', resolveAnnotations(converter, rawNavigationProperty));\n\n    return convertedNavigationProperty;\n}\n\n/**\n * Converts an ActionImport.\n *\n * @param converter   Converter\n * @param rawActionImport  Unconverted ActionImport\n * @returns The converted ActionImport\n */\nfunction convertActionImport(converter: Converter, rawActionImport: RawActionImport): ActionImport {\n    const convertedActionImport = rawActionImport as ActionImport;\n\n    lazy(convertedActionImport, 'annotations', resolveAnnotations(converter, rawActionImport));\n\n    lazy(convertedActionImport, 'action', () => {\n        const rawActions = converter.rawSchema.actions.filter(\n            (rawAction) => !rawAction.isBound && rawAction.fullyQualifiedName.startsWith(rawActionImport.actionName)\n        );\n\n        // this always resolves to a unique unbound action, but resolution of unbound functions can be ambiguous:\n        // unbound function FQNs have overloads depending on all of their parameters\n        if (rawActions.length > 1) {\n            converter.logError(`Ambiguous reference in action import: ${rawActionImport.fullyQualifiedName}`);\n        }\n\n        // return the first matching action or function\n        return converter.getConvertedAction(rawActions[0].fullyQualifiedName)!;\n    });\n\n    return convertedActionImport;\n}\n\n/**\n * Converts an Action.\n *\n * @param converter   Converter\n * @param rawAction  Unconverted Action\n * @returns The converted Action\n */\nfunction convertAction(converter: Converter, rawAction: RawAction): Action {\n    const convertedAction = rawAction as Action;\n\n    if (convertedAction.sourceType) {\n        lazy(convertedAction, 'sourceEntityType', resolveEntityType(converter, rawAction.sourceType));\n    }\n\n    if (convertedAction.returnType) {\n        lazy(convertedAction, 'returnEntityType', resolveEntityType(converter, rawAction.returnType));\n    }\n\n    lazy(convertedAction, 'parameters', converter.convert(rawAction.parameters, convertActionParameter));\n\n    lazy(convertedAction, 'annotations', () => {\n        /*\n            Annotation resolution rule for actions:\n\n            (1) annotation target: the specific unbound or bound overload, e.g.\n                    - for actions:   \"x.y.z.unboundAction()\" / \"x.y.z.boundAction(x.y.z.Entity)\"\n                    - for functions: \"x.y.z.unboundFunction(Edm.String)\" / \"x.y.z.unboundFunction(x.y.z.Entity,Edm.String)\"\n            (2) annotation target: unspecified overload, e.g.\n                - for actions:   \"x.y.z.unboundAction\" / \"x.y.z.boundAction\"\n                - for functions: \"x.y.z.unboundFunction\" / \"x.y.z.unboundFunction\"\n\n            When resolving (1) takes precedence over (2). That is, annotations on the specific overload overwrite\n            annotations on the unspecific overload, on term/qualifier level.\n        */\n\n        const unspecificOverloadTarget = substringBeforeFirst(rawAction.fullyQualifiedName, '(');\n        const specificOverloadTarget = rawAction.fullyQualifiedName;\n\n        const effectiveAnnotations = converter.getAnnotations(specificOverloadTarget);\n        const unspecificAnnotations = converter.getAnnotations(unspecificOverloadTarget);\n\n        for (const unspecificAnnotation of unspecificAnnotations) {\n            if (\n                !effectiveAnnotations.some(\n                    (annotation) =>\n                        annotation.term === unspecificAnnotation.term &&\n                        annotation.qualifier === unspecificAnnotation.qualifier\n                )\n            ) {\n                effectiveAnnotations.push(unspecificAnnotation);\n            }\n        }\n\n        return createAnnotationsObject(converter, rawAction, effectiveAnnotations);\n    });\n\n    return convertedAction;\n}\n\n/**\n * Converts an ActionParameter.\n *\n * @param converter   Converter\n * @param rawActionParameter  Unconverted ActionParameter\n * @returns The converted ActionParameter\n */\nfunction convertActionParameter(\n    converter: Converter,\n    rawActionParameter: RawAction['parameters'][number]\n): ActionParameter {\n    const convertedActionParameter = rawActionParameter as ActionParameter;\n\n    lazy(\n        convertedActionParameter,\n        'typeReference',\n        () =>\n            converter.getConvertedEntityType(rawActionParameter.type) ??\n            converter.getConvertedComplexType(rawActionParameter.type) ??\n            converter.getConvertedTypeDefinition(rawActionParameter.type)\n    );\n\n    lazy(convertedActionParameter, 'annotations', () => {\n        // annotations on action parameters are resolved following the rules for actions\n        const unspecificOverloadTarget =\n            rawActionParameter.fullyQualifiedName.substring(0, rawActionParameter.fullyQualifiedName.indexOf('(')) +\n            rawActionParameter.fullyQualifiedName.substring(rawActionParameter.fullyQualifiedName.indexOf(')') + 1);\n        const specificOverloadTarget = rawActionParameter.fullyQualifiedName;\n\n        const effectiveAnnotations = converter.getAnnotations(specificOverloadTarget);\n        const unspecificAnnotations = converter.getAnnotations(unspecificOverloadTarget);\n\n        for (const unspecificAnnotation of unspecificAnnotations) {\n            if (\n                !effectiveAnnotations.some(\n                    (annotation) =>\n                        annotation.term === unspecificAnnotation.term &&\n                        annotation.qualifier === unspecificAnnotation.qualifier\n                )\n            ) {\n                effectiveAnnotations.push(unspecificAnnotation);\n            }\n        }\n\n        return createAnnotationsObject(converter, rawActionParameter, effectiveAnnotations);\n    });\n\n    return convertedActionParameter;\n}\n\n/**\n * Converts a ComplexType.\n *\n * @param converter   Converter\n * @param rawComplexType  Unconverted ComplexType\n * @returns The converted ComplexType\n */\nfunction convertComplexType(converter: Converter, rawComplexType: RawComplexType): ComplexType {\n    const convertedComplexType = rawComplexType as ComplexType;\n\n    lazy(convertedComplexType, 'properties', converter.convert(rawComplexType.properties, convertProperty));\n    lazy(\n        convertedComplexType,\n        'navigationProperties',\n        converter.convert(rawComplexType.navigationProperties as any[], convertNavigationProperty)\n    );\n    lazy(convertedComplexType, 'annotations', resolveAnnotations(converter, rawComplexType));\n\n    return convertedComplexType;\n}\n\n/**\n * Converts a TypeDefinition.\n *\n * @param converter   Converter\n * @param rawTypeDefinition  Unconverted TypeDefinition\n * @returns The converted TypeDefinition\n */\nfunction convertTypeDefinition(converter: Converter, rawTypeDefinition: RawTypeDefinition): TypeDefinition {\n    const convertedTypeDefinition = rawTypeDefinition as TypeDefinition;\n\n    lazy(convertedTypeDefinition, 'annotations', resolveAnnotations(converter, rawTypeDefinition));\n\n    return convertedTypeDefinition;\n}\n\n/**\n * Convert a RawMetadata into an object representation to be used to easily navigate a metadata object and its annotation.\n *\n * @param rawMetadata\n * @returns the converted representation of the metadata.\n */\nexport function convert(rawMetadata: RawMetadata): ConvertedMetadata {\n    // Converter Output\n    const convertedOutput: ConvertedMetadata = {\n        version: rawMetadata.version,\n        namespace: rawMetadata.schema.namespace,\n        annotations: rawMetadata.schema.annotations,\n        references: VocabularyReferences,\n        diagnostics: []\n    } as any;\n\n    // fall back on the default references if the caller does not specify any\n    if (rawMetadata.references.length === 0) {\n        rawMetadata.references = VocabularyReferences;\n    }\n\n    // Converter\n    const converter = new Converter(rawMetadata, convertedOutput);\n\n    lazy(\n        convertedOutput,\n        'entityContainer',\n        converter.convert(converter.rawSchema.entityContainer, convertEntityContainer)\n    );\n    lazy(convertedOutput, 'entitySets', converter.convert(converter.rawSchema.entitySets, convertEntitySet));\n    lazy(convertedOutput, 'singletons', converter.convert(converter.rawSchema.singletons, convertSingleton));\n    lazy(convertedOutput, 'entityTypes', converter.convert(converter.rawSchema.entityTypes, convertEntityType));\n    lazy(convertedOutput, 'actions', converter.convert(converter.rawSchema.actions, convertAction));\n    lazy(convertedOutput, 'complexTypes', converter.convert(converter.rawSchema.complexTypes, convertComplexType));\n    lazy(convertedOutput, 'actionImports', converter.convert(converter.rawSchema.actionImports, convertActionImport));\n    lazy(\n        convertedOutput,\n        'typeDefinitions',\n        converter.convert(converter.rawSchema.typeDefinitions, convertTypeDefinition)\n    );\n\n    convertedOutput.resolvePath = function resolvePath<T>(path: string): ResolutionTarget<T> {\n        const targetResolution = resolveTarget<T>(converter, undefined, path);\n        if (targetResolution.target) {\n            appendObjectPath(targetResolution.objectPath, targetResolution.target);\n        }\n        return targetResolution;\n    };\n\n    return convertedOutput;\n}\n", "import type {\n    AnnotationPathExpression,\n    AnnotationRecord,\n    AnnotationTerm,\n    Expression,\n    NavigationPropertyPathExpression,\n    PathExpression,\n    PropertyPathExpression,\n    RawAnnotation,\n    Reference\n} from '@sap-ux/vocabularies-types';\nimport { unalias } from './utils';\n\n/**\n * Revert an object to its raw type equivalent.\n *\n * @param references the current reference\n * @param value the value to revert\n * @returns the raw value\n */\nfunction revertObjectToRawType(references: Reference[], value: any) {\n    let result: Expression | undefined;\n    if (Array.isArray(value)) {\n        result = {\n            type: 'Collection',\n            Collection: value.map((anno) => revertCollectionItemToRawType(references, anno)) as any[]\n        };\n    } else if (value.isDecimal?.()) {\n        result = {\n            type: 'Decimal',\n            Decimal: value.valueOf()\n        };\n    } else if (value.isString?.()) {\n        const valueMatches = value.valueOf().split('.');\n        if (valueMatches.length > 1 && references.find((ref) => ref.alias === valueMatches[0])) {\n            result = {\n                type: 'EnumMember',\n                EnumMember: value.valueOf()\n            };\n        } else {\n            result = {\n                type: 'String',\n                String: value.valueOf()\n            };\n        }\n    } else if (value.isInt?.()) {\n        result = {\n            type: 'Int',\n            Int: value.valueOf()\n        };\n    } else if (value.isFloat?.()) {\n        result = {\n            type: 'Float',\n            Float: value.valueOf()\n        };\n    } else if (value.isDate?.()) {\n        result = {\n            type: 'Date',\n            Date: value.valueOf()\n        };\n    } else if (value.isBoolean?.()) {\n        result = {\n            type: 'Bool',\n            Bool: value.valueOf()\n        };\n    } else if (value.type === 'Path') {\n        result = {\n            type: 'Path',\n            Path: value.path\n        };\n    } else if (value.type === 'AnnotationPath') {\n        result = {\n            type: 'AnnotationPath',\n            AnnotationPath: value.value\n        };\n    } else if (value.type === 'Apply') {\n        result = {\n            type: 'Apply',\n            Apply: value.Apply\n        };\n    } else if (value.type === 'Null') {\n        result = {\n            type: 'Null'\n        };\n    } else if (value.type === 'PropertyPath') {\n        result = {\n            type: 'PropertyPath',\n            PropertyPath: value.value\n        };\n    } else if (value.type === 'NavigationPropertyPath') {\n        result = {\n            type: 'NavigationPropertyPath',\n            NavigationPropertyPath: value.value\n        };\n    } else if (Object.prototype.hasOwnProperty.call(value, '$Type')) {\n        result = {\n            type: 'Record',\n            Record: revertCollectionItemToRawType(references, value) as AnnotationRecord\n        };\n    }\n    return result;\n}\n\n/**\n * Revert a value to its raw value depending on its type.\n *\n * @param references the current set of reference\n * @param value the value to revert\n * @returns the raw expression\n */\nfunction revertValueToRawType(references: Reference[], value: any): Expression | undefined {\n    let result: Expression | undefined;\n    const valueConstructor = value?.constructor.name;\n    switch (valueConstructor) {\n        case 'String':\n        case 'string':\n            const valueMatches = value.toString().split('.');\n            if (valueMatches.length > 1 && references.find((ref) => ref.alias === valueMatches[0])) {\n                result = {\n                    type: 'EnumMember',\n                    EnumMember: value.toString()\n                };\n            } else {\n                result = {\n                    type: 'String',\n                    String: value.toString()\n                };\n            }\n            break;\n        case 'Boolean':\n        case 'boolean':\n            result = {\n                type: 'Bool',\n                Bool: value.valueOf()\n            };\n            break;\n\n        case 'Number':\n        case 'number':\n            if (value.toString() === value.toFixed()) {\n                result = {\n                    type: 'Int',\n                    Int: value.valueOf()\n                };\n            } else {\n                result = {\n                    type: 'Decimal',\n                    Decimal: value.valueOf()\n                };\n            }\n            break;\n        case 'object':\n        default:\n            result = revertObjectToRawType(references, value);\n            break;\n    }\n    return result;\n}\n\nconst restrictedKeys = ['$Type', 'term', '__source', 'qualifier', 'ActionTarget', 'fullyQualifiedName', 'annotations'];\n\n/**\n * Revert the current embedded annotations to their raw type.\n *\n * @param references the current set of reference\n * @param currentAnnotations the collection item to evaluate\n * @param targetAnnotations the place where we need to add the annotation\n */\nfunction revertAnnotationsToRawType(\n    references: Reference[],\n    currentAnnotations: any,\n    targetAnnotations: RawAnnotation[]\n) {\n    Object.keys(currentAnnotations)\n        .filter((key) => key !== '_annotations')\n        .forEach((key) => {\n            Object.keys(currentAnnotations[key]).forEach((term) => {\n                const parsedAnnotation = revertTermToGenericType(references, currentAnnotations[key][term]);\n                if (!parsedAnnotation.term) {\n                    const unaliasedTerm = unalias(references, `${key}.${term}`);\n                    if (unaliasedTerm) {\n                        const qualifiedSplit = unaliasedTerm.split('#');\n                        parsedAnnotation.term = qualifiedSplit[0];\n                        if (qualifiedSplit.length > 1) {\n                            // Sub Annotation with a qualifier, not sure when that can happen in real scenarios\n                            parsedAnnotation.qualifier = qualifiedSplit[1];\n                        }\n                    }\n                }\n                targetAnnotations.push(parsedAnnotation);\n            });\n        });\n}\n\n/**\n * Revert the current collection item to the corresponding raw annotation.\n *\n * @param references the current set of reference\n * @param collectionItem the collection item to evaluate\n * @returns the raw type equivalent\n */\nfunction revertCollectionItemToRawType(\n    references: Reference[],\n    collectionItem: any\n):\n    | AnnotationRecord\n    | string\n    | PropertyPathExpression\n    | PathExpression\n    | NavigationPropertyPathExpression\n    | AnnotationPathExpression\n    | undefined {\n    if (typeof collectionItem === 'string') {\n        return collectionItem;\n    } else if (typeof collectionItem === 'object') {\n        if (collectionItem.hasOwnProperty('$Type')) {\n            // Annotation Record\n            const outItem: AnnotationRecord = {\n                type: collectionItem.$Type,\n                propertyValues: [] as any[]\n            };\n            // Could validate keys and type based on $Type\n            Object.keys(collectionItem).forEach((collectionKey) => {\n                if (restrictedKeys.indexOf(collectionKey) === -1) {\n                    const value = collectionItem[collectionKey];\n                    outItem.propertyValues.push({\n                        name: collectionKey,\n                        value: revertValueToRawType(references, value) as Expression\n                    });\n                } else if (collectionKey === 'annotations' && Object.keys(collectionItem[collectionKey]).length > 0) {\n                    outItem.annotations = [];\n                    revertAnnotationsToRawType(references, collectionItem[collectionKey], outItem.annotations);\n                }\n            });\n            return outItem;\n        } else if (collectionItem.type === 'PropertyPath') {\n            return {\n                type: 'PropertyPath',\n                PropertyPath: collectionItem.value\n            };\n        } else if (collectionItem.type === 'AnnotationPath') {\n            return {\n                type: 'AnnotationPath',\n                AnnotationPath: collectionItem.value\n            };\n        } else if (collectionItem.type === 'NavigationPropertyPath') {\n            return {\n                type: 'NavigationPropertyPath',\n                NavigationPropertyPath: collectionItem.value\n            };\n        }\n    }\n    return undefined;\n}\n\n/**\n * Revert an annotation term to it's generic or raw equivalent.\n *\n * @param references the reference of the current context\n * @param annotation the annotation term to revert\n * @returns the raw annotation\n */\nexport function revertTermToGenericType(references: Reference[], annotation: AnnotationTerm<any>): RawAnnotation {\n    const baseAnnotation: RawAnnotation = {\n        term: annotation.term,\n        qualifier: annotation.qualifier\n    };\n    if (Array.isArray(annotation)) {\n        // Collection\n        if (annotation.hasOwnProperty('annotations') && Object.keys((annotation as any).annotations).length > 0) {\n            // Annotation on a collection itself, not sure when that happens if at all\n            baseAnnotation.annotations = [];\n            revertAnnotationsToRawType(references, (annotation as any).annotations, baseAnnotation.annotations);\n        }\n        return {\n            ...baseAnnotation,\n            collection: annotation.map((anno) => revertCollectionItemToRawType(references, anno)) as any[]\n        };\n    } else if (annotation.hasOwnProperty('$Type')) {\n        return { ...baseAnnotation, record: revertCollectionItemToRawType(references, annotation) as any };\n    } else {\n        return { ...baseAnnotation, value: revertValueToRawType(references, annotation) };\n    }\n}\n", "export * from './converter';\nexport * from './utils';\nexport * from './writeback';\n", "/**\n * Given an object that is either an array or a single element, make sure the output it always wrapped as an array.\n *\n * @param sourceObject an object or an array\n * @returns either the original array or the same element wrapped in an arrays\n */\nimport type {\n    AnnotationList,\n    RawAction,\n    RawActionImport,\n    RawAssociation,\n    RawAssociationSet,\n    RawComplexType,\n    RawEntityContainer,\n    RawEntitySet,\n    RawEntityType,\n    RawMetadata,\n    RawSchema,\n    RawSingleton,\n    RawTypeDefinition,\n    Reference\n} from '@sap-ux/vocabularies-types';\n\n/**\n * Either returns the sourceObject or the sourceObject wrapped in an array.\n *\n * @param sourceObject the object you want to check\n * @returns the source object wrapped in an array.\n */\nexport function ensureArray<T>(sourceObject: T | T[] | undefined): T[] {\n    if (sourceObject === undefined || sourceObject === null) {\n        return [];\n    }\n    if (Array.isArray(sourceObject)) {\n        return sourceObject;\n    } else {\n        return [sourceObject];\n    }\n}\n\n/**\n *\n */\nexport class RawMetadataInstance implements RawMetadata {\n    references: Reference[];\n    schema: RawSchema;\n    version: string;\n    identification: string;\n\n    /**\n     * @param fileIdentification the name of the file you are parsing, mostly for reference\n     * @param version the version of the metadata currently evaluated\n     * @param schema the parsed schema\n     * @param references a list of all the references currently used in your file\n     */\n    constructor(fileIdentification: string, version: string, schema: RawSchema, references: Reference[]) {\n        this.identification = fileIdentification;\n        this.references = references;\n        this.version = version;\n        this.schema = schema;\n    }\n}\n\n/**\n *\n */\nexport class MergedRawMetadata implements RawMetadataInstance {\n    get references(): Reference[] {\n        return this._references;\n    }\n\n    get schema(): RawSchema {\n        return {\n            associations: this._associations,\n            associationSets: this._associationSets,\n            annotations: this._annotations,\n            entityContainer: this._entityContainer,\n            namespace: this._namespace,\n            entitySets: this._entitySets,\n            singletons: this._singletons,\n            complexTypes: this._complexTypes,\n            typeDefinitions: this._typeDefinitions,\n            actions: this._actions,\n            actionImports: this._actionImports,\n            entityTypes: this._entityTypes\n        };\n    }\n\n    version: string;\n    identification: string;\n    _references: Reference[] = [];\n    _namespace: string;\n    _parserOutput: RawMetadata[] = [];\n    _annotations: { [id: string]: AnnotationList[] } = {};\n    _associations: RawAssociation[] = [];\n    _associationSets: RawAssociationSet[] = [];\n    _entitySets: RawEntitySet[] = [];\n    _singletons: RawSingleton[] = [];\n    _actions: RawAction[] = [];\n    _actionImports: RawActionImport[] = [];\n    _entityContainer: RawEntityContainer = {\n        _type: 'EntityContainer',\n        fullyQualifiedName: ''\n    };\n    _entityTypes: RawEntityType[] = [];\n    _complexTypes: RawComplexType[] = [];\n    _typeDefinitions: RawTypeDefinition[] = [];\n\n    /**\n     * @param initialParserOutput\n     */\n    constructor(initialParserOutput: RawMetadata) {\n        this.identification = 'mergedParserInstance';\n        this.version = initialParserOutput.version;\n        this._namespace = initialParserOutput.schema.namespace;\n    }\n\n    /**\n     * @param parserOutput\n     */\n    public addParserOutput(parserOutput: RawMetadata): void {\n        this._parserOutput.push(parserOutput);\n        this._references = this._references.concat(parserOutput.references);\n        this._associations = this._associations.concat(parserOutput.schema.associations);\n        this._associationSets = this._associationSets.concat(parserOutput.schema.associationSets);\n        this._annotations = Object.assign(this._annotations, parserOutput.schema.annotations);\n        this._entitySets = this._entitySets.concat(parserOutput.schema.entitySets);\n        this._singletons = this._singletons.concat(parserOutput.schema.singletons);\n        this._actions = this._actions.concat(parserOutput.schema.actions);\n        this._actionImports = this._actionImports.concat(parserOutput.schema.actionImports);\n        this._entityTypes = this._entityTypes.concat(parserOutput.schema.entityTypes);\n        this._complexTypes = this._complexTypes.concat(parserOutput.schema.complexTypes);\n        this._typeDefinitions = this._typeDefinitions.concat(parserOutput.schema.typeDefinitions);\n        if (parserOutput.schema.entityContainer.fullyQualifiedName.length > 0) {\n            this._entityContainer = Object.assign(this._entityContainer, parserOutput.schema.entityContainer);\n        }\n    }\n}\n", "import type { RawMetadata } from '@sap-ux/vocabularies-types';\nimport { MergedRawMetadata } from './utils';\n\n/**\n * Merges multiple metadata output from the parser together into one.\n *\n * @param parserOutputs the different output from the parser\n * @returns The merge metadata output\n */\nexport function merge(...parserOutputs: RawMetadata[]): RawMetadata {\n    const outParserOutput = new MergedRawMetadata(parserOutputs[0]);\n\n    parserOutputs.forEach((parserOutput: RawMetadata) => {\n        outParserOutput.addParserOutput(parserOutput);\n    });\n\n    return outParserOutput;\n}\n", ";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n  if (!Stream) Stream = function () {}\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            if (parser.opt.unparsedEntities) {\n              var parsedEntity = parseEntity(parser)\n              parser.entity = ''\n              parser.state = returnState\n              parser.write(parsedEntity)\n            } else {\n              parser[buffer] += parseEntity(parser)\n              parser.entity = ''\n              parser.state = returnState\n            }\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default: /* istanbul ignore next */ {\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n        }\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n", "module.exports = {\r\n\r\n  isArray: function(value) {\r\n    if (Array.isArray) {\r\n      return Array.isArray(value);\r\n    }\r\n    // fallback for older browsers like  IE 8\r\n    return Object.prototype.toString.call( value ) === '[object Array]';\r\n  }\r\n\r\n};\r\n", "var isArray = require('./array-helper').isArray;\r\n\r\nmodule.exports = {\r\n\r\n  copyOptions: function (options) {\r\n    var key, copy = {};\r\n    for (key in options) {\r\n      if (options.hasOwnProperty(key)) {\r\n        copy[key] = options[key];\r\n      }\r\n    }\r\n    return copy;\r\n  },\r\n\r\n  ensureFlagExists: function (item, options) {\r\n    if (!(item in options) || typeof options[item] !== 'boolean') {\r\n      options[item] = false;\r\n    }\r\n  },\r\n\r\n  ensureSpacesExists: function (options) {\r\n    if (!('spaces' in options) || (typeof options.spaces !== 'number' && typeof options.spaces !== 'string')) {\r\n      options.spaces = 0;\r\n    }\r\n  },\r\n\r\n  ensureAlwaysArrayExists: function (options) {\r\n    if (!('alwaysArray' in options) || (typeof options.alwaysArray !== 'boolean' && !isArray(options.alwaysArray))) {\r\n      options.alwaysArray = false;\r\n    }\r\n  },\r\n\r\n  ensureKeyExists: function (key, options) {\r\n    if (!(key + 'Key' in options) || typeof options[key + 'Key'] !== 'string') {\r\n      options[key + 'Key'] = options.compact ? '_' + key : key;\r\n    }\r\n  },\r\n\r\n  checkFnExists: function (key, options) {\r\n    return key + 'Fn' in options;\r\n  }\r\n\r\n};\r\n", "var sax = require('sax');\r\nvar expat /*= require('node-expat');*/ = { on: function () { }, parse: function () { } };\r\nvar helper = require('./options-helper');\r\nvar isArray = require('./array-helper').isArray;\r\n\r\nvar options;\r\nvar pureJsParser = true;\r\nvar currentElement;\r\n\r\nfunction validateOptions(userOptions) {\r\n  options = helper.copyOptions(userOptions);\r\n  helper.ensureFlagExists('ignoreDeclaration', options);\r\n  helper.ensureFlagExists('ignoreInstruction', options);\r\n  helper.ensureFlagExists('ignoreAttributes', options);\r\n  helper.ensureFlagExists('ignoreText', options);\r\n  helper.ensureFlagExists('ignoreComment', options);\r\n  helper.ensureFlagExists('ignoreCdata', options);\r\n  helper.ensureFlagExists('ignoreDoctype', options);\r\n  helper.ensureFlagExists('compact', options);\r\n  helper.ensureFlagExists('alwaysChildren', options);\r\n  helper.ensureFlagExists('addParent', options);\r\n  helper.ensureFlagExists('trim', options);\r\n  helper.ensureFlagExists('nativeType', options);\r\n  helper.ensureFlagExists('nativeTypeAttributes', options);\r\n  helper.ensureFlagExists('sanitize', options);\r\n  helper.ensureFlagExists('instructionHasAttributes', options);\r\n  helper.ensureFlagExists('captureSpacesBetweenElements', options);\r\n  helper.ensureAlwaysArrayExists(options);\r\n  helper.ensureKeyExists('declaration', options);\r\n  helper.ensureKeyExists('instruction', options);\r\n  helper.ensureKeyExists('attributes', options);\r\n  helper.ensureKeyExists('text', options);\r\n  helper.ensureKeyExists('comment', options);\r\n  helper.ensureKeyExists('cdata', options);\r\n  helper.ensureKeyExists('doctype', options);\r\n  helper.ensureKeyExists('type', options);\r\n  helper.ensureKeyExists('name', options);\r\n  helper.ensureKeyExists('elements', options);\r\n  helper.ensureKeyExists('parent', options);\r\n  helper.checkFnExists('doctype', options);\r\n  helper.checkFnExists('instruction', options);\r\n  helper.checkFnExists('cdata', options);\r\n  helper.checkFnExists('comment', options);\r\n  helper.checkFnExists('text', options);\r\n  helper.checkFnExists('instructionName', options);\r\n  helper.checkFnExists('elementName', options);\r\n  helper.checkFnExists('attributeName', options);\r\n  helper.checkFnExists('attributeValue', options);\r\n  helper.checkFnExists('attributes', options);\r\n  return options;\r\n}\r\n\r\nfunction nativeType(value) {\r\n  var nValue = Number(value);\r\n  if (!isNaN(nValue)) {\r\n    return nValue;\r\n  }\r\n  var bValue = value.toLowerCase();\r\n  if (bValue === 'true') {\r\n    return true;\r\n  } else if (bValue === 'false') {\r\n    return false;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction addField(type, value) {\r\n  var key;\r\n  if (options.compact) {\r\n    if (\r\n      !currentElement[options[type + 'Key']] &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(options[type + 'Key']) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[options[type + 'Key']] = [];\r\n    }\r\n    if (currentElement[options[type + 'Key']] && !isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']] = [currentElement[options[type + 'Key']]];\r\n    }\r\n    if (type + 'Fn' in options && typeof value === 'string') {\r\n      value = options[type + 'Fn'](value, currentElement);\r\n    }\r\n    if (type === 'instruction' && ('instructionFn' in options || 'instructionNameFn' in options)) {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          if ('instructionFn' in options) {\r\n            value[key] = options.instructionFn(value[key], key, currentElement);\r\n          } else {\r\n            var temp = value[key];\r\n            delete value[key];\r\n            value[options.instructionNameFn(key, temp, currentElement)] = temp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']].push(value);\r\n    } else {\r\n      currentElement[options[type + 'Key']] = value;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    var element = {};\r\n    element[options.typeKey] = type;\r\n    if (type === 'instruction') {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          break;\r\n        }\r\n      }\r\n      element[options.nameKey] = 'instructionNameFn' in options ? options.instructionNameFn(key, value, currentElement) : key;\r\n      if (options.instructionHasAttributes) {\r\n        element[options.attributesKey] = value[key][options.attributesKey];\r\n        if ('instructionFn' in options) {\r\n          element[options.attributesKey] = options.instructionFn(element[options.attributesKey], key, currentElement);\r\n        }\r\n      } else {\r\n        if ('instructionFn' in options) {\r\n          value[key] = options.instructionFn(value[key], key, currentElement);\r\n        }\r\n        element[options.instructionKey] = value[key];\r\n      }\r\n    } else {\r\n      if (type + 'Fn' in options) {\r\n        value = options[type + 'Fn'](value, currentElement);\r\n      }\r\n      element[options[type + 'Key']] = value;\r\n    }\r\n    if (options.addParent) {\r\n      element[options.parentKey] = currentElement;\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n}\r\n\r\nfunction manipulateAttributes(attributes) {\r\n  if ('attributesFn' in options && attributes) {\r\n    attributes = options.attributesFn(attributes, currentElement);\r\n  }\r\n  if ((options.trim || 'attributeValueFn' in options || 'attributeNameFn' in options || options.nativeTypeAttributes) && attributes) {\r\n    var key;\r\n    for (key in attributes) {\r\n      if (attributes.hasOwnProperty(key)) {\r\n        if (options.trim) attributes[key] = attributes[key].trim();\r\n        if (options.nativeTypeAttributes) {\r\n          attributes[key] = nativeType(attributes[key]);\r\n        }\r\n        if ('attributeValueFn' in options) attributes[key] = options.attributeValueFn(attributes[key], key, currentElement);\r\n        if ('attributeNameFn' in options) {\r\n          var temp = attributes[key];\r\n          delete attributes[key];\r\n          attributes[options.attributeNameFn(key, attributes[key], currentElement)] = temp;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return attributes;\r\n}\r\n\r\nfunction onInstruction(instruction) {\r\n  var attributes = {};\r\n  if (instruction.body && (instruction.name.toLowerCase() === 'xml' || options.instructionHasAttributes)) {\r\n    var attrsRegExp = /([\\w:-]+)\\s*=\\s*(?:\"([^\"]*)\"|'([^']*)'|(\\w+))\\s*/g;\r\n    var match;\r\n    while ((match = attrsRegExp.exec(instruction.body)) !== null) {\r\n      attributes[match[1]] = match[2] || match[3] || match[4];\r\n    }\r\n    attributes = manipulateAttributes(attributes);\r\n  }\r\n  if (instruction.name.toLowerCase() === 'xml') {\r\n    if (options.ignoreDeclaration) {\r\n      return;\r\n    }\r\n    currentElement[options.declarationKey] = {};\r\n    if (Object.keys(attributes).length) {\r\n      currentElement[options.declarationKey][options.attributesKey] = attributes;\r\n    }\r\n    if (options.addParent) {\r\n      currentElement[options.declarationKey][options.parentKey] = currentElement;\r\n    }\r\n  } else {\r\n    if (options.ignoreInstruction) {\r\n      return;\r\n    }\r\n    if (options.trim) {\r\n      instruction.body = instruction.body.trim();\r\n    }\r\n    var value = {};\r\n    if (options.instructionHasAttributes && Object.keys(attributes).length) {\r\n      value[instruction.name] = {};\r\n      value[instruction.name][options.attributesKey] = attributes;\r\n    } else {\r\n      value[instruction.name] = instruction.body;\r\n    }\r\n    addField('instruction', value);\r\n  }\r\n}\r\n\r\nfunction onStartElement(name, attributes) {\r\n  var element;\r\n  if (typeof name === 'object') {\r\n    attributes = name.attributes;\r\n    name = name.name;\r\n  }\r\n  attributes = manipulateAttributes(attributes);\r\n  if ('elementNameFn' in options) {\r\n    name = options.elementNameFn(name, currentElement);\r\n  }\r\n  if (options.compact) {\r\n    element = {};\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = {};\r\n      var key;\r\n      for (key in attributes) {\r\n        if (attributes.hasOwnProperty(key)) {\r\n          element[options.attributesKey][key] = attributes[key];\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      !(name in currentElement) &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(name) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[name] = [];\r\n    }\r\n    if (currentElement[name] && !isArray(currentElement[name])) {\r\n      currentElement[name] = [currentElement[name]];\r\n    }\r\n    if (isArray(currentElement[name])) {\r\n      currentElement[name].push(element);\r\n    } else {\r\n      currentElement[name] = element;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    element = {};\r\n    element[options.typeKey] = 'element';\r\n    element[options.nameKey] = name;\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = attributes;\r\n    }\r\n    if (options.alwaysChildren) {\r\n      element[options.elementsKey] = [];\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n  element[options.parentKey] = currentElement; // will be deleted in onEndElement() if !options.addParent\r\n  currentElement = element;\r\n}\r\n\r\nfunction onText(text) {\r\n  if (options.ignoreText) {\r\n    return;\r\n  }\r\n  if (!text.trim() && !options.captureSpacesBetweenElements) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    text = text.trim();\r\n  }\r\n  if (options.nativeType) {\r\n    text = nativeType(text);\r\n  }\r\n  if (options.sanitize) {\r\n    text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  }\r\n  addField('text', text);\r\n}\r\n\r\nfunction onComment(comment) {\r\n  if (options.ignoreComment) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    comment = comment.trim();\r\n  }\r\n  addField('comment', comment);\r\n}\r\n\r\nfunction onEndElement(name) {\r\n  var parentElement = currentElement[options.parentKey];\r\n  if (!options.addParent) {\r\n    delete currentElement[options.parentKey];\r\n  }\r\n  currentElement = parentElement;\r\n}\r\n\r\nfunction onCdata(cdata) {\r\n  if (options.ignoreCdata) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    cdata = cdata.trim();\r\n  }\r\n  addField('cdata', cdata);\r\n}\r\n\r\nfunction onDoctype(doctype) {\r\n  if (options.ignoreDoctype) {\r\n    return;\r\n  }\r\n  doctype = doctype.replace(/^ /, '');\r\n  if (options.trim) {\r\n    doctype = doctype.trim();\r\n  }\r\n  addField('doctype', doctype);\r\n}\r\n\r\nfunction onError(error) {\r\n  error.note = error; //console.error(error);\r\n}\r\n\r\nmodule.exports = function (xml, userOptions) {\r\n\r\n  var parser = pureJsParser ? sax.parser(true, {}) : parser = new expat.Parser('UTF-8');\r\n  var result = {};\r\n  currentElement = result;\r\n\r\n  options = validateOptions(userOptions);\r\n\r\n  if (pureJsParser) {\r\n    parser.opt = {strictEntities: true};\r\n    parser.onopentag = onStartElement;\r\n    parser.ontext = onText;\r\n    parser.oncomment = onComment;\r\n    parser.onclosetag = onEndElement;\r\n    parser.onerror = onError;\r\n    parser.oncdata = onCdata;\r\n    parser.ondoctype = onDoctype;\r\n    parser.onprocessinginstruction = onInstruction;\r\n  } else {\r\n    parser.on('startElement', onStartElement);\r\n    parser.on('text', onText);\r\n    parser.on('comment', onComment);\r\n    parser.on('endElement', onEndElement);\r\n    parser.on('error', onError);\r\n    //parser.on('startCdata', onStartCdata);\r\n    //parser.on('endCdata', onEndCdata);\r\n    //parser.on('entityDecl', onEntityDecl);\r\n  }\r\n\r\n  if (pureJsParser) {\r\n    parser.write(xml).close();\r\n  } else {\r\n    if (!parser.parse(xml)) {\r\n      throw new Error('XML parsing error: ' + parser.getError());\r\n    }\r\n  }\r\n\r\n  if (result[options.elementsKey]) {\r\n    var temp = result[options.elementsKey];\r\n    delete result[options.elementsKey];\r\n    result[options.elementsKey] = temp;\r\n    delete result.text;\r\n  }\r\n\r\n  return result;\r\n\r\n};\r\n", "var helper = require('./options-helper');\r\nvar xml2js = require('./xml2js');\r\n\r\nfunction validateOptions (userOptions) {\r\n  var options = helper.copyOptions(userOptions);\r\n  helper.ensureSpacesExists(options);\r\n  return options;\r\n}\r\n\r\nmodule.exports = function(xml, userOptions) {\r\n  var options, js, json, parentKey;\r\n  options = validateOptions(userOptions);\r\n  js = xml2js(xml, options);\r\n  parentKey = 'compact' in options && options.compact ? '_parent' : 'parent';\r\n  // parentKey = ptions.compact ? '_parent' : 'parent'; // consider this\r\n  if ('addParent' in options && options.addParent) {\r\n    json = JSON.stringify(js, function (k, v) { return k === parentKey? '_' : v; }, options.spaces);\r\n  } else {\r\n    json = JSON.stringify(js, null, options.spaces);\r\n  }\r\n  return json.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\r\n};\r\n", "var helper = require('./options-helper');\nvar isArray = require('./array-helper').isArray;\n\nvar currentElement, currentElementName;\n\nfunction validateOptions(userOptions) {\n  var options = helper.copyOptions(userOptions);\n  helper.ensureFlagExists('ignoreDeclaration', options);\n  helper.ensureFlagExists('ignoreInstruction', options);\n  helper.ensureFlagExists('ignoreAttributes', options);\n  helper.ensureFlagExists('ignoreText', options);\n  helper.ensureFlagExists('ignoreComment', options);\n  helper.ensureFlagExists('ignoreCdata', options);\n  helper.ensureFlagExists('ignoreDoctype', options);\n  helper.ensureFlagExists('compact', options);\n  helper.ensureFlagExists('indentText', options);\n  helper.ensureFlagExists('indentCdata', options);\n  helper.ensureFlagExists('indentAttributes', options);\n  helper.ensureFlagExists('indentInstruction', options);\n  helper.ensureFlagExists('fullTagEmptyElement', options);\n  helper.ensureFlagExists('noQuotesForNativeAttributes', options);\n  helper.ensureSpacesExists(options);\n  if (typeof options.spaces === 'number') {\n    options.spaces = Array(options.spaces + 1).join(' ');\n  }\n  helper.ensureKeyExists('declaration', options);\n  helper.ensureKeyExists('instruction', options);\n  helper.ensureKeyExists('attributes', options);\n  helper.ensureKeyExists('text', options);\n  helper.ensureKeyExists('comment', options);\n  helper.ensureKeyExists('cdata', options);\n  helper.ensureKeyExists('doctype', options);\n  helper.ensureKeyExists('type', options);\n  helper.ensureKeyExists('name', options);\n  helper.ensureKeyExists('elements', options);\n  helper.checkFnExists('doctype', options);\n  helper.checkFnExists('instruction', options);\n  helper.checkFnExists('cdata', options);\n  helper.checkFnExists('comment', options);\n  helper.checkFnExists('text', options);\n  helper.checkFnExists('instructionName', options);\n  helper.checkFnExists('elementName', options);\n  helper.checkFnExists('attributeName', options);\n  helper.checkFnExists('attributeValue', options);\n  helper.checkFnExists('attributes', options);\n  helper.checkFnExists('fullTagEmptyElement', options);\n  return options;\n}\n\nfunction writeIndentation(options, depth, firstLine) {\n  return (!firstLine && options.spaces ? '\\n' : '') + Array(depth + 1).join(options.spaces);\n}\n\nfunction writeAttributes(attributes, options, depth) {\n  if (options.ignoreAttributes) {\n    return '';\n  }\n  if ('attributesFn' in options) {\n    attributes = options.attributesFn(attributes, currentElementName, currentElement);\n  }\n  var key, attr, attrName, quote, result = [];\n  for (key in attributes) {\n    if (attributes.hasOwnProperty(key) && attributes[key] !== null && attributes[key] !== undefined) {\n      quote = options.noQuotesForNativeAttributes && typeof attributes[key] !== 'string' ? '' : '\"';\n      attr = '' + attributes[key]; // ensure number and boolean are converted to String\n      attr = attr.replace(/\"/g, '&quot;');\n      attrName = 'attributeNameFn' in options ? options.attributeNameFn(key, attr, currentElementName, currentElement) : key;\n      result.push((options.spaces && options.indentAttributes? writeIndentation(options, depth+1, false) : ' '));\n      result.push(attrName + '=' + quote + ('attributeValueFn' in options ? options.attributeValueFn(attr, key, currentElementName, currentElement) : attr) + quote);\n    }\n  }\n  if (attributes && Object.keys(attributes).length && options.spaces && options.indentAttributes) {\n    result.push(writeIndentation(options, depth, false));\n  }\n  return result.join('');\n}\n\nfunction writeDeclaration(declaration, options, depth) {\n  currentElement = declaration;\n  currentElementName = 'xml';\n  return options.ignoreDeclaration ? '' :  '<?' + 'xml' + writeAttributes(declaration[options.attributesKey], options, depth) + '?>';\n}\n\nfunction writeInstruction(instruction, options, depth) {\n  if (options.ignoreInstruction) {\n    return '';\n  }\n  var key;\n  for (key in instruction) {\n    if (instruction.hasOwnProperty(key)) {\n      break;\n    }\n  }\n  var instructionName = 'instructionNameFn' in options ? options.instructionNameFn(key, instruction[key], currentElementName, currentElement) : key;\n  if (typeof instruction[key] === 'object') {\n    currentElement = instruction;\n    currentElementName = instructionName;\n    return '<?' + instructionName + writeAttributes(instruction[key][options.attributesKey], options, depth) + '?>';\n  } else {\n    var instructionValue = instruction[key] ? instruction[key] : '';\n    if ('instructionFn' in options) instructionValue = options.instructionFn(instructionValue, key, currentElementName, currentElement);\n    return '<?' + instructionName + (instructionValue ? ' ' + instructionValue : '') + '?>';\n  }\n}\n\nfunction writeComment(comment, options) {\n  return options.ignoreComment ? '' : '<!--' + ('commentFn' in options ? options.commentFn(comment, currentElementName, currentElement) : comment) + '-->';\n}\n\nfunction writeCdata(cdata, options) {\n  return options.ignoreCdata ? '' : '<![CDATA[' + ('cdataFn' in options ? options.cdataFn(cdata, currentElementName, currentElement) : cdata.replace(']]>', ']]]]><![CDATA[>')) + ']]>';\n}\n\nfunction writeDoctype(doctype, options) {\n  return options.ignoreDoctype ? '' : '<!DOCTYPE ' + ('doctypeFn' in options ? options.doctypeFn(doctype, currentElementName, currentElement) : doctype) + '>';\n}\n\nfunction writeText(text, options) {\n  if (options.ignoreText) return '';\n  text = '' + text; // ensure Number and Boolean are converted to String\n  text = text.replace(/&amp;/g, '&'); // desanitize to avoid double sanitization\n  text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return 'textFn' in options ? options.textFn(text, currentElementName, currentElement) : text;\n}\n\nfunction hasContent(element, options) {\n  var i;\n  if (element.elements && element.elements.length) {\n    for (i = 0; i < element.elements.length; ++i) {\n      switch (element.elements[i][options.typeKey]) {\n      case 'text':\n        if (options.indentText) {\n          return true;\n        }\n        break; // skip to next key\n      case 'cdata':\n        if (options.indentCdata) {\n          return true;\n        }\n        break; // skip to next key\n      case 'instruction':\n        if (options.indentInstruction) {\n          return true;\n        }\n        break; // skip to next key\n      case 'doctype':\n      case 'comment':\n      case 'element':\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElement(element, options, depth) {\n  currentElement = element;\n  currentElementName = element.name;\n  var xml = [], elementName = 'elementNameFn' in options ? options.elementNameFn(element.name, element) : element.name;\n  xml.push('<' + elementName);\n  if (element[options.attributesKey]) {\n    xml.push(writeAttributes(element[options.attributesKey], options, depth));\n  }\n  var withClosingTag = element[options.elementsKey] && element[options.elementsKey].length || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n  if (!withClosingTag) {\n    if ('fullTagEmptyElementFn' in options) {\n      withClosingTag = options.fullTagEmptyElementFn(element.name, element);\n    } else {\n      withClosingTag = options.fullTagEmptyElement;\n    }\n  }\n  if (withClosingTag) {\n    xml.push('>');\n    if (element[options.elementsKey] && element[options.elementsKey].length) {\n      xml.push(writeElements(element[options.elementsKey], options, depth + 1));\n      currentElement = element;\n      currentElementName = element.name;\n    }\n    xml.push(options.spaces && hasContent(element, options) ? '\\n' + Array(depth + 1).join(options.spaces) : '');\n    xml.push('</' + elementName + '>');\n  } else {\n    xml.push('/>');\n  }\n  return xml.join('');\n}\n\nfunction writeElements(elements, options, depth, firstLine) {\n  return elements.reduce(function (xml, element) {\n    var indent = writeIndentation(options, depth, firstLine && !xml);\n    switch (element.type) {\n    case 'element': return xml + indent + writeElement(element, options, depth);\n    case 'comment': return xml + indent + writeComment(element[options.commentKey], options);\n    case 'doctype': return xml + indent + writeDoctype(element[options.doctypeKey], options);\n    case 'cdata': return xml + (options.indentCdata ? indent : '') + writeCdata(element[options.cdataKey], options);\n    case 'text': return xml + (options.indentText ? indent : '') + writeText(element[options.textKey], options);\n    case 'instruction':\n      var instruction = {};\n      instruction[element[options.nameKey]] = element[options.attributesKey] ? element : element[options.instructionKey];\n      return xml + (options.indentInstruction ? indent : '') + writeInstruction(instruction, options, depth);\n    }\n  }, '');\n}\n\nfunction hasContentCompact(element, options, anyContent) {\n  var key;\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      switch (key) {\n      case options.parentKey:\n      case options.attributesKey:\n        break; // skip to next key\n      case options.textKey:\n        if (options.indentText || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.cdataKey:\n        if (options.indentCdata || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.instructionKey:\n        if (options.indentInstruction || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.doctypeKey:\n      case options.commentKey:\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElementCompact(element, name, options, depth, indent) {\n  currentElement = element;\n  currentElementName = name;\n  var elementName = 'elementNameFn' in options ? options.elementNameFn(name, element) : name;\n  if (typeof element === 'undefined' || element === null || element === '') {\n    return 'fullTagEmptyElementFn' in options && options.fullTagEmptyElementFn(name, element) || options.fullTagEmptyElement ? '<' + elementName + '></' + elementName + '>' : '<' + elementName + '/>';\n  }\n  var xml = [];\n  if (name) {\n    xml.push('<' + elementName);\n    if (typeof element !== 'object') {\n      xml.push('>' + writeText(element,options) + '</' + elementName + '>');\n      return xml.join('');\n    }\n    if (element[options.attributesKey]) {\n      xml.push(writeAttributes(element[options.attributesKey], options, depth));\n    }\n    var withClosingTag = hasContentCompact(element, options, true) || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n    if (!withClosingTag) {\n      if ('fullTagEmptyElementFn' in options) {\n        withClosingTag = options.fullTagEmptyElementFn(name, element);\n      } else {\n        withClosingTag = options.fullTagEmptyElement;\n      }\n    }\n    if (withClosingTag) {\n      xml.push('>');\n    } else {\n      xml.push('/>');\n      return xml.join('');\n    }\n  }\n  xml.push(writeElementsCompact(element, options, depth + 1, false));\n  currentElement = element;\n  currentElementName = name;\n  if (name) {\n    xml.push((indent ? writeIndentation(options, depth, false) : '') + '</' + elementName + '>');\n  }\n  return xml.join('');\n}\n\nfunction writeElementsCompact(element, options, depth, firstLine) {\n  var i, key, nodes, xml = [];\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      nodes = isArray(element[key]) ? element[key] : [element[key]];\n      for (i = 0; i < nodes.length; ++i) {\n        switch (key) {\n        case options.declarationKey: xml.push(writeDeclaration(nodes[i], options, depth)); break;\n        case options.instructionKey: xml.push((options.indentInstruction ? writeIndentation(options, depth, firstLine) : '') + writeInstruction(nodes[i], options, depth)); break;\n        case options.attributesKey: case options.parentKey: break; // skip\n        case options.textKey: xml.push((options.indentText ? writeIndentation(options, depth, firstLine) : '') + writeText(nodes[i], options)); break;\n        case options.cdataKey: xml.push((options.indentCdata ? writeIndentation(options, depth, firstLine) : '') + writeCdata(nodes[i], options)); break;\n        case options.doctypeKey: xml.push(writeIndentation(options, depth, firstLine) + writeDoctype(nodes[i], options)); break;\n        case options.commentKey: xml.push(writeIndentation(options, depth, firstLine) + writeComment(nodes[i], options)); break;\n        default: xml.push(writeIndentation(options, depth, firstLine) + writeElementCompact(nodes[i], key, options, depth, hasContentCompact(nodes[i], options)));\n        }\n        firstLine = firstLine && !xml.length;\n      }\n    }\n  }\n  return xml.join('');\n}\n\nmodule.exports = function (js, options) {\n  options = validateOptions(options);\n  var xml = [];\n  currentElement = js;\n  currentElementName = '_root_';\n  if (options.compact) {\n    xml.push(writeElementsCompact(js, options, 0, true));\n  } else {\n    if (js[options.declarationKey]) {\n      xml.push(writeDeclaration(js[options.declarationKey], options, 0));\n    }\n    if (js[options.elementsKey] && js[options.elementsKey].length) {\n      xml.push(writeElements(js[options.elementsKey], options, 0, !xml.length));\n    }\n  }\n  return xml.join('');\n};\n", "var js2xml = require('./js2xml.js');\r\n\r\nmodule.exports = function (json, options) {\r\n  if (json instanceof Buffer) {\r\n    json = json.toString();\r\n  }\r\n  var js = null;\r\n  if (typeof (json) === 'string') {\r\n    try {\r\n      js = JSON.parse(json);\r\n    } catch (e) {\r\n      throw new Error('The JSON structure is invalid');\r\n    }\r\n  } else {\r\n    js = json;\r\n  }\r\n  return js2xml(js, options);\r\n};\r\n", "/*jslint node:true */\r\n\r\nvar xml2js = require('./xml2js');\r\nvar xml2json = require('./xml2json');\r\nvar js2xml = require('./js2xml');\r\nvar json2xml = require('./json2xml');\r\n\r\nmodule.exports = {\r\n  xml2js: xml2js,\r\n  xml2json: xml2json,\r\n  js2xml: js2xml,\r\n  json2xml: json2xml\r\n};\r\n", "import type { PropertyValue, RawAnnotation } from '@sap-ux/vocabularies-types';\nimport { AggregationAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/Aggregation';\nimport { CapabilitiesAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/Capabilities';\nimport { CommonAnnotationTerms, FieldControlType } from '@sap-ux/vocabularies-types/vocabularies/Common';\nimport { CoreAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/Core';\nimport { MeasuresAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/Measures';\nimport { UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\n\nexport type V2annotationsSupport = {\n    'sap:schema-version'?: string;\n    'sap:creatable'?: string;\n    'sap:creatable-path'?: string;\n    'sap:updatable'?: string;\n    'sap:updatable-path'?: string;\n    'sap:deletable'?: string;\n    'sap:deletable-path'?: string;\n    'sap:searchable'?: string;\n    'sap:pageable'?: string;\n    'sap:topable'?: string;\n    'sap:addressable'?: string;\n    'sap:requires-filter'?: string;\n    'sap:required-in-filter'?: string;\n    'sap:filterable'?: string;\n    'sap:filter-restricton'?: string;\n    'sap:sortable'?: string;\n    'sap:visible'?: string;\n    'sap:label'?: string;\n    'sap:heading'?: string;\n    'sap:quickinfo'?: string;\n    'sap:text'?: string;\n    'sap:unit'?: string;\n    'sap:precision'?: string;\n    'sap:value-list'?: string;\n    'sap:display-format'?: string;\n    'sap:lower-boundary'?: string;\n    'sap:upper-boundary'?: string;\n    'sap:field-control'?: string;\n    'sap:action-for'?: string;\n    'sap:applicable-path'?: string;\n    'sap:is-annotation'?: string;\n    'sap:minoccurs'?: string;\n    'sap:maxoccurs'?: string;\n    'sap:parameter'?: string;\n    'sap:attribute-for'?: string;\n    'sap:semantics'?: string;\n    // Leaving out the hiearchy / aggregation relate ones :)\n};\n\nexport type ObjectType = 'EntitySet' | 'EntityType' | 'Singleton' | 'Property' | 'NavigationProperty';\n\n/**\n * Convert v2 annotation that were defined on the schema as standard v4 annotations.\n *\n * @param attributes the attribute of the current object\n * @param objectType the object type\n * @param objectName the object name\n * @returns the converted annotations\n */\nexport function convertV2Annotations(\n    attributes: V2annotationsSupport,\n    objectType: ObjectType,\n    objectName: string\n): RawAnnotation[] {\n    const annotations: RawAnnotation[] = [];\n    switch (objectType) {\n        case 'EntitySet':\n            convertEntitySetAnnotations(attributes, annotations);\n            break;\n        case 'EntityType':\n            convertEntityTypeAnnotations(attributes, annotations);\n            break;\n        case 'NavigationProperty':\n            convertNavigationPropertyAnnotations(attributes, objectName, annotations);\n            break;\n        case 'Property':\n            convertPropertyAnnotations(attributes, objectName, annotations);\n            break;\n        case 'Singleton':\n            break;\n        default:\n            break;\n    }\n    convertGenericAnnotations(attributes, objectName, annotations);\n    return annotations;\n}\n\n/**\n * Convert annotation that can apply to all kind of objects.\n *\n * @param attributes the attribute of the current object\n * @param objectName the object name\n * @param annotations the raw annotation array\n */\nexport function convertGenericAnnotations(\n    attributes: V2annotationsSupport,\n    objectName: string,\n    annotations: RawAnnotation[]\n) {\n    /**\n     * Push to annotation if the condition evaluates to true.\n     *\n     * @param condition the condition to evaluate\n     * @param value the target value\n     */\n    function pushToAnnotations(condition: boolean, value: any) {\n        if (condition) {\n            annotations.push(value);\n        }\n    }\n\n    pushToAnnotations(attributes['sap:schema-version'] !== undefined, {\n        term: CoreAnnotationTerms.SchemaVersion,\n        value: {\n            type: 'String',\n            String: attributes['sap:schema-version']\n        }\n    });\n\n    pushToAnnotations(attributes['sap:searchable'] !== undefined, {\n        term: CapabilitiesAnnotationTerms.SearchRestrictions,\n        record: {\n            propertyValues: [\n                {\n                    name: 'Searchable',\n                    value: {\n                        type: 'Bool',\n                        Bool: attributes['sap:searchable'] === 'true'\n                    }\n                }\n            ]\n        }\n    });\n    pushToAnnotations(attributes['sap:pageable'] !== undefined, {\n        term: CapabilitiesAnnotationTerms.TopSupported,\n        value: {\n            type: 'Bool',\n            Bool: attributes['sap:pageable'] === 'true'\n        }\n    });\n\n    pushToAnnotations(attributes['sap:pageable'] !== undefined, {\n        term: CapabilitiesAnnotationTerms.SkipSupported,\n        value: {\n            type: 'Bool',\n            Bool: attributes['sap:pageable'] === 'true'\n        }\n    });\n\n    pushToAnnotations(attributes['sap:topable'] !== undefined, {\n        term: CapabilitiesAnnotationTerms.TopSupported,\n        value: {\n            type: 'Bool',\n            Bool: attributes['sap:topable'] === 'true'\n        }\n    });\n\n    pushToAnnotations(attributes['sap:requires-filter'] !== undefined, {\n        term: CapabilitiesAnnotationTerms.FilterRestrictions,\n        record: {\n            propertyValues: [\n                {\n                    name: 'RequiresFilter',\n                    value: {\n                        type: 'Bool',\n                        Bool: attributes['sap:requires-filter'] === 'true'\n                    }\n                }\n            ]\n        }\n    });\n    pushToAnnotations(attributes['sap:required-in-filter'] !== undefined, {\n        term: CapabilitiesAnnotationTerms.FilterRestrictions,\n        record: {\n            propertyValues: [\n                {\n                    name: 'RequiredProperties',\n                    value: {\n                        type: 'Collection',\n                        Collection: [\n                            {\n                                type: 'PropertyPath',\n                                PropertyPath: objectName\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    });\n\n    pushToAnnotations(attributes['sap:filter-restricton'] !== undefined, {\n        term: CapabilitiesAnnotationTerms.FilterRestrictions,\n        record: {\n            propertyValues: [\n                {\n                    name: 'FilterExpressionRestrictions',\n                    value: {\n                        type: 'Collection',\n                        Collection: [\n                            {\n                                type: 'Record',\n                                propertyValues: [\n                                    {\n                                        name: 'FilterExpressionRestrictions',\n                                        value: {\n                                            type: 'String',\n                                            String: attributes['sap:filter-restricton']\n                                        }\n                                    },\n                                    {\n                                        name: 'Property',\n                                        value: {\n                                            type: 'PropertyPath',\n                                            PropertyPath: objectName\n                                        }\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    });\n    pushToAnnotations(attributes['sap:sortable'] === 'false', {\n        term: CapabilitiesAnnotationTerms.SortRestrictions,\n        record: {\n            propertyValues: [\n                {\n                    name: 'NonSortableProperties',\n                    value: {\n                        type: 'PropertyPath',\n                        PropertyPath: objectName\n                    }\n                }\n            ]\n        }\n    });\n    pushToAnnotations(attributes['sap:visible'] === 'false', {\n        term: UIAnnotationTerms.Hidden,\n        value: {\n            type: 'Bool',\n            Bool: true\n        }\n    });\n    pushToAnnotations(attributes['sap:label'] !== undefined, {\n        term: CommonAnnotationTerms.Label,\n        value: {\n            type: 'String',\n            String: attributes['sap:label']\n        }\n    });\n    pushToAnnotations(attributes['sap:heading'] !== undefined, {\n        term: CommonAnnotationTerms.Heading,\n        value: {\n            type: 'String',\n            String: attributes['sap:heading']\n        }\n    });\n\n    pushToAnnotations(attributes['sap:quickinfo'] !== undefined, {\n        term: CommonAnnotationTerms.QuickInfo,\n        value: {\n            type: 'String',\n            String: attributes['sap:quickinfo']\n        }\n    });\n    pushToAnnotations(attributes['sap:text'] !== undefined, {\n        term: CommonAnnotationTerms.Text,\n        value: {\n            type: 'Path',\n            Path: attributes['sap:text']\n        }\n    });\n\n    pushToAnnotations(attributes['sap:unit'] !== undefined, {\n        term: MeasuresAnnotationTerms.Unit,\n        value: {\n            type: 'Path',\n            Path: attributes['sap:unit']\n        }\n    });\n    pushToAnnotations(attributes['sap:unit'] !== undefined, {\n        term: MeasuresAnnotationTerms.ISOCurrency,\n        value: {\n            type: 'Path',\n            Path: attributes['sap:unit']\n        }\n    });\n\n    pushToAnnotations(attributes['sap:precision'] !== undefined, {\n        term: MeasuresAnnotationTerms.Scale,\n        value: {\n            type: 'Int',\n            Int: parseInt(attributes['sap:precision'] as string, 10)\n        }\n    });\n    pushToAnnotations(attributes['sap:value-list'] === 'fixed-value', {\n        term: CommonAnnotationTerms.ValueListWithFixedValues,\n        value: {\n            type: 'Bool',\n            Bool: true\n        }\n    });\n\n    pushToAnnotations(attributes['sap:display-format'] === 'NonNegative', {\n        term: CommonAnnotationTerms.IsDigitSequence,\n        value: {\n            type: 'Bool',\n            Bool: true\n        }\n    });\n\n    pushToAnnotations(attributes['sap:display-format'] === 'UpperCase', {\n        term: CommonAnnotationTerms.IsUpperCase,\n        value: {\n            type: 'Bool',\n            Bool: true\n        }\n    });\n\n    if (attributes['sap:lower-boundary'] || attributes['sap:upper-boundary']) {\n        const pv: PropertyValue[] = [];\n        if (attributes['sap:lower-boundary']) {\n            pv.push({\n                name: 'LowerBoundary',\n                value: {\n                    type: 'PropertyPath',\n                    PropertyPath: attributes['sap:lower-boundary']\n                }\n            });\n        }\n        if (attributes['sap:upper-boundary']) {\n            pv.push({\n                name: 'UpperBoundary',\n                value: {\n                    type: 'PropertyPath',\n                    PropertyPath: attributes['sap:upper-boundary']\n                }\n            });\n        }\n        annotations.push({\n            term: CommonAnnotationTerms.Interval,\n            record: {\n                propertyValues: pv\n            }\n        });\n    }\n    pushToAnnotations(attributes['sap:field-control'] !== undefined, {\n        term: CommonAnnotationTerms.FieldControl,\n        value: {\n            type: 'Path',\n            Path: attributes['sap:field-control']\n        }\n    });\n\n    pushToAnnotations(attributes['sap:applicable-path'] !== undefined, {\n        term: CoreAnnotationTerms.OperationAvailable,\n        value: {\n            type: 'Path',\n            Path: attributes['sap:applicable-path']\n        }\n    });\n    pushToAnnotations(attributes['sap:minoccurs'] !== undefined, {\n        term: CommonAnnotationTerms.MinOccurs,\n        value: {\n            type: 'Int',\n            Int: parseInt(attributes['sap:minoccurs'] as string, 10)\n        }\n    });\n\n    pushToAnnotations(attributes['sap:maxoccurs'] !== undefined, {\n        term: CommonAnnotationTerms.MaxOccurs,\n        value: {\n            type: 'Int',\n            Int: parseInt(attributes['sap:maxoccurs'] as string, 10)\n        }\n    });\n\n    pushToAnnotations(attributes['sap:parameter'] === 'mandatory', {\n        term: CommonAnnotationTerms.FieldControl,\n        value: {\n            type: 'EnumMember',\n            EnumMember: FieldControlType.Mandatory\n        }\n    });\n\n    pushToAnnotations(attributes['sap:parameter'] === 'optional', {\n        term: CommonAnnotationTerms.FieldControl,\n        value: {\n            type: 'EnumMember',\n            EnumMember: FieldControlType.Optional\n        }\n    });\n\n    pushToAnnotations(attributes['sap:attribute-for'] !== undefined, {\n        term: CommonAnnotationTerms.Attributes,\n        value: {\n            type: 'Collection',\n            Collection: [\n                {\n                    type: 'PropertyPath',\n                    PropertyPath: objectName\n                }\n            ]\n        }\n    });\n}\n\n/**\n * Convert annotations specific to entityset.\n *\n * @param attributes The V2 Annotations to evaluate\n * @param annotations The raw annotation array\n */\nexport function convertEntitySetAnnotations(attributes: V2annotationsSupport, annotations: RawAnnotation[]) {\n    if (attributes['sap:creatable']) {\n        annotations.push({\n            term: CapabilitiesAnnotationTerms.InsertRestrictions,\n            record: {\n                propertyValues: [\n                    {\n                        name: 'Insertable',\n                        value: {\n                            type: 'Bool',\n                            Bool: attributes['sap:creatable'] === 'true'\n                        }\n                    }\n                ]\n            }\n        });\n    }\n    if (attributes['sap:updatable']) {\n        annotations.push({\n            term: CapabilitiesAnnotationTerms.UpdateRestrictions,\n            record: {\n                propertyValues: [\n                    {\n                        name: 'Updatable',\n                        value: {\n                            type: 'Bool',\n                            Bool: attributes['sap:updatable'] === 'true'\n                        }\n                    }\n                ]\n            }\n        });\n    }\n    if (attributes['sap:updatable-path']) {\n        annotations.push({\n            term: CapabilitiesAnnotationTerms.UpdateRestrictions,\n            record: {\n                propertyValues: [\n                    {\n                        name: 'Updatable',\n                        value: {\n                            type: 'Path',\n                            Path: attributes['sap:updatable-path']\n                        }\n                    }\n                ]\n            }\n        });\n    }\n    if (attributes['sap:deletable']) {\n        annotations.push({\n            term: CapabilitiesAnnotationTerms.DeleteRestrictions,\n            record: {\n                propertyValues: [\n                    {\n                        name: 'Deletable',\n                        value: {\n                            type: 'Bool',\n                            Bool: attributes['sap:updatable'] === 'true'\n                        }\n                    }\n                ]\n            }\n        });\n    }\n    if (attributes['sap:deletable-path']) {\n        annotations.push({\n            term: CapabilitiesAnnotationTerms.DeleteRestrictions,\n            record: {\n                propertyValues: [\n                    {\n                        name: 'Deletable',\n                        value: {\n                            type: 'Path',\n                            Path: attributes['sap:deletable-path']\n                        }\n                    }\n                ]\n            }\n        });\n    }\n}\n\n/**\n * Convert annotations specific to navigation properties.\n *\n * @param attributes The V2 Annotations to evaluate\n * @param objectName The name of the navigation property\n * @param annotations The raw annotation array\n */\nexport function convertNavigationPropertyAnnotations(\n    attributes: V2annotationsSupport,\n    objectName: string,\n    annotations: RawAnnotation[]\n) {\n    if (attributes['sap:creatable']) {\n        annotations.push({\n            term: CapabilitiesAnnotationTerms.NavigationRestrictions,\n            record: {\n                propertyValues: [\n                    {\n                        name: 'RestrictedProperties',\n                        value: {\n                            type: 'Record',\n                            Record: {\n                                propertyValues: [\n                                    {\n                                        name: 'InsertRestrictrions',\n                                        value: {\n                                            type: 'Record',\n                                            Record: {\n                                                propertyValues: [\n                                                    {\n                                                        name: 'Insertable',\n                                                        value: {\n                                                            type: 'Bool',\n                                                            Bool: attributes['sap:creatable'] === 'true'\n                                                        }\n                                                    }\n                                                ]\n                                            }\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    }\n                ]\n            }\n        });\n    }\n    if (attributes['sap:creatable-path']) {\n        annotations.push({\n            term: CapabilitiesAnnotationTerms.NavigationRestrictions,\n            record: {\n                propertyValues: [\n                    {\n                        name: 'RestrictedProperties',\n                        value: {\n                            type: 'Record',\n                            Record: {\n                                propertyValues: [\n                                    {\n                                        name: 'InsertRestrictrions',\n                                        value: {\n                                            type: 'Record',\n                                            Record: {\n                                                propertyValues: [\n                                                    {\n                                                        name: 'Insertable',\n                                                        value: {\n                                                            type: 'Path',\n                                                            Path: attributes['sap:creatable-path']\n                                                        }\n                                                    }\n                                                ]\n                                            }\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    }\n                ]\n            }\n        });\n    }\n    if (attributes['sap:filterable'] === 'false') {\n        annotations.push({\n            term: CapabilitiesAnnotationTerms.NavigationRestrictions,\n            record: {\n                propertyValues: [\n                    {\n                        name: 'RestrictedProperties',\n                        value: {\n                            type: 'Collection',\n                            Collection: [\n                                {\n                                    type: 'Record',\n                                    propertyValues: [\n                                        {\n                                            name: 'NavigationProperty',\n                                            value: {\n                                                type: 'NavigationPropertyPath',\n                                                NavigationPropertyPath: objectName\n                                            }\n                                        },\n                                        {\n                                            name: 'FilterRestrictions',\n                                            value: {\n                                                type: 'Record',\n                                                Record: {\n                                                    propertyValues: [\n                                                        {\n                                                            name: 'Filterable',\n                                                            value: {\n                                                                type: 'Bool',\n                                                                Bool: false\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        });\n    }\n}\n\n/**\n * Convert annotations specific to properties.\n *\n * @param attributes The V2 Annotations to evaluate\n * @param objectName The name of the property\n * @param annotations The raw annotation array\n */\nexport function convertPropertyAnnotations(\n    attributes: V2annotationsSupport,\n    objectName: string,\n    annotations: RawAnnotation[]\n) {\n    if (attributes['sap:creatable'] === 'true' && attributes['sap:updatable'] === 'false') {\n        annotations.push({\n            term: CoreAnnotationTerms.Immutable,\n            value: {\n                type: 'Bool',\n                Bool: true\n            }\n        });\n    }\n    if (attributes['sap:creatable'] === 'false' && attributes['sap:updatable'] === 'false') {\n        annotations.push({\n            term: CoreAnnotationTerms.Computed,\n            value: {\n                type: 'Bool',\n                Bool: true\n            }\n        });\n    }\n    if (attributes['sap:updatable-path']) {\n        annotations.push({\n            term: CommonAnnotationTerms.FieldControl,\n            value: {\n                type: 'Path',\n                Path: attributes['sap:updatable-path']\n            }\n        });\n    }\n    if (attributes['sap:filterable'] === 'false') {\n        annotations.push({\n            term: CapabilitiesAnnotationTerms.FilterRestrictions,\n            record: {\n                propertyValues: [\n                    {\n                        name: 'NonFilterableProperties',\n                        value: {\n                            type: 'Collection',\n                            Collection: [\n                                {\n                                    type: 'PropertyPath',\n                                    PropertyPath: objectName\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        });\n    }\n}\n\n/**\n * Convert annotations specific to properties.\n *\n * @param attributes The V2 Annotations to evaluate\n * @param annotations The raw annotation array\n */\nexport function convertEntityTypeAnnotations(attributes: V2annotationsSupport, annotations: RawAnnotation[]) {\n    if (attributes['sap:semantics'] === 'aggregate') {\n        annotations.push({\n            term: AggregationAnnotationTerms.ApplySupported,\n            record: {\n                propertyValues: [\n                    {\n                        /**\n                         Only properties marked as `Groupable` can be used in the `groupby` transformation, and only those marked as `Aggregatable` can be used in the  `aggregate` transformation\n                         */\n                        name: 'PropertyRestrictions',\n                        value: {\n                            type: 'Collection',\n                            Collection: []\n                        }\n                    },\n                    {\n                        /**\n                         A non-empty collection indicates that only the listed properties of the annotated target are supported by the `groupby` transformation\n                         */\n                        name: 'GroupableProperties',\n                        value: {\n                            type: 'Collection',\n                            Collection: []\n                        }\n                    },\n                    {\n                        /**\n                         A non-empty collection indicates that only the listed properties of the annotated target can be used in the `aggregate` transformation, optionally restricted to the specified aggregation methods\n                         */\n                        name: 'AggregatableProperties',\n                        value: {\n                            type: 'Collection',\n                            Collection: []\n                        }\n                    }\n                ]\n            }\n        });\n    }\n}\n", "// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../utils/edmx.d.ts\"/>\nimport type {\n    AnnotationList,\n    AnnotationPathExpression,\n    AnnotationRecord,\n    Apply,\n    Expression,\n    FullyQualifiedName,\n    NavigationPropertyPathExpression,\n    PathExpression,\n    PropertyPathExpression,\n    PropertyValue,\n    RawAction,\n    RawActionImport,\n    RawActionParameter,\n    RawAnnotation,\n    RawAssociation,\n    RawAssociationEnd,\n    RawAssociationSet,\n    RawAssociationSetEnd,\n    RawComplexType,\n    RawEntityContainer,\n    RawEntitySet,\n    RawEntityType,\n    RawMetadata,\n    RawProperty,\n    RawSchema,\n    RawSingleton,\n    RawTypeDefinition,\n    RawV2NavigationProperty,\n    RawV4NavigationProperty,\n    Reference,\n    ReferentialConstraint,\n    SimpleIdentifier\n} from '@sap-ux/vocabularies-types';\nimport type { StringExpression } from '@sap-ux/vocabularies-types/src';\nimport { xml2js } from 'xml-js';\nimport { ensureArray, RawMetadataInstance } from './utils';\nimport type { V2annotationsSupport } from './v2annotationsSupport';\nimport { convertV2Annotations } from './v2annotationsSupport';\n\nconst collectionRegexp = /^Collection\\((.+)\\)$/;\n\ntype PropertyOutput = {\n    entityProperties: RawProperty[];\n    entityKeys: RawProperty[];\n};\n\n// Type guards\n\n/**\n * Check whether the navigation property is a v4 navigation property.\n *\n * @param navPropertyAttributes\n * @returns true if the navigationProperty is a v4 one\n */\nfunction isV4NavProperty(\n    navPropertyAttributes: EDMX.NavigationPropertyAttributesV2 | EDMX.NavigationPropertyAttributesV4\n): navPropertyAttributes is EDMX.NavigationPropertyAttributesV4 {\n    return (\n        (navPropertyAttributes as EDMX.NavigationPropertyAttributesV4).Type !== null &&\n        (navPropertyAttributes as EDMX.NavigationPropertyAttributesV4).Type !== undefined\n    );\n}\n\n// Parser Methods\n/**\n * Retrieves the name of the keys for that entity type.\n *\n * @param propertyRefs {EDMX.PropertyRef} property reference\n * @returns the entityType keys name\n */\nfunction getEntityTypeKeys(propertyRefs: EDMX.PropertyRef[]): SimpleIdentifier[] {\n    return propertyRefs.map((propertyRef) => propertyRef._attributes.Name);\n}\n\n/**\n * Parse the EDMX.Property to retrieve the property.\n *\n * @param entityProperties\n * @param entityKeys\n * @param entityTypeFQN\n * @param annotationLists\n * @returns the properties\n */\nfunction parseProperties(\n    entityProperties: EDMX.Property[],\n    entityKeys: SimpleIdentifier[],\n    entityTypeFQN: FullyQualifiedName,\n    annotationLists: AnnotationList[]\n): PropertyOutput {\n    return entityProperties.reduce(\n        (outObject: PropertyOutput, entityProperty: EDMX.Property) => {\n            const edmProperty: RawProperty = {\n                _type: 'Property',\n                name: entityProperty._attributes.Name,\n                fullyQualifiedName: `${entityTypeFQN}/${entityProperty._attributes.Name}`,\n                type: unaliasType(entityProperty._attributes.Type).type\n            };\n            if (entityProperty._attributes.MaxLength) {\n                edmProperty.maxLength = parseInt(entityProperty._attributes.MaxLength, 10);\n            }\n            if (entityProperty._attributes.Precision) {\n                edmProperty.precision = parseInt(entityProperty._attributes.Precision, 10);\n            }\n            if (entityProperty._attributes.Scale) {\n                edmProperty.scale = parseInt(entityProperty._attributes.Scale, 10);\n            }\n            edmProperty.nullable = entityProperty._attributes.Nullable !== 'false';\n            if (entityProperty._attributes.DefaultValue) {\n                switch (edmProperty.type) {\n                    case 'Edm.Int16':\n                    case 'Edm.Byte':\n                    case 'Edm.Int32':\n                    case 'Edm.Int64':\n                        edmProperty.defaultValue = parseInt(entityProperty._attributes.DefaultValue, 10);\n                        break;\n                    case 'Edm.Decimal':\n                        edmProperty.defaultValue = parseFloat(entityProperty._attributes.DefaultValue);\n                        break;\n                    case 'Edm.Boolean':\n                        edmProperty.defaultValue = entityProperty._attributes.DefaultValue === 'true';\n                        break;\n                    default:\n                        edmProperty.defaultValue = entityProperty._attributes.DefaultValue;\n                        break;\n                }\n            }\n\n            outObject.entityProperties.push(edmProperty);\n            if (entityKeys.indexOf(edmProperty.name) !== -1) {\n                outObject.entityKeys.push(edmProperty);\n            }\n\n            const v2Annotations = convertV2Annotations(\n                entityProperty._attributes as V2annotationsSupport,\n                'Property',\n                entityProperty._attributes.Name\n            );\n            if (v2Annotations.length > 0) {\n                annotationLists.push(createAnnotationList(edmProperty.fullyQualifiedName, v2Annotations));\n            }\n\n            return outObject;\n        },\n        { entityProperties: [], entityKeys: [] }\n    );\n}\n\n/**\n * Parse the referential constraint from the EDMX into an object structure.\n *\n * @param referentialConstraints the EDMX referential constraints\n * @param sourceTypeName the name of the source type\n * @param targetTypeName the name of the target type\n * @returns the object representation of the referential constraint.\n */\nfunction parseReferentialConstraint(\n    referentialConstraints: EDMX.ReferentialConstraint[],\n    sourceTypeName: FullyQualifiedName,\n    targetTypeName: FullyQualifiedName\n): ReferentialConstraint[] {\n    return referentialConstraints.reduce((outArray: ReferentialConstraint[], refCon: EDMX.ReferentialConstraint) => {\n        outArray.push({\n            sourceTypeName: sourceTypeName,\n            sourceProperty: refCon._attributes.Property,\n            targetTypeName: targetTypeName,\n            targetProperty: refCon._attributes.ReferencedProperty\n        });\n        return outArray;\n    }, []);\n}\n\n/**\n * Parse the v2 referential constraint from the EDMX into an object structure.\n *\n * @param referentialConstraints the v2 referential constraint data\n * @param associationEnds the associations of the service to find the involved EntitySets.\n * @returns the object representation of the referential constraint.\n */\nfunction parseV2ReferentialConstraint(\n    referentialConstraints: EDMX.V2ReferentialConstraint[],\n    associationEnds: RawAssociationEnd[]\n) {\n    return referentialConstraints.reduce((outArray: ReferentialConstraint[], refCon) => {\n        let sourceEnd = associationEnds.find((assEnd) => assEnd.role === refCon.Principal._attributes.Role);\n        let targetEnd = associationEnds.find((assEnd) => assEnd.role === refCon.Dependent._attributes.Role);\n        if (sourceEnd !== undefined && targetEnd !== undefined) {\n            let sourceProperties = ensureArray(refCon.Principal.PropertyRef);\n            let targetProperties = ensureArray(refCon.Dependent.PropertyRef);\n            if (sourceEnd.multiplicity !== '1') {\n                targetEnd = sourceEnd;\n                sourceEnd = associationEnds.find(\n                    (assEnd) => assEnd.role === refCon.Dependent._attributes.Role\n                ) as RawAssociationEnd; // We're reversing them so it will exist for sure\n                targetProperties = sourceProperties;\n                sourceProperties = ensureArray(refCon.Dependent.PropertyRef);\n            }\n            for (const sourceProperty of sourceProperties) {\n                const propertyIndex = sourceProperties.indexOf(sourceProperty);\n                outArray.push({\n                    sourceTypeName: sourceEnd.type,\n                    sourceProperty: sourceProperty._attributes.Name,\n                    targetTypeName: targetEnd.type,\n                    targetProperty: targetProperties[propertyIndex]._attributes.Name\n                });\n            }\n        }\n        return outArray;\n    }, []);\n}\n\n/**\n * Parse the EDMX representation of the navigation property in an object structure.\n *\n * @param navigationProperties the navigation property definition\n * @param currentEntityType the current entity type\n * @param entityTypeFQN the name of the current entity type\n * @param annotationLists the list of annotations\n * @returns all the navigation properties from the service\n */\nfunction parseNavigationProperties(\n    navigationProperties: EDMX.NavigationProperty[],\n    currentEntityType: EDMX.EntityType | EDMX.ComplexType,\n    entityTypeFQN: FullyQualifiedName,\n    annotationLists: AnnotationList[]\n): (RawV2NavigationProperty | RawV4NavigationProperty)[] {\n    return navigationProperties.reduce(\n        (outArray: (RawV2NavigationProperty | RawV4NavigationProperty)[], navigationProperty) => {\n            // V4\n            const attributes: EDMX.NavigationPropertyAttributesV4 | EDMX.NavigationPropertyAttributesV2 =\n                navigationProperty._attributes;\n            if (isV4NavProperty(attributes)) {\n                const matches = attributes.Type.match(collectionRegexp);\n                const isCollection = matches !== null;\n                const typeName = unalias(matches ? matches[1] : attributes.Type);\n                outArray.push({\n                    _type: 'NavigationProperty',\n                    name: attributes.Name,\n                    fullyQualifiedName: `${entityTypeFQN}/${attributes.Name}`,\n                    partner: attributes.Partner,\n                    containsTarget: attributes.ContainsTarget === 'true',\n                    isCollection,\n                    targetTypeName: typeName,\n                    referentialConstraint: parseReferentialConstraint(\n                        ensureArray(navigationProperty.ReferentialConstraint),\n                        currentEntityType._attributes.Name,\n                        typeName\n                    )\n                });\n            } else {\n                // V2\n                const { Relationship, ToRole, FromRole } = attributes;\n                outArray.push({\n                    _type: 'NavigationProperty',\n                    name: attributes.Name,\n                    fullyQualifiedName: `${entityTypeFQN}/${attributes.Name}`,\n                    relationship: Relationship,\n                    toRole: ToRole,\n                    fromRole: FromRole\n                });\n                const v2Annotations = convertV2Annotations(\n                    attributes as V2annotationsSupport,\n                    'NavigationProperty',\n                    attributes.Name\n                );\n                if (v2Annotations.length > 0) {\n                    annotationLists.push(createAnnotationList(`${entityTypeFQN}/${attributes.Name}`, v2Annotations));\n                }\n            }\n\n            return outArray;\n        },\n        []\n    );\n}\n\nfunction parseAssociationSets(\n    associations: EDMX.AssociationSet[],\n    namespace: string,\n    entityContainer: EDMX.EntityContainer\n): RawAssociationSet[] {\n    return associations.map((association) => {\n        const associationFQN = `${namespace}.${association._attributes.Name}`;\n        const associationEnd: RawAssociationSetEnd[] = ensureArray(association.End).map(\n            (endValue: EDMX.AssociationSetEnd) => {\n                return {\n                    entitySet: `${namespace}.${entityContainer._attributes.Name}/${endValue._attributes.EntitySet}`,\n                    role: endValue._attributes.Role\n                };\n            }\n        );\n        return {\n            fullyQualifiedName: associationFQN,\n            name: association._attributes.Name,\n            association: association._attributes.Association,\n            associationEnd: associationEnd\n        };\n    });\n}\n\nfunction parseAssociations(associations: EDMX.Association[], namespace: string): RawAssociation[] {\n    return associations.map((association) => {\n        const associationFQN = `${namespace}.${association._attributes.Name}`;\n        const associationEnd: RawAssociationEnd[] = ensureArray(association.End).map(\n            (endValue: EDMX.AssociationEnd) => {\n                return {\n                    type: endValue._attributes.Type,\n                    role: endValue._attributes.Role,\n                    multiplicity: endValue._attributes.Multiplicity\n                };\n            }\n        );\n        return {\n            fullyQualifiedName: associationFQN,\n            name: association._attributes.Name,\n            associationEnd: associationEnd,\n            referentialConstraints: parseV2ReferentialConstraint(\n                ensureArray(association.ReferentialConstraint),\n                associationEnd\n            )\n        };\n    });\n}\n\nfunction parseEntityTypes(\n    entityTypes: EDMX.EntityType[],\n    annotationLists: AnnotationList[],\n    namespace: string\n): RawEntityType[] {\n    return entityTypes.reduce((outArray: RawEntityType[], entityType) => {\n        const entityKeyNames = entityType.Key ? getEntityTypeKeys(ensureArray(entityType.Key.PropertyRef)) : [];\n        const entityTypeFQN = `${namespace}.${entityType._attributes.Name}`;\n        const { entityProperties, entityKeys } = parseProperties(\n            ensureArray(entityType.Property),\n            entityKeyNames,\n            entityTypeFQN,\n            annotationLists\n        );\n        const navigationProperties = parseNavigationProperties(\n            ensureArray(entityType.NavigationProperty),\n            entityType,\n            entityTypeFQN,\n            annotationLists\n        );\n        const outEntityType: RawEntityType = {\n            _type: 'EntityType',\n            name: entityType._attributes.Name,\n            fullyQualifiedName: entityTypeFQN,\n            keys: entityKeys,\n            entityProperties,\n            actions: {},\n            navigationProperties: navigationProperties\n        };\n        const v2Annotations = convertV2Annotations(\n            entityType._attributes as V2annotationsSupport,\n            'EntityType',\n            entityType._attributes.Name\n        );\n        if (v2Annotations.length > 0) {\n            annotationLists.push(createAnnotationList(outEntityType.fullyQualifiedName, v2Annotations));\n        }\n        outArray.push(outEntityType);\n        return outArray;\n    }, []);\n}\n\nfunction parseComplexTypes(\n    complexTypes: EDMX.ComplexType[],\n    annotationLists: AnnotationList[],\n    namespace: string\n): RawComplexType[] {\n    return complexTypes.reduce((outArray: RawComplexType[], complexType) => {\n        const complexTypeFQN = `${namespace}.${complexType._attributes.Name}`;\n        const { entityProperties } = parseProperties(\n            ensureArray(complexType.Property),\n            [],\n            complexTypeFQN,\n            annotationLists\n        );\n        const navigationProperties = parseNavigationProperties(\n            ensureArray(complexType.NavigationProperty),\n            complexType,\n            complexTypeFQN,\n            annotationLists\n        );\n        outArray.push({\n            _type: 'ComplexType',\n            name: complexType._attributes.Name,\n            fullyQualifiedName: complexTypeFQN,\n            properties: entityProperties,\n            navigationProperties\n        });\n        return outArray;\n    }, []);\n}\n\nfunction parseTypeDefinitions(typeDefinitions: EDMX.TypeDefinition[], namespace: string): RawTypeDefinition[] {\n    return typeDefinitions.reduce((outArray: RawTypeDefinition[], typeDefinition) => {\n        const typeDefinitionFQN = `${namespace}.${typeDefinition._attributes.Name}`;\n        outArray.push({\n            _type: 'TypeDefinition',\n            name: typeDefinition._attributes.Name,\n            fullyQualifiedName: typeDefinitionFQN,\n            underlyingType: typeDefinition._attributes.UnderlyingType\n        });\n        return outArray;\n    }, []);\n}\n\nfunction parseEntitySets(\n    entitySets: EDMX.EntitySet[],\n    namespace: string,\n    entityContainerName: string,\n    annotationLists: AnnotationList[]\n): RawEntitySet[] {\n    const outEntitySets: RawEntitySet[] = entitySets.map((entitySet) => {\n        const navigationPropertyBinding = Object.fromEntries(\n            ensureArray(entitySet.NavigationPropertyBinding).map((navPropertyBinding) => {\n                return [\n                    navPropertyBinding._attributes.Path,\n                    `${namespace}.${entityContainerName}/${navPropertyBinding._attributes.Target}`\n                ];\n            })\n        );\n\n        const outEntitySet: RawEntitySet = {\n            _type: 'EntitySet',\n            name: entitySet._attributes.Name,\n            entityTypeName: unalias(entitySet._attributes.EntityType),\n            navigationPropertyBinding,\n            fullyQualifiedName: `${namespace}.${entityContainerName}/${entitySet._attributes.Name}`\n        };\n        const v2Annotations = convertV2Annotations(\n            entitySet._attributes as V2annotationsSupport,\n            'EntitySet',\n            entitySet._attributes.Name\n        );\n        if (v2Annotations.length > 0) {\n            annotationLists.push(createAnnotationList(outEntitySet.fullyQualifiedName, v2Annotations));\n        }\n        return outEntitySet;\n    });\n\n    return outEntitySets;\n}\n\nfunction parseSingletons(\n    singletons: EDMX.Singleton[],\n    namespace: string,\n    entityContainerName: string,\n    annotationLists: AnnotationList[]\n): RawSingleton[] {\n    const outSingletons: RawSingleton[] = singletons.map((singleton) => {\n        const navigationPropertyBinding = Object.fromEntries(\n            ensureArray(singleton.NavigationPropertyBinding).map((navPropertyBinding) => {\n                return [\n                    navPropertyBinding._attributes.Path,\n                    `${namespace}.${entityContainerName}/${navPropertyBinding._attributes.Target}`\n                ];\n            })\n        );\n\n        const outSingleton: RawSingleton = {\n            _type: 'Singleton',\n            name: singleton._attributes.Name,\n            entityTypeName: unalias(singleton._attributes.Type),\n            nullable: singleton._attributes.Nullable !== 'false',\n            navigationPropertyBinding,\n            fullyQualifiedName: `${namespace}.${entityContainerName}/${singleton._attributes.Name}`\n        };\n        const v2Annotations = convertV2Annotations(\n            singleton._attributes as V2annotationsSupport,\n            'Singleton',\n            singleton._attributes.Name\n        );\n        if (v2Annotations.length > 0) {\n            annotationLists.push(createAnnotationList(outSingleton.fullyQualifiedName, v2Annotations));\n        }\n        return outSingleton;\n    });\n\n    return outSingletons;\n}\n\nfunction parseActions(actions: (EDMX.Action | EDMX.Function)[], namespace: string, isFunction: boolean): RawAction[] {\n    return actions.map((action) => {\n        const parameters = ensureArray(action.Parameter);\n        const isBound = action._attributes.IsBound === 'true';\n\n        let overload: string;\n        if (isFunction) {\n            // function\n            // https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_FunctionOverloads\n            // Unbound: \"The combination of function name and ordered set of parameter types MUST be unique within a schema.\"\n            // Bound:   \"The combination of function name, binding parameter type, and ordered set of parameter types MUST be unique within a schema.\"\n            //  ==> consider all parameters for the FQN\n            overload = parameters.map((parameter) => unaliasType(parameter._attributes.Type).type).join(',');\n        } else {\n            // action\n            overload = isBound ? unaliasType(parameters[0]._attributes.Type).type : ''; // '' = the unbound overload\n        }\n\n        const fullyQualifiedName: FullyQualifiedName = `${namespace}.${action._attributes.Name}(${overload})`;\n        return {\n            _type: 'Action',\n            name: action._attributes.Name,\n            isBound: isBound,\n            sourceType: isBound ? unaliasType(parameters[0]._attributes.Type).type : '',\n            fullyQualifiedName: fullyQualifiedName,\n            isFunction: isFunction,\n            parameters: parameters.map((param) => {\n                const { isCollection, type } = unaliasType(param._attributes.Type);\n\n                const edmActionParameter: RawActionParameter = {\n                    _type: 'ActionParameter',\n                    fullyQualifiedName: `${fullyQualifiedName}/${param._attributes.Name}`,\n                    name: `${param._attributes.Name}`,\n                    type,\n                    isCollection\n                };\n                if (param._attributes.MaxLength) {\n                    edmActionParameter.maxLength = parseInt(param._attributes.MaxLength, 10);\n                }\n                if (param._attributes.Precision) {\n                    edmActionParameter.precision = parseInt(param._attributes.Precision, 10);\n                }\n                if (param._attributes.Scale) {\n                    edmActionParameter.scale = parseInt(param._attributes.Scale, 10);\n                }\n                edmActionParameter.nullable = param._attributes.Nullable !== 'false';\n                return edmActionParameter;\n            }),\n            returnType: action.ReturnType ? unaliasType(action.ReturnType._attributes.Type).type : ''\n        };\n    });\n}\n\nfunction parseV2FunctionImport(\n    actions: EDMX.FunctionImportV2[],\n    entitySets: RawEntitySet[],\n    namespace: string\n): RawAction[] {\n    return actions.map((action) => {\n        const targetEntitySet = entitySets.find((et) => et.name === action._attributes.EntitySet);\n        const actionFQN: string = `${namespace}/${action._attributes.Name}`;\n        return {\n            _type: 'Action',\n            name: action._attributes.Name,\n            isBound: false,\n            sourceType: targetEntitySet ? targetEntitySet.entityTypeName : '',\n            fullyQualifiedName: actionFQN,\n            isFunction: false,\n            parameters: ensureArray(action.Parameter).map((param) => {\n                return {\n                    _type: 'ActionParameter',\n                    name: param._attributes.Name,\n                    fullyQualifiedName: `${actionFQN}/${param._attributes.Name}`,\n                    type: param._attributes.Type,\n                    isCollection: param._attributes.Type.match(/^Collection\\(.+\\)$/) !== null\n                };\n            }),\n            returnType: action._attributes.ReturnType ? action._attributes.ReturnType : ''\n        };\n    });\n}\n\nfunction parseActionImports(\n    imports: (EDMX.FunctionImport | EDMX.ActionImport)[],\n    namespace: string\n): RawActionImport[] {\n    return imports.map((actionOrFunctionImport) => {\n        const action =\n            (actionOrFunctionImport as EDMX.FunctionImport)._attributes.Function ??\n            (actionOrFunctionImport as EDMX.ActionImport)._attributes.Action;\n\n        return {\n            _type: 'ActionImport',\n            name: unalias(actionOrFunctionImport._attributes.Name),\n            fullyQualifiedName: `${namespace}/${actionOrFunctionImport._attributes.Name}`,\n            actionName: unalias(action)\n        };\n    });\n}\n\nfunction parsePropertyValues(\n    propertyValues: EDMX.PropertyValue[],\n    currentTarget: string,\n    annotationsLists: AnnotationList[]\n): PropertyValue[] {\n    return propertyValues.map((propertyValue) => {\n        // I don't care about the first part but need the rest and the spread operator\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { Annotation, _attributes, ...properties } = propertyValue;\n        const outPropertyValue: Partial<PropertyValue> = {};\n        if (_attributes) {\n            const attributeKey: keyof EDMX.InlineExpression | undefined = Object.keys(_attributes).find(\n                (keyName) => keyName !== 'Property'\n            ) as keyof EDMX.InlineExpression | undefined;\n            outPropertyValue.name = _attributes.Property;\n            const currentPropertyTarget = `${currentTarget}/${outPropertyValue.name}`;\n            if (properties && Object.keys(properties).length > 0) {\n                outPropertyValue.value = parseExpression(properties, currentPropertyTarget, annotationsLists);\n            } else if (attributeKey) {\n                outPropertyValue.value = parseInlineExpression(\n                    { [attributeKey]: _attributes[attributeKey] },\n                    currentPropertyTarget,\n                    annotationsLists\n                );\n            }\n            if (propertyValue.Annotation) {\n                const propertyAnnotations = parseAnnotations(\n                    ensureArray(propertyValue.Annotation),\n                    currentPropertyTarget,\n                    annotationsLists\n                );\n                if (propertyAnnotations && propertyAnnotations.length > 0) {\n                    annotationsLists.push(createAnnotationList(currentPropertyTarget, propertyAnnotations));\n                }\n            }\n        }\n        return outPropertyValue as PropertyValue;\n    });\n}\n\nfunction parseRecord(\n    record: EDMX.RecordExpression,\n    currentTarget: string,\n    annotationsLists: AnnotationList[]\n): AnnotationRecord {\n    const recordAnnotations = parseAnnotations(ensureArray(record.Annotation), currentTarget, annotationsLists);\n    const outRecord: AnnotationRecord = {\n        type: record._attributes ? unalias(record._attributes.Type) : undefined,\n        propertyValues: parsePropertyValues(ensureArray(record.PropertyValue), currentTarget, annotationsLists)\n    };\n    if (recordAnnotations && recordAnnotations.length > 0) {\n        outRecord.annotations = recordAnnotations;\n    }\n    return outRecord;\n}\n\n/**\n * Type Guard for the type of the current collection.\n *\n * @param annotation\n * @param propertyNameToCheck\n * @returns true if the collection if of the right type\n */\nfunction isExpressionOfType<K>(annotation: any, propertyNameToCheck: string): annotation is K {\n    return annotation[propertyNameToCheck] != null;\n}\n\nfunction parseModelPath(\n    propertyPath: EDMX.ModelPath,\n    modelPathType: 'AnnotationPath' | 'PropertyPath' | 'NavigationPropertyPath' | 'Path'\n): PropertyPathExpression | NavigationPropertyPathExpression | AnnotationPathExpression | PathExpression {\n    switch (modelPathType) {\n        case 'NavigationPropertyPath':\n            return { type: 'NavigationPropertyPath', NavigationPropertyPath: propertyPath._text };\n        case 'PropertyPath':\n            return { type: 'PropertyPath', PropertyPath: propertyPath._text };\n        case 'AnnotationPath':\n            return { type: 'AnnotationPath', AnnotationPath: propertyPath._text };\n        case 'Path':\n            return { type: 'Path', Path: propertyPath._text };\n    }\n}\n\nfunction parseCollection(\n    collection: EDMX.CollectionExpression,\n    currentTarget: string,\n    annotationsLists: AnnotationList[]\n):\n    | AnnotationRecord[]\n    | StringExpression[]\n    | PropertyPathExpression[]\n    | PathExpression[]\n    | AnnotationPathExpression[]\n    | NavigationPropertyPathExpression[] {\n    if (isExpressionOfType<EDMX.RecordCollectionWrapper>(collection, 'Record')) {\n        const recordArray = ensureArray(collection.Record).map((record, recordIndex) =>\n            parseRecord(record, currentTarget + '/' + recordIndex, annotationsLists)\n        );\n        (recordArray as any).type = 'Record';\n        return recordArray;\n    } else if (isExpressionOfType<EDMX.PropertyPathCollectionWrapper>(collection, 'PropertyPath')) {\n        const propertyPathArray = ensureArray(collection.PropertyPath).map(\n            (propertyPath) => parseModelPath(propertyPath, 'PropertyPath') as PropertyPathExpression\n        );\n        (propertyPathArray as any).type = 'PropertyPath';\n        return propertyPathArray;\n    } else if (isExpressionOfType<EDMX.NavigationPropertyPathCollectionWrapper>(collection, 'NavigationPropertyPath')) {\n        const navPropertyPathArray = ensureArray(collection.NavigationPropertyPath).map(\n            (navPropertyPath) =>\n                parseModelPath(navPropertyPath, 'NavigationPropertyPath') as NavigationPropertyPathExpression\n        );\n        (navPropertyPathArray as any).type = 'NavigationPropertyPath';\n        return navPropertyPathArray;\n    } else if (isExpressionOfType<EDMX.StringCollectionWrapper>(collection, 'String')) {\n        const stringArray = ensureArray(collection.String).map((stringValue) => stringValue._text);\n        (stringArray as any).type = 'String';\n        return stringArray as unknown as StringExpression[];\n    } else if (isExpressionOfType<EDMX.AnnotationPathCollectionWrapper>(collection, 'AnnotationPath')) {\n        const annotationPathArray = ensureArray(collection.AnnotationPath).map(\n            (annotationPath) => parseModelPath(annotationPath, 'AnnotationPath') as AnnotationPathExpression\n        );\n        (annotationPathArray as any).type = 'AnnotationPath';\n        return annotationPathArray;\n    } else if (isExpressionOfType<EDMX.PathCollectionWrapper>(collection, 'Path')) {\n        const pathArray = ensureArray(collection.Path).map(\n            (pathDefinition) => parseModelPath(pathDefinition, 'Path') as PathExpression\n        );\n        (pathArray as any).type = 'Path';\n        return pathArray;\n    } else if (isExpressionOfType<EDMX.IfCollectionWrapper>(collection, 'If')) {\n        const stringArray = ensureArray(collection.If).map((stringValue) => stringValue._text);\n        (stringArray as any).type = 'String';\n        return stringArray;\n    } else if (Object.keys(collection).length === 0) {\n        return [];\n    } else {\n        console.error(`Cannot parse ${JSON.stringify(collection)}, collection type is not supported`);\n    }\n    return [];\n}\n\nfunction parseApply(applyExpression: EDMX.ApplyExpression): Apply {\n    return applyExpression;\n}\n\nfunction parseInlineExpression(\n    expression: EDMX.InlineExpression,\n    currentTarget: string,\n    annotationsLists: AnnotationList[]\n): Expression {\n    const expressionKeys = Object.keys(expression);\n    if (expressionKeys.length > 1) {\n        throw new Error(`Too many expressions defined on a single object ${JSON.stringify(expression)}`);\n    }\n    const expressionKey = expressionKeys[0];\n    switch (expressionKey) {\n        case 'String':\n            return {\n                type: 'String',\n                String: expression[expressionKey] as string\n            };\n        case 'Bool':\n            return {\n                type: 'Bool',\n                Bool: expression.Bool === 'true'\n            };\n        case 'Decimal':\n            return {\n                type: 'Decimal',\n                Decimal: parseFloat(expression.Decimal as string)\n            };\n        case 'Date':\n            return {\n                type: 'Date',\n                Date: expression.Date as string\n            };\n        case 'Int':\n            return {\n                type: 'Int',\n                Int: parseInt(expression.Int as string, 10)\n            };\n        case 'Float':\n            return {\n                type: 'Float',\n                Float: parseFloat(expression.Float as unknown as string)\n            };\n        case 'Path':\n            return {\n                type: 'Path',\n                Path: expression.Path as string\n            };\n        case 'PropertyPath':\n            return {\n                type: 'PropertyPath',\n                PropertyPath: expression.PropertyPath as string\n            };\n        case 'AnnotationPath':\n            return {\n                type: 'AnnotationPath',\n                AnnotationPath: expression.AnnotationPath as string\n            };\n        case 'NavigationPropertyPath':\n            return {\n                type: 'NavigationPropertyPath',\n                NavigationPropertyPath: expression.NavigationPropertyPath as string\n            };\n        case 'EnumMember':\n            return {\n                type: 'EnumMember',\n                EnumMember: expression[expressionKey] as string\n            };\n        case 'Collection':\n            return {\n                type: 'Collection',\n                Collection: parseCollection(\n                    expression.Collection as EDMX.CollectionExpression,\n                    currentTarget,\n                    annotationsLists\n                )\n            };\n        case 'Record':\n            return {\n                type: 'Record',\n                Record: parseRecord(expression.Record as EDMX.RecordExpression, currentTarget, annotationsLists)\n            };\n        case 'Apply':\n            return {\n                type: 'Apply',\n                Apply: parseApply(expression.Apply)\n            };\n        case 'Null':\n            return {\n                type: 'Null'\n            };\n        default:\n            console.error('Unsupported inline expression type ' + expressionKey);\n            return {\n                type: 'Unknown'\n            };\n    }\n}\n\nfunction parseExpression(\n    expression: EDMX.Expression<{}>,\n    currentTarget: string,\n    annotationsLists: AnnotationList[]\n): Expression {\n    const expressionKeys = Object.keys(expression);\n    if (expressionKeys.length > 1) {\n        throw new Error(`Too many expressions defined on a single object ${JSON.stringify(expression)}`);\n    }\n    const expressionKey = expressionKeys[0];\n    switch (expressionKey) {\n        case 'String':\n            return {\n                type: 'String',\n                String: (expression[expressionKey] as any)._text as string\n            };\n        case 'Bool':\n            return {\n                type: 'Bool',\n                Bool: (expression.Bool as any)._text === 'true'\n            };\n        case 'Int':\n            return {\n                type: 'Int',\n                Int: parseInt((expression.Int as any)._text as string, 10)\n            };\n        case 'Decimal':\n            return {\n                type: 'Decimal',\n                Decimal: parseFloat((expression.Decimal as any)._text as string)\n            };\n        case 'Path':\n            return {\n                type: 'Path',\n                Path: (expression.Path as EDMX.InstancePath)._text\n            };\n        case 'PropertyPath':\n            return {\n                type: 'PropertyPath',\n                PropertyPath: (expression.PropertyPath as EDMX.ModelPath)._text\n            };\n        case 'NavigationPropertyPath':\n            return {\n                type: 'NavigationPropertyPath',\n                NavigationPropertyPath: (expression.NavigationPropertyPath as EDMX.ModelPath)._text\n            };\n        case 'AnnotationPath':\n            return {\n                type: 'AnnotationPath',\n                AnnotationPath: (expression.AnnotationPath as EDMX.ModelPath)._text\n            };\n        case 'EnumMember':\n            return {\n                type: 'EnumMember',\n                EnumMember: (expression[expressionKey] as any)._text as string\n            };\n        case 'Collection':\n            return {\n                type: 'Collection',\n                Collection: parseCollection(\n                    expression.Collection as EDMX.CollectionExpression,\n                    currentTarget,\n                    annotationsLists\n                )\n            };\n        case 'Record':\n            return {\n                type: 'Record',\n                Record: parseRecord(expression.Record as EDMX.RecordExpression, currentTarget, annotationsLists)\n            };\n        case 'Apply':\n            return {\n                type: 'Apply',\n                Apply: parseApply(expression.Apply)\n            };\n        case 'Null':\n            return {\n                type: 'Null'\n            };\n        default:\n            console.error('Unsupported expression type ' + expressionKey);\n            return {\n                type: 'Unknown'\n            };\n    }\n}\n\nfunction parseAnnotation(\n    annotation: EDMX.Annotation,\n    currentTarget: string,\n    annotationsLists: AnnotationList[]\n): RawAnnotation {\n    const { Term, Qualifier, ...others } = annotation._attributes;\n    const outAnnotation: Partial<RawAnnotation> = {\n        term: unalias(Term),\n        qualifier: Qualifier\n    };\n    let currentAnnotationTarget = `${currentTarget}@${unalias(Term)}`;\n    if (Qualifier !== '' && Qualifier !== undefined) {\n        currentAnnotationTarget += `#${Qualifier}`;\n    }\n    if (others && Object.keys(others).length > 0) {\n        outAnnotation.value = parseInlineExpression(others, currentAnnotationTarget, annotationsLists);\n    }\n    if (annotation.Annotation) {\n        const annotationAnnotations = parseAnnotations(\n            ensureArray(annotation.Annotation),\n            currentAnnotationTarget,\n            annotationsLists\n        );\n        if (annotationAnnotations && annotationAnnotations.length > 0) {\n            outAnnotation.annotations = annotationAnnotations;\n        }\n    }\n    const keys = Object.keys(annotation).filter((keyValue) => keyValue !== '_attributes' && keyValue !== 'Annotation');\n    if (isExpressionOfType<EDMX.RecordWrapper>(annotation, 'Record')) {\n        outAnnotation.record = parseRecord(annotation.Record, currentAnnotationTarget, annotationsLists);\n    } else if (isExpressionOfType<EDMX.CollectionWrapper>(annotation, 'Collection')) {\n        outAnnotation.collection = parseCollection(annotation.Collection, currentAnnotationTarget, annotationsLists);\n    } else if (keys.length === 1) {\n        outAnnotation.value = parseExpression(\n            { [keys[0]]: (annotation as any)[keys[0]] },\n            currentAnnotationTarget,\n            annotationsLists\n        );\n    } else if (keys.length > 1) {\n        console.error(`Cannot parse ${JSON.stringify(annotation)}, expression type is not supported`);\n    }\n\n    return outAnnotation as RawAnnotation;\n}\n\nfunction parseAnnotations(\n    annotations: EDMX.Annotation[],\n    currentTarget: string,\n    annotationsLists: AnnotationList[]\n): RawAnnotation[] {\n    return annotations.map((annotation) => parseAnnotation(annotation, currentTarget, annotationsLists));\n}\n\nfunction createAnnotationList(target: string, annotations: RawAnnotation[]): AnnotationList {\n    return {\n        target: target,\n        annotations: annotations\n    };\n}\n\n/**\n * @param annotationLists\n * @param annotationsLists\n */\nfunction parseAnnotationLists(annotationLists: EDMX.AnnotationList[], annotationsLists: AnnotationList[]): void {\n    annotationLists\n        .filter((annotationList) => annotationList._attributes !== undefined)\n        .forEach((annotationList) => {\n            annotationsLists.push(\n                createAnnotationList(\n                    unalias(annotationList._attributes.Target),\n                    parseAnnotations(\n                        ensureArray(annotationList.Annotation),\n                        annotationList._attributes.Target,\n                        annotationsLists\n                    )\n                )\n            );\n        });\n}\n\nfunction parseSchema(edmSchema: EDMX.Schema, edmVersion: string, identification: string): RawSchema {\n    const namespace = edmSchema._attributes.Namespace;\n    const annotations: AnnotationList[] = [];\n    const entityTypes = parseEntityTypes(ensureArray(edmSchema.EntityType), annotations, namespace);\n    const complexTypes = parseComplexTypes(ensureArray(edmSchema.ComplexType), annotations, namespace);\n    const typeDefinitions = parseTypeDefinitions(ensureArray(edmSchema.TypeDefinition), namespace);\n    let entitySets: RawEntitySet[] = [];\n    let singletons: RawSingleton[] = [];\n    let associationSets: RawAssociationSet[] = [];\n    let entityContainer: RawEntityContainer = {\n        _type: 'EntityContainer',\n        fullyQualifiedName: ''\n    };\n    let actions: RawAction[] = [];\n    let actionImports: RawActionImport[] = [];\n\n    if (edmSchema.EntityContainer) {\n        entitySets = parseEntitySets(\n            ensureArray(edmSchema.EntityContainer.EntitySet),\n            namespace,\n            edmSchema.EntityContainer._attributes.Name,\n            annotations\n        );\n        singletons = parseSingletons(\n            ensureArray(edmSchema.EntityContainer.Singleton),\n            namespace,\n            edmSchema.EntityContainer._attributes.Name,\n            annotations\n        );\n\n        associationSets = parseAssociationSets(\n            ensureArray(edmSchema.EntityContainer.AssociationSet),\n            namespace,\n            edmSchema.EntityContainer\n        );\n        entityContainer = {\n            _type: 'EntityContainer',\n            name: edmSchema.EntityContainer._attributes.Name,\n            fullyQualifiedName: `${namespace}.${edmSchema.EntityContainer._attributes.Name}`\n        };\n\n        if (edmVersion === '1.0') {\n            actions = actions.concat(\n                parseV2FunctionImport(\n                    ensureArray(edmSchema.EntityContainer.FunctionImport) as EDMX.FunctionImportV2[],\n                    entitySets,\n                    entityContainer.fullyQualifiedName\n                )\n            );\n        } else if (edmVersion === '4.0') {\n            // FunctionImports\n            actionImports = actionImports.concat(\n                parseActionImports(\n                    ensureArray(edmSchema.EntityContainer.FunctionImport) as EDMX.FunctionImport[],\n                    entityContainer.fullyQualifiedName\n                )\n            );\n\n            // ActionImports\n            actionImports = actionImports.concat(\n                parseActionImports(\n                    ensureArray(edmSchema.EntityContainer.ActionImport),\n                    entityContainer.fullyQualifiedName\n                )\n            );\n        } else {\n            throw new Error(`Unsupported EDMX version: ${edmVersion}`);\n        }\n    }\n    if (edmVersion === '4.0') {\n        actions = actions.concat(parseActions(ensureArray(edmSchema.Action), namespace, false));\n        actions = actions.concat(parseActions(ensureArray(edmSchema.Function), namespace, true));\n    }\n    const associations = parseAssociations(ensureArray(edmSchema.Association), namespace);\n\n    parseAnnotationLists(ensureArray(edmSchema.Annotations), annotations);\n    const annotationMap: { [id: string]: AnnotationList[] } = {};\n    annotationMap[identification] = annotations;\n    return {\n        associations,\n        associationSets,\n        annotations: annotationMap,\n        entityContainer,\n        namespace: namespace,\n        entitySets,\n        singletons,\n        complexTypes,\n        typeDefinitions,\n        actions,\n        actionImports,\n        entityTypes\n    };\n}\n\nfunction parseReferences(references: EDMX.Reference[]): Reference[] {\n    return references.reduce((referencesArray: Reference[], reference: EDMX.Reference) => {\n        const includes = ensureArray(reference['edmx:Include']);\n        includes.forEach((include: EDMX.ReferenceInclude) => {\n            referencesArray.push({\n                uri: reference._attributes.Uri,\n                alias: include._attributes.Alias,\n                namespace: include._attributes.Namespace\n            });\n        });\n        return referencesArray;\n    }, []);\n}\n\nlet aliases: Record<string, string> = {};\n\nfunction unaliasType(type: string) {\n    const collection = type.match(collectionRegexp);\n    const _type = collection ? collection[1] : type;\n    const unaliasedType = unalias(_type);\n    return {\n        type: collection ? `Collection(${unaliasedType})` : unaliasedType,\n        isCollection: collection !== null\n    };\n}\n\nfunction unalias(aliasedValue: string): string;\nfunction unalias(aliasedValue: undefined): undefined;\nfunction unalias(aliasedValue: string | undefined): string | undefined {\n    if (!aliasedValue) {\n        return aliasedValue;\n    }\n\n    const separators = ['@', '/', '('];\n    const unaliased: string[] = [];\n    let start = 0;\n    for (let end = 0, maybeAlias = true; end < aliasedValue.length; end++) {\n        const char = aliasedValue[end];\n        if (maybeAlias && char === '.') {\n            const alias = aliasedValue.substring(start, end);\n            unaliased.push(aliases[alias] ?? alias);\n            start = end;\n            maybeAlias = false;\n        }\n        if (separators.includes(char)) {\n            unaliased.push(aliasedValue.substring(start, end + 1));\n            start = end + 1;\n            maybeAlias = true;\n        }\n    }\n    unaliased.push(aliasedValue.substring(start));\n\n    return unaliased.join('');\n}\n\nfunction mergeSchemas(schemas: RawSchema[]): RawSchema {\n    const associations = schemas.reduce((associationsToReduce: RawAssociation[], schema) => {\n        return associationsToReduce.concat(schema.associations);\n    }, []);\n    const associationSets = schemas.reduce((associationSetsToReduce: RawAssociationSet[], schema) => {\n        return associationSetsToReduce.concat(schema.associationSets);\n    }, []);\n    const entitySets = schemas.reduce((entitySetsToReduce: RawEntitySet[], schema) => {\n        return entitySetsToReduce.concat(schema.entitySets);\n    }, []);\n    const singletons = schemas.reduce((singletonsToReduce: RawSingleton[], schema) => {\n        return singletonsToReduce.concat(schema.singletons);\n    }, []);\n    const entityTypes = schemas.reduce((entityTypesToReduce: RawEntityType[], schema) => {\n        return entityTypesToReduce.concat(schema.entityTypes);\n    }, []);\n    const actions = schemas.reduce((actionsToReduce: RawAction[], schema) => {\n        return actionsToReduce.concat(schema.actions);\n    }, []);\n    const actionImports = schemas.reduce((actionImportsToReduce: RawActionImport[], schema) => {\n        return actionImportsToReduce.concat(schema.actionImports);\n    }, []);\n    const complexTypes = schemas.reduce((complexTypesToReduces: RawComplexType[], schema) => {\n        return complexTypesToReduces.concat(schema.complexTypes);\n    }, []);\n    const typeDefinitions = schemas.reduce((typeDefinitionsToReduce: RawTypeDefinition[], schema) => {\n        return typeDefinitionsToReduce.concat(schema.typeDefinitions);\n    }, []);\n    let annotationMap = {};\n    schemas.forEach((schema) => {\n        annotationMap = Object.assign(annotationMap, schema.annotations);\n    });\n    let entityContainer!: RawEntityContainer;\n    let namespace!: string;\n    schemas.forEach((schema) => {\n        if (schema.entityContainer && Object.keys(schema.entityContainer).length > 0) {\n            entityContainer = schema.entityContainer;\n            namespace = schema.namespace;\n        }\n    });\n\n    // V2 case\n    entitySets.forEach((entitySet) => {\n        const entityType = entityTypes.find(\n            (rawEntityType) => rawEntityType.fullyQualifiedName === entitySet.entityTypeName\n        );\n        entityType?.navigationProperties.forEach((navProp) => {\n            const v2NavProp: RawV2NavigationProperty = navProp as RawV2NavigationProperty;\n            const associationSet = associationSets.find((assoc) => assoc.association === v2NavProp.relationship);\n            if (associationSet) {\n                const targetEntitySet = associationSet.associationEnd.find(\n                    (associationEnd) => associationEnd.entitySet !== entitySet.fullyQualifiedName\n                );\n\n                if (targetEntitySet) {\n                    entitySet.navigationPropertyBinding[navProp.name] = targetEntitySet.entitySet;\n                }\n            }\n        });\n    });\n    entityTypes.forEach((entityType) => {\n        entityType.navigationProperties.forEach((navProp: any) => {\n            const v2NavProp: RawV2NavigationProperty = navProp as RawV2NavigationProperty;\n            const association = associations.find((assoc) => assoc.fullyQualifiedName === v2NavProp.relationship);\n            if (association && association.referentialConstraints && association.referentialConstraints.length > 0) {\n                if (association.referentialConstraints[0].sourceTypeName === entityType.fullyQualifiedName) {\n                    v2NavProp.referentialConstraint = association.referentialConstraints;\n                } else {\n                    v2NavProp.referentialConstraint = association.referentialConstraints.map((refConstraint) => {\n                        return {\n                            sourceTypeName: refConstraint.targetTypeName,\n                            sourceProperty: refConstraint.targetProperty,\n                            targetTypeName: refConstraint.sourceTypeName,\n                            targetProperty: refConstraint.sourceProperty\n                        };\n                    });\n                }\n            }\n        });\n    });\n    return {\n        associations,\n        associationSets,\n        annotations: annotationMap,\n        entityContainer,\n        namespace: namespace,\n        entitySets,\n        singletons,\n        complexTypes,\n        typeDefinitions,\n        actions,\n        actionImports,\n        entityTypes\n    };\n}\n\nfunction createAliasMap(references: Reference[], schemas: EDMX.Schema[]) {\n    aliases = references.reduce((map, reference) => {\n        map[reference.alias] = reference.namespace;\n        return map;\n    }, {} as Record<string, string>);\n\n    schemas\n        .filter((schema) => schema._attributes.Alias)\n        .forEach((schema) => {\n            aliases[schema._attributes.Alias] = schema._attributes.Namespace;\n        });\n}\n\n/**\n * Parse an edmx file and return an object structure representing the service definition.\n *\n * @param xml {string} the original XML string\n * @param fileIdentification {string} a way to identify this file\n * @returns the parsed metadata definition\n */\nexport function parse(xml: string, fileIdentification: string = 'serviceFile'): RawMetadata {\n    const jsonObj: EDMX.Edmx = xml2js(xml, { compact: true }) as EDMX.Edmx;\n\n    const version = jsonObj['edmx:Edmx']._attributes.Version;\n    const schemas: EDMX.Schema[] = ensureArray(jsonObj['edmx:Edmx']['edmx:DataServices'].Schema);\n    const references = parseReferences(ensureArray(jsonObj['edmx:Edmx']['edmx:Reference']));\n\n    createAliasMap(references, schemas);\n\n    const parsedSchemas = schemas.map((schema) => {\n        return parseSchema(schema, version, fileIdentification);\n    });\n    const edmxDocument: RawMetadata = new RawMetadataInstance(\n        fileIdentification,\n        version,\n        mergeSchemas(parsedSchemas),\n        references\n    );\n\n    return edmxDocument;\n}\n", "export { merge } from './merger';\nexport { parse } from './parser';\n", "/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof globalThis === \"object\" ? globalThis :\n            typeof global === \"object\" ? global :\n                typeof self === \"object\" ? self :\n                    typeof this === \"object\" ? this :\n                        sloppyModeThis();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect !== \"undefined\") {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter, root);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                if (previous)\n                    previous(key, value);\n            };\n        }\n        function functionThis() {\n            try {\n                return Function(\"return this;\")();\n            }\n            catch (_) { }\n        }\n        function indirectEvalThis() {\n            try {\n                return (void 0, eval)(\"(function() { return this; })()\");\n            }\n            catch (_) { }\n        }\n        function sloppyModeThis() {\n            return functionThis() || indirectEvalThis();\n        }\n    })(function (exporter, root) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        var registrySymbol = supportsSymbol ? Symbol.for(\"@reflect-metadata:registry\") : undefined;\n        var metadataRegistry = GetOrCreateMetadataRegistry();\n        var metadataProvider = CreateMetadataProvider(metadataRegistry);\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var provider = GetMetadataProvider(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return;\n            return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ true);\n            provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var provider = GetMetadataProvider(O, P, /*create*/ false);\n            if (!provider) {\n                return [];\n            }\n            return provider.OrdinaryOwnMetadataKeys(O, P);\n        }\n        // 6 ECMAScript Data Types and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        function SameValueZero(x, y) {\n            return x === y || x !== x && y !== y;\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // Global metadata registry\n        // - Allows `import \"reflect-metadata\"` and `import \"reflect-metadata/no-conflict\"` to interoperate.\n        // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.\n        /**\n         * Creates a registry used to allow multiple `reflect-metadata` providers.\n         */\n        function CreateMetadataRegistry() {\n            var fallback;\n            if (!IsUndefined(registrySymbol) &&\n                typeof root.Reflect !== \"undefined\" &&\n                !(registrySymbol in root.Reflect) &&\n                typeof root.Reflect.defineMetadata === \"function\") {\n                // interoperate with older version of `reflect-metadata` that did not support a registry.\n                fallback = CreateFallbackProvider(root.Reflect);\n            }\n            var first;\n            var second;\n            var rest;\n            var targetProviderMap = new _WeakMap();\n            var registry = {\n                registerProvider: registerProvider,\n                getProvider: getProvider,\n                setProvider: setProvider,\n            };\n            return registry;\n            function registerProvider(provider) {\n                if (!Object.isExtensible(registry)) {\n                    throw new Error(\"Cannot add provider to a frozen registry.\");\n                }\n                switch (true) {\n                    case fallback === provider: break;\n                    case IsUndefined(first):\n                        first = provider;\n                        break;\n                    case first === provider: break;\n                    case IsUndefined(second):\n                        second = provider;\n                        break;\n                    case second === provider: break;\n                    default:\n                        if (rest === undefined)\n                            rest = new _Set();\n                        rest.add(provider);\n                        break;\n                }\n            }\n            function getProviderNoCache(O, P) {\n                if (!IsUndefined(first)) {\n                    if (first.isProviderFor(O, P))\n                        return first;\n                    if (!IsUndefined(second)) {\n                        if (second.isProviderFor(O, P))\n                            return first;\n                        if (!IsUndefined(rest)) {\n                            var iterator = GetIterator(rest);\n                            while (true) {\n                                var next = IteratorStep(iterator);\n                                if (!next) {\n                                    return undefined;\n                                }\n                                var provider = IteratorValue(next);\n                                if (provider.isProviderFor(O, P)) {\n                                    IteratorClose(iterator);\n                                    return provider;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {\n                    return fallback;\n                }\n                return undefined;\n            }\n            function getProvider(O, P) {\n                var providerMap = targetProviderMap.get(O);\n                var provider;\n                if (!IsUndefined(providerMap)) {\n                    provider = providerMap.get(P);\n                }\n                if (!IsUndefined(provider)) {\n                    return provider;\n                }\n                provider = getProviderNoCache(O, P);\n                if (!IsUndefined(provider)) {\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return provider;\n            }\n            function hasProvider(provider) {\n                if (IsUndefined(provider))\n                    throw new TypeError();\n                return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);\n            }\n            function setProvider(O, P, provider) {\n                if (!hasProvider(provider)) {\n                    throw new Error(\"Metadata provider not registered.\");\n                }\n                var existingProvider = getProvider(O, P);\n                if (existingProvider !== provider) {\n                    if (!IsUndefined(existingProvider)) {\n                        return false;\n                    }\n                    var providerMap = targetProviderMap.get(O);\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return true;\n            }\n        }\n        /**\n         * Gets or creates the shared registry of metadata providers.\n         */\n        function GetOrCreateMetadataRegistry() {\n            var metadataRegistry;\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                metadataRegistry = root.Reflect[registrySymbol];\n            }\n            if (IsUndefined(metadataRegistry)) {\n                metadataRegistry = CreateMetadataRegistry();\n            }\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                Object.defineProperty(root.Reflect, registrySymbol, {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: metadataRegistry\n                });\n            }\n            return metadataRegistry;\n        }\n        function CreateMetadataProvider(registry) {\n            // [[Metadata]] internal slot\n            // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n            var metadata = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var targetMetadata = metadata.get(O);\n                    if (IsUndefined(targetMetadata))\n                        return false;\n                    return targetMetadata.has(P);\n                },\n                OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,\n                OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,\n                OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,\n                OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,\n                OrdinaryDeleteMetadata: OrdinaryDeleteMetadata,\n            };\n            metadataRegistry.registerProvider(provider);\n            return provider;\n            function GetOrCreateMetadataMap(O, P, Create) {\n                var targetMetadata = metadata.get(O);\n                var createdTargetMetadata = false;\n                if (IsUndefined(targetMetadata)) {\n                    if (!Create)\n                        return undefined;\n                    targetMetadata = new _Map();\n                    metadata.set(O, targetMetadata);\n                    createdTargetMetadata = true;\n                }\n                var metadataMap = targetMetadata.get(P);\n                if (IsUndefined(metadataMap)) {\n                    if (!Create)\n                        return undefined;\n                    metadataMap = new _Map();\n                    targetMetadata.set(P, metadataMap);\n                    if (!registry.setProvider(O, P, provider)) {\n                        targetMetadata.delete(P);\n                        if (createdTargetMetadata) {\n                            metadata.delete(O);\n                        }\n                        throw new Error(\"Wrong provider for target.\");\n                    }\n                }\n                return metadataMap;\n            }\n            // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n            function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                return ToBoolean(metadataMap.has(MetadataKey));\n            }\n            // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n            function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return undefined;\n                return metadataMap.get(MetadataKey);\n            }\n            // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n            function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n                metadataMap.set(MetadataKey, MetadataValue);\n            }\n            // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n            function OrdinaryOwnMetadataKeys(O, P) {\n                var keys = [];\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return keys;\n                var keysObj = metadataMap.keys();\n                var iterator = GetIterator(keysObj);\n                var k = 0;\n                while (true) {\n                    var next = IteratorStep(iterator);\n                    if (!next) {\n                        keys.length = k;\n                        return keys;\n                    }\n                    var nextValue = IteratorValue(next);\n                    try {\n                        keys[k] = nextValue;\n                    }\n                    catch (e) {\n                        try {\n                            IteratorClose(iterator);\n                        }\n                        finally {\n                            throw e;\n                        }\n                    }\n                    k++;\n                }\n            }\n            function OrdinaryDeleteMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                if (!metadataMap.delete(MetadataKey))\n                    return false;\n                if (metadataMap.size === 0) {\n                    var targetMetadata = metadata.get(O);\n                    if (!IsUndefined(targetMetadata)) {\n                        targetMetadata.delete(P);\n                        if (targetMetadata.size === 0) {\n                            metadata.delete(targetMetadata);\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        function CreateFallbackProvider(reflect) {\n            var defineMetadata = reflect.defineMetadata, hasOwnMetadata = reflect.hasOwnMetadata, getOwnMetadata = reflect.getOwnMetadata, getOwnMetadataKeys = reflect.getOwnMetadataKeys, deleteMetadata = reflect.deleteMetadata;\n            var metadataOwner = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var metadataPropertySet = metadataOwner.get(O);\n                    if (!IsUndefined(metadataPropertySet) && metadataPropertySet.has(P)) {\n                        return true;\n                    }\n                    if (getOwnMetadataKeys(O, P).length) {\n                        if (IsUndefined(metadataPropertySet)) {\n                            metadataPropertySet = new _Set();\n                            metadataOwner.set(O, metadataPropertySet);\n                        }\n                        metadataPropertySet.add(P);\n                        return true;\n                    }\n                    return false;\n                },\n                OrdinaryDefineOwnMetadata: defineMetadata,\n                OrdinaryHasOwnMetadata: hasOwnMetadata,\n                OrdinaryGetOwnMetadata: getOwnMetadata,\n                OrdinaryOwnMetadataKeys: getOwnMetadataKeys,\n                OrdinaryDeleteMetadata: deleteMetadata,\n            };\n            return provider;\n        }\n        /**\n         * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,\n         * then this module's metadata provider is assigned to the object.\n         */\n        function GetMetadataProvider(O, P, Create) {\n            var registeredProvider = metadataRegistry.getProvider(O, P);\n            if (!IsUndefined(registeredProvider)) {\n                return registeredProvider;\n            }\n            if (Create) {\n                if (metadataRegistry.setProvider(O, P, metadataProvider)) {\n                    return metadataProvider;\n                }\n                throw new Error(\"Illegal state.\");\n            }\n            return undefined;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            var Map = /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (SameValueZero(key, this._cacheKey)) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (!SameValueZero(this._cacheKey, key)) {\n                        this._cacheIndex = -1;\n                        for (var i = 0; i < this._keys.length; i++) {\n                            if (SameValueZero(this._keys[i], key)) {\n                                this._cacheIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            return Map;\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            var Set = /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.keys(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n            return Set;\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    var array = new Uint8Array(size);\n                    if (typeof crypto !== \"undefined\") {\n                        crypto.getRandomValues(array);\n                    }\n                    else if (typeof msCrypto !== \"undefined\") {\n                        msCrypto.getRandomValues(array);\n                    }\n                    else {\n                        FillRandomBytes(array, size);\n                    }\n                    return array;\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 \u00A7 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n", "/**\n * @module @ui5/flexibility-utils/src/changeUtils\n */\n\nlet iIdCounter = 0;\nconst CHANGE_UTILS_PREFIX = \"changeUtils: \";\n\nfunction uid() {\n\treturn \"id-\" + new Date().valueOf() + \"-\" + iIdCounter++;\n}\n\nfunction appendComponentToReference(sComponentName) {\n\tif (sComponentName && sComponentName.indexOf(\".Component\") < 0) {\n\t\tsComponentName += \".Component\";\n\t}\n\treturn sComponentName;\n}\n\nfunction getFlexReference(manifest) {\n\tconst oSapUi5Entry = manifest[\"sap.ui5\"];\n\tif (oSapUi5Entry) {\n\t\tif (oSapUi5Entry.appVariantId) {\n\t\t\treturn oSapUi5Entry.appVariantId;\n\t\t}\n\n\t\tif (oSapUi5Entry.componentName) {\n\t\t\treturn appendComponentToReference(oSapUi5Entry.componentName);\n\t\t}\n\t}\n\n\tconst sapApp = manifest[\"sap.app\"];\n\tif (!sapApp || !sapApp.id) {\n\t\tthrow Error(\"app ID could not be determined\");\n\t}\n\treturn sapApp.id;\n}\n\nfunction getAppVersion(manifest) {\n\tconst sapApp = manifest[\"sap.app\"];\n\tif (!sapApp || !sapApp.applicationVersion || !sapApp.applicationVersion.version) {\n\t\tthrow Error(\"app version could not be determined\");\n\t}\n\treturn sapApp.applicationVersion.version;\n}\n\nfunction getProjectId(manifest, reference) {\n\tif (\n\t\tmanifest &&\n\t\tmanifest[\"sap.app\"] &&\n\t\tmanifest[\"sap.app\"].sourceTemplate &&\n\t\t[\"ui5template.smartTemplate\", \"ui5template.smarttemplate\"].includes(manifest[\"sap.app\"].sourceTemplate.id)\n\t) {\n\t\treturn reference;\n\t}\n\n\treturn \"\";\n}\n\nfunction createString(propertyBag) {\n\treturn JSON.stringify({\n\t\tfileName: propertyBag.id || uid().replace(/-/g, \"_\") + \"_\" + propertyBag.type,\n\t\tfileType: \"change\",\n\t\tchangeType: propertyBag.type,\n\t\tmoduleName: \"\",\n\t\treference: propertyBag.reference,\n\t\tpackageName: \"\",\n\t\tcontent: propertyBag.content || {},\n\t\tselector: {\n\t\t\tid: propertyBag.controlId,\n\t\t\tidIsLocal: false,\n\t\t\ttype: propertyBag.controlType\n\t\t},\n\t\tlayer: propertyBag.isCustomer ? \"CUSTOMER_BASE\" : \"VENDOR\",\n\t\ttexts: {},\n\t\tnamespace: \"apps/\" + propertyBag.reference.replace(\".Component\", \"\") + \"/changes/\",\n\t\tprojectId: propertyBag.projectId,\n\t\tcreation: propertyBag.creation || new Date().valueOf(),\n\t\toriginalLanguage: \"\",\n\t\tsupport: {\n\t\t\tgenerator: CHANGE_UTILS_PREFIX + propertyBag.creatingTool,\n\t\t\tservice: \"\",\n\t\t\tuser: \"\",\n\t\t\tsapui5Version: propertyBag.sapui5Version,\n\t\t\tsourceChangeFileName: \"\",\n\t\t\tcompositeCommand: \"\"\n\t\t},\n\t\toDataInformation: {},\n\t\tdependentSelector: {},\n\t\tvalidAppVersions: {\n\t\t\tfrom: propertyBag.appVersion,\n\t\t\tto: propertyBag.appVersion,\n\t\t\tcreation: propertyBag.appVersion\n\n\t\t},\n\t\tjsOnly: false,\n\t\tvariantReference: \"\",\n\t\tappDescriptorChange: false\n\t});\n}\n\n/**\n * Object containing information for a change update.\n *\n * @typedef {object} \tChangeDefinition\n * @property {string}\tcontrolId - ID of the control containing all prefixes excluding the application ID prefix\n * @property {string}\ttype - Change type, i.e. <code>propertyChange</code>\n * @property {Object}\tcontent - Content of the change needed by the corresponding change handler\n * @property {boolean}\tisCustomer - Flag indicating whether the project is related to a customer project\n * @property {string}\tsapui5Version - SAPUI5 version for which the change is created\n * @property {string}\tcreatingTool - Name of the tool calling this function for support reasons\n * @property {string}\tid - UID of the change;\n * \t\t\t\t\t\t\tDefined on the first <code>toString</code> function call via the <code>manifest</code>\n * @property {string}\treference - Reference to the application;\n * \t\t\t\t\t\t\tDefined on the first <code>toString</code> function call via the <code>manifest</code>\n * @property {string}\tappVersion - Version of the application;\n *\t\t \t\t\t\t\tDefined on the first <code>toString</code> function call via the <code>manifest</code>\n * @property {string}\tcreation - String with the creation timestamp;\n * \t\t\t\t\t\t\tDefined on the first <code>toString</code> function call via the <code>manifest</code>\n */\n\n/**\n * Object containing information for a change creation.\n *\n * @typedef {object} \tChangeDefinitionInCreation\n * @property {string}  \tcontrolId - ID of the control containing all prefixes excluding the application ID prefix\n * @property {string}  \ttype - Change type, i.e. <code>propertyChange</code>\n * @property {Object}  \t[content] - Content of the change needed by the corresponding change handler\n * @property {boolean} \tisCustomer - Flag indicating whether the project is related to a customer project\n * @property {string}  \t[sapui5Version] - SAPUI5 version for which the change is created\n * @property {string}  \tcreatingTool - Name of the tool calling this function (this is needed for support reasons)\n */\n\nmodule.exports = {\n\t/**\n\t * Parses a string of a change file into a change definition;\n\t * The parsed entities <code>id</code>, <code>reference</code>, <code>appVersion</code>, <code>creation</code>\n\t * must not be changed between <code>toString</code> operations.\n\t *\n\t * @param {string} changeString - Stringified change object stored in the workspace\n\t * @returns {ChangeDefinition}\n\t */\n\tparse: function(changeString) {\n\t\tconst change = JSON.parse(changeString);\n\n\t\tif (\n\t\t\t!change.fileName ||\n\t\t\t!change.changeType ||\n\t\t\t!change.selector ||\n\t\t\t!change.reference ||\n\t\t\t!change.creation ||\n\t\t\t!change.content ||\n\t\t\t!change.layer ||\n\t\t\t!change.support\n\t\t) {\n\t\t\tthrow Error(\"Parsed object does not contain all required parameters\");\n\t\t}\n\n\t\treturn {\n\t\t\tid: change.fileName,\n\t\t\treference: change.reference,\n\t\t\tappVersion: change.validAppVersions ? change.validAppVersions.creation : \"\",\n\t\t\tcreation: change.creation,\n\t\t\tprojectId: change.projectId,\n\t\t\ttype: change.changeType,\n\t\t\tcontrolId: change.selector.id,\n\t\t\tcontrolType: change.selector.type,\n\t\t\tisCustomer: change.layer === \"CUSTOMER_BASE\",\n\t\t\tcreatingTool: change.support.generator.replace(CHANGE_UTILS_PREFIX, \"\"),\n\t\t\tcontent: change.content,\n\t\t\tsapui5Version: change.support.sapui5Version\n\t\t};\n\t},\n\n\t/**\n\t * Generates a string of a change to write it as a file into the workspace.\n\t *\n\t * @param {changeDefinitionInCreation} propertyBag -\n\t * \t\t\tObject containing parameters for the change string creation\n\t * @param {object} manifest - Application manifest\n\t * @returns {string} Stringified change object needed and understood by the SAPUI5 runtime for storing in the workspace\n\t */\n\tcreateChangeString: function (propertyBag, manifest) {\n\t\tif (\n\t\t\t!propertyBag.type ||\n\t\t\t!propertyBag.controlId ||\n\t\t\t!(typeof propertyBag.isCustomer === \"boolean\") ||\n\t\t\t!propertyBag.creatingTool\n\t\t) {\n\t\t\tthrow Error(\"not all property parameters of the change were provided\");\n\t\t}\n\n\t\tif (!manifest) {\n\t\t\tthrow Error(\"no manifest was provided\");\n\t\t}\n\n\t\tpropertyBag.reference = getFlexReference(manifest);\n\t\tpropertyBag.appVersion = getAppVersion(manifest);\n\t\tpropertyBag.projectId = getProjectId(manifest, propertyBag.reference);\n\n\t\treturn createString(propertyBag);\n\t},\n\n\t/**\n\t * Generates a string of a parsed change to write it as a file into the workspace.\n\t *\n\t * @param {ChangeDefinition} propertyBag -\n\t * \t\t\tObject containing parameters for the change string creation\n\t * @returns {string} Stringified change object needed and understood by the SAPUI5 runtime for storing in the workspace\n\t */\n\ttoString: function(propertyBag) {\n\t\tif (\n\t\t\t!propertyBag.type ||\n\t\t\t!propertyBag.controlId ||\n\t\t\t!(typeof propertyBag.isCustomer === \"boolean\") ||\n\t\t\t!propertyBag.creatingTool ||\n\t\t\t!(propertyBag.reference && propertyBag.appVersion)\n\t\t) {\n\t\t\tthrow Error(\"not all parameters of the change were provided\");\n\t\t}\n\n\t\treturn createString(propertyBag);\n\t}\n};\n", "/**\n * @module @ui5/flexibility-utils\n * @public\n */\n\nmodule.exports = {\n\t/**\n\t * @public\n\t * @see module:@ui5/flexibility-utils/src/changeUtils.js\n\t */\n\tchange: require(\"./src/changeUtils\")\n};", "/*\n * EJS Embedded JavaScript templates\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\n/**\n * Private utility functions\n * @module utils\n * @private\n */\n\n'use strict';\n\nvar regExpChars = /[|\\\\{}()[\\]^$+*?.]/g;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar hasOwn = function (obj, key) { return hasOwnProperty.apply(obj, [key]); };\n\n/**\n * Escape characters reserved in regular expressions.\n *\n * If `string` is `undefined` or `null`, the empty string is returned.\n *\n * @param {String} string Input string\n * @return {String} Escaped string\n * @static\n * @private\n */\nexports.escapeRegExpChars = function (string) {\n  // istanbul ignore if\n  if (!string) {\n    return '';\n  }\n  return String(string).replace(regExpChars, '\\\\$&');\n};\n\nvar _ENCODE_HTML_RULES = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&#34;',\n  \"'\": '&#39;'\n};\nvar _MATCH_HTML = /[&<>'\"]/g;\n\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n}\n\n/**\n * Stringified version of constants used by {@link module:utils.escapeXML}.\n *\n * It is used in the process of generating {@link ClientFunction}s.\n *\n * @readonly\n * @type {String}\n */\n\nvar escapeFuncStr =\n  'var _ENCODE_HTML_RULES = {\\n'\n+ '      \"&\": \"&amp;\"\\n'\n+ '    , \"<\": \"&lt;\"\\n'\n+ '    , \">\": \"&gt;\"\\n'\n+ '    , \\'\"\\': \"&#34;\"\\n'\n+ '    , \"\\'\": \"&#39;\"\\n'\n+ '    }\\n'\n+ '  , _MATCH_HTML = /[&<>\\'\"]/g;\\n'\n+ 'function encode_char(c) {\\n'\n+ '  return _ENCODE_HTML_RULES[c] || c;\\n'\n+ '};\\n';\n\n/**\n * Escape characters reserved in XML.\n *\n * If `markup` is `undefined` or `null`, the empty string is returned.\n *\n * @implements {EscapeCallback}\n * @param {String} markup Input string\n * @return {String} Escaped string\n * @static\n * @private\n */\n\nexports.escapeXML = function (markup) {\n  return markup == undefined\n    ? ''\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\n\nfunction escapeXMLToString() {\n  return Function.prototype.toString.call(this) + ';\\n' + escapeFuncStr;\n}\n\ntry {\n  if (typeof Object.defineProperty === 'function') {\n  // If the Function prototype is frozen, the \"toString\" property is non-writable. This means that any objects which inherit this property\n  // cannot have the property changed using an assignment. If using strict mode, attempting that will cause an error. If not using strict\n  // mode, attempting that will be silently ignored.\n  // However, we can still explicitly shadow the prototype's \"toString\" property by defining a new \"toString\" property on this object.\n    Object.defineProperty(exports.escapeXML, 'toString', { value: escapeXMLToString });\n  } else {\n    // If Object.defineProperty() doesn't exist, attempt to shadow this property using the assignment operator.\n    exports.escapeXML.toString = escapeXMLToString;\n  }\n} catch (err) {\n  console.warn('Unable to set escapeXML.toString (is the Function prototype frozen?)');\n}\n\n/**\n * Naive copy of properties from one object to another.\n * Does not recurse into non-scalar properties\n * Does not check to see if the property has a value before copying\n *\n * @param  {Object} to   Destination object\n * @param  {Object} from Source object\n * @return {Object}      Destination object\n * @static\n * @private\n */\nexports.shallowCopy = function (to, from) {\n  from = from || {};\n  if ((to !== null) && (to !== undefined)) {\n    for (var p in from) {\n      if (!hasOwn(from, p)) {\n        continue;\n      }\n      if (p === '__proto__' || p === 'constructor') {\n        continue;\n      }\n      to[p] = from[p];\n    }\n  }\n  return to;\n};\n\n/**\n * Naive copy of a list of key names, from one object to another.\n * Only copies property if it is actually defined\n * Does not recurse into non-scalar properties\n *\n * @param  {Object} to   Destination object\n * @param  {Object} from Source object\n * @param  {Array} list List of properties to copy\n * @return {Object}      Destination object\n * @static\n * @private\n */\nexports.shallowCopyFromList = function (to, from, list) {\n  list = list || [];\n  from = from || {};\n  if ((to !== null) && (to !== undefined)) {\n    for (var i = 0; i < list.length; i++) {\n      var p = list[i];\n      if (typeof from[p] != 'undefined') {\n        if (!hasOwn(from, p)) {\n          continue;\n        }\n        if (p === '__proto__' || p === 'constructor') {\n          continue;\n        }\n        to[p] = from[p];\n      }\n    }\n  }\n  return to;\n};\n\n/**\n * Simple in-process cache implementation. Does not implement limits of any\n * sort.\n *\n * @implements {Cache}\n * @static\n * @private\n */\nexports.cache = {\n  _data: {},\n  set: function (key, val) {\n    this._data[key] = val;\n  },\n  get: function (key) {\n    return this._data[key];\n  },\n  remove: function (key) {\n    delete this._data[key];\n  },\n  reset: function () {\n    this._data = {};\n  }\n};\n\n/**\n * Transforms hyphen case variable into camel case.\n *\n * @param {String} string Hyphen case string\n * @return {String} Camel case string\n * @static\n * @private\n */\nexports.hyphenToCamel = function (str) {\n  return str.replace(/-[a-z]/g, function (match) { return match[1].toUpperCase(); });\n};\n\n/**\n * Returns a null-prototype object in runtimes that support it\n *\n * @return {Object} Object, prototype will be set to null where possible\n * @static\n * @private\n */\nexports.createNullProtoObjWherePossible = (function () {\n  if (typeof Object.create == 'function') {\n    return function () {\n      return Object.create(null);\n    };\n  }\n  if (!({__proto__: null} instanceof Object)) {\n    return function () {\n      return {__proto__: null};\n    };\n  }\n  // Not possible, just pass through\n  return function () {\n    return {};\n  };\n})();\n\n\n", "{\n  \"name\": \"ejs\",\n  \"description\": \"Embedded JavaScript templates\",\n  \"keywords\": [\n    \"template\",\n    \"engine\",\n    \"ejs\"\n  ],\n  \"version\": \"3.1.9\",\n  \"author\": \"Matthew Eernisse <mde@fleegix.org> (http://fleegix.org)\",\n  \"license\": \"Apache-2.0\",\n  \"bin\": {\n    \"ejs\": \"./bin/cli.js\"\n  },\n  \"main\": \"./lib/ejs.js\",\n  \"jsdelivr\": \"ejs.min.js\",\n  \"unpkg\": \"ejs.min.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/mde/ejs.git\"\n  },\n  \"bugs\": \"https://github.com/mde/ejs/issues\",\n  \"homepage\": \"https://github.com/mde/ejs\",\n  \"dependencies\": {\n    \"jake\": \"^10.8.5\"\n  },\n  \"devDependencies\": {\n    \"browserify\": \"^16.5.1\",\n    \"eslint\": \"^6.8.0\",\n    \"git-directory-deploy\": \"^1.5.1\",\n    \"jsdoc\": \"^4.0.2\",\n    \"lru-cache\": \"^4.0.1\",\n    \"mocha\": \"^10.2.0\",\n    \"uglify-js\": \"^3.3.16\"\n  },\n  \"engines\": {\n    \"node\": \">=0.10.0\"\n  },\n  \"scripts\": {\n    \"test\": \"mocha -u tdd\"\n  }\n}\n", "/*\n * EJS Embedded JavaScript templates\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\n'use strict';\n\n/**\n * @file Embedded JavaScript templating engine. {@link http://ejs.co}\n * @author Matthew Eernisse <mde@fleegix.org>\n * @author Tiancheng \"Timothy\" Gu <timothygu99@gmail.com>\n * @project EJS\n * @license {@link http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0}\n */\n\n/**\n * EJS internal functions.\n *\n * Technically this \"module\" lies in the same file as {@link module:ejs}, for\n * the sake of organization all the private functions re grouped into this\n * module.\n *\n * @module ejs-internal\n * @private\n */\n\n/**\n * Embedded JavaScript templating engine.\n *\n * @module ejs\n * @public\n */\n\n\nvar fs = require('fs');\nvar path = require('path');\nvar utils = require('./utils');\n\nvar scopeOptionWarned = false;\n/** @type {string} */\nvar _VERSION_STRING = require('../package.json').version;\nvar _DEFAULT_OPEN_DELIMITER = '<';\nvar _DEFAULT_CLOSE_DELIMITER = '>';\nvar _DEFAULT_DELIMITER = '%';\nvar _DEFAULT_LOCALS_NAME = 'locals';\nvar _NAME = 'ejs';\nvar _REGEX_STRING = '(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)';\nvar _OPTS_PASSABLE_WITH_DATA = ['delimiter', 'scope', 'context', 'debug', 'compileDebug',\n  'client', '_with', 'rmWhitespace', 'strict', 'filename', 'async'];\n// We don't allow 'cache' option to be passed in the data obj for\n// the normal `render` call, but this is where Express 2 & 3 put it\n// so we make an exception for `renderFile`\nvar _OPTS_PASSABLE_WITH_DATA_EXPRESS = _OPTS_PASSABLE_WITH_DATA.concat('cache');\nvar _BOM = /^\\uFEFF/;\nvar _JS_IDENTIFIER = /^[a-zA-Z_$][0-9a-zA-Z_$]*$/;\n\n/**\n * EJS template function cache. This can be a LRU object from lru-cache NPM\n * module. By default, it is {@link module:utils.cache}, a simple in-process\n * cache that grows continuously.\n *\n * @type {Cache}\n */\n\nexports.cache = utils.cache;\n\n/**\n * Custom file loader. Useful for template preprocessing or restricting access\n * to a certain part of the filesystem.\n *\n * @type {fileLoader}\n */\n\nexports.fileLoader = fs.readFileSync;\n\n/**\n * Name of the object containing the locals.\n *\n * This variable is overridden by {@link Options}`.localsName` if it is not\n * `undefined`.\n *\n * @type {String}\n * @public\n */\n\nexports.localsName = _DEFAULT_LOCALS_NAME;\n\n/**\n * Promise implementation -- defaults to the native implementation if available\n * This is mostly just for testability\n *\n * @type {PromiseConstructorLike}\n * @public\n */\n\nexports.promiseImpl = (new Function('return this;'))().Promise;\n\n/**\n * Get the path to the included file from the parent file path and the\n * specified path.\n *\n * @param {String}  name     specified path\n * @param {String}  filename parent file path\n * @param {Boolean} [isDir=false] whether the parent file path is a directory\n * @return {String}\n */\nexports.resolveInclude = function(name, filename, isDir) {\n  var dirname = path.dirname;\n  var extname = path.extname;\n  var resolve = path.resolve;\n  var includePath = resolve(isDir ? filename : dirname(filename), name);\n  var ext = extname(name);\n  if (!ext) {\n    includePath += '.ejs';\n  }\n  return includePath;\n};\n\n/**\n * Try to resolve file path on multiple directories\n *\n * @param  {String}        name  specified path\n * @param  {Array<String>} paths list of possible parent directory paths\n * @return {String}\n */\nfunction resolvePaths(name, paths) {\n  var filePath;\n  if (paths.some(function (v) {\n    filePath = exports.resolveInclude(name, v, true);\n    return fs.existsSync(filePath);\n  })) {\n    return filePath;\n  }\n}\n\n/**\n * Get the path to the included file by Options\n *\n * @param  {String}  path    specified path\n * @param  {Options} options compilation options\n * @return {String}\n */\nfunction getIncludePath(path, options) {\n  var includePath;\n  var filePath;\n  var views = options.views;\n  var match = /^[A-Za-z]+:\\\\|^\\//.exec(path);\n\n  // Abs path\n  if (match && match.length) {\n    path = path.replace(/^\\/*/, '');\n    if (Array.isArray(options.root)) {\n      includePath = resolvePaths(path, options.root);\n    } else {\n      includePath = exports.resolveInclude(path, options.root || '/', true);\n    }\n  }\n  // Relative paths\n  else {\n    // Look relative to a passed filename first\n    if (options.filename) {\n      filePath = exports.resolveInclude(path, options.filename);\n      if (fs.existsSync(filePath)) {\n        includePath = filePath;\n      }\n    }\n    // Then look in any views directories\n    if (!includePath && Array.isArray(views)) {\n      includePath = resolvePaths(path, views);\n    }\n    if (!includePath && typeof options.includer !== 'function') {\n      throw new Error('Could not find the include file \"' +\n          options.escapeFunction(path) + '\"');\n    }\n  }\n  return includePath;\n}\n\n/**\n * Get the template from a string or a file, either compiled on-the-fly or\n * read from cache (if enabled), and cache the template if needed.\n *\n * If `template` is not set, the file specified in `options.filename` will be\n * read.\n *\n * If `options.cache` is true, this function reads the file from\n * `options.filename` so it must be set prior to calling this function.\n *\n * @memberof module:ejs-internal\n * @param {Options} options   compilation options\n * @param {String} [template] template source\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `options.client`, either type might be returned.\n * @static\n */\n\nfunction handleCache(options, template) {\n  var func;\n  var filename = options.filename;\n  var hasTemplate = arguments.length > 1;\n\n  if (options.cache) {\n    if (!filename) {\n      throw new Error('cache option requires a filename');\n    }\n    func = exports.cache.get(filename);\n    if (func) {\n      return func;\n    }\n    if (!hasTemplate) {\n      template = fileLoader(filename).toString().replace(_BOM, '');\n    }\n  }\n  else if (!hasTemplate) {\n    // istanbul ignore if: should not happen at all\n    if (!filename) {\n      throw new Error('Internal EJS error: no file name or template '\n                    + 'provided');\n    }\n    template = fileLoader(filename).toString().replace(_BOM, '');\n  }\n  func = exports.compile(template, options);\n  if (options.cache) {\n    exports.cache.set(filename, func);\n  }\n  return func;\n}\n\n/**\n * Try calling handleCache with the given options and data and call the\n * callback with the result. If an error occurs, call the callback with\n * the error. Used by renderFile().\n *\n * @memberof module:ejs-internal\n * @param {Options} options    compilation options\n * @param {Object} data        template data\n * @param {RenderFileCallback} cb callback\n * @static\n */\n\nfunction tryHandleCache(options, data, cb) {\n  var result;\n  if (!cb) {\n    if (typeof exports.promiseImpl == 'function') {\n      return new exports.promiseImpl(function (resolve, reject) {\n        try {\n          result = handleCache(options)(data);\n          resolve(result);\n        }\n        catch (err) {\n          reject(err);\n        }\n      });\n    }\n    else {\n      throw new Error('Please provide a callback function');\n    }\n  }\n  else {\n    try {\n      result = handleCache(options)(data);\n    }\n    catch (err) {\n      return cb(err);\n    }\n\n    cb(null, result);\n  }\n}\n\n/**\n * fileLoader is independent\n *\n * @param {String} filePath ejs file path.\n * @return {String} The contents of the specified file.\n * @static\n */\n\nfunction fileLoader(filePath){\n  return exports.fileLoader(filePath);\n}\n\n/**\n * Get the template function.\n *\n * If `options.cache` is `true`, then the template is cached.\n *\n * @memberof module:ejs-internal\n * @param {String}  path    path for the specified file\n * @param {Options} options compilation options\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `options.client`, either type might be returned\n * @static\n */\n\nfunction includeFile(path, options) {\n  var opts = utils.shallowCopy(utils.createNullProtoObjWherePossible(), options);\n  opts.filename = getIncludePath(path, opts);\n  if (typeof options.includer === 'function') {\n    var includerResult = options.includer(path, opts.filename);\n    if (includerResult) {\n      if (includerResult.filename) {\n        opts.filename = includerResult.filename;\n      }\n      if (includerResult.template) {\n        return handleCache(opts, includerResult.template);\n      }\n    }\n  }\n  return handleCache(opts);\n}\n\n/**\n * Re-throw the given `err` in context to the `str` of ejs, `filename`, and\n * `lineno`.\n *\n * @implements {RethrowCallback}\n * @memberof module:ejs-internal\n * @param {Error}  err      Error object\n * @param {String} str      EJS source\n * @param {String} flnm     file name of the EJS file\n * @param {Number} lineno   line number of the error\n * @param {EscapeCallback} esc\n * @static\n */\n\nfunction rethrow(err, str, flnm, lineno, esc) {\n  var lines = str.split('\\n');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm);\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? ' >> ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'ejs') + ':'\n    + lineno + '\\n'\n    + context + '\\n\\n'\n    + err.message;\n\n  throw err;\n}\n\nfunction stripSemi(str){\n  return str.replace(/;(\\s*$)/, '$1');\n}\n\n/**\n * Compile the given `str` of ejs into a template function.\n *\n * @param {String}  template EJS template\n *\n * @param {Options} [opts] compilation options\n *\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `opts.client`, either type might be returned.\n * Note that the return type of the function also depends on the value of `opts.async`.\n * @public\n */\n\nexports.compile = function compile(template, opts) {\n  var templ;\n\n  // v1 compat\n  // 'scope' is 'context'\n  // FIXME: Remove this in a future version\n  if (opts && opts.scope) {\n    if (!scopeOptionWarned){\n      console.warn('`scope` option is deprecated and will be removed in EJS 3');\n      scopeOptionWarned = true;\n    }\n    if (!opts.context) {\n      opts.context = opts.scope;\n    }\n    delete opts.scope;\n  }\n  templ = new Template(template, opts);\n  return templ.compile();\n};\n\n/**\n * Render the given `template` of ejs.\n *\n * If you would like to include options but not data, you need to explicitly\n * call this function with `data` being an empty object or `null`.\n *\n * @param {String}   template EJS template\n * @param {Object}  [data={}] template data\n * @param {Options} [opts={}] compilation and rendering options\n * @return {(String|Promise<String>)}\n * Return value type depends on `opts.async`.\n * @public\n */\n\nexports.render = function (template, d, o) {\n  var data = d || utils.createNullProtoObjWherePossible();\n  var opts = o || utils.createNullProtoObjWherePossible();\n\n  // No options object -- if there are optiony names\n  // in the data, copy them to options\n  if (arguments.length == 2) {\n    utils.shallowCopyFromList(opts, data, _OPTS_PASSABLE_WITH_DATA);\n  }\n\n  return handleCache(opts, template)(data);\n};\n\n/**\n * Render an EJS file at the given `path` and callback `cb(err, str)`.\n *\n * If you would like to include options but not data, you need to explicitly\n * call this function with `data` being an empty object or `null`.\n *\n * @param {String}             path     path to the EJS file\n * @param {Object}            [data={}] template data\n * @param {Options}           [opts={}] compilation and rendering options\n * @param {RenderFileCallback} cb callback\n * @public\n */\n\nexports.renderFile = function () {\n  var args = Array.prototype.slice.call(arguments);\n  var filename = args.shift();\n  var cb;\n  var opts = {filename: filename};\n  var data;\n  var viewOpts;\n\n  // Do we have a callback?\n  if (typeof arguments[arguments.length - 1] == 'function') {\n    cb = args.pop();\n  }\n  // Do we have data/opts?\n  if (args.length) {\n    // Should always have data obj\n    data = args.shift();\n    // Normal passed opts (data obj + opts obj)\n    if (args.length) {\n      // Use shallowCopy so we don't pollute passed in opts obj with new vals\n      utils.shallowCopy(opts, args.pop());\n    }\n    // Special casing for Express (settings + opts-in-data)\n    else {\n      // Express 3 and 4\n      if (data.settings) {\n        // Pull a few things from known locations\n        if (data.settings.views) {\n          opts.views = data.settings.views;\n        }\n        if (data.settings['view cache']) {\n          opts.cache = true;\n        }\n        // Undocumented after Express 2, but still usable, esp. for\n        // items that are unsafe to be passed along with data, like `root`\n        viewOpts = data.settings['view options'];\n        if (viewOpts) {\n          utils.shallowCopy(opts, viewOpts);\n        }\n      }\n      // Express 2 and lower, values set in app.locals, or people who just\n      // want to pass options in their data. NOTE: These values will override\n      // anything previously set in settings  or settings['view options']\n      utils.shallowCopyFromList(opts, data, _OPTS_PASSABLE_WITH_DATA_EXPRESS);\n    }\n    opts.filename = filename;\n  }\n  else {\n    data = utils.createNullProtoObjWherePossible();\n  }\n\n  return tryHandleCache(opts, data, cb);\n};\n\n/**\n * Clear intermediate JavaScript cache. Calls {@link Cache#reset}.\n * @public\n */\n\n/**\n * EJS template class\n * @public\n */\nexports.Template = Template;\n\nexports.clearCache = function () {\n  exports.cache.reset();\n};\n\nfunction Template(text, opts) {\n  opts = opts || utils.createNullProtoObjWherePossible();\n  var options = utils.createNullProtoObjWherePossible();\n  this.templateText = text;\n  /** @type {string | null} */\n  this.mode = null;\n  this.truncate = false;\n  this.currentLine = 1;\n  this.source = '';\n  options.client = opts.client || false;\n  options.escapeFunction = opts.escape || opts.escapeFunction || utils.escapeXML;\n  options.compileDebug = opts.compileDebug !== false;\n  options.debug = !!opts.debug;\n  options.filename = opts.filename;\n  options.openDelimiter = opts.openDelimiter || exports.openDelimiter || _DEFAULT_OPEN_DELIMITER;\n  options.closeDelimiter = opts.closeDelimiter || exports.closeDelimiter || _DEFAULT_CLOSE_DELIMITER;\n  options.delimiter = opts.delimiter || exports.delimiter || _DEFAULT_DELIMITER;\n  options.strict = opts.strict || false;\n  options.context = opts.context;\n  options.cache = opts.cache || false;\n  options.rmWhitespace = opts.rmWhitespace;\n  options.root = opts.root;\n  options.includer = opts.includer;\n  options.outputFunctionName = opts.outputFunctionName;\n  options.localsName = opts.localsName || exports.localsName || _DEFAULT_LOCALS_NAME;\n  options.views = opts.views;\n  options.async = opts.async;\n  options.destructuredLocals = opts.destructuredLocals;\n  options.legacyInclude = typeof opts.legacyInclude != 'undefined' ? !!opts.legacyInclude : true;\n\n  if (options.strict) {\n    options._with = false;\n  }\n  else {\n    options._with = typeof opts._with != 'undefined' ? opts._with : true;\n  }\n\n  this.opts = options;\n\n  this.regex = this.createRegex();\n}\n\nTemplate.modes = {\n  EVAL: 'eval',\n  ESCAPED: 'escaped',\n  RAW: 'raw',\n  COMMENT: 'comment',\n  LITERAL: 'literal'\n};\n\nTemplate.prototype = {\n  createRegex: function () {\n    var str = _REGEX_STRING;\n    var delim = utils.escapeRegExpChars(this.opts.delimiter);\n    var open = utils.escapeRegExpChars(this.opts.openDelimiter);\n    var close = utils.escapeRegExpChars(this.opts.closeDelimiter);\n    str = str.replace(/%/g, delim)\n      .replace(/</g, open)\n      .replace(/>/g, close);\n    return new RegExp(str);\n  },\n\n  compile: function () {\n    /** @type {string} */\n    var src;\n    /** @type {ClientFunction} */\n    var fn;\n    var opts = this.opts;\n    var prepended = '';\n    var appended = '';\n    /** @type {EscapeCallback} */\n    var escapeFn = opts.escapeFunction;\n    /** @type {FunctionConstructor} */\n    var ctor;\n    /** @type {string} */\n    var sanitizedFilename = opts.filename ? JSON.stringify(opts.filename) : 'undefined';\n\n    if (!this.source) {\n      this.generateSource();\n      prepended +=\n        '  var __output = \"\";\\n' +\n        '  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n';\n      if (opts.outputFunctionName) {\n        if (!_JS_IDENTIFIER.test(opts.outputFunctionName)) {\n          throw new Error('outputFunctionName is not a valid JS identifier.');\n        }\n        prepended += '  var ' + opts.outputFunctionName + ' = __append;' + '\\n';\n      }\n      if (opts.localsName && !_JS_IDENTIFIER.test(opts.localsName)) {\n        throw new Error('localsName is not a valid JS identifier.');\n      }\n      if (opts.destructuredLocals && opts.destructuredLocals.length) {\n        var destructuring = '  var __locals = (' + opts.localsName + ' || {}),\\n';\n        for (var i = 0; i < opts.destructuredLocals.length; i++) {\n          var name = opts.destructuredLocals[i];\n          if (!_JS_IDENTIFIER.test(name)) {\n            throw new Error('destructuredLocals[' + i + '] is not a valid JS identifier.');\n          }\n          if (i > 0) {\n            destructuring += ',\\n  ';\n          }\n          destructuring += name + ' = __locals.' + name;\n        }\n        prepended += destructuring + ';\\n';\n      }\n      if (opts._with !== false) {\n        prepended +=  '  with (' + opts.localsName + ' || {}) {' + '\\n';\n        appended += '  }' + '\\n';\n      }\n      appended += '  return __output;' + '\\n';\n      this.source = prepended + this.source + appended;\n    }\n\n    if (opts.compileDebug) {\n      src = 'var __line = 1' + '\\n'\n        + '  , __lines = ' + JSON.stringify(this.templateText) + '\\n'\n        + '  , __filename = ' + sanitizedFilename + ';' + '\\n'\n        + 'try {' + '\\n'\n        + this.source\n        + '} catch (e) {' + '\\n'\n        + '  rethrow(e, __lines, __filename, __line, escapeFn);' + '\\n'\n        + '}' + '\\n';\n    }\n    else {\n      src = this.source;\n    }\n\n    if (opts.client) {\n      src = 'escapeFn = escapeFn || ' + escapeFn.toString() + ';' + '\\n' + src;\n      if (opts.compileDebug) {\n        src = 'rethrow = rethrow || ' + rethrow.toString() + ';' + '\\n' + src;\n      }\n    }\n\n    if (opts.strict) {\n      src = '\"use strict\";\\n' + src;\n    }\n    if (opts.debug) {\n      console.log(src);\n    }\n    if (opts.compileDebug && opts.filename) {\n      src = src + '\\n'\n        + '//# sourceURL=' + sanitizedFilename + '\\n';\n    }\n\n    try {\n      if (opts.async) {\n        // Have to use generated function for this, since in envs without support,\n        // it breaks in parsing\n        try {\n          ctor = (new Function('return (async function(){}).constructor;'))();\n        }\n        catch(e) {\n          if (e instanceof SyntaxError) {\n            throw new Error('This environment does not support async/await');\n          }\n          else {\n            throw e;\n          }\n        }\n      }\n      else {\n        ctor = Function;\n      }\n      fn = new ctor(opts.localsName + ', escapeFn, include, rethrow', src);\n    }\n    catch(e) {\n      // istanbul ignore else\n      if (e instanceof SyntaxError) {\n        if (opts.filename) {\n          e.message += ' in ' + opts.filename;\n        }\n        e.message += ' while compiling ejs\\n\\n';\n        e.message += 'If the above error is not helpful, you may want to try EJS-Lint:\\n';\n        e.message += 'https://github.com/RyanZim/EJS-Lint';\n        if (!opts.async) {\n          e.message += '\\n';\n          e.message += 'Or, if you meant to create an async function, pass `async: true` as an option.';\n        }\n      }\n      throw e;\n    }\n\n    // Return a callable function which will execute the function\n    // created by the source-code, with the passed data as locals\n    // Adds a local `include` function which allows full recursive include\n    var returnedFn = opts.client ? fn : function anonymous(data) {\n      var include = function (path, includeData) {\n        var d = utils.shallowCopy(utils.createNullProtoObjWherePossible(), data);\n        if (includeData) {\n          d = utils.shallowCopy(d, includeData);\n        }\n        return includeFile(path, opts)(d);\n      };\n      return fn.apply(opts.context,\n        [data || utils.createNullProtoObjWherePossible(), escapeFn, include, rethrow]);\n    };\n    if (opts.filename && typeof Object.defineProperty === 'function') {\n      var filename = opts.filename;\n      var basename = path.basename(filename, path.extname(filename));\n      try {\n        Object.defineProperty(returnedFn, 'name', {\n          value: basename,\n          writable: false,\n          enumerable: false,\n          configurable: true\n        });\n      } catch (e) {/* ignore */}\n    }\n    return returnedFn;\n  },\n\n  generateSource: function () {\n    var opts = this.opts;\n\n    if (opts.rmWhitespace) {\n      // Have to use two separate replace here as `^` and `$` operators don't\n      // work well with `\\r` and empty lines don't work well with the `m` flag.\n      this.templateText =\n        this.templateText.replace(/[\\r\\n]+/g, '\\n').replace(/^\\s+|\\s+$/gm, '');\n    }\n\n    // Slurp spaces and tabs before <%_ and after _%>\n    this.templateText =\n      this.templateText.replace(/[ \\t]*<%_/gm, '<%_').replace(/_%>[ \\t]*/gm, '_%>');\n\n    var self = this;\n    var matches = this.parseTemplateText();\n    var d = this.opts.delimiter;\n    var o = this.opts.openDelimiter;\n    var c = this.opts.closeDelimiter;\n\n    if (matches && matches.length) {\n      matches.forEach(function (line, index) {\n        var closing;\n        // If this is an opening tag, check for closing tags\n        // FIXME: May end up with some false positives here\n        // Better to store modes as k/v with openDelimiter + delimiter as key\n        // Then this can simply check against the map\n        if ( line.indexOf(o + d) === 0        // If it is a tag\n          && line.indexOf(o + d + d) !== 0) { // and is not escaped\n          closing = matches[index + 2];\n          if (!(closing == d + c || closing == '-' + d + c || closing == '_' + d + c)) {\n            throw new Error('Could not find matching close tag for \"' + line + '\".');\n          }\n        }\n        self.scanLine(line);\n      });\n    }\n\n  },\n\n  parseTemplateText: function () {\n    var str = this.templateText;\n    var pat = this.regex;\n    var result = pat.exec(str);\n    var arr = [];\n    var firstPos;\n\n    while (result) {\n      firstPos = result.index;\n\n      if (firstPos !== 0) {\n        arr.push(str.substring(0, firstPos));\n        str = str.slice(firstPos);\n      }\n\n      arr.push(result[0]);\n      str = str.slice(result[0].length);\n      result = pat.exec(str);\n    }\n\n    if (str) {\n      arr.push(str);\n    }\n\n    return arr;\n  },\n\n  _addOutput: function (line) {\n    if (this.truncate) {\n      // Only replace single leading linebreak in the line after\n      // -%> tag -- this is the single, trailing linebreak\n      // after the tag that the truncation mode replaces\n      // Handle Win / Unix / old Mac linebreaks -- do the \\r\\n\n      // combo first in the regex-or\n      line = line.replace(/^(?:\\r\\n|\\r|\\n)/, '');\n      this.truncate = false;\n    }\n    if (!line) {\n      return line;\n    }\n\n    // Preserve literal slashes\n    line = line.replace(/\\\\/g, '\\\\\\\\');\n\n    // Convert linebreaks\n    line = line.replace(/\\n/g, '\\\\n');\n    line = line.replace(/\\r/g, '\\\\r');\n\n    // Escape double-quotes\n    // - this will be the delimiter during execution\n    line = line.replace(/\"/g, '\\\\\"');\n    this.source += '    ; __append(\"' + line + '\")' + '\\n';\n  },\n\n  scanLine: function (line) {\n    var self = this;\n    var d = this.opts.delimiter;\n    var o = this.opts.openDelimiter;\n    var c = this.opts.closeDelimiter;\n    var newLineCount = 0;\n\n    newLineCount = (line.split('\\n').length - 1);\n\n    switch (line) {\n    case o + d:\n    case o + d + '_':\n      this.mode = Template.modes.EVAL;\n      break;\n    case o + d + '=':\n      this.mode = Template.modes.ESCAPED;\n      break;\n    case o + d + '-':\n      this.mode = Template.modes.RAW;\n      break;\n    case o + d + '#':\n      this.mode = Template.modes.COMMENT;\n      break;\n    case o + d + d:\n      this.mode = Template.modes.LITERAL;\n      this.source += '    ; __append(\"' + line.replace(o + d + d, o + d) + '\")' + '\\n';\n      break;\n    case d + d + c:\n      this.mode = Template.modes.LITERAL;\n      this.source += '    ; __append(\"' + line.replace(d + d + c, d + c) + '\")' + '\\n';\n      break;\n    case d + c:\n    case '-' + d + c:\n    case '_' + d + c:\n      if (this.mode == Template.modes.LITERAL) {\n        this._addOutput(line);\n      }\n\n      this.mode = null;\n      this.truncate = line.indexOf('-') === 0 || line.indexOf('_') === 0;\n      break;\n    default:\n      // In script mode, depends on type of tag\n      if (this.mode) {\n        // If '//' is found without a line break, add a line break.\n        switch (this.mode) {\n        case Template.modes.EVAL:\n        case Template.modes.ESCAPED:\n        case Template.modes.RAW:\n          if (line.lastIndexOf('//') > line.lastIndexOf('\\n')) {\n            line += '\\n';\n          }\n        }\n        switch (this.mode) {\n        // Just executing code\n        case Template.modes.EVAL:\n          this.source += '    ; ' + line + '\\n';\n          break;\n          // Exec, esc, and output\n        case Template.modes.ESCAPED:\n          this.source += '    ; __append(escapeFn(' + stripSemi(line) + '))' + '\\n';\n          break;\n          // Exec and output\n        case Template.modes.RAW:\n          this.source += '    ; __append(' + stripSemi(line) + ')' + '\\n';\n          break;\n        case Template.modes.COMMENT:\n          // Do nothing\n          break;\n          // Literal <%% mode, append as raw output\n        case Template.modes.LITERAL:\n          this._addOutput(line);\n          break;\n        }\n      }\n      // In string mode, just add the output\n      else {\n        this._addOutput(line);\n      }\n    }\n\n    if (self.opts.compileDebug && newLineCount) {\n      this.currentLine += newLineCount;\n      this.source += '    ; __line = ' + this.currentLine + '\\n';\n    }\n  }\n};\n\n/**\n * Escape characters reserved in XML.\n *\n * This is simply an export of {@link module:utils.escapeXML}.\n *\n * If `markup` is `undefined` or `null`, the empty string is returned.\n *\n * @param {String} markup Input string\n * @return {String} Escaped string\n * @public\n * @func\n * */\nexports.escapeXML = utils.escapeXML;\n\n/**\n * Express.js support.\n *\n * This is an alias for {@link module:ejs.renderFile}, in order to support\n * Express.js out-of-the-box.\n *\n * @func\n */\n\nexports.__express = exports.renderFile;\n\n/**\n * Version of EJS.\n *\n * @readonly\n * @type {String}\n * @public\n */\n\nexports.VERSION = _VERSION_STRING;\n\n/**\n * Name for detection of EJS.\n *\n * @readonly\n * @type {String}\n * @public\n */\n\nexports.name = _NAME;\n\n/* istanbul ignore if */\nif (typeof window != 'undefined') {\n  window.ejs = exports;\n}\n", "// needs a separate module as this is required inside chevrotain productive code\n// and also in the entry point for webpack(api.ts).\n// A separate file avoids cyclic dependencies and webpack errors.\nexport const VERSION = \"7.1.1\"\n", "/*\n Utils using lodash style API. (not necessarily 100% compliant) for functional and other utils.\n These utils should replace usage of lodash in the production code base. not because they are any better...\n but for the purpose of being a dependency free library.\n\n The hotspots in the code are already written in imperative style for performance reasons.\n so writing several dozen utils which may be slower than the original lodash, does not matter as much\n considering they will not be invoked in hotspots...\n */\n\nexport function isEmpty(arr: any[]): boolean {\n  return arr && arr.length === 0\n}\n\nexport function keys(obj: any): string[] {\n  if (obj === undefined || obj === null) {\n    return []\n  }\n  return Object.keys(obj)\n}\n\nexport function values(obj: any): any[] {\n  let vals = []\n  let keys = Object.keys(obj)\n  for (let i = 0; i < keys.length; i++) {\n    vals.push(obj[keys[i]])\n  }\n  return vals\n}\n\nexport function mapValues<I, O>(\n  obj: Object,\n  callback: (value: I, key?: string) => O\n): O[] {\n  let result: O[] = []\n  let objKeys = keys(obj)\n  for (let idx = 0; idx < objKeys.length; idx++) {\n    let currKey = objKeys[idx]\n    result.push(callback.call(null, obj[currKey], currKey))\n  }\n  return result\n}\n\nexport function map<I, O>(arr: I[], callback: (I, idx?: number) => O): O[] {\n  let result: O[] = []\n  for (let idx = 0; idx < arr.length; idx++) {\n    result.push(callback.call(null, arr[idx], idx))\n  }\n  return result\n}\n\nexport function flatten<T>(arr: any[]): T[] {\n  let result = []\n\n  for (let idx = 0; idx < arr.length; idx++) {\n    let currItem = arr[idx]\n    if (Array.isArray(currItem)) {\n      result = result.concat(flatten(currItem))\n    } else {\n      result.push(currItem)\n    }\n  }\n  return result\n}\n\nexport function first<T>(arr: T[]): T {\n  return isEmpty(arr) ? undefined : arr[0]\n}\n\nexport function last<T>(arr: T[]): T {\n  let len = arr && arr.length\n  return len ? arr[len - 1] : undefined\n}\n\nexport function forEach(collection: any, iteratorCallback: Function): void {\n  /* istanbul ignore else */\n  if (Array.isArray(collection)) {\n    for (let i = 0; i < collection.length; i++) {\n      iteratorCallback.call(null, collection[i], i)\n    }\n  } else if (isObject(collection)) {\n    let colKeys = keys(collection)\n    for (let i = 0; i < colKeys.length; i++) {\n      let key = colKeys[i]\n      let value = collection[key]\n      iteratorCallback.call(null, value, key)\n    }\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n\nexport function isString(item: any): boolean {\n  return typeof item === \"string\"\n}\n\nexport function isUndefined(item: any): boolean {\n  return item === undefined\n}\n\nexport function isFunction(item: any): boolean {\n  return item instanceof Function\n}\n\nexport function drop<T>(arr: T[], howMuch: number = 1): T[] {\n  return arr.slice(howMuch, arr.length)\n}\n\nexport function dropRight<T>(arr: T[], howMuch: number = 1): T[] {\n  return arr.slice(0, arr.length - howMuch)\n}\n\nexport function filter<T>(arr: T[], predicate: (T) => boolean): T[] {\n  let result = []\n  if (Array.isArray(arr)) {\n    for (let i = 0; i < arr.length; i++) {\n      let item = arr[i]\n      if (predicate.call(null, item)) {\n        result.push(item)\n      }\n    }\n  }\n  return result\n}\n\nexport function reject<T>(arr: T[], predicate: (T) => boolean): T[] {\n  return filter(arr, (item) => !predicate(item))\n}\n\nexport function pick(obj: Object, predicate: (item) => boolean) {\n  let keys = Object.keys(obj)\n  let result = {}\n\n  for (let i = 0; i < keys.length; i++) {\n    let currKey = keys[i]\n    let currItem = obj[currKey]\n    if (predicate(currItem)) {\n      result[currKey] = currItem\n    }\n  }\n\n  return result\n}\n\nexport function has(obj: any, prop: string): boolean {\n  if (isObject(obj)) {\n    return obj.hasOwnProperty(prop)\n  }\n  return false\n}\n\nexport function contains<T>(arr: T[], item): boolean {\n  return find(arr, (currItem) => currItem === item) !== undefined ? true : false\n}\n\n/**\n * shallow clone\n */\nexport function cloneArr<T>(arr: T[]): T[] {\n  let newArr = []\n  for (let i = 0; i < arr.length; i++) {\n    newArr.push(arr[i])\n  }\n  return newArr\n}\n\n/**\n * shallow clone\n */\nexport function cloneObj(obj: Object): any {\n  let clonedObj = {}\n  for (let key in obj) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      clonedObj[key] = obj[key]\n    }\n  }\n  return clonedObj\n}\n\nexport function find<T>(arr: T[], predicate: (item: T) => boolean): T {\n  for (let i = 0; i < arr.length; i++) {\n    let item = arr[i]\n    if (predicate.call(null, item)) {\n      return item\n    }\n  }\n  return undefined\n}\n\nexport function findAll<T>(arr: T[], predicate: (item: T) => boolean): T[] {\n  let found = []\n  for (let i = 0; i < arr.length; i++) {\n    let item = arr[i]\n    if (predicate.call(null, item)) {\n      found.push(item)\n    }\n  }\n  return found\n}\n\nexport function reduce<T, A>(\n  arrOrObj: Array<T> | Object,\n  iterator: (result: A, item, idx?) => A,\n  initial: A\n): A {\n  const isArr = Array.isArray(arrOrObj)\n\n  let vals: T[] = isArr ? <Array<T>>arrOrObj : values(arrOrObj)\n  let objKeys = isArr ? [] : keys(arrOrObj)\n\n  let accumulator = initial\n  for (let i = 0; i < vals.length; i++) {\n    accumulator = iterator.call(\n      null,\n      accumulator,\n      vals[i],\n      isArr ? i : objKeys[i]\n    )\n  }\n  return accumulator\n}\n\nexport function compact<T>(arr: T[]): T[] {\n  return reject(arr, (item) => item === null || item === undefined)\n}\n\nexport function uniq<T>(\n  arr: T[],\n  identity: (item: T) => any = (item) => item\n): T[] {\n  let identities = []\n  return reduce(\n    arr,\n    (result, currItem) => {\n      let currIdentity = identity(currItem)\n      if (contains(identities, currIdentity)) {\n        return result\n      } else {\n        identities.push(currIdentity)\n        return result.concat(currItem)\n      }\n    },\n    []\n  )\n}\n\nexport function partial(func: Function, ...restArgs: any[]): Function {\n  let firstArg = [null]\n  let allArgs = firstArg.concat(restArgs)\n  return Function.bind.apply(func, allArgs)\n}\n\nexport function isArray(obj: any): obj is any[] {\n  return Array.isArray(obj)\n}\n\nexport function isRegExp(obj: any): obj is RegExp {\n  return obj instanceof RegExp\n}\n\nexport function isObject(obj: any): obj is Object {\n  return obj instanceof Object\n}\n\nexport function every<T>(\n  arr: T[],\n  predicate: (item: T, idx?) => boolean\n): boolean {\n  for (let i = 0; i < arr.length; i++) {\n    if (!predicate(arr[i], i)) {\n      return false\n    }\n  }\n  return true\n}\n\nexport function difference<T>(arr: T[], values: T[]): T[] {\n  return reject(arr, (item) => contains(values, item))\n}\n\nexport function some<T>(arr: T[], predicate: (item: T) => boolean): boolean {\n  for (let i = 0; i < arr.length; i++) {\n    if (predicate(arr[i])) {\n      return true\n    }\n  }\n  return false\n}\n\nexport function indexOf<T>(arr: T[], value: T): number {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === value) {\n      return i\n    }\n  }\n  return -1\n}\n\nexport function sortBy<T>(arr: T[], orderFunc: (item: T) => number): T[] {\n  let result = cloneArr(arr)\n  result.sort((a, b) => orderFunc(a) - orderFunc(b))\n  return result\n}\n\nexport function zipObject(keys: any[], values: any[]): Object {\n  if (keys.length !== values.length) {\n    throw Error(\"can't zipObject with different number of keys and values!\")\n  }\n\n  let result = {}\n  for (let i = 0; i < keys.length; i++) {\n    result[keys[i]] = values[i]\n  }\n  return result\n}\n\n/**\n * mutates! (and returns) target\n */\nexport function assign(target: Object, ...sources: Object[]): Object {\n  for (let i = 0; i < sources.length; i++) {\n    let curSource = sources[i]\n    let currSourceKeys = keys(curSource)\n    for (let j = 0; j < currSourceKeys.length; j++) {\n      let currKey = currSourceKeys[j]\n      target[currKey] = curSource[currKey]\n    }\n  }\n  return target\n}\n\n/**\n * mutates! (and returns) target\n */\nexport function assignNoOverwrite(\n  target: Object,\n  ...sources: Object[]\n): Object {\n  for (let i = 0; i < sources.length; i++) {\n    let curSource = sources[i]\n    let currSourceKeys = keys(curSource)\n    for (let j = 0; j < currSourceKeys.length; j++) {\n      let currKey = currSourceKeys[j]\n      if (!has(target, currKey)) {\n        target[currKey] = curSource[currKey]\n      }\n    }\n  }\n  return target\n}\n\nexport function defaults(...sources: any[]): any {\n  return assignNoOverwrite.apply(null, [{}].concat(sources))\n}\n\nexport function groupBy<T>(\n  arr: T[],\n  groupKeyFunc: (item: T) => string\n): { [groupKey: string]: T[] } {\n  let result: { [groupKey: string]: T[] } = {}\n\n  forEach(arr, (item) => {\n    let currGroupKey = groupKeyFunc(item)\n    let currGroupArr = result[currGroupKey]\n\n    if (currGroupArr) {\n      currGroupArr.push(item)\n    } else {\n      result[currGroupKey] = [item]\n    }\n  })\n\n  return result\n}\n\n/**\n * Merge obj2 into obj1.\n * Will overwrite existing properties with the same name\n */\nexport function merge(obj1: Object, obj2: Object): any {\n  let result = cloneObj(obj1)\n  let keys2 = keys(obj2)\n  for (let i = 0; i < keys2.length; i++) {\n    let key = keys2[i]\n    let value = obj2[key]\n    result[key] = value\n  }\n\n  return result\n}\n\nexport function NOOP() {}\n\nexport function IDENTITY(item) {\n  return item\n}\n\n/**\n * Will return a new packed array with same values.\n */\nexport function packArray<T>(holeyArr: T[]): T[] {\n  const result = []\n  for (let i = 0; i < holeyArr.length; i++) {\n    const orgValue = holeyArr[i]\n    result.push(orgValue !== undefined ? orgValue : undefined)\n  }\n  return result\n}\n\nexport function PRINT_ERROR(msg) {\n  /* istanbul ignore else - can't override global.console in node.js */\n  if (console && console.error) {\n    console.error(`Error: ${msg}`)\n  }\n}\n\nexport function PRINT_WARNING(msg) {\n  /* istanbul ignore else - can't override global.console in node.js*/\n  if (console && console.warn) {\n    // TODO: modify docs accordingly\n    console.warn(`Warning: ${msg}`)\n  }\n}\n\nexport function isES2015MapSupported(): boolean {\n  return typeof Map === \"function\"\n}\n\nexport function applyMixins(derivedCtor: any, baseCtors: any[]) {\n  baseCtors.forEach((baseCtor) => {\n    const baseProto = baseCtor.prototype\n    Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n      if (propName === \"constructor\") {\n        return\n      }\n\n      const basePropDescriptor = Object.getOwnPropertyDescriptor(\n        baseProto,\n        propName\n      )\n      // Handle Accessors\n      if (\n        basePropDescriptor &&\n        (basePropDescriptor.get || basePropDescriptor.set)\n      ) {\n        Object.defineProperty(\n          derivedCtor.prototype,\n          propName,\n          basePropDescriptor\n        )\n      } else {\n        derivedCtor.prototype[propName] = baseCtor.prototype[propName]\n      }\n    })\n  })\n}\n\n// base on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast) {\n  function FakeConstructor() {}\n  // If our object is used as a constructor it would receive\n  FakeConstructor.prototype = toBecomeFast\n  const fakeInstance = new FakeConstructor()\n  function fakeAccess() {\n    return typeof fakeInstance.bar\n  }\n  // help V8 understand this is a \"real\" prototype by actually using\n  // the fake instance.\n  fakeAccess()\n  fakeAccess()\n\n  return toBecomeFast\n  // Eval prevents optimization of this method (even though this is dead code)\n  /* istanbul ignore next */\n  // tslint:disable-next-line\n  eval(toBecomeFast)\n}\n\nexport function peek<T>(arr: T[]): T {\n  return arr[arr.length - 1]\n}\n\n/* istanbul ignore next - for performance tracing*/\nexport function timer<T>(func: () => T): { time: number; value: T } {\n  const start = new Date().getTime()\n  const val = func()\n  const end = new Date().getTime()\n  const total = end - start\n  return { time: total, value: val }\n}\n", ";(function(root, factory) {\n    // istanbul ignore next\n    if (typeof define === \"function\" && define.amd) {\n        // istanbul ignore next\n        define([], factory)\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory()\n    } else {\n        // istanbul ignore next\n        root.regexpToAst = factory()\n    }\n})(\n    typeof self !== \"undefined\"\n        ? // istanbul ignore next\n          self\n        : this,\n    function() {\n        // references\n        // https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n        // https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\n        function RegExpParser() {}\n\n        RegExpParser.prototype.saveState = function() {\n            return {\n                idx: this.idx,\n                input: this.input,\n                groupIdx: this.groupIdx\n            }\n        }\n\n        RegExpParser.prototype.restoreState = function(newState) {\n            this.idx = newState.idx\n            this.input = newState.input\n            this.groupIdx = newState.groupIdx\n        }\n\n        RegExpParser.prototype.pattern = function(input) {\n            // parser state\n            this.idx = 0\n            this.input = input\n            this.groupIdx = 0\n\n            this.consumeChar(\"/\")\n            var value = this.disjunction()\n            this.consumeChar(\"/\")\n\n            var flags = {\n                type: \"Flags\",\n                loc: { begin: this.idx, end: input.length },\n                global: false,\n                ignoreCase: false,\n                multiLine: false,\n                unicode: false,\n                sticky: false\n            }\n\n            while (this.isRegExpFlag()) {\n                switch (this.popChar()) {\n                    case \"g\":\n                        addFlag(flags, \"global\")\n                        break\n                    case \"i\":\n                        addFlag(flags, \"ignoreCase\")\n                        break\n                    case \"m\":\n                        addFlag(flags, \"multiLine\")\n                        break\n                    case \"u\":\n                        addFlag(flags, \"unicode\")\n                        break\n                    case \"y\":\n                        addFlag(flags, \"sticky\")\n                        break\n                }\n            }\n\n            if (this.idx !== this.input.length) {\n                throw Error(\n                    \"Redundant input: \" + this.input.substring(this.idx)\n                )\n            }\n            return {\n                type: \"Pattern\",\n                flags: flags,\n                value: value,\n                loc: this.loc(0)\n            }\n        }\n\n        RegExpParser.prototype.disjunction = function() {\n            var alts = []\n            var begin = this.idx\n\n            alts.push(this.alternative())\n\n            while (this.peekChar() === \"|\") {\n                this.consumeChar(\"|\")\n                alts.push(this.alternative())\n            }\n\n            return { type: \"Disjunction\", value: alts, loc: this.loc(begin) }\n        }\n\n        RegExpParser.prototype.alternative = function() {\n            var terms = []\n            var begin = this.idx\n\n            while (this.isTerm()) {\n                terms.push(this.term())\n            }\n\n            return { type: \"Alternative\", value: terms, loc: this.loc(begin) }\n        }\n\n        RegExpParser.prototype.term = function() {\n            if (this.isAssertion()) {\n                return this.assertion()\n            } else {\n                return this.atom()\n            }\n        }\n\n        RegExpParser.prototype.assertion = function() {\n            var begin = this.idx\n            switch (this.popChar()) {\n                case \"^\":\n                    return {\n                        type: \"StartAnchor\",\n                        loc: this.loc(begin)\n                    }\n                case \"$\":\n                    return { type: \"EndAnchor\", loc: this.loc(begin) }\n                // '\\b' or '\\B'\n                case \"\\\\\":\n                    switch (this.popChar()) {\n                        case \"b\":\n                            return {\n                                type: \"WordBoundary\",\n                                loc: this.loc(begin)\n                            }\n                        case \"B\":\n                            return {\n                                type: \"NonWordBoundary\",\n                                loc: this.loc(begin)\n                            }\n                    }\n                    // istanbul ignore next\n                    throw Error(\"Invalid Assertion Escape\")\n                // '(?=' or '(?!'\n                case \"(\":\n                    this.consumeChar(\"?\")\n\n                    var type\n                    switch (this.popChar()) {\n                        case \"=\":\n                            type = \"Lookahead\"\n                            break\n                        case \"!\":\n                            type = \"NegativeLookahead\"\n                            break\n                    }\n                    ASSERT_EXISTS(type)\n\n                    var disjunction = this.disjunction()\n\n                    this.consumeChar(\")\")\n\n                    return {\n                        type: type,\n                        value: disjunction,\n                        loc: this.loc(begin)\n                    }\n            }\n            // istanbul ignore next\n            ASSERT_NEVER_REACH_HERE()\n        }\n\n        RegExpParser.prototype.quantifier = function(isBacktracking) {\n            var range\n            var begin = this.idx\n            switch (this.popChar()) {\n                case \"*\":\n                    range = {\n                        atLeast: 0,\n                        atMost: Infinity\n                    }\n                    break\n                case \"+\":\n                    range = {\n                        atLeast: 1,\n                        atMost: Infinity\n                    }\n                    break\n                case \"?\":\n                    range = {\n                        atLeast: 0,\n                        atMost: 1\n                    }\n                    break\n                case \"{\":\n                    var atLeast = this.integerIncludingZero()\n                    switch (this.popChar()) {\n                        case \"}\":\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atLeast\n                            }\n                            break\n                        case \",\":\n                            var atMost\n                            if (this.isDigit()) {\n                                atMost = this.integerIncludingZero()\n                                range = {\n                                    atLeast: atLeast,\n                                    atMost: atMost\n                                }\n                            } else {\n                                range = {\n                                    atLeast: atLeast,\n                                    atMost: Infinity\n                                }\n                            }\n                            this.consumeChar(\"}\")\n                            break\n                    }\n                    // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                    // causes severe performance degradations\n                    if (isBacktracking === true && range === undefined) {\n                        return undefined\n                    }\n                    ASSERT_EXISTS(range)\n                    break\n            }\n\n            // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n            // causes severe performance degradations\n            if (isBacktracking === true && range === undefined) {\n                return undefined\n            }\n\n            ASSERT_EXISTS(range)\n\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\")\n                range.greedy = false\n            } else {\n                range.greedy = true\n            }\n\n            range.type = \"Quantifier\"\n            range.loc = this.loc(begin)\n            return range\n        }\n\n        RegExpParser.prototype.atom = function() {\n            var atom\n            var begin = this.idx\n            switch (this.peekChar()) {\n                case \".\":\n                    atom = this.dotAll()\n                    break\n                case \"\\\\\":\n                    atom = this.atomEscape()\n                    break\n                case \"[\":\n                    atom = this.characterClass()\n                    break\n                case \"(\":\n                    atom = this.group()\n                    break\n            }\n\n            if (atom === undefined && this.isPatternCharacter()) {\n                atom = this.patternCharacter()\n            }\n\n            ASSERT_EXISTS(atom)\n\n            atom.loc = this.loc(begin)\n\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier()\n            }\n\n            return atom\n        }\n\n        RegExpParser.prototype.dotAll = function() {\n            this.consumeChar(\".\")\n            return {\n                type: \"Set\",\n                complement: true,\n                value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")]\n            }\n        }\n\n        RegExpParser.prototype.atomEscape = function() {\n            this.consumeChar(\"\\\\\")\n\n            switch (this.peekChar()) {\n                case \"1\":\n                case \"2\":\n                case \"3\":\n                case \"4\":\n                case \"5\":\n                case \"6\":\n                case \"7\":\n                case \"8\":\n                case \"9\":\n                    return this.decimalEscapeAtom()\n                case \"d\":\n                case \"D\":\n                case \"s\":\n                case \"S\":\n                case \"w\":\n                case \"W\":\n                    return this.characterClassEscape()\n                case \"f\":\n                case \"n\":\n                case \"r\":\n                case \"t\":\n                case \"v\":\n                    return this.controlEscapeAtom()\n                case \"c\":\n                    return this.controlLetterEscapeAtom()\n                case \"0\":\n                    return this.nulCharacterAtom()\n                case \"x\":\n                    return this.hexEscapeSequenceAtom()\n                case \"u\":\n                    return this.regExpUnicodeEscapeSequenceAtom()\n                default:\n                    return this.identityEscapeAtom()\n            }\n        }\n\n        RegExpParser.prototype.decimalEscapeAtom = function() {\n            var value = this.positiveInteger()\n\n            return { type: \"GroupBackReference\", value: value }\n        }\n\n        RegExpParser.prototype.characterClassEscape = function() {\n            var set\n            var complement = false\n            switch (this.popChar()) {\n                case \"d\":\n                    set = digitsCharCodes\n                    break\n                case \"D\":\n                    set = digitsCharCodes\n                    complement = true\n                    break\n                case \"s\":\n                    set = whitespaceCodes\n                    break\n                case \"S\":\n                    set = whitespaceCodes\n                    complement = true\n                    break\n                case \"w\":\n                    set = wordCharCodes\n                    break\n                case \"W\":\n                    set = wordCharCodes\n                    complement = true\n                    break\n            }\n\n            ASSERT_EXISTS(set)\n\n            return { type: \"Set\", value: set, complement: complement }\n        }\n\n        RegExpParser.prototype.controlEscapeAtom = function() {\n            var escapeCode\n            switch (this.popChar()) {\n                case \"f\":\n                    escapeCode = cc(\"\\f\")\n                    break\n                case \"n\":\n                    escapeCode = cc(\"\\n\")\n                    break\n                case \"r\":\n                    escapeCode = cc(\"\\r\")\n                    break\n                case \"t\":\n                    escapeCode = cc(\"\\t\")\n                    break\n                case \"v\":\n                    escapeCode = cc(\"\\v\")\n                    break\n            }\n            ASSERT_EXISTS(escapeCode)\n\n            return { type: \"Character\", value: escapeCode }\n        }\n\n        RegExpParser.prototype.controlLetterEscapeAtom = function() {\n            this.consumeChar(\"c\")\n            var letter = this.popChar()\n            if (/[a-zA-Z]/.test(letter) === false) {\n                throw Error(\"Invalid \")\n            }\n\n            var letterCode = letter.toUpperCase().charCodeAt(0) - 64\n            return { type: \"Character\", value: letterCode }\n        }\n\n        RegExpParser.prototype.nulCharacterAtom = function() {\n            // TODO implement '[lookahead \u2209 DecimalDigit]'\n            // TODO: for the deprecated octal escape sequence\n            this.consumeChar(\"0\")\n            return { type: \"Character\", value: cc(\"\\0\") }\n        }\n\n        RegExpParser.prototype.hexEscapeSequenceAtom = function() {\n            this.consumeChar(\"x\")\n            return this.parseHexDigits(2)\n        }\n\n        RegExpParser.prototype.regExpUnicodeEscapeSequenceAtom = function() {\n            this.consumeChar(\"u\")\n            return this.parseHexDigits(4)\n        }\n\n        RegExpParser.prototype.identityEscapeAtom = function() {\n            // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n            // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n            var escapedChar = this.popChar()\n            return { type: \"Character\", value: cc(escapedChar) }\n        }\n\n        RegExpParser.prototype.classPatternCharacterAtom = function() {\n            switch (this.peekChar()) {\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                // istanbul ignore next\n                case \"\\\\\":\n                // istanbul ignore next\n                case \"]\":\n                    throw Error(\"TBD\")\n                default:\n                    var nextChar = this.popChar()\n                    return { type: \"Character\", value: cc(nextChar) }\n            }\n        }\n\n        RegExpParser.prototype.characterClass = function() {\n            var set = []\n            var complement = false\n            this.consumeChar(\"[\")\n            if (this.peekChar(0) === \"^\") {\n                this.consumeChar(\"^\")\n                complement = true\n            }\n\n            while (this.isClassAtom()) {\n                var from = this.classAtom()\n                var isFromSingleChar = from.type === \"Character\"\n                if (isFromSingleChar && this.isRangeDash()) {\n                    this.consumeChar(\"-\")\n                    var to = this.classAtom()\n                    var isToSingleChar = to.type === \"Character\"\n\n                    // a range can only be used when both sides are single characters\n                    if (isToSingleChar) {\n                        if (to.value < from.value) {\n                            throw Error(\"Range out of order in character class\")\n                        }\n                        set.push({ from: from.value, to: to.value })\n                    } else {\n                        // literal dash\n                        insertToSet(from.value, set)\n                        set.push(cc(\"-\"))\n                        insertToSet(to.value, set)\n                    }\n                } else {\n                    insertToSet(from.value, set)\n                }\n            }\n\n            this.consumeChar(\"]\")\n\n            return { type: \"Set\", complement: complement, value: set }\n        }\n\n        RegExpParser.prototype.classAtom = function() {\n            switch (this.peekChar()) {\n                // istanbul ignore next\n                case \"]\":\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                    throw Error(\"TBD\")\n                case \"\\\\\":\n                    return this.classEscape()\n                default:\n                    return this.classPatternCharacterAtom()\n            }\n        }\n\n        RegExpParser.prototype.classEscape = function() {\n            this.consumeChar(\"\\\\\")\n            switch (this.peekChar()) {\n                // Matches a backspace.\n                // (Not to be confused with \\b word boundary outside characterClass)\n                case \"b\":\n                    this.consumeChar(\"b\")\n                    return { type: \"Character\", value: cc(\"\\u0008\") }\n                case \"d\":\n                case \"D\":\n                case \"s\":\n                case \"S\":\n                case \"w\":\n                case \"W\":\n                    return this.characterClassEscape()\n                case \"f\":\n                case \"n\":\n                case \"r\":\n                case \"t\":\n                case \"v\":\n                    return this.controlEscapeAtom()\n                case \"c\":\n                    return this.controlLetterEscapeAtom()\n                case \"0\":\n                    return this.nulCharacterAtom()\n                case \"x\":\n                    return this.hexEscapeSequenceAtom()\n                case \"u\":\n                    return this.regExpUnicodeEscapeSequenceAtom()\n                default:\n                    return this.identityEscapeAtom()\n            }\n        }\n\n        RegExpParser.prototype.group = function() {\n            var capturing = true\n            this.consumeChar(\"(\")\n            switch (this.peekChar(0)) {\n                case \"?\":\n                    this.consumeChar(\"?\")\n                    this.consumeChar(\":\")\n                    capturing = false\n                    break\n                default:\n                    this.groupIdx++\n                    break\n            }\n            var value = this.disjunction()\n            this.consumeChar(\")\")\n\n            var groupAst = {\n                type: \"Group\",\n                capturing: capturing,\n                value: value\n            }\n\n            if (capturing) {\n                groupAst.idx = this.groupIdx\n            }\n\n            return groupAst\n        }\n\n        RegExpParser.prototype.positiveInteger = function() {\n            var number = this.popChar()\n\n            // istanbul ignore next - can't ever get here due to previous lookahead checks\n            // still implementing this error checking in case this ever changes.\n            if (decimalPatternNoZero.test(number) === false) {\n                throw Error(\"Expecting a positive integer\")\n            }\n\n            while (decimalPattern.test(this.peekChar(0))) {\n                number += this.popChar()\n            }\n\n            return parseInt(number, 10)\n        }\n\n        RegExpParser.prototype.integerIncludingZero = function() {\n            var number = this.popChar()\n            if (decimalPattern.test(number) === false) {\n                throw Error(\"Expecting an integer\")\n            }\n\n            while (decimalPattern.test(this.peekChar(0))) {\n                number += this.popChar()\n            }\n\n            return parseInt(number, 10)\n        }\n\n        RegExpParser.prototype.patternCharacter = function() {\n            var nextChar = this.popChar()\n            switch (nextChar) {\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                // istanbul ignore next\n                case \"^\":\n                // istanbul ignore next\n                case \"$\":\n                // istanbul ignore next\n                case \"\\\\\":\n                // istanbul ignore next\n                case \".\":\n                // istanbul ignore next\n                case \"*\":\n                // istanbul ignore next\n                case \"+\":\n                // istanbul ignore next\n                case \"?\":\n                // istanbul ignore next\n                case \"(\":\n                // istanbul ignore next\n                case \")\":\n                // istanbul ignore next\n                case \"[\":\n                // istanbul ignore next\n                case \"|\":\n                    // istanbul ignore next\n                    throw Error(\"TBD\")\n                default:\n                    return { type: \"Character\", value: cc(nextChar) }\n            }\n        }\n        RegExpParser.prototype.isRegExpFlag = function() {\n            switch (this.peekChar(0)) {\n                case \"g\":\n                case \"i\":\n                case \"m\":\n                case \"u\":\n                case \"y\":\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isRangeDash = function() {\n            return this.peekChar() === \"-\" && this.isClassAtom(1)\n        }\n\n        RegExpParser.prototype.isDigit = function() {\n            return decimalPattern.test(this.peekChar(0))\n        }\n\n        RegExpParser.prototype.isClassAtom = function(howMuch) {\n            if (howMuch === undefined) {\n                howMuch = 0\n            }\n\n            switch (this.peekChar(howMuch)) {\n                case \"]\":\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\u2028\":\n                case \"\\u2029\":\n                    return false\n                default:\n                    return true\n            }\n        }\n\n        RegExpParser.prototype.isTerm = function() {\n            return this.isAtom() || this.isAssertion()\n        }\n\n        RegExpParser.prototype.isAtom = function() {\n            if (this.isPatternCharacter()) {\n                return true\n            }\n\n            switch (this.peekChar(0)) {\n                case \".\":\n                case \"\\\\\": // atomEscape\n                case \"[\": // characterClass\n                // TODO: isAtom must be called before isAssertion - disambiguate\n                case \"(\": // group\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isAssertion = function() {\n            switch (this.peekChar(0)) {\n                case \"^\":\n                case \"$\":\n                    return true\n                // '\\b' or '\\B'\n                case \"\\\\\":\n                    switch (this.peekChar(1)) {\n                        case \"b\":\n                        case \"B\":\n                            return true\n                        default:\n                            return false\n                    }\n                // '(?=' or '(?!'\n                case \"(\":\n                    return (\n                        this.peekChar(1) === \"?\" &&\n                        (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\")\n                    )\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isQuantifier = function() {\n            var prevState = this.saveState()\n            try {\n                return this.quantifier(true) !== undefined\n            } catch (e) {\n                return false\n            } finally {\n                this.restoreState(prevState)\n            }\n        }\n\n        RegExpParser.prototype.isPatternCharacter = function() {\n            switch (this.peekChar()) {\n                case \"^\":\n                case \"$\":\n                case \"\\\\\":\n                case \".\":\n                case \"*\":\n                case \"+\":\n                case \"?\":\n                case \"(\":\n                case \")\":\n                case \"[\":\n                case \"|\":\n                case \"/\":\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\u2028\":\n                case \"\\u2029\":\n                    return false\n                default:\n                    return true\n            }\n        }\n\n        RegExpParser.prototype.parseHexDigits = function(howMany) {\n            var hexString = \"\"\n            for (var i = 0; i < howMany; i++) {\n                var hexChar = this.popChar()\n                if (hexDigitPattern.test(hexChar) === false) {\n                    throw Error(\"Expecting a HexDecimal digits\")\n                }\n                hexString += hexChar\n            }\n            var charCode = parseInt(hexString, 16)\n            return { type: \"Character\", value: charCode }\n        }\n\n        RegExpParser.prototype.peekChar = function(howMuch) {\n            if (howMuch === undefined) {\n                howMuch = 0\n            }\n            return this.input[this.idx + howMuch]\n        }\n\n        RegExpParser.prototype.popChar = function() {\n            var nextChar = this.peekChar(0)\n            this.consumeChar()\n            return nextChar\n        }\n\n        RegExpParser.prototype.consumeChar = function(char) {\n            if (char !== undefined && this.input[this.idx] !== char) {\n                throw Error(\n                    \"Expected: '\" +\n                        char +\n                        \"' but found: '\" +\n                        this.input[this.idx] +\n                        \"' at offset: \" +\n                        this.idx\n                )\n            }\n\n            if (this.idx >= this.input.length) {\n                throw Error(\"Unexpected end of input\")\n            }\n            this.idx++\n        }\n\n        RegExpParser.prototype.loc = function(begin) {\n            return { begin: begin, end: this.idx }\n        }\n\n        // consts and utilities\n        var hexDigitPattern = /[0-9a-fA-F]/\n        var decimalPattern = /[0-9]/\n        var decimalPatternNoZero = /[1-9]/\n\n        function cc(char) {\n            return char.charCodeAt(0)\n        }\n\n        function insertToSet(item, set) {\n            if (item.length !== undefined) {\n                item.forEach(function(subItem) {\n                    set.push(subItem)\n                })\n            } else {\n                set.push(item)\n            }\n        }\n\n        function addFlag(flagObj, flagKey) {\n            if (flagObj[flagKey] === true) {\n                throw \"duplicate flag \" + flagKey\n            }\n\n            flagObj[flagKey] = true\n        }\n\n        function ASSERT_EXISTS(obj) {\n            // istanbul ignore next\n            if (obj === undefined) {\n                throw Error(\"Internal Error - Should never get here!\")\n            }\n        }\n\n        // istanbul ignore next\n        function ASSERT_NEVER_REACH_HERE() {\n            throw Error(\"Internal Error - Should never get here!\")\n        }\n\n        var i\n        var digitsCharCodes = []\n        for (i = cc(\"0\"); i <= cc(\"9\"); i++) {\n            digitsCharCodes.push(i)\n        }\n\n        var wordCharCodes = [cc(\"_\")].concat(digitsCharCodes)\n        for (i = cc(\"a\"); i <= cc(\"z\"); i++) {\n            wordCharCodes.push(i)\n        }\n\n        for (i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n            wordCharCodes.push(i)\n        }\n\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\n        var whitespaceCodes = [\n            cc(\" \"),\n            cc(\"\\f\"),\n            cc(\"\\n\"),\n            cc(\"\\r\"),\n            cc(\"\\t\"),\n            cc(\"\\v\"),\n            cc(\"\\t\"),\n            cc(\"\\u00a0\"),\n            cc(\"\\u1680\"),\n            cc(\"\\u2000\"),\n            cc(\"\\u2001\"),\n            cc(\"\\u2002\"),\n            cc(\"\\u2003\"),\n            cc(\"\\u2004\"),\n            cc(\"\\u2005\"),\n            cc(\"\\u2006\"),\n            cc(\"\\u2007\"),\n            cc(\"\\u2008\"),\n            cc(\"\\u2009\"),\n            cc(\"\\u200a\"),\n            cc(\"\\u2028\"),\n            cc(\"\\u2029\"),\n            cc(\"\\u202f\"),\n            cc(\"\\u205f\"),\n            cc(\"\\u3000\"),\n            cc(\"\\ufeff\")\n        ]\n\n        function BaseRegExpVisitor() {}\n\n        BaseRegExpVisitor.prototype.visitChildren = function(node) {\n            for (var key in node) {\n                var child = node[key]\n                /* istanbul ignore else */\n                if (node.hasOwnProperty(key)) {\n                    if (child.type !== undefined) {\n                        this.visit(child)\n                    } else if (Array.isArray(child)) {\n                        child.forEach(function(subChild) {\n                            this.visit(subChild)\n                        }, this)\n                    }\n                }\n            }\n        }\n\n        BaseRegExpVisitor.prototype.visit = function(node) {\n            switch (node.type) {\n                case \"Pattern\":\n                    this.visitPattern(node)\n                    break\n                case \"Flags\":\n                    this.visitFlags(node)\n                    break\n                case \"Disjunction\":\n                    this.visitDisjunction(node)\n                    break\n                case \"Alternative\":\n                    this.visitAlternative(node)\n                    break\n                case \"StartAnchor\":\n                    this.visitStartAnchor(node)\n                    break\n                case \"EndAnchor\":\n                    this.visitEndAnchor(node)\n                    break\n                case \"WordBoundary\":\n                    this.visitWordBoundary(node)\n                    break\n                case \"NonWordBoundary\":\n                    this.visitNonWordBoundary(node)\n                    break\n                case \"Lookahead\":\n                    this.visitLookahead(node)\n                    break\n                case \"NegativeLookahead\":\n                    this.visitNegativeLookahead(node)\n                    break\n                case \"Character\":\n                    this.visitCharacter(node)\n                    break\n                case \"Set\":\n                    this.visitSet(node)\n                    break\n                case \"Group\":\n                    this.visitGroup(node)\n                    break\n                case \"GroupBackReference\":\n                    this.visitGroupBackReference(node)\n                    break\n                case \"Quantifier\":\n                    this.visitQuantifier(node)\n                    break\n            }\n\n            this.visitChildren(node)\n        }\n\n        BaseRegExpVisitor.prototype.visitPattern = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitFlags = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitDisjunction = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitAlternative = function(node) {}\n\n        // Assertion\n        BaseRegExpVisitor.prototype.visitStartAnchor = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitEndAnchor = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitWordBoundary = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitNonWordBoundary = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitLookahead = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitNegativeLookahead = function(node) {}\n\n        // atoms\n        BaseRegExpVisitor.prototype.visitCharacter = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitSet = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitGroup = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitGroupBackReference = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitQuantifier = function(node) {}\n\n        return {\n            RegExpParser: RegExpParser,\n            BaseRegExpVisitor: BaseRegExpVisitor,\n            VERSION: \"0.5.0\"\n        }\n    }\n)\n", "import { RegExpParser, RegExpPattern } from \"regexp-to-ast\"\n\nlet regExpAstCache = {}\nconst regExpParser = new RegExpParser()\n\nexport function getRegExpAst(regExp: RegExp): RegExpPattern {\n  const regExpStr = regExp.toString()\n  if (regExpAstCache.hasOwnProperty(regExpStr)) {\n    return regExpAstCache[regExpStr]\n  } else {\n    const regExpAst = regExpParser.pattern(regExpStr)\n    regExpAstCache[regExpStr] = regExpAst\n    return regExpAst\n  }\n}\n\nexport function clearRegExpParserCache() {\n  regExpAstCache = {}\n}\n", "import { VERSION, BaseRegExpVisitor } from \"regexp-to-ast\"\nimport {\n  flatten,\n  map,\n  forEach,\n  contains,\n  PRINT_ERROR,\n  PRINT_WARNING,\n  find,\n  isArray,\n  every,\n  values\n} from \"../utils/utils\"\nimport { getRegExpAst } from \"./reg_exp_parser\"\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer\"\n\nconst complementErrorMessage =\n  \"Complement Sets are not supported for first char optimization\"\nexport const failedOptimizationPrefixMsg =\n  'Unable to use \"first char\" lexer optimizations:\\n'\n\nexport function getOptimizedStartCodesIndices(\n  regExp: RegExp,\n  ensureOptimizations = false\n): number[] {\n  try {\n    const ast = getRegExpAst(regExp)\n    const firstChars = firstCharOptimizedIndices(\n      ast.value,\n      {},\n      ast.flags.ignoreCase\n    )\n    return firstChars\n  } catch (e) {\n    /* istanbul ignore next */\n    // Testing this relies on the regexp-to-ast library having a bug... */\n    // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n    if (e.message === complementErrorMessage) {\n      if (ensureOptimizations) {\n        PRINT_WARNING(\n          `${failedOptimizationPrefixMsg}` +\n            `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n            \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n            \"\\tSee: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\"\n        )\n      }\n    } else {\n      let msgSuffix = \"\"\n      if (ensureOptimizations) {\n        msgSuffix =\n          \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n          \"\\tSee: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\"\n      }\n      PRINT_ERROR(\n        `${failedOptimizationPrefixMsg}\\n` +\n          `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n          `\\tUsing the regexp-to-ast library version: ${VERSION}\\n` +\n          \"\\tPlease open an issue at: https://github.com/bd82/regexp-to-ast/issues\" +\n          msgSuffix\n      )\n    }\n  }\n\n  return []\n}\n\nexport function firstCharOptimizedIndices(ast, result, ignoreCase): number[] {\n  switch (ast.type) {\n    case \"Disjunction\":\n      for (let i = 0; i < ast.value.length; i++) {\n        firstCharOptimizedIndices(ast.value[i], result, ignoreCase)\n      }\n      break\n    case \"Alternative\":\n      const terms = ast.value\n      for (let i = 0; i < terms.length; i++) {\n        const term = terms[i]\n\n        // skip terms that cannot effect the first char results\n        switch (term.type) {\n          case \"EndAnchor\":\n          // A group back reference cannot affect potential starting char.\n          // because if a back reference is the first production than automatically\n          // the group being referenced has had to come BEFORE so its codes have already been added\n          case \"GroupBackReference\":\n          // assertions do not affect potential starting codes\n          case \"Lookahead\":\n          case \"NegativeLookahead\":\n          case \"StartAnchor\":\n          case \"WordBoundary\":\n          case \"NonWordBoundary\":\n            continue\n        }\n\n        const atom = term\n        switch (atom.type) {\n          case \"Character\":\n            addOptimizedIdxToResult(atom.value, result, ignoreCase)\n            break\n          case \"Set\":\n            if (atom.complement === true) {\n              throw Error(complementErrorMessage)\n            }\n            forEach(atom.value, (code) => {\n              if (typeof code === \"number\") {\n                addOptimizedIdxToResult(code, result, ignoreCase)\n              } else {\n                // range\n                const range = code\n                // cannot optimize when ignoreCase is\n                if (ignoreCase === true) {\n                  for (\n                    let rangeCode = range.from;\n                    rangeCode <= range.to;\n                    rangeCode++\n                  ) {\n                    addOptimizedIdxToResult(rangeCode, result, ignoreCase)\n                  }\n                }\n                // Optimization (2 orders of magnitude less work for very large ranges)\n                else {\n                  // handle unoptimized values\n                  for (\n                    let rangeCode = range.from;\n                    rangeCode <= range.to && rangeCode < minOptimizationVal;\n                    rangeCode++\n                  ) {\n                    addOptimizedIdxToResult(rangeCode, result, ignoreCase)\n                  }\n\n                  // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                  if (range.to >= minOptimizationVal) {\n                    const minUnOptVal =\n                      range.from >= minOptimizationVal\n                        ? range.from\n                        : minOptimizationVal\n                    const maxUnOptVal = range.to\n                    const minOptIdx = charCodeToOptimizedIndex(minUnOptVal)\n                    const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal)\n\n                    for (\n                      let currOptIdx = minOptIdx;\n                      currOptIdx <= maxOptIdx;\n                      currOptIdx++\n                    ) {\n                      result[currOptIdx] = currOptIdx\n                    }\n                  }\n                }\n              }\n            })\n            break\n          case \"Group\":\n            firstCharOptimizedIndices(atom.value, result, ignoreCase)\n            break\n          /* istanbul ignore next */\n          default:\n            throw Error(\"Non Exhaustive Match\")\n        }\n\n        // reached a mandatory production, no more **start** codes can be found on this alternative\n        const isOptionalQuantifier =\n          atom.quantifier !== undefined && atom.quantifier.atLeast === 0\n        if (\n          // A group may be optional due to empty contents /(?:)/\n          // or if everything inside it is optional /((a)?)/\n          (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n          // If this term is not a group it may only be optional if it has an optional quantifier\n          (atom.type !== \"Group\" && isOptionalQuantifier === false)\n        ) {\n          break\n        }\n      }\n      break\n    /* istanbul ignore next */\n    default:\n      throw Error(\"non exhaustive match!\")\n  }\n\n  // console.log(Object.keys(result).length)\n  return values(result)\n}\n\nfunction addOptimizedIdxToResult(\n  code: number,\n  result: number[],\n  ignoreCase: boolean\n) {\n  const optimizedCharIdx = charCodeToOptimizedIndex(code)\n  result[optimizedCharIdx] = optimizedCharIdx\n\n  if (ignoreCase === true) {\n    handleIgnoreCase(code, result)\n  }\n}\n\nfunction handleIgnoreCase(code: number, result: number[]) {\n  const char = String.fromCharCode(code)\n  const upperChar = char.toUpperCase()\n  /* istanbul ignore else */\n  if (upperChar !== char) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0))\n    result[optimizedCharIdx] = optimizedCharIdx\n  } else {\n    const lowerChar = char.toLowerCase()\n    if (lowerChar !== char) {\n      const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0))\n      result[optimizedCharIdx] = optimizedCharIdx\n    }\n  }\n}\n\nfunction findCode(setNode, targetCharCodes) {\n  return find(setNode.value, (codeOrRange) => {\n    if (typeof codeOrRange === \"number\") {\n      return contains(targetCharCodes, codeOrRange)\n    } else {\n      // range\n      const range = <any>codeOrRange\n      return (\n        find(\n          targetCharCodes,\n          (targetCode) => range.from <= targetCode && targetCode <= range.to\n        ) !== undefined\n      )\n    }\n  })\n}\n\nfunction isWholeOptional(ast) {\n  if (ast.quantifier && ast.quantifier.atLeast === 0) {\n    return true\n  }\n\n  if (!ast.value) {\n    return false\n  }\n\n  return isArray(ast.value)\n    ? every(ast.value, isWholeOptional)\n    : isWholeOptional(ast.value)\n}\n\nclass CharCodeFinder extends BaseRegExpVisitor {\n  found: boolean = false\n\n  constructor(private targetCharCodes: number[]) {\n    super()\n  }\n\n  visitChildren(node) {\n    // No need to keep looking...\n    if (this.found === true) {\n      return\n    }\n\n    // switch lookaheads as they do not actually consume any characters thus\n    // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n    switch (node.type) {\n      case \"Lookahead\":\n        this.visitLookahead(node)\n        return\n      case \"NegativeLookahead\":\n        this.visitNegativeLookahead(node)\n        return\n    }\n\n    super.visitChildren(node)\n  }\n\n  visitCharacter(node) {\n    if (contains(this.targetCharCodes, node.value)) {\n      this.found = true\n    }\n  }\n\n  visitSet(node) {\n    if (node.complement) {\n      if (findCode(node, this.targetCharCodes) === undefined) {\n        this.found = true\n      }\n    } else {\n      if (findCode(node, this.targetCharCodes) !== undefined) {\n        this.found = true\n      }\n    }\n  }\n}\n\nexport function canMatchCharCode(\n  charCodes: number[],\n  pattern: RegExp | string\n) {\n  if (pattern instanceof RegExp) {\n    const ast = getRegExpAst(pattern)\n    const charCodeFinder = new CharCodeFinder(charCodes)\n    charCodeFinder.visit(ast)\n    return charCodeFinder.found\n  } else {\n    return (\n      find(<any>pattern, (char) => {\n        return contains(charCodes, (<string>char).charCodeAt(0))\n      }) !== undefined\n    )\n  }\n}\n", "import { BaseRegExpVisitor } from \"regexp-to-ast\"\nimport { IRegExpExec, Lexer, LexerDefinitionErrorType } from \"./lexer_public\"\nimport {\n  compact,\n  contains,\n  defaults,\n  difference,\n  filter,\n  find,\n  first,\n  flatten,\n  forEach,\n  has,\n  indexOf,\n  isArray,\n  isEmpty,\n  isFunction,\n  isRegExp,\n  isString,\n  isUndefined,\n  keys,\n  map,\n  mapValues,\n  packArray,\n  PRINT_ERROR,\n  reduce,\n  reject\n} from \"../utils/utils\"\nimport {\n  canMatchCharCode,\n  failedOptimizationPrefixMsg,\n  getOptimizedStartCodesIndices\n} from \"./reg_exp\"\nimport {\n  ILexerDefinitionError,\n  ILineTerminatorsTester,\n  IMultiModeLexerDefinition,\n  IToken,\n  TokenType\n} from \"../../api\"\nimport { getRegExpAst } from \"./reg_exp_parser\"\n\nconst PATTERN = \"PATTERN\"\nexport const DEFAULT_MODE = \"defaultMode\"\nexport const MODES = \"modes\"\n\nexport interface IPatternConfig {\n  pattern: IRegExpExec\n  longerAlt: number\n  canLineTerminator: boolean\n  isCustom: boolean\n  short: number | boolean\n  group: any\n  push: string\n  pop: boolean\n  tokenTypeIdx: number\n}\n\nexport interface IAnalyzeResult {\n  patternIdxToConfig: IPatternConfig[]\n  charCodeToPatternIdxToConfig: { [charCode: number]: IPatternConfig[] }\n  emptyGroups: { [groupName: string]: IToken[] }\n  hasCustom: boolean\n  canBeOptimized: boolean\n}\n\nexport let SUPPORT_STICKY =\n  typeof (<any>new RegExp(\"(?:)\")).sticky === \"boolean\"\n\nexport function disableSticky() {\n  SUPPORT_STICKY = false\n}\n\nexport function enableSticky() {\n  SUPPORT_STICKY = true\n}\n\nexport function analyzeTokenTypes(\n  tokenTypes: TokenType[],\n  options: {\n    positionTracking?: \"full\" | \"onlyStart\" | \"onlyOffset\"\n    ensureOptimizations?: boolean\n    lineTerminatorCharacters?: (number | string)[]\n    // TODO: should `useSticky` be an argument here?\n    useSticky?: boolean\n    safeMode?: boolean\n    tracer?: (msg: string, action: Function) => void\n  }\n): IAnalyzeResult {\n  options = defaults(options, {\n    useSticky: SUPPORT_STICKY,\n    debug: false,\n    safeMode: false,\n    positionTracking: \"full\",\n    lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n    tracer: (msg, action) => action()\n  })\n\n  const tracer = options.tracer\n\n  tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n    initCharCodeToOptimizedIndexMap()\n  })\n\n  let onlyRelevantTypes\n  tracer(\"Reject Lexer.NA\", () => {\n    onlyRelevantTypes = reject(tokenTypes, (currType) => {\n      return currType[PATTERN] === Lexer.NA\n    })\n  })\n\n  let hasCustom = false\n  let allTransformedPatterns\n  tracer(\"Transform Patterns\", () => {\n    hasCustom = false\n    allTransformedPatterns = map(onlyRelevantTypes, (currType) => {\n      let currPattern = currType[PATTERN]\n\n      /* istanbul ignore else */\n      if (isRegExp(currPattern)) {\n        let regExpSource = currPattern.source\n        if (\n          regExpSource.length === 1 &&\n          // only these regExp meta characters which can appear in a length one regExp\n          regExpSource !== \"^\" &&\n          regExpSource !== \"$\" &&\n          regExpSource !== \".\" &&\n          !currPattern.ignoreCase\n        ) {\n          return regExpSource\n        } else if (\n          regExpSource.length === 2 &&\n          regExpSource[0] === \"\\\\\" &&\n          // not a meta character\n          !contains(\n            [\n              \"d\",\n              \"D\",\n              \"s\",\n              \"S\",\n              \"t\",\n              \"r\",\n              \"n\",\n              \"t\",\n              \"0\",\n              \"c\",\n              \"b\",\n              \"B\",\n              \"f\",\n              \"v\",\n              \"w\",\n              \"W\"\n            ],\n            regExpSource[1]\n          )\n        ) {\n          // escaped meta Characters: /\\+/ /\\[/\n          // or redundant escaping: /\\a/\n          // without the escaping \"\\\"\n          return regExpSource[1]\n        } else {\n          return options.useSticky\n            ? addStickyFlag(currPattern)\n            : addStartOfInput(currPattern)\n        }\n      } else if (isFunction(currPattern)) {\n        hasCustom = true\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return { exec: currPattern }\n      } else if (has(currPattern, \"exec\")) {\n        hasCustom = true\n        // ICustomPattern\n        return currPattern\n      } else if (typeof currPattern === \"string\") {\n        if (currPattern.length === 1) {\n          return currPattern\n        } else {\n          let escapedRegExpString = currPattern.replace(\n            /[\\\\^$.*+?()[\\]{}|]/g,\n            \"\\\\$&\"\n          )\n          let wrappedRegExp = new RegExp(escapedRegExpString)\n          return options.useSticky\n            ? addStickyFlag(wrappedRegExp)\n            : addStartOfInput(wrappedRegExp)\n        }\n      } else {\n        throw Error(\"non exhaustive match\")\n      }\n    })\n  })\n\n  let patternIdxToType\n  let patternIdxToGroup\n  let patternIdxToLongerAltIdx\n  let patternIdxToPushMode\n  let patternIdxToPopMode\n  tracer(\"misc mapping\", () => {\n    patternIdxToType = map(\n      onlyRelevantTypes,\n      (currType) => currType.tokenTypeIdx\n    )\n\n    patternIdxToGroup = map(onlyRelevantTypes, (clazz: any) => {\n      let groupName = clazz.GROUP\n      /* istanbul ignore next */\n      if (groupName === Lexer.SKIPPED) {\n        return undefined\n      } else if (isString(groupName)) {\n        return groupName\n      } else if (isUndefined(groupName)) {\n        return false\n      } else {\n        throw Error(\"non exhaustive match\")\n      }\n    })\n\n    patternIdxToLongerAltIdx = map(onlyRelevantTypes, (clazz: any) => {\n      let longerAltType = clazz.LONGER_ALT\n\n      if (longerAltType) {\n        let longerAltIdx = indexOf(onlyRelevantTypes, longerAltType)\n        return longerAltIdx\n      }\n    })\n\n    patternIdxToPushMode = map(\n      onlyRelevantTypes,\n      (clazz: any) => clazz.PUSH_MODE\n    )\n\n    patternIdxToPopMode = map(onlyRelevantTypes, (clazz: any) =>\n      has(clazz, \"POP_MODE\")\n    )\n  })\n\n  let patternIdxToCanLineTerminator\n  tracer(\"Line Terminator Handling\", () => {\n    const lineTerminatorCharCodes = getCharCodes(\n      options.lineTerminatorCharacters\n    )\n    patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false)\n    if (options.positionTracking !== \"onlyOffset\") {\n      patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n        if (has(tokType, \"LINE_BREAKS\")) {\n          return tokType.LINE_BREAKS\n        } else {\n          if (\n            checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false\n          ) {\n            return canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN)\n          }\n        }\n      })\n    }\n  })\n\n  let patternIdxToIsCustom\n  let patternIdxToShort\n  let emptyGroups\n  let patternIdxToConfig\n  tracer(\"Misc Mapping #2\", () => {\n    patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern)\n    patternIdxToShort = map(allTransformedPatterns, isShortPattern)\n\n    emptyGroups = reduce(\n      onlyRelevantTypes,\n      (acc, clazz: any) => {\n        let groupName = clazz.GROUP\n        if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n          acc[groupName] = []\n        }\n        return acc\n      },\n      {}\n    )\n\n    patternIdxToConfig = map(allTransformedPatterns, (x, idx) => {\n      return {\n        pattern: allTransformedPatterns[idx],\n        longerAlt: patternIdxToLongerAltIdx[idx],\n        canLineTerminator: patternIdxToCanLineTerminator[idx],\n        isCustom: patternIdxToIsCustom[idx],\n        short: patternIdxToShort[idx],\n        group: patternIdxToGroup[idx],\n        push: patternIdxToPushMode[idx],\n        pop: patternIdxToPopMode[idx],\n        tokenTypeIdx: patternIdxToType[idx],\n        tokenType: onlyRelevantTypes[idx]\n      }\n    })\n  })\n\n  let canBeOptimized = true\n  let charCodeToPatternIdxToConfig = []\n\n  if (!options.safeMode) {\n    tracer(\"First Char Optimization\", () => {\n      charCodeToPatternIdxToConfig = reduce(\n        onlyRelevantTypes,\n        (result, currTokType, idx) => {\n          if (typeof currTokType.PATTERN === \"string\") {\n            const charCode = currTokType.PATTERN.charCodeAt(0)\n            const optimizedIdx = charCodeToOptimizedIndex(charCode)\n            addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx])\n          } else if (isArray(currTokType.START_CHARS_HINT)) {\n            let lastOptimizedIdx\n            forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n              const charCode =\n                typeof charOrInt === \"string\"\n                  ? charOrInt.charCodeAt(0)\n                  : charOrInt\n              const currOptimizedIdx = charCodeToOptimizedIndex(charCode)\n              // Avoid adding the config multiple times\n              /* istanbul ignore else */\n              // - Difficult to check this scenario effects as it is only a performance\n              //   optimization that does not change correctness\n              if (lastOptimizedIdx !== currOptimizedIdx) {\n                lastOptimizedIdx = currOptimizedIdx\n                addToMapOfArrays(\n                  result,\n                  currOptimizedIdx,\n                  patternIdxToConfig[idx]\n                )\n              }\n            })\n          } else if (isRegExp(currTokType.PATTERN)) {\n            if (currTokType.PATTERN.unicode) {\n              canBeOptimized = false\n              if (options.ensureOptimizations) {\n                PRINT_ERROR(\n                  `${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                    \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\"\n                )\n              }\n            } else {\n              let optimizedCodes = getOptimizedStartCodesIndices(\n                currTokType.PATTERN,\n                options.ensureOptimizations\n              )\n              /* istanbul ignore if */\n              // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n              // the first should be a different validation and the second cannot be tested.\n              if (isEmpty(optimizedCodes)) {\n                // we cannot understand what codes may start possible matches\n                // The optimization correctness requires knowing start codes for ALL patterns.\n                // Not actually sure this is an error, no debug message\n                canBeOptimized = false\n              }\n              forEach(optimizedCodes, (code) => {\n                addToMapOfArrays(result, code, patternIdxToConfig[idx])\n              })\n            }\n          } else {\n            if (options.ensureOptimizations) {\n              PRINT_ERROR(\n                `${failedOptimizationPrefixMsg}` +\n                  `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                  \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                  \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\"\n              )\n            }\n            canBeOptimized = false\n          }\n\n          return result\n        },\n        []\n      )\n    })\n  }\n  tracer(\"ArrayPacking\", () => {\n    charCodeToPatternIdxToConfig = packArray(charCodeToPatternIdxToConfig)\n  })\n\n  return {\n    emptyGroups: emptyGroups,\n    patternIdxToConfig: patternIdxToConfig,\n    charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n    hasCustom: hasCustom,\n    canBeOptimized: canBeOptimized\n  }\n}\n\nexport function validatePatterns(\n  tokenTypes: TokenType[],\n  validModesNames: string[]\n): ILexerDefinitionError[] {\n  let errors = []\n\n  let missingResult = findMissingPatterns(tokenTypes)\n  errors = errors.concat(missingResult.errors)\n\n  let invalidResult = findInvalidPatterns(missingResult.valid)\n  let validTokenTypes = invalidResult.valid\n  errors = errors.concat(invalidResult.errors)\n\n  errors = errors.concat(validateRegExpPattern(validTokenTypes))\n\n  errors = errors.concat(findInvalidGroupType(validTokenTypes))\n\n  errors = errors.concat(\n    findModesThatDoNotExist(validTokenTypes, validModesNames)\n  )\n\n  errors = errors.concat(findUnreachablePatterns(validTokenTypes))\n\n  return errors\n}\n\nfunction validateRegExpPattern(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  let errors = []\n  let withRegExpPatterns = filter(tokenTypes, (currTokType) =>\n    isRegExp(currTokType[PATTERN])\n  )\n\n  errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns))\n\n  errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns))\n\n  errors = errors.concat(findUnsupportedFlags(withRegExpPatterns))\n\n  errors = errors.concat(findDuplicatePatterns(withRegExpPatterns))\n\n  errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns))\n\n  return errors\n}\n\nexport interface ILexerFilterResult {\n  errors: ILexerDefinitionError[]\n  valid: TokenType[]\n}\n\nexport function findMissingPatterns(\n  tokenTypes: TokenType[]\n): ILexerFilterResult {\n  let tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n    return !has(currType, PATTERN)\n  })\n\n  let errors = map(tokenTypesWithMissingPattern, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- missing static 'PATTERN' property\",\n      type: LexerDefinitionErrorType.MISSING_PATTERN,\n      tokenTypes: [currType]\n    }\n  })\n\n  let valid = difference(tokenTypes, tokenTypesWithMissingPattern)\n  return { errors, valid }\n}\n\nexport function findInvalidPatterns(\n  tokenTypes: TokenType[]\n): ILexerFilterResult {\n  let tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n    let pattern = currType[PATTERN]\n    return (\n      !isRegExp(pattern) &&\n      !isFunction(pattern) &&\n      !has(pattern, \"exec\") &&\n      !isString(pattern)\n    )\n  })\n\n  let errors = map(tokenTypesWithInvalidPattern, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' can only be a RegExp, a\" +\n        \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n      type: LexerDefinitionErrorType.INVALID_PATTERN,\n      tokenTypes: [currType]\n    }\n  })\n\n  let valid = difference(tokenTypes, tokenTypesWithInvalidPattern)\n  return { errors, valid }\n}\n\nconst end_of_input = /[^\\\\][\\$]/\n\nexport function findEndOfInputAnchor(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  class EndAnchorFinder extends BaseRegExpVisitor {\n    found = false\n\n    visitEndAnchor(node) {\n      this.found = true\n    }\n  }\n\n  let invalidRegex = filter(tokenTypes, (currType) => {\n    const pattern = currType[PATTERN]\n\n    try {\n      const regexpAst = getRegExpAst(pattern)\n      const endAnchorVisitor = new EndAnchorFinder()\n      endAnchorVisitor.visit(regexpAst)\n\n      return endAnchorVisitor.found\n    } catch (e) {\n      // old behavior in case of runtime exceptions with regexp-to-ast.\n      /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n      return end_of_input.test(pattern.source)\n    }\n  })\n\n  let errors = map(invalidRegex, (currType) => {\n    return {\n      message:\n        \"Unexpected RegExp Anchor Error:\\n\" +\n        \"\\tToken Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n        \"\\tSee sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n        \"\\tfor details.\",\n      type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n      tokenTypes: [currType]\n    }\n  })\n\n  return errors\n}\n\nexport function findEmptyMatchRegExps(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  let matchesEmptyString = filter(tokenTypes, (currType) => {\n    let pattern = currType[PATTERN]\n    return pattern.test(\"\")\n  })\n\n  let errors = map(matchesEmptyString, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' must not match an empty string\",\n      type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n      tokenTypes: [currType]\n    }\n  })\n\n  return errors\n}\n\nconst start_of_input = /[^\\\\[][\\^]|^\\^/\n\nexport function findStartOfInputAnchor(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  class StartAnchorFinder extends BaseRegExpVisitor {\n    found = false\n\n    visitStartAnchor(node) {\n      this.found = true\n    }\n  }\n\n  let invalidRegex = filter(tokenTypes, (currType) => {\n    const pattern = currType[PATTERN]\n    try {\n      const regexpAst = getRegExpAst(pattern)\n      const startAnchorVisitor = new StartAnchorFinder()\n      startAnchorVisitor.visit(regexpAst)\n\n      return startAnchorVisitor.found\n    } catch (e) {\n      // old behavior in case of runtime exceptions with regexp-to-ast.\n      /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n      return start_of_input.test(pattern.source)\n    }\n  })\n\n  let errors = map(invalidRegex, (currType) => {\n    return {\n      message:\n        \"Unexpected RegExp Anchor Error:\\n\" +\n        \"\\tToken Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n        \"\\tSee https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n        \"\\tfor details.\",\n      type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n      tokenTypes: [currType]\n    }\n  })\n\n  return errors\n}\n\nexport function findUnsupportedFlags(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  let invalidFlags = filter(tokenTypes, (currType) => {\n    let pattern = currType[PATTERN]\n    return pattern instanceof RegExp && (pattern.multiline || pattern.global)\n  })\n\n  let errors = map(invalidFlags, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n      type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n      tokenTypes: [currType]\n    }\n  })\n\n  return errors\n}\n\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  let found = []\n  let identicalPatterns = map(tokenTypes, (outerType: any) => {\n    return reduce(\n      tokenTypes,\n      (result, innerType: any) => {\n        if (\n          outerType.PATTERN.source === innerType.PATTERN.source &&\n          !contains(found, innerType) &&\n          innerType.PATTERN !== Lexer.NA\n        ) {\n          // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n          // in essence we are creating Equivalence classes on equality relation.\n          found.push(innerType)\n          result.push(innerType)\n          return result\n        }\n        return result\n      },\n      []\n    )\n  })\n\n  identicalPatterns = compact(identicalPatterns)\n\n  let duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n    return currIdenticalSet.length > 1\n  })\n\n  let errors = map(duplicatePatterns, (setOfIdentical: any) => {\n    let tokenTypeNames = map(setOfIdentical, (currType: any) => {\n      return currType.name\n    })\n\n    let dupPatternSrc = (<any>first(setOfIdentical)).PATTERN\n    return {\n      message:\n        `The same RegExp pattern ->${dupPatternSrc}<-` +\n        `has been used in all of the following Token Types: ${tokenTypeNames.join(\n          \", \"\n        )} <-`,\n      type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n      tokenTypes: setOfIdentical\n    }\n  })\n\n  return errors\n}\n\nexport function findInvalidGroupType(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  let invalidTypes = filter(tokenTypes, (clazz: any) => {\n    if (!has(clazz, \"GROUP\")) {\n      return false\n    }\n    let group = clazz.GROUP\n\n    return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group)\n  })\n\n  let errors = map(invalidTypes, (currType) => {\n    return {\n      message:\n        \"Token Type: ->\" +\n        currType.name +\n        \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n      type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n      tokenTypes: [currType]\n    }\n  })\n\n  return errors\n}\n\nexport function findModesThatDoNotExist(\n  tokenTypes: TokenType[],\n  validModes: string[]\n): ILexerDefinitionError[] {\n  let invalidModes = filter(tokenTypes, (clazz: any) => {\n    return (\n      clazz.PUSH_MODE !== undefined && !contains(validModes, clazz.PUSH_MODE)\n    )\n  })\n\n  let errors = map(invalidModes, (tokType) => {\n    let msg =\n      `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n      `which does not exist`\n    return {\n      message: msg,\n      type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n      tokenTypes: [tokType]\n    }\n  })\n\n  return errors\n}\n\nexport function findUnreachablePatterns(\n  tokenTypes: TokenType[]\n): ILexerDefinitionError[] {\n  const errors = []\n\n  const canBeTested = reduce(\n    tokenTypes,\n    (result, tokType, idx) => {\n      const pattern = tokType.PATTERN\n\n      if (pattern === Lexer.NA) {\n        return result\n      }\n\n      // a more comprehensive validation for all forms of regExps would require\n      // deeper regExp analysis capabilities\n      if (isString(pattern)) {\n        result.push({ str: pattern, idx, tokenType: tokType })\n      } else if (isRegExp(pattern) && noMetaChar(pattern)) {\n        result.push({ str: pattern.source, idx, tokenType: tokType })\n      }\n      return result\n    },\n    []\n  )\n\n  forEach(tokenTypes, (tokType, testIdx) => {\n    forEach(canBeTested, ({ str, idx, tokenType }) => {\n      if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n        let msg =\n          `Token: ->${tokenType.name}<- can never be matched.\\n` +\n          `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n          `in the lexer's definition.\\n` +\n          `See https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#UNREACHABLE`\n        errors.push({\n          message: msg,\n          type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n          tokenTypes: [tokType, tokenType]\n        })\n      }\n    })\n  })\n\n  return errors\n}\n\nfunction testTokenType(str: string, pattern: any): boolean {\n  /* istanbul ignore else */\n  if (isRegExp(pattern)) {\n    const regExpArray = pattern.exec(str)\n    return regExpArray !== null && regExpArray.index === 0\n  } else if (isFunction(pattern)) {\n    // maintain the API of custom patterns\n    return pattern(str, 0, [], {})\n  } else if (has(pattern, \"exec\")) {\n    // maintain the API of custom patterns\n    return pattern.exec(str, 0, [], {})\n  } else if (typeof pattern === \"string\") {\n    return pattern === str\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n\nfunction noMetaChar(regExp: RegExp): boolean {\n  //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n  const metaChars = [\n    \".\",\n    \"\\\\\",\n    \"[\",\n    \"]\",\n    \"|\",\n    \"^\",\n    \"$\",\n    \"(\",\n    \")\",\n    \"?\",\n    \"*\",\n    \"+\",\n    \"{\"\n  ]\n  return (\n    find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined\n  )\n}\n\nexport function addStartOfInput(pattern: RegExp): RegExp {\n  let flags = pattern.ignoreCase ? \"i\" : \"\"\n  // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n  // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n  return new RegExp(`^(?:${pattern.source})`, flags)\n}\n\nexport function addStickyFlag(pattern: RegExp): RegExp {\n  let flags = pattern.ignoreCase ? \"iy\" : \"y\"\n  // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n  // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n  return new RegExp(`${pattern.source}`, flags)\n}\n\nexport function performRuntimeChecks(\n  lexerDefinition: IMultiModeLexerDefinition,\n  trackLines: boolean,\n  lineTerminatorCharacters: (number | string)[]\n): ILexerDefinitionError[] {\n  let errors = []\n\n  // some run time checks to help the end users.\n  if (!has(lexerDefinition, DEFAULT_MODE)) {\n    errors.push({\n      message:\n        \"A MultiMode Lexer cannot be initialized without a <\" +\n        DEFAULT_MODE +\n        \"> property in its definition\\n\",\n      type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\n    })\n  }\n  if (!has(lexerDefinition, MODES)) {\n    errors.push({\n      message:\n        \"A MultiMode Lexer cannot be initialized without a <\" +\n        MODES +\n        \"> property in its definition\\n\",\n      type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\n    })\n  }\n\n  if (\n    has(lexerDefinition, MODES) &&\n    has(lexerDefinition, DEFAULT_MODE) &&\n    !has(lexerDefinition.modes, lexerDefinition.defaultMode)\n  ) {\n    errors.push({\n      message:\n        `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n        `which does not exist\\n`,\n      type:\n        LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\n    })\n  }\n\n  if (has(lexerDefinition, MODES)) {\n    forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n      forEach(currModeValue, (currTokType, currIdx) => {\n        if (isUndefined(currTokType)) {\n          errors.push({\n            message:\n              `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n              `<${currModeName}> at index: <${currIdx}>\\n`,\n            type:\n              LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\n          })\n        }\n      })\n    })\n  }\n\n  return errors\n}\n\nexport function performWarningRuntimeChecks(\n  lexerDefinition: IMultiModeLexerDefinition,\n  trackLines: boolean,\n  lineTerminatorCharacters: (number | string)[]\n): ILexerDefinitionError[] {\n  const warnings = []\n  let hasAnyLineBreak = false\n  const allTokenTypes = compact(\n    flatten(mapValues(lexerDefinition.modes, (tokTypes) => tokTypes))\n  )\n\n  const concreteTokenTypes = reject(\n    allTokenTypes,\n    (currType) => currType[PATTERN] === Lexer.NA\n  )\n  const terminatorCharCodes = getCharCodes(lineTerminatorCharacters)\n  if (trackLines) {\n    forEach(concreteTokenTypes, (tokType) => {\n      const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes)\n      if (currIssue !== false) {\n        const message = buildLineBreakIssueMessage(tokType, currIssue)\n        const warningDescriptor = {\n          message,\n          type: currIssue.issue,\n          tokenType: tokType\n        }\n        warnings.push(warningDescriptor)\n      } else {\n        // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n        if (has(tokType, \"LINE_BREAKS\")) {\n          if (tokType.LINE_BREAKS === true) {\n            hasAnyLineBreak = true\n          }\n        } else {\n          if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n            hasAnyLineBreak = true\n          }\n        }\n      }\n    })\n  }\n\n  if (trackLines && !hasAnyLineBreak) {\n    warnings.push({\n      message:\n        \"Warning: No LINE_BREAKS Found.\\n\" +\n        \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n        \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n        \"\\tSee https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n        \"\\tfor details.\",\n      type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS\n    })\n  }\n  return warnings\n}\n\nexport function cloneEmptyGroups(emptyGroups: {\n  [groupName: string]: IToken\n}): { [groupName: string]: IToken } {\n  let clonedResult: any = {}\n  let groupKeys = keys(emptyGroups)\n\n  forEach(groupKeys, (currKey) => {\n    let currGroupValue = emptyGroups[currKey]\n\n    /* istanbul ignore else */\n    if (isArray(currGroupValue)) {\n      clonedResult[currKey] = []\n    } else {\n      throw Error(\"non exhaustive match\")\n    }\n  })\n\n  return clonedResult\n}\n\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType: any): boolean {\n  let pattern = tokenType.PATTERN\n  /* istanbul ignore else */\n  if (isRegExp(pattern)) {\n    return false\n  } else if (isFunction(pattern)) {\n    // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n    return true\n  } else if (has(pattern, \"exec\")) {\n    // ICustomPattern\n    return true\n  } else if (isString(pattern)) {\n    return false\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n\nexport function isShortPattern(pattern: any): number | boolean {\n  if (isString(pattern) && pattern.length === 1) {\n    return pattern.charCodeAt(0)\n  } else {\n    return false\n  }\n}\n\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester: ILineTerminatorsTester = {\n  // implements /\\n|\\r\\n?/g.test\n  test: function (text) {\n    let len = text.length\n    for (let i = this.lastIndex; i < len; i++) {\n      let c = text.charCodeAt(i)\n      if (c === 10) {\n        this.lastIndex = i + 1\n        return true\n      } else if (c === 13) {\n        if (text.charCodeAt(i + 1) === 10) {\n          this.lastIndex = i + 2\n        } else {\n          this.lastIndex = i + 1\n        }\n        return true\n      }\n    }\n    return false\n  },\n\n  lastIndex: 0\n}\n\nfunction checkLineBreaksIssues(\n  tokType: TokenType,\n  lineTerminatorCharCodes: number[]\n):\n  | {\n      issue:\n        | LexerDefinitionErrorType.IDENTIFY_TERMINATOR\n        | LexerDefinitionErrorType.CUSTOM_LINE_BREAK\n      errMsg?: string\n    }\n  | false {\n  if (has(tokType, \"LINE_BREAKS\")) {\n    // if the user explicitly declared the line_breaks option we will respect their choice\n    // and assume it is correct.\n    return false\n  } else {\n    /* istanbul ignore else */\n    if (isRegExp(tokType.PATTERN)) {\n      try {\n        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN)\n      } catch (e) {\n        /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n        return {\n          issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n          errMsg: e.message\n        }\n      }\n      return false\n    } else if (isString(tokType.PATTERN)) {\n      // string literal patterns can always be analyzed to detect line terminator usage\n      return false\n    } else if (isCustomPattern(tokType)) {\n      // custom token types\n      return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK }\n    } else {\n      throw Error(\"non exhaustive match\")\n    }\n  }\n}\n\nexport function buildLineBreakIssueMessage(\n  tokType: TokenType,\n  details: {\n    issue:\n      | LexerDefinitionErrorType.IDENTIFY_TERMINATOR\n      | LexerDefinitionErrorType.CUSTOM_LINE_BREAK\n    errMsg?: string\n  }\n): string {\n  /* istanbul ignore else */\n  if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n    return (\n      \"Warning: unable to identify line terminator usage in pattern.\\n\" +\n      `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n      `\\t Root cause: ${details.errMsg}.\\n` +\n      \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\"\n    )\n  } else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n    return (\n      \"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n      `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n      \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\"\n    )\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n\nfunction getCharCodes(charsOrCodes: (number | string)[]): number[] {\n  const charCodes = map(charsOrCodes, (numOrString) => {\n    if (isString(numOrString) && numOrString.length > 0) {\n      return numOrString.charCodeAt(0)\n    } else {\n      return numOrString\n    }\n  })\n\n  return charCodes\n}\n\nfunction addToMapOfArrays(map, key, value): void {\n  if (map[key] === undefined) {\n    map[key] = [value]\n  } else {\n    map[key].push(value)\n  }\n}\n\nexport const minOptimizationVal = 256\n\n/**\n * We ae mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nexport function charCodeToOptimizedIndex(charCode) {\n  return charCode < minOptimizationVal\n    ? charCode\n    : charCodeToOptimizedIdxMap[charCode]\n}\n\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nlet charCodeToOptimizedIdxMap = []\nfunction initCharCodeToOptimizedIndexMap() {\n  if (isEmpty(charCodeToOptimizedIdxMap)) {\n    charCodeToOptimizedIdxMap = new Array(65536)\n    for (let i = 0; i < 65536; i++) {\n      /* tslint:disable */\n      charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i\n      /* tslint:enable */\n    }\n  }\n}\n", "import {\n  cloneArr,\n  compact,\n  contains,\n  difference,\n  flatten,\n  forEach,\n  has,\n  isArray,\n  isEmpty,\n  map\n} from \"../utils/utils\"\nimport { TokenType } from \"../../api\"\n\nexport function tokenStructuredMatcher(tokInstance, tokConstructor) {\n  const instanceType = tokInstance.tokenTypeIdx\n  if (instanceType === tokConstructor.tokenTypeIdx) {\n    return true\n  } else {\n    return (\n      tokConstructor.isParent === true &&\n      tokConstructor.categoryMatchesMap[instanceType] === true\n    )\n  }\n}\n\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(token, tokType) {\n  return token.tokenTypeIdx === tokType.tokenTypeIdx\n}\n\nexport let tokenShortNameIdx = 1\nexport const tokenIdxToClass = {}\n\nexport function augmentTokenTypes(tokenTypes: TokenType[]): void {\n  // collect the parent Token Types as well.\n  let tokenTypesAndParents = expandCategories(tokenTypes)\n\n  // add required tokenType and categoryMatches properties\n  assignTokenDefaultProps(tokenTypesAndParents)\n\n  // fill up the categoryMatches\n  assignCategoriesMapProp(tokenTypesAndParents)\n  assignCategoriesTokensProp(tokenTypesAndParents)\n\n  forEach(tokenTypesAndParents, (tokType) => {\n    tokType.isParent = tokType.categoryMatches.length > 0\n  })\n}\n\nexport function expandCategories(tokenTypes: TokenType[]): TokenType[] {\n  let result = cloneArr(tokenTypes)\n\n  let categories = tokenTypes\n  let searching = true\n  while (searching) {\n    categories = compact(\n      flatten(map(categories, (currTokType) => currTokType.CATEGORIES))\n    )\n\n    let newCategories = difference(categories, result)\n\n    result = result.concat(newCategories)\n\n    if (isEmpty(newCategories)) {\n      searching = false\n    } else {\n      categories = newCategories\n    }\n  }\n  return result\n}\n\nexport function assignTokenDefaultProps(tokenTypes: TokenType[]): void {\n  forEach(tokenTypes, (currTokType) => {\n    if (!hasShortKeyProperty(currTokType)) {\n      tokenIdxToClass[tokenShortNameIdx] = currTokType\n      ;(<any>currTokType).tokenTypeIdx = tokenShortNameIdx++\n    }\n\n    // CATEGORIES? : TokenType | TokenType[]\n    if (\n      hasCategoriesProperty(currTokType) &&\n      !isArray(currTokType.CATEGORIES)\n      // &&\n      // !isUndefined(currTokType.CATEGORIES.PATTERN)\n    ) {\n      currTokType.CATEGORIES = [currTokType.CATEGORIES]\n    }\n\n    if (!hasCategoriesProperty(currTokType)) {\n      currTokType.CATEGORIES = []\n    }\n\n    if (!hasExtendingTokensTypesProperty(currTokType)) {\n      currTokType.categoryMatches = []\n    }\n\n    if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n      currTokType.categoryMatchesMap = {}\n    }\n  })\n}\n\nexport function assignCategoriesTokensProp(tokenTypes: TokenType[]): void {\n  forEach(tokenTypes, (currTokType) => {\n    // avoid duplications\n    currTokType.categoryMatches = []\n    forEach(currTokType.categoryMatchesMap, (val, key) => {\n      currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx)\n    })\n  })\n}\n\nexport function assignCategoriesMapProp(tokenTypes: TokenType[]): void {\n  forEach(tokenTypes, (currTokType) => {\n    singleAssignCategoriesToksMap([], currTokType)\n  })\n}\n\nexport function singleAssignCategoriesToksMap(\n  path: TokenType[],\n  nextNode: TokenType\n): void {\n  forEach(path, (pathNode) => {\n    nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true\n  })\n\n  forEach(nextNode.CATEGORIES, (nextCategory) => {\n    const newPath = path.concat(nextNode)\n    // avoids infinite loops due to cyclic categories.\n    if (!contains(newPath, nextCategory)) {\n      singleAssignCategoriesToksMap(newPath, nextCategory)\n    }\n  })\n}\n\nexport function hasShortKeyProperty(tokType: TokenType): boolean {\n  return has(tokType, \"tokenTypeIdx\")\n}\n\nexport function hasCategoriesProperty(tokType: TokenType): boolean {\n  return has(tokType, \"CATEGORIES\")\n}\n\nexport function hasExtendingTokensTypesProperty(tokType: TokenType): boolean {\n  return has(tokType, \"categoryMatches\")\n}\n\nexport function hasExtendingTokensTypesMapProperty(\n  tokType: TokenType\n): boolean {\n  return has(tokType, \"categoryMatchesMap\")\n}\n\nexport function isTokenType(tokType: TokenType): boolean {\n  return has(tokType, \"tokenTypeIdx\")\n}\n", "import { ILexerErrorMessageProvider, IToken } from \"../../api\"\n\nexport const defaultLexerErrorProvider: ILexerErrorMessageProvider = {\n  buildUnableToPopLexerModeMessage(token: IToken): string {\n    return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`\n  },\n\n  buildUnexpectedCharactersMessage(\n    fullText: string,\n    startOffset: number,\n    length: number,\n    line?: number,\n    column?: number\n  ): string {\n    return (\n      `unexpected character: ->${fullText.charAt(\n        startOffset\n      )}<- at offset: ${startOffset},` + ` skipped ${length} characters.`\n    )\n  }\n}\n", "import {\n  analyzeTokenTypes,\n  charCodeToOptimizedIndex,\n  cloneEmptyGroups,\n  DEFAULT_MODE,\n  LineTerminatorOptimizedTester,\n  performRuntimeChecks,\n  performWarningRuntimeChecks,\n  SUPPORT_STICKY,\n  validatePatterns\n} from \"./lexer\"\nimport {\n  cloneArr,\n  cloneObj,\n  forEach,\n  IDENTITY,\n  isArray,\n  isEmpty,\n  isUndefined,\n  keys,\n  last,\n  map,\n  merge,\n  NOOP,\n  PRINT_WARNING,\n  reduce,\n  reject,\n  timer,\n  toFastProperties\n} from \"../utils/utils\"\nimport { augmentTokenTypes } from \"./tokens\"\nimport {\n  CustomPatternMatcherFunc,\n  ILexerConfig,\n  ILexerDefinitionError,\n  ILexingError,\n  IMultiModeLexerDefinition,\n  IToken,\n  TokenType\n} from \"../../api\"\nimport { defaultLexerErrorProvider } from \"../scan/lexer_errors_public\"\nimport { clearRegExpParserCache } from \"./reg_exp_parser\"\n\nexport interface ILexingResult {\n  tokens: IToken[]\n  groups: { [groupName: string]: IToken[] }\n  errors: ILexingError[]\n}\n\nexport enum LexerDefinitionErrorType {\n  MISSING_PATTERN,\n  INVALID_PATTERN,\n  EOI_ANCHOR_FOUND,\n  UNSUPPORTED_FLAGS_FOUND,\n  DUPLICATE_PATTERNS_FOUND,\n  INVALID_GROUP_TYPE_FOUND,\n  PUSH_MODE_DOES_NOT_EXIST,\n  MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n  MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n  MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n  LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n  SOI_ANCHOR_FOUND,\n  EMPTY_MATCH_PATTERN,\n  NO_LINE_BREAKS_FLAGS,\n  UNREACHABLE_PATTERN,\n  IDENTIFY_TERMINATOR,\n  CUSTOM_LINE_BREAK\n}\n\nexport interface IRegExpExec {\n  exec: CustomPatternMatcherFunc\n}\n\nconst DEFAULT_LEXER_CONFIG: ILexerConfig = {\n  deferDefinitionErrorsHandling: false,\n  positionTracking: \"full\",\n  lineTerminatorsPattern: /\\n|\\r\\n?/g,\n  lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n  ensureOptimizations: false,\n  safeMode: false,\n  errorMessageProvider: defaultLexerErrorProvider,\n  traceInitPerf: false,\n  skipValidations: false\n}\n\nObject.freeze(DEFAULT_LEXER_CONFIG)\n\nexport class Lexer {\n  public static SKIPPED =\n    \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\"\n\n  public static NA = /NOT_APPLICABLE/\n  public lexerDefinitionErrors: ILexerDefinitionError[] = []\n  public lexerDefinitionWarning: ILexerDefinitionError[] = []\n\n  protected patternIdxToConfig: any = {}\n  protected charCodeToPatternIdxToConfig: any = {}\n\n  protected modes: string[] = []\n  protected defaultMode: string\n  protected emptyGroups: { [groupName: string]: IToken } = {}\n\n  private config: ILexerConfig = undefined\n  private trackStartLines: boolean = true\n  private trackEndLines: boolean = true\n  private hasCustom: boolean = false\n  private canModeBeOptimized: any = {}\n\n  private traceInitPerf: boolean | number\n  private traceInitMaxIdent: number\n  private traceInitIndent: number\n\n  constructor(\n    protected lexerDefinition: TokenType[] | IMultiModeLexerDefinition,\n    config: ILexerConfig = DEFAULT_LEXER_CONFIG\n  ) {\n    if (typeof config === \"boolean\") {\n      throw Error(\n        \"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n          \"a boolean 2nd argument is no longer supported\"\n      )\n    }\n\n    // todo: defaults func?\n    this.config = merge(DEFAULT_LEXER_CONFIG, config)\n\n    const traceInitVal = this.config.traceInitPerf\n    if (traceInitVal === true) {\n      this.traceInitMaxIdent = Infinity\n      this.traceInitPerf = true\n    } else if (typeof traceInitVal === \"number\") {\n      this.traceInitMaxIdent = traceInitVal\n      this.traceInitPerf = true\n    }\n    this.traceInitIndent = -1\n\n    this.TRACE_INIT(\"Lexer Constructor\", () => {\n      let actualDefinition: IMultiModeLexerDefinition\n      let hasOnlySingleMode = true\n      this.TRACE_INIT(\"Lexer Config handling\", () => {\n        if (\n          this.config.lineTerminatorsPattern ===\n          DEFAULT_LEXER_CONFIG.lineTerminatorsPattern\n        ) {\n          // optimized built-in implementation for the defaults definition of lineTerminators\n          this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester\n        } else {\n          if (\n            this.config.lineTerminatorCharacters ===\n            DEFAULT_LEXER_CONFIG.lineTerminatorCharacters\n          ) {\n            throw Error(\n              \"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\"\n            )\n          }\n        }\n\n        if (config.safeMode && config.ensureOptimizations) {\n          throw Error(\n            '\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.'\n          )\n        }\n\n        this.trackStartLines = /full|onlyStart/i.test(\n          this.config.positionTracking\n        )\n        this.trackEndLines = /full/i.test(this.config.positionTracking)\n\n        // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n        if (isArray(lexerDefinition)) {\n          actualDefinition = <any>{ modes: {} }\n          actualDefinition.modes[DEFAULT_MODE] = cloneArr(\n            <TokenType[]>lexerDefinition\n          )\n          actualDefinition[DEFAULT_MODE] = DEFAULT_MODE\n        } else {\n          // no conversion needed, input should already be a IMultiModeLexerDefinition\n          hasOnlySingleMode = false\n          actualDefinition = cloneObj(\n            <IMultiModeLexerDefinition>lexerDefinition\n          )\n        }\n      })\n\n      if (this.config.skipValidations === false) {\n        this.TRACE_INIT(\"performRuntimeChecks\", () => {\n          this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(\n            performRuntimeChecks(\n              actualDefinition,\n              this.trackStartLines,\n              this.config.lineTerminatorCharacters\n            )\n          )\n        })\n\n        this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n          this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(\n            performWarningRuntimeChecks(\n              actualDefinition,\n              this.trackStartLines,\n              this.config.lineTerminatorCharacters\n            )\n          )\n        })\n      }\n\n      // for extra robustness to avoid throwing an none informative error message\n      actualDefinition.modes = actualDefinition.modes\n        ? actualDefinition.modes\n        : {}\n\n      // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n      // this transformation is to increase robustness in the case of partially invalid lexer definition.\n      forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n        actualDefinition.modes[currModeName] = reject<TokenType>(\n          currModeValue,\n          (currTokType) => isUndefined(currTokType)\n        )\n      })\n\n      let allModeNames = keys(actualDefinition.modes)\n\n      forEach(\n        actualDefinition.modes,\n        (currModDef: TokenType[], currModName) => {\n          this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n            this.modes.push(currModName)\n\n            if (this.config.skipValidations === false) {\n              this.TRACE_INIT(`validatePatterns`, () => {\n                this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(\n                  validatePatterns(<TokenType[]>currModDef, allModeNames)\n                )\n              })\n            }\n\n            // If definition errors were encountered, the analysis phase may fail unexpectedly/\n            // Considering a lexer with definition errors may never be used, there is no point\n            // to performing the analysis anyhow...\n            if (isEmpty(this.lexerDefinitionErrors)) {\n              augmentTokenTypes(currModDef)\n\n              let currAnalyzeResult\n              this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                  lineTerminatorCharacters: this.config\n                    .lineTerminatorCharacters,\n                  positionTracking: config.positionTracking,\n                  ensureOptimizations: config.ensureOptimizations,\n                  safeMode: config.safeMode,\n                  tracer: this.TRACE_INIT.bind(this)\n                })\n              })\n\n              this.patternIdxToConfig[currModName] =\n                currAnalyzeResult.patternIdxToConfig\n\n              this.charCodeToPatternIdxToConfig[currModName] =\n                currAnalyzeResult.charCodeToPatternIdxToConfig\n\n              this.emptyGroups = merge(\n                this.emptyGroups,\n                currAnalyzeResult.emptyGroups\n              )\n\n              this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom\n\n              this.canModeBeOptimized[currModName] =\n                currAnalyzeResult.canBeOptimized\n            }\n          })\n        }\n      )\n\n      this.defaultMode = actualDefinition.defaultMode\n\n      if (\n        !isEmpty(this.lexerDefinitionErrors) &&\n        !this.config.deferDefinitionErrorsHandling\n      ) {\n        let allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n          return error.message\n        })\n        let allErrMessagesString = allErrMessages.join(\n          \"-----------------------\\n\"\n        )\n        throw new Error(\n          \"Errors detected in definition of Lexer:\\n\" + allErrMessagesString\n        )\n      }\n\n      // Only print warning if there are no errors, This will avoid pl\n      forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n        PRINT_WARNING(warningDescriptor.message)\n      })\n\n      this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n        // Choose the relevant internal implementations for this specific parser.\n        // These implementations should be in-lined by the JavaScript engine\n        // to provide optimal performance in each scenario.\n        if (SUPPORT_STICKY) {\n          this.chopInput = <any>IDENTITY\n          this.match = this.matchWithTest\n        } else {\n          this.updateLastIndex = NOOP\n          this.match = this.matchWithExec\n        }\n\n        if (hasOnlySingleMode) {\n          this.handleModes = NOOP\n        }\n\n        if (this.trackStartLines === false) {\n          this.computeNewColumn = IDENTITY\n        }\n\n        if (this.trackEndLines === false) {\n          this.updateTokenEndLineColumnLocation = NOOP\n        }\n\n        if (/full/i.test(this.config.positionTracking)) {\n          this.createTokenInstance = this.createFullToken\n        } else if (/onlyStart/i.test(this.config.positionTracking)) {\n          this.createTokenInstance = this.createStartOnlyToken\n        } else if (/onlyOffset/i.test(this.config.positionTracking)) {\n          this.createTokenInstance = this.createOffsetOnlyToken\n        } else {\n          throw Error(\n            `Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`\n          )\n        }\n\n        if (this.hasCustom) {\n          this.addToken = this.addTokenUsingPush\n          this.handlePayload = this.handlePayloadWithCustom\n        } else {\n          this.addToken = this.addTokenUsingMemberAccess\n          this.handlePayload = this.handlePayloadNoCustom\n        }\n      })\n\n      this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n        const unOptimizedModes = reduce(\n          this.canModeBeOptimized,\n          (cannotBeOptimized, canBeOptimized, modeName) => {\n            if (canBeOptimized === false) {\n              cannotBeOptimized.push(modeName)\n            }\n            return cannotBeOptimized\n          },\n          []\n        )\n\n        if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n          throw Error(\n            `Lexer Modes: < ${unOptimizedModes.join(\n              \", \"\n            )} > cannot be optimized.\\n` +\n              '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n              \"\\t Or inspect the console log for details on how to resolve these issues.\"\n          )\n        }\n      })\n\n      this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n        clearRegExpParserCache()\n      })\n\n      this.TRACE_INIT(\"toFastProperties\", () => {\n        toFastProperties(this)\n      })\n    })\n  }\n\n  public tokenize(\n    text: string,\n    initialMode: string = this.defaultMode\n  ): ILexingResult {\n    if (!isEmpty(this.lexerDefinitionErrors)) {\n      let allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n        return error.message\n      })\n      let allErrMessagesString = allErrMessages.join(\n        \"-----------------------\\n\"\n      )\n      throw new Error(\n        \"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n          allErrMessagesString\n      )\n    }\n\n    let lexResult = this.tokenizeInternal(text, initialMode)\n\n    return lexResult\n  }\n\n  // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n  // This is intentional due to performance considerations.\n  private tokenizeInternal(text: string, initialMode: string): ILexingResult {\n    let i,\n      j,\n      matchAltImage,\n      longerAltIdx,\n      matchedImage,\n      payload,\n      altPayload,\n      imageLength,\n      group,\n      tokType,\n      newToken,\n      errLength,\n      droppedChar,\n      msg,\n      match\n    let orgText = text\n    let orgLength = orgText.length\n    let offset = 0\n    let matchedTokensIndex = 0\n    // initializing the tokensArray to the \"guessed\" size.\n    // guessing too little will still reduce the number of array re-sizes on pushes.\n    // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n    // but would still have a faster runtime by avoiding (All but one) array resizing.\n    let guessedNumberOfTokens = this.hasCustom\n      ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n      : Math.floor(text.length / 10)\n    let matchedTokens = new Array(guessedNumberOfTokens)\n    let errors: ILexingError[] = []\n    let line = this.trackStartLines ? 1 : undefined\n    let column = this.trackStartLines ? 1 : undefined\n    let groups: any = cloneEmptyGroups(this.emptyGroups)\n    let trackLines = this.trackStartLines\n    const lineTerminatorPattern = this.config.lineTerminatorsPattern\n\n    let currModePatternsLength = 0\n    let patternIdxToConfig = []\n    let currCharCodeToPatternIdxToConfig = []\n\n    let modeStack = []\n\n    const emptyArray = []\n    Object.freeze(emptyArray)\n    let getPossiblePatterns = undefined\n\n    function getPossiblePatternsSlow() {\n      return patternIdxToConfig\n    }\n\n    function getPossiblePatternsOptimized(charCode) {\n      const optimizedCharIdx = charCodeToOptimizedIndex(charCode)\n      const possiblePatterns =\n        currCharCodeToPatternIdxToConfig[optimizedCharIdx]\n      if (possiblePatterns === undefined) {\n        return emptyArray\n      } else {\n        return possiblePatterns\n      }\n    }\n\n    let pop_mode = (popToken) => {\n      // TODO: perhaps avoid this error in the edge case there is no more input?\n      if (\n        modeStack.length === 1 &&\n        // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n        // So no error should occur.\n        popToken.tokenType.PUSH_MODE === undefined\n      ) {\n        // if we try to pop the last mode there lexer will no longer have ANY mode.\n        // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n        let msg = this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(\n          popToken\n        )\n\n        errors.push({\n          offset: popToken.startOffset,\n          line:\n            popToken.startLine !== undefined ? popToken.startLine : undefined,\n          column:\n            popToken.startColumn !== undefined\n              ? popToken.startColumn\n              : undefined,\n          length: popToken.image.length,\n          message: msg\n        })\n      } else {\n        modeStack.pop()\n        let newMode = last(modeStack)\n        patternIdxToConfig = this.patternIdxToConfig[newMode]\n        currCharCodeToPatternIdxToConfig = this.charCodeToPatternIdxToConfig[\n          newMode\n        ]\n        currModePatternsLength = patternIdxToConfig.length\n        const modeCanBeOptimized =\n          this.canModeBeOptimized[newMode] && this.config.safeMode === false\n\n        if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n          getPossiblePatterns = getPossiblePatternsOptimized\n        } else {\n          getPossiblePatterns = getPossiblePatternsSlow\n        }\n      }\n    }\n\n    function push_mode(newMode) {\n      modeStack.push(newMode)\n      currCharCodeToPatternIdxToConfig = this.charCodeToPatternIdxToConfig[\n        newMode\n      ]\n\n      patternIdxToConfig = this.patternIdxToConfig[newMode]\n      currModePatternsLength = patternIdxToConfig.length\n\n      currModePatternsLength = patternIdxToConfig.length\n      const modeCanBeOptimized =\n        this.canModeBeOptimized[newMode] && this.config.safeMode === false\n\n      if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n        getPossiblePatterns = getPossiblePatternsOptimized\n      } else {\n        getPossiblePatterns = getPossiblePatternsSlow\n      }\n    }\n\n    // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n    // seem to matter performance wise.\n    push_mode.call(this, initialMode)\n\n    let currConfig\n\n    while (offset < orgLength) {\n      matchedImage = null\n\n      let nextCharCode = orgText.charCodeAt(offset)\n      const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode)\n      let chosenPatternsLength = chosenPatternIdxToConfig.length\n\n      for (i = 0; i < chosenPatternsLength; i++) {\n        currConfig = chosenPatternIdxToConfig[i]\n        let currPattern = currConfig.pattern\n        payload = null\n\n        // manually in-lined because > 600 chars won't be in-lined in V8\n        let singleCharCode = currConfig.short\n        if (singleCharCode !== false) {\n          if (nextCharCode === singleCharCode) {\n            // single character string\n            matchedImage = currPattern\n          }\n        } else if (currConfig.isCustom === true) {\n          match = currPattern.exec(orgText, offset, matchedTokens, groups)\n          if (match !== null) {\n            matchedImage = match[0]\n            if (match.payload !== undefined) {\n              payload = match.payload\n            }\n          } else {\n            matchedImage = null\n          }\n        } else {\n          this.updateLastIndex(currPattern, offset)\n          matchedImage = this.match(currPattern, text, offset)\n        }\n\n        if (matchedImage !== null) {\n          // even though this pattern matched we must try a another longer alternative.\n          // this can be used to prioritize keywords over identifiers\n          longerAltIdx = currConfig.longerAlt\n          if (longerAltIdx !== undefined) {\n            // TODO: micro optimize, avoid extra prop access\n            // by saving/linking longerAlt on the original config?\n            let longerAltConfig = patternIdxToConfig[longerAltIdx]\n            let longerAltPattern = longerAltConfig.pattern\n            altPayload = null\n\n            // single Char can never be a longer alt so no need to test it.\n            // manually in-lined because > 600 chars won't be in-lined in V8\n            if (longerAltConfig.isCustom === true) {\n              match = longerAltPattern.exec(\n                orgText,\n                offset,\n                matchedTokens,\n                groups\n              )\n              if (match !== null) {\n                matchAltImage = match[0]\n                if (match.payload !== undefined) {\n                  altPayload = match.payload\n                }\n              } else {\n                matchAltImage = null\n              }\n            } else {\n              this.updateLastIndex(longerAltPattern, offset)\n              matchAltImage = this.match(longerAltPattern, text, offset)\n            }\n\n            if (matchAltImage && matchAltImage.length > matchedImage.length) {\n              matchedImage = matchAltImage\n              payload = altPayload\n              currConfig = longerAltConfig\n            }\n          }\n          break\n        }\n      }\n\n      // successful match\n      if (matchedImage !== null) {\n        imageLength = matchedImage.length\n        group = currConfig.group\n        if (group !== undefined) {\n          tokType = currConfig.tokenTypeIdx\n          // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n          // createFullToken method\n          newToken = this.createTokenInstance(\n            matchedImage,\n            offset,\n            tokType,\n            currConfig.tokenType,\n            line,\n            column,\n            imageLength\n          )\n\n          this.handlePayload(newToken, payload)\n\n          // TODO: optimize NOOP in case there are no special groups?\n          if (group === false) {\n            matchedTokensIndex = this.addToken(\n              matchedTokens,\n              matchedTokensIndex,\n              newToken\n            )\n          } else {\n            groups[group].push(newToken)\n          }\n        }\n        text = this.chopInput(text, imageLength)\n        offset = offset + imageLength\n\n        // TODO: with newlines the column may be assigned twice\n        column = this.computeNewColumn(column, imageLength)\n\n        if (trackLines === true && currConfig.canLineTerminator === true) {\n          let numOfLTsInMatch = 0\n          let foundTerminator\n          let lastLTEndOffset\n          lineTerminatorPattern.lastIndex = 0\n          do {\n            foundTerminator = lineTerminatorPattern.test(matchedImage)\n            if (foundTerminator === true) {\n              lastLTEndOffset = lineTerminatorPattern.lastIndex - 1\n              numOfLTsInMatch++\n            }\n          } while (foundTerminator === true)\n\n          if (numOfLTsInMatch !== 0) {\n            line = line + numOfLTsInMatch\n            column = imageLength - lastLTEndOffset\n            this.updateTokenEndLineColumnLocation(\n              newToken,\n              group,\n              lastLTEndOffset,\n              numOfLTsInMatch,\n              line,\n              column,\n              imageLength\n            )\n          }\n        }\n        // will be NOOP if no modes present\n        this.handleModes(currConfig, pop_mode, push_mode, newToken)\n      } else {\n        // error recovery, drop characters until we identify a valid token's start point\n        let errorStartOffset = offset\n        let errorLine = line\n        let errorColumn = column\n        let foundResyncPoint = false\n        while (!foundResyncPoint && offset < orgLength) {\n          // drop chars until we succeed in matching something\n          droppedChar = orgText.charCodeAt(offset)\n          // Identity Func (when sticky flag is enabled)\n          text = this.chopInput(text, 1)\n          offset++\n          for (j = 0; j < currModePatternsLength; j++) {\n            let currConfig = patternIdxToConfig[j]\n            let currPattern = currConfig.pattern\n\n            // manually in-lined because > 600 chars won't be in-lined in V8\n            let singleCharCode = currConfig.short\n            if (singleCharCode !== false) {\n              if (orgText.charCodeAt(offset) === singleCharCode) {\n                // single character string\n                foundResyncPoint = true\n              }\n            } else if (currConfig.isCustom === true) {\n              foundResyncPoint =\n                currPattern.exec(orgText, offset, matchedTokens, groups) !==\n                null\n            } else {\n              this.updateLastIndex(currPattern, offset)\n              foundResyncPoint = currPattern.exec(text) !== null\n            }\n\n            if (foundResyncPoint === true) {\n              break\n            }\n          }\n        }\n\n        errLength = offset - errorStartOffset\n        // at this point we either re-synced or reached the end of the input text\n        msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(\n          orgText,\n          errorStartOffset,\n          errLength,\n          errorLine,\n          errorColumn\n        )\n        errors.push({\n          offset: errorStartOffset,\n          line: errorLine,\n          column: errorColumn,\n          length: errLength,\n          message: msg\n        })\n      }\n    }\n\n    // if we do have custom patterns which push directly into the\n    // TODO: custom tokens should not push directly??\n    if (!this.hasCustom) {\n      // if we guessed a too large size for the tokens array this will shrink it to the right size.\n      matchedTokens.length = matchedTokensIndex\n    }\n\n    return {\n      tokens: matchedTokens,\n      groups: groups,\n      errors: errors\n    }\n  }\n\n  private handleModes(config, pop_mode, push_mode, newToken) {\n    if (config.pop === true) {\n      // need to save the PUSH_MODE property as if the mode is popped\n      // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n      let pushMode = config.push\n      pop_mode(newToken)\n      if (pushMode !== undefined) {\n        push_mode.call(this, pushMode)\n      }\n    } else if (config.push !== undefined) {\n      push_mode.call(this, config.push)\n    }\n  }\n\n  private chopInput(text, length): string {\n    return text.substring(length)\n  }\n\n  private updateLastIndex(regExp, newLastIndex): void {\n    regExp.lastIndex = newLastIndex\n  }\n\n  // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n  private updateTokenEndLineColumnLocation(\n    newToken,\n    group,\n    lastLTIdx,\n    numOfLTsInMatch,\n    line,\n    column,\n    imageLength\n  ): void {\n    let lastCharIsLT, fixForEndingInLT\n    if (group !== undefined) {\n      // a none skipped multi line Token, need to update endLine/endColumn\n      lastCharIsLT = lastLTIdx === imageLength - 1\n      fixForEndingInLT = lastCharIsLT ? -1 : 0\n      if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n        // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n        newToken.endLine = line + fixForEndingInLT\n        // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n        // inclusive to exclusive range.\n        newToken.endColumn = column - 1 + -fixForEndingInLT\n      }\n      // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n    }\n  }\n\n  private computeNewColumn(oldColumn, imageLength) {\n    return oldColumn + imageLength\n  }\n\n  // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.\n  /* istanbul ignore next - place holder */\n  private createTokenInstance(...args: any[]): IToken {\n    return null\n  }\n\n  private createOffsetOnlyToken(image, startOffset, tokenTypeIdx, tokenType) {\n    return {\n      image,\n      startOffset,\n      tokenTypeIdx,\n      tokenType\n    }\n  }\n\n  private createStartOnlyToken(\n    image,\n    startOffset,\n    tokenTypeIdx,\n    tokenType,\n    startLine,\n    startColumn\n  ) {\n    return {\n      image,\n      startOffset,\n      startLine,\n      startColumn,\n      tokenTypeIdx,\n      tokenType\n    }\n  }\n\n  private createFullToken(\n    image,\n    startOffset,\n    tokenTypeIdx,\n    tokenType,\n    startLine,\n    startColumn,\n    imageLength\n  ) {\n    return {\n      image,\n      startOffset,\n      endOffset: startOffset + imageLength - 1,\n      startLine,\n      endLine: startLine,\n      startColumn,\n      endColumn: startColumn + imageLength - 1,\n      tokenTypeIdx,\n      tokenType\n    }\n  }\n\n  // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.\n  /* istanbul ignore next - place holder */\n  private addToken(tokenVector, index, tokenToAdd): number {\n    return 666\n  }\n\n  private addTokenUsingPush(tokenVector, index, tokenToAdd): number {\n    tokenVector.push(tokenToAdd)\n    return index\n  }\n\n  private addTokenUsingMemberAccess(tokenVector, index, tokenToAdd): number {\n    tokenVector[index] = tokenToAdd\n    index++\n    return index\n  }\n\n  // Place holder, will be replaced by the correct variant according to the hasCustom flag option at runtime.\n  /* istanbul ignore next - place holder */\n  private handlePayload(token: IToken, payload: any): void {}\n\n  private handlePayloadNoCustom(token: IToken, payload: any): void {}\n\n  private handlePayloadWithCustom(token: IToken, payload: any): void {\n    if (payload !== null) {\n      token.payload = payload\n    }\n  }\n\n  /* istanbul ignore next - place holder to be replaced with chosen alternative at runtime */\n  private match(pattern: RegExp, text: string, offset?: number): string {\n    return null\n  }\n\n  private matchWithTest(pattern: RegExp, text: string, offset: number): string {\n    let found = pattern.test(text)\n    if (found === true) {\n      return text.substring(offset, pattern.lastIndex)\n    }\n    return null\n  }\n\n  private matchWithExec(pattern, text): string {\n    let regExpArray = pattern.exec(text)\n    return regExpArray !== null ? regExpArray[0] : regExpArray\n  }\n\n  // Duplicated from the parser's perf trace trait to allow future extraction\n  // of the lexer to a separate package.\n  TRACE_INIT<T>(phaseDesc: string, phaseImpl: () => T): T {\n    // No need to optimize this using NOOP pattern because\n    // It is not called in a hot spot...\n    if (this.traceInitPerf === true) {\n      this.traceInitIndent++\n      const indent = new Array(this.traceInitIndent + 1).join(\"\\t\")\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        console.log(`${indent}--> <${phaseDesc}>`)\n      }\n      const { time, value } = timer(phaseImpl)\n      /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n      const traceMethod = time > 10 ? console.warn : console.log\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`)\n      }\n      this.traceInitIndent--\n      return value\n    } else {\n      return phaseImpl()\n    }\n  }\n}\n", "import { has, isString, isUndefined } from \"../utils/utils\"\nimport { Lexer } from \"./lexer_public\"\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens\"\nimport { IToken, ITokenConfig, TokenType } from \"../../api\"\n\nexport function tokenLabel(tokType: TokenType): string {\n  if (hasTokenLabel(tokType)) {\n    return tokType.LABEL\n  } else {\n    return tokType.name\n  }\n}\n\nexport function tokenName(tokType: TokenType): string {\n  return tokType.name\n}\n\nexport function hasTokenLabel(obj: TokenType): boolean {\n  return isString((<any>obj).LABEL) && (<any>obj).LABEL !== \"\"\n}\n\nconst PARENT = \"parent\"\nconst CATEGORIES = \"categories\"\nconst LABEL = \"label\"\nconst GROUP = \"group\"\nconst PUSH_MODE = \"push_mode\"\nconst POP_MODE = \"pop_mode\"\nconst LONGER_ALT = \"longer_alt\"\nconst LINE_BREAKS = \"line_breaks\"\nconst START_CHARS_HINT = \"start_chars_hint\"\n\nexport function createToken(config: ITokenConfig): TokenType {\n  return createTokenInternal(config)\n}\n\nfunction createTokenInternal(config: ITokenConfig): TokenType {\n  let pattern = config.pattern\n\n  let tokenType: TokenType = <any>{}\n  tokenType.name = config.name\n\n  if (!isUndefined(pattern)) {\n    tokenType.PATTERN = pattern\n  }\n\n  if (has(config, PARENT)) {\n    throw (\n      \"The parent property is no longer supported.\\n\" +\n      \"See: https://github.com/SAP/chevrotain/issues/564#issuecomment-349062346 for details.\"\n    )\n  }\n\n  if (has(config, CATEGORIES)) {\n    // casting to ANY as this will be fixed inside `augmentTokenTypes``\n    tokenType.CATEGORIES = <any>config[CATEGORIES]\n  }\n\n  augmentTokenTypes([tokenType])\n\n  if (has(config, LABEL)) {\n    tokenType.LABEL = config[LABEL]\n  }\n\n  if (has(config, GROUP)) {\n    tokenType.GROUP = config[GROUP]\n  }\n\n  if (has(config, POP_MODE)) {\n    tokenType.POP_MODE = config[POP_MODE]\n  }\n\n  if (has(config, PUSH_MODE)) {\n    tokenType.PUSH_MODE = config[PUSH_MODE]\n  }\n\n  if (has(config, LONGER_ALT)) {\n    tokenType.LONGER_ALT = config[LONGER_ALT]\n  }\n\n  if (has(config, LINE_BREAKS)) {\n    tokenType.LINE_BREAKS = config[LINE_BREAKS]\n  }\n\n  if (has(config, START_CHARS_HINT)) {\n    tokenType.START_CHARS_HINT = config[START_CHARS_HINT]\n  }\n\n  return tokenType\n}\n\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA })\naugmentTokenTypes([EOF])\n\nexport function createTokenInstance(\n  tokType: TokenType,\n  image: string,\n  startOffset: number,\n  endOffset: number,\n  startLine: number,\n  endLine: number,\n  startColumn: number,\n  endColumn: number\n): IToken {\n  return {\n    image,\n    startOffset,\n    endOffset,\n    startLine,\n    endLine,\n    startColumn,\n    endColumn,\n    tokenTypeIdx: (<any>tokType).tokenTypeIdx,\n    tokenType: tokType\n  }\n}\n\nexport function tokenMatcher(token: IToken, tokType: TokenType): boolean {\n  return tokenStructuredMatcher(token, tokType)\n}\n", "import { assign, forEach, isRegExp, map, pick } from \"../../../utils/utils\"\nimport { tokenLabel } from \"../../../scan/tokens_public\"\nimport {\n  IGASTVisitor,\n  IProduction,\n  IProductionWithOccurrence,\n  ISerializedGast,\n  TokenType\n} from \"../../../../api\"\n\nexport abstract class AbstractProduction<T extends IProduction = IProduction>\n  implements IProduction {\n  public get definition(): T[] {\n    return this._definition\n  }\n  public set definition(value: T[]) {\n    this._definition = value\n  }\n\n  constructor(protected _definition: T[]) {}\n\n  accept(visitor: IGASTVisitor): void {\n    visitor.visit(this)\n    forEach(this.definition, (prod) => {\n      prod.accept(visitor)\n    })\n  }\n}\n\nexport class NonTerminal\n  extends AbstractProduction\n  implements IProductionWithOccurrence {\n  public nonTerminalName: string\n  public referencedRule: Rule\n  public idx: number = 1\n\n  constructor(options: {\n    nonTerminalName: string\n    referencedRule?: Rule\n    idx?: number\n  }) {\n    super([])\n    assign(\n      this,\n      pick(options, (v) => v !== undefined)\n    )\n  }\n\n  set definition(definition: IProduction[]) {\n    // immutable\n  }\n\n  get definition(): IProduction[] {\n    if (this.referencedRule !== undefined) {\n      return this.referencedRule.definition\n    }\n    return []\n  }\n\n  accept(visitor: IGASTVisitor): void {\n    visitor.visit(this)\n    // don't visit children of a reference, we will get cyclic infinite loops if we do so\n  }\n}\n\nexport class Rule extends AbstractProduction {\n  public name: string\n  public orgText: string = \"\"\n\n  constructor(options: {\n    name: string\n    definition: IProduction[]\n    orgText?: string\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pick(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class Alternative extends AbstractProduction {\n  public ignoreAmbiguities: boolean = false\n\n  constructor(options: {\n    definition: IProduction[]\n    ignoreAmbiguities?: boolean\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pick(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class Option\n  extends AbstractProduction\n  implements IProductionWithOccurrence {\n  public idx: number = 1\n  public maxLookahead?: number\n\n  constructor(options: {\n    definition: IProduction[]\n    idx?: number\n    maxLookahead?: number\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pick(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class RepetitionMandatory\n  extends AbstractProduction\n  implements IProductionWithOccurrence {\n  public idx: number = 1\n  public maxLookahead?: number\n\n  constructor(options: {\n    definition: IProduction[]\n    idx?: number\n    maxLookahead?: number\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pick(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class RepetitionMandatoryWithSeparator\n  extends AbstractProduction\n  implements IProductionWithOccurrence {\n  public separator: TokenType\n  public idx: number = 1\n\n  constructor(options: {\n    definition: IProduction[]\n    separator: TokenType\n    idx?: number\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pick(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class Repetition\n  extends AbstractProduction\n  implements IProductionWithOccurrence {\n  public separator: TokenType\n  public idx: number = 1\n  public maxLookahead?: number\n\n  constructor(options: {\n    definition: IProduction[]\n    idx?: number\n    maxLookahead?: number\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pick(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class RepetitionWithSeparator\n  extends AbstractProduction\n  implements IProductionWithOccurrence {\n  public separator: TokenType\n  public idx: number = 1\n\n  constructor(options: {\n    definition: IProduction[]\n    separator: TokenType\n    idx?: number\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pick(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class Alternation\n  extends AbstractProduction<Alternative>\n  implements IProductionWithOccurrence {\n  public idx: number = 1\n  public ignoreAmbiguities: boolean = false\n  public hasPredicates: boolean = false\n  public maxLookahead?: number\n\n  public get definition(): Alternative[] {\n    return this._definition\n  }\n  public set definition(value: Alternative[]) {\n    this._definition = value\n  }\n\n  constructor(options: {\n    definition: Alternative[]\n    idx?: number\n    ignoreAmbiguities?: boolean\n    hasPredicates?: boolean\n    maxLookahead?: number\n  }) {\n    super(options.definition)\n    assign(\n      this,\n      pick(options, (v) => v !== undefined)\n    )\n  }\n}\n\nexport class Terminal implements IProductionWithOccurrence {\n  public terminalType: TokenType\n  public idx: number = 1\n\n  constructor(options: { terminalType: TokenType; idx?: number }) {\n    assign(\n      this,\n      pick(options, (v) => v !== undefined)\n    )\n  }\n\n  accept(visitor: IGASTVisitor): void {\n    visitor.visit(this)\n  }\n}\n\nexport interface ISerializedBasic extends ISerializedGast {\n  type:\n    | \"Alternative\"\n    | \"Option\"\n    | \"RepetitionMandatory\"\n    | \"Repetition\"\n    | \"Alternation\"\n  idx?: number\n}\n\nexport interface ISerializedGastRule extends ISerializedGast {\n  type: \"Rule\"\n  name: string\n  orgText: string\n}\n\nexport interface ISerializedNonTerminal extends ISerializedGast {\n  type: \"NonTerminal\"\n  name: string\n  idx: number\n}\n\nexport interface ISerializedTerminal extends ISerializedGast {\n  type: \"Terminal\"\n  name: string\n  label?: string\n  pattern?: string\n  idx: number\n}\n\nexport interface ISerializedTerminalWithSeparator extends ISerializedGast {\n  type: \"RepetitionMandatoryWithSeparator\" | \"RepetitionWithSeparator\"\n  idx: number\n  separator: ISerializedTerminal\n}\n\nexport type ISerializedGastAny =\n  | ISerializedBasic\n  | ISerializedGastRule\n  | ISerializedNonTerminal\n  | ISerializedTerminal\n  | ISerializedTerminalWithSeparator\n\nexport function serializeGrammar(topRules: Rule[]): ISerializedGast[] {\n  return map(topRules, serializeProduction)\n}\n\nexport function serializeProduction(node: IProduction): ISerializedGast {\n  function convertDefinition(definition: IProduction[]): ISerializedGast[] {\n    return map(definition, serializeProduction)\n  }\n  /* istanbul ignore else */\n  if (node instanceof NonTerminal) {\n    return <ISerializedNonTerminal>{\n      type: \"NonTerminal\",\n      name: node.nonTerminalName,\n      idx: node.idx\n    }\n  } else if (node instanceof Alternative) {\n    return <ISerializedBasic>{\n      type: \"Alternative\",\n      definition: convertDefinition(node.definition)\n    }\n  } else if (node instanceof Option) {\n    return <ISerializedBasic>{\n      type: \"Option\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition)\n    }\n  } else if (node instanceof RepetitionMandatory) {\n    return <ISerializedBasic>{\n      type: \"RepetitionMandatory\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition)\n    }\n  } else if (node instanceof RepetitionMandatoryWithSeparator) {\n    return <ISerializedTerminalWithSeparator>{\n      type: \"RepetitionMandatoryWithSeparator\",\n      idx: node.idx,\n      separator: <ISerializedTerminal>(\n        serializeProduction(new Terminal({ terminalType: node.separator }))\n      ),\n      definition: convertDefinition(node.definition)\n    }\n  } else if (node instanceof RepetitionWithSeparator) {\n    return <ISerializedTerminalWithSeparator>{\n      type: \"RepetitionWithSeparator\",\n      idx: node.idx,\n      separator: <ISerializedTerminal>(\n        serializeProduction(new Terminal({ terminalType: node.separator }))\n      ),\n      definition: convertDefinition(node.definition)\n    }\n  } else if (node instanceof Repetition) {\n    return <ISerializedBasic>{\n      type: \"Repetition\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition)\n    }\n  } else if (node instanceof Alternation) {\n    return <ISerializedBasic>{\n      type: \"Alternation\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition)\n    }\n  } else if (node instanceof Terminal) {\n    let serializedTerminal = <ISerializedTerminal>{\n      type: \"Terminal\",\n      name: node.terminalType.name,\n      label: tokenLabel(node.terminalType),\n      idx: node.idx\n    }\n\n    let pattern = node.terminalType.PATTERN\n    if (node.terminalType.PATTERN) {\n      serializedTerminal.pattern = isRegExp(pattern)\n        ? (<any>pattern).source\n        : pattern\n    }\n\n    return serializedTerminal\n  } else if (node instanceof Rule) {\n    return <ISerializedGastRule>{\n      type: \"Rule\",\n      name: node.name,\n      orgText: node.orgText,\n      definition: convertDefinition(node.definition)\n    }\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n", "import { drop, forEach } from \"../../utils/utils\"\nimport {\n  AbstractProduction,\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Terminal\n} from \"./gast/gast_public\"\nimport { IProduction } from \"../../../api\"\n\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport abstract class RestWalker {\n  walk(prod: AbstractProduction, prevRest: any[] = []): void {\n    forEach(prod.definition, (subProd: IProduction, index) => {\n      let currRest = drop(prod.definition, index + 1)\n      /* istanbul ignore else */\n      if (subProd instanceof NonTerminal) {\n        this.walkProdRef(subProd, currRest, prevRest)\n      } else if (subProd instanceof Terminal) {\n        this.walkTerminal(subProd, currRest, prevRest)\n      } else if (subProd instanceof Alternative) {\n        this.walkFlat(subProd, currRest, prevRest)\n      } else if (subProd instanceof Option) {\n        this.walkOption(subProd, currRest, prevRest)\n      } else if (subProd instanceof RepetitionMandatory) {\n        this.walkAtLeastOne(subProd, currRest, prevRest)\n      } else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n        this.walkAtLeastOneSep(subProd, currRest, prevRest)\n      } else if (subProd instanceof RepetitionWithSeparator) {\n        this.walkManySep(subProd, currRest, prevRest)\n      } else if (subProd instanceof Repetition) {\n        this.walkMany(subProd, currRest, prevRest)\n      } else if (subProd instanceof Alternation) {\n        this.walkOr(subProd, currRest, prevRest)\n      } else {\n        throw Error(\"non exhaustive match\")\n      }\n    })\n  }\n\n  walkTerminal(\n    terminal: Terminal,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {}\n\n  walkProdRef(\n    refProd: NonTerminal,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {}\n\n  walkFlat(\n    flatProd: Alternative,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // ABCDEF => after the D the rest is EF\n    let fullOrRest = currRest.concat(prevRest)\n    this.walk(flatProd, <any>fullOrRest)\n  }\n\n  walkOption(\n    optionProd: Option,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // ABC(DE)?F => after the (DE)? the rest is F\n    let fullOrRest = currRest.concat(prevRest)\n    this.walk(optionProd, <any>fullOrRest)\n  }\n\n  walkAtLeastOne(\n    atLeastOneProd: RepetitionMandatory,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n    let fullAtLeastOneRest: IProduction[] = [\n      new Option({ definition: atLeastOneProd.definition })\n    ].concat(<any>currRest, <any>prevRest)\n    this.walk(atLeastOneProd, fullAtLeastOneRest)\n  }\n\n  walkAtLeastOneSep(\n    atLeastOneSepProd: RepetitionMandatoryWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n    let fullAtLeastOneSepRest = restForRepetitionWithSeparator(\n      atLeastOneSepProd,\n      currRest,\n      prevRest\n    )\n    this.walk(atLeastOneSepProd, fullAtLeastOneSepRest)\n  }\n\n  walkMany(\n    manyProd: Repetition,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n    let fullManyRest: IProduction[] = [\n      new Option({ definition: manyProd.definition })\n    ].concat(<any>currRest, <any>prevRest)\n    this.walk(manyProd, fullManyRest)\n  }\n\n  walkManySep(\n    manySepProd: RepetitionWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n    let fullManySepRest = restForRepetitionWithSeparator(\n      manySepProd,\n      currRest,\n      prevRest\n    )\n    this.walk(manySepProd, fullManySepRest)\n  }\n\n  walkOr(\n    orProd: Alternation,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n    let fullOrRest = currRest.concat(prevRest)\n    // walk all different alternatives\n    forEach(orProd.definition, (alt) => {\n      // wrapping each alternative in a single definition wrapper\n      // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n      // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n      let prodWrapper = new Alternative({ definition: [alt] })\n      this.walk(prodWrapper, <any>fullOrRest)\n    })\n  }\n}\n\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n  let repSepRest = [\n    new Option({\n      definition: [new Terminal({ terminalType: repSepProd.separator })].concat(\n        repSepProd.definition\n      )\n    })\n  ]\n  let fullRepSepRest: IProduction[] = repSepRest.concat(\n    <any>currRest,\n    <any>prevRest\n  )\n  return fullRepSepRest\n}\n", "import {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"./gast_public\"\nimport { IProduction } from \"../../../../api\"\n\nexport abstract class GAstVisitor {\n  public visit(node: IProduction): any {\n    const nodeAny: any = node\n    switch (nodeAny.constructor) {\n      case NonTerminal:\n        return this.visitNonTerminal(nodeAny)\n      case Alternative:\n        return this.visitAlternative(nodeAny)\n      case Option:\n        return this.visitOption(nodeAny)\n      case RepetitionMandatory:\n        return this.visitRepetitionMandatory(nodeAny)\n      case RepetitionMandatoryWithSeparator:\n        return this.visitRepetitionMandatoryWithSeparator(nodeAny)\n      case RepetitionWithSeparator:\n        return this.visitRepetitionWithSeparator(nodeAny)\n      case Repetition:\n        return this.visitRepetition(nodeAny)\n      case Alternation:\n        return this.visitAlternation(nodeAny)\n      case Terminal:\n        return this.visitTerminal(nodeAny)\n      case Rule:\n        return this.visitRule(nodeAny)\n      /* istanbul ignore next */\n      default:\n        throw Error(\"non exhaustive match\")\n    }\n  }\n\n  public visitNonTerminal(node: NonTerminal): any {}\n\n  public visitAlternative(node: Alternative): any {}\n\n  public visitOption(node: Option): any {}\n\n  public visitRepetition(node: Repetition): any {}\n\n  public visitRepetitionMandatory(node: RepetitionMandatory): any {}\n\n  public visitRepetitionMandatoryWithSeparator(\n    node: RepetitionMandatoryWithSeparator\n  ): any {}\n\n  public visitRepetitionWithSeparator(node: RepetitionWithSeparator): any {}\n\n  public visitAlternation(node: Alternation): any {}\n\n  public visitTerminal(node: Terminal): any {}\n\n  public visitRule(node: Rule): any {}\n}\n", "import { contains, every, has, some } from \"../../../utils/utils\"\nimport {\n  AbstractProduction,\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"./gast_public\"\nimport { GAstVisitor } from \"./gast_visitor_public\"\nimport { IProduction, IProductionWithOccurrence } from \"../../../../api\"\n\nexport function isSequenceProd(prod: IProduction): boolean {\n  return (\n    prod instanceof Alternative ||\n    prod instanceof Option ||\n    prod instanceof Repetition ||\n    prod instanceof RepetitionMandatory ||\n    prod instanceof RepetitionMandatoryWithSeparator ||\n    prod instanceof RepetitionWithSeparator ||\n    prod instanceof Terminal ||\n    prod instanceof Rule\n  )\n}\n\nexport function isOptionalProd(\n  prod: IProduction,\n  alreadyVisited: NonTerminal[] = []\n): boolean {\n  let isDirectlyOptional =\n    prod instanceof Option ||\n    prod instanceof Repetition ||\n    prod instanceof RepetitionWithSeparator\n  if (isDirectlyOptional) {\n    return true\n  }\n\n  // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n  // empty optional top rule\n  // may be indirectly optional ((A?B?C?) | (D?E?F?))\n  if (prod instanceof Alternation) {\n    // for OR its enough for just one of the alternatives to be optional\n    return some((<Alternation>prod).definition, (subProd: IProduction) => {\n      return isOptionalProd(subProd, alreadyVisited)\n    })\n  } else if (prod instanceof NonTerminal && contains(alreadyVisited, prod)) {\n    // avoiding stack overflow due to infinite recursion\n    return false\n  } else if (prod instanceof AbstractProduction) {\n    if (prod instanceof NonTerminal) {\n      alreadyVisited.push(prod)\n    }\n    return every(\n      (<AbstractProduction>prod).definition,\n      (subProd: IProduction) => {\n        return isOptionalProd(subProd, alreadyVisited)\n      }\n    )\n  } else {\n    return false\n  }\n}\n\nexport function isBranchingProd(prod: IProduction): boolean {\n  return prod instanceof Alternation\n}\n\nexport function getProductionDslName(prod: IProductionWithOccurrence): string {\n  /* istanbul ignore else */\n  if (prod instanceof NonTerminal) {\n    return \"SUBRULE\"\n  } else if (prod instanceof Option) {\n    return \"OPTION\"\n  } else if (prod instanceof Alternation) {\n    return \"OR\"\n  } else if (prod instanceof RepetitionMandatory) {\n    return \"AT_LEAST_ONE\"\n  } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n    return \"AT_LEAST_ONE_SEP\"\n  } else if (prod instanceof RepetitionWithSeparator) {\n    return \"MANY_SEP\"\n  } else if (prod instanceof Repetition) {\n    return \"MANY\"\n  } else if (prod instanceof Terminal) {\n    return \"CONSUME\"\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n\nexport class DslMethodsCollectorVisitor extends GAstVisitor {\n  // A minus is never valid in an identifier name\n  public separator = \"-\"\n  public dslMethods = {\n    option: [],\n    alternation: [],\n    repetition: [],\n    repetitionWithSeparator: [],\n    repetitionMandatory: [],\n    repetitionMandatoryWithSeparator: []\n  }\n\n  reset() {\n    this.dslMethods = {\n      option: [],\n      alternation: [],\n      repetition: [],\n      repetitionWithSeparator: [],\n      repetitionMandatory: [],\n      repetitionMandatoryWithSeparator: []\n    }\n  }\n\n  public visitTerminal(terminal: Terminal): void {\n    const key = terminal.terminalType.name + this.separator + \"Terminal\"\n    if (!has(this.dslMethods, key)) {\n      this.dslMethods[key] = []\n    }\n    this.dslMethods[key].push(terminal)\n  }\n\n  public visitNonTerminal(subrule: NonTerminal): void {\n    const key = subrule.nonTerminalName + this.separator + \"Terminal\"\n    if (!has(this.dslMethods, key)) {\n      this.dslMethods[key] = []\n    }\n    this.dslMethods[key].push(subrule)\n  }\n\n  public visitOption(option: Option): void {\n    this.dslMethods.option.push(option)\n  }\n\n  public visitRepetitionWithSeparator(manySep: RepetitionWithSeparator): void {\n    this.dslMethods.repetitionWithSeparator.push(manySep)\n  }\n\n  public visitRepetitionMandatory(atLeastOne: RepetitionMandatory): void {\n    this.dslMethods.repetitionMandatory.push(atLeastOne)\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    atLeastOneSep: RepetitionMandatoryWithSeparator\n  ): void {\n    this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep)\n  }\n\n  public visitRepetition(many: Repetition): void {\n    this.dslMethods.repetition.push(many)\n  }\n\n  public visitAlternation(or: Alternation): void {\n    this.dslMethods.alternation.push(or)\n  }\n}\n\nconst collectorVisitor = new DslMethodsCollectorVisitor()\nexport function collectMethods(\n  rule: Rule\n): {\n  option: Option[]\n  alternation: Alternation[]\n  repetition: Repetition[]\n  repetitionWithSeparator: RepetitionWithSeparator[]\n  repetitionMandatory: RepetitionMandatory[]\n  repetitionMandatoryWithSeparator: RepetitionMandatoryWithSeparator\n} {\n  collectorVisitor.reset()\n  rule.accept(collectorVisitor)\n  const dslMethods = collectorVisitor.dslMethods\n  // avoid uncleaned references\n  collectorVisitor.reset()\n  return <any>dslMethods\n}\n", "import { uniq, map, flatten } from \"../../utils/utils\"\nimport { AbstractProduction, NonTerminal, Terminal } from \"./gast/gast_public\"\nimport { isBranchingProd, isOptionalProd, isSequenceProd } from \"./gast/gast\"\nimport { IProduction, TokenType } from \"../../../api\"\n\nexport function first(prod: IProduction): TokenType[] {\n  /* istanbul ignore else */\n  if (prod instanceof NonTerminal) {\n    // this could in theory cause infinite loops if\n    // (1) prod A refs prod B.\n    // (2) prod B refs prod A\n    // (3) AB can match the empty set\n    // in other words a cycle where everything is optional so the first will keep\n    // looking ahead for the next optional part and will never exit\n    // currently there is no safeguard for this unique edge case because\n    // (1) not sure a grammar in which this can happen is useful for anything (productive)\n    return first((<NonTerminal>prod).referencedRule)\n  } else if (prod instanceof Terminal) {\n    return firstForTerminal(<Terminal>prod)\n  } else if (isSequenceProd(prod)) {\n    return firstForSequence(<AbstractProduction>prod)\n  } else if (isBranchingProd(prod)) {\n    return firstForBranching(<AbstractProduction>prod)\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n\nexport function firstForSequence(prod: AbstractProduction): TokenType[] {\n  let firstSet: TokenType[] = []\n  let seq = prod.definition\n  let nextSubProdIdx = 0\n  let hasInnerProdsRemaining = seq.length > nextSubProdIdx\n  let currSubProd\n  // so we enter the loop at least once (if the definition is not empty\n  let isLastInnerProdOptional = true\n  // scan a sequence until it's end or until we have found a NONE optional production in it\n  while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n    currSubProd = seq[nextSubProdIdx]\n    isLastInnerProdOptional = isOptionalProd(currSubProd)\n    firstSet = firstSet.concat(first(currSubProd))\n    nextSubProdIdx = nextSubProdIdx + 1\n    hasInnerProdsRemaining = seq.length > nextSubProdIdx\n  }\n\n  return uniq(firstSet)\n}\n\nexport function firstForBranching(prod: AbstractProduction): TokenType[] {\n  let allAlternativesFirsts: TokenType[][] = map(\n    prod.definition,\n    (innerProd) => {\n      return first(innerProd)\n    }\n  )\n  return uniq(flatten<TokenType>(allAlternativesFirsts))\n}\n\nexport function firstForTerminal(terminal: Terminal): TokenType[] {\n  return [terminal.terminalType]\n}\n", "// TODO: can this be removed? where is it used?\nexport let IN = \"_~IN~_\"\n", "import { RestWalker } from \"./rest\"\nimport { first } from \"./first\"\nimport { assign, forEach } from \"../../utils/utils\"\nimport { IN } from \"../constants\"\nimport { Alternative, NonTerminal, Rule, Terminal } from \"./gast/gast_public\"\nimport { IProduction, TokenType } from \"../../../api\"\n\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n  public follows = {}\n\n  constructor(private topProd: Rule) {\n    super()\n  }\n\n  startWalking(): Record<string, TokenType[]> {\n    this.walk(this.topProd)\n    return this.follows\n  }\n\n  walkTerminal(\n    terminal: Terminal,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // do nothing! just like in the public sector after 13:00\n  }\n\n  walkProdRef(\n    refProd: NonTerminal,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    let followName =\n      buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n      this.topProd.name\n    let fullRest: IProduction[] = currRest.concat(prevRest)\n    let restProd = new Alternative({ definition: fullRest })\n    let t_in_topProd_follows = first(restProd)\n    this.follows[followName] = t_in_topProd_follows\n  }\n}\n\nexport function computeAllProdsFollows(\n  topProductions: Rule[]\n): Record<string, TokenType[]> {\n  let reSyncFollows = {}\n\n  forEach(topProductions, (topProd) => {\n    let currRefsFollow = new ResyncFollowsWalker(topProd).startWalking()\n    assign(reSyncFollows, currRefsFollow)\n  })\n  return reSyncFollows\n}\n\nexport function buildBetweenProdsFollowPrefix(\n  inner: Rule,\n  occurenceInParent: number\n): string {\n  return inner.name + occurenceInParent + IN\n}\n\nexport function buildInProdFollowPrefix(terminal: Terminal): string {\n  let terminalName = terminal.terminalType.name\n  return terminalName + terminal.idx + IN\n}\n", "import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public\"\nimport * as utils from \"../utils/utils\"\nimport { first, map, reduce } from \"../utils/utils\"\nimport {\n  Alternation,\n  NonTerminal,\n  Rule,\n  Terminal\n} from \"./grammar/gast/gast_public\"\nimport { getProductionDslName } from \"./grammar/gast/gast\"\nimport {\n  IGrammarResolverErrorMessageProvider,\n  IGrammarValidatorErrorMessageProvider,\n  IParserErrorMessageProvider,\n  IProductionWithOccurrence,\n  TokenType\n} from \"../../api\"\n\nexport const defaultParserErrorProvider: IParserErrorMessageProvider = {\n  buildMismatchTokenMessage({ expected, actual, previous, ruleName }): string {\n    let hasLabel = hasTokenLabel(expected)\n    let expectedMsg = hasLabel\n      ? `--> ${tokenLabel(expected)} <--`\n      : `token of type --> ${expected.name} <--`\n\n    let msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`\n\n    return msg\n  },\n\n  buildNotAllInputParsedMessage({ firstRedundant, ruleName }): string {\n    return \"Redundant input, expecting EOF but found: \" + firstRedundant.image\n  },\n\n  buildNoViableAltMessage({\n    expectedPathsPerAlt,\n    actual,\n    previous,\n    customUserDescription,\n    ruleName\n  }): string {\n    let errPrefix = \"Expecting: \"\n    // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n    let actualText = first(actual).image\n    let errSuffix = \"\\nbut found: '\" + actualText + \"'\"\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix\n    } else {\n      let allLookAheadPaths = reduce(\n        expectedPathsPerAlt,\n        (result, currAltPaths) => result.concat(currAltPaths),\n        []\n      )\n      let nextValidTokenSequences = map(\n        allLookAheadPaths,\n        (currPath) =>\n          `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\n            \", \"\n          )}]`\n      )\n      let nextValidSequenceItems = map(\n        nextValidTokenSequences,\n        (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`\n      )\n      let calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\n        \"\\n\"\n      )}`\n\n      return errPrefix + calculatedDescription + errSuffix\n    }\n  },\n\n  buildEarlyExitMessage({\n    expectedIterationPaths,\n    actual,\n    customUserDescription,\n    ruleName\n  }): string {\n    let errPrefix = \"Expecting: \"\n    // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n    let actualText = first(actual).image\n    let errSuffix = \"\\nbut found: '\" + actualText + \"'\"\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix\n    } else {\n      let nextValidTokenSequences = map(\n        expectedIterationPaths,\n        (currPath) =>\n          `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\n            \",\"\n          )}]`\n      )\n      let calculatedDescription =\n        `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n        `<${nextValidTokenSequences.join(\" ,\")}>`\n\n      return errPrefix + calculatedDescription + errSuffix\n    }\n  }\n}\n\nObject.freeze(defaultParserErrorProvider)\n\nexport const defaultGrammarResolverErrorProvider: IGrammarResolverErrorMessageProvider = {\n  buildRuleNotFoundError(\n    topLevelRule: Rule,\n    undefinedRule: NonTerminal\n  ): string {\n    const msg =\n      \"Invalid grammar, reference to a rule which is not defined: ->\" +\n      undefinedRule.nonTerminalName +\n      \"<-\\n\" +\n      \"inside top level rule: ->\" +\n      topLevelRule.name +\n      \"<-\"\n    return msg\n  }\n}\n\nexport const defaultGrammarValidatorErrorProvider: IGrammarValidatorErrorMessageProvider = {\n  buildDuplicateFoundError(\n    topLevelRule: Rule,\n    duplicateProds: IProductionWithOccurrence[]\n  ): string {\n    function getExtraProductionArgument(\n      prod: IProductionWithOccurrence\n    ): string {\n      if (prod instanceof Terminal) {\n        return prod.terminalType.name\n      } else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName\n      } else {\n        return \"\"\n      }\n    }\n\n    const topLevelName = topLevelRule.name\n    const duplicateProd = first(duplicateProds)\n    const index = duplicateProd.idx\n    const dslName = getProductionDslName(duplicateProd)\n    let extraArgument = getExtraProductionArgument(duplicateProd)\n\n    const hasExplicitIndex = index > 0\n    let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${\n      extraArgument ? `with argument: ->${extraArgument}<-` : \"\"\n    }\n                  appears more than once (${\n                    duplicateProds.length\n                  } times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://sap.github.io/chevrotain/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `\n\n    // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n    msg = msg.replace(/[ \\t]+/g, \" \")\n    msg = msg.replace(/\\s\\s+/g, \"\\n\")\n\n    return msg\n  },\n\n  buildNamespaceConflictError(rule: Rule): string {\n    const errMsg =\n      `Namespace conflict found in grammar.\\n` +\n      `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n      `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n      `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n      `and Non-Terminal names start with a lower case letter.`\n\n    return errMsg\n  },\n\n  buildAlternationPrefixAmbiguityError(options: {\n    topLevelRule: Rule\n    prefixPath: TokenType[]\n    ambiguityIndices: number[]\n    alternation: Alternation\n  }): string {\n    const pathMsg = map(options.prefixPath, (currTok) =>\n      tokenLabel(currTok)\n    ).join(\", \")\n    const occurrence =\n      options.alternation.idx === 0 ? \"\" : options.alternation.idx\n    const errMsg =\n      `Ambiguous alternatives: <${options.ambiguityIndices.join(\n        \" ,\"\n      )}> due to common lookahead prefix\\n` +\n      `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n      `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n      `See: https://sap.github.io/chevrotain/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n      `For Further details.`\n\n    return errMsg\n  },\n\n  buildAlternationAmbiguityError(options: {\n    topLevelRule: Rule\n    prefixPath: TokenType[]\n    ambiguityIndices: number[]\n    alternation: Alternation\n  }): string {\n    let pathMsg = map(options.prefixPath, (currtok) =>\n      tokenLabel(currtok)\n    ).join(\", \")\n    let occurrence =\n      options.alternation.idx === 0 ? \"\" : options.alternation.idx\n    let currMessage =\n      `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\n        \" ,\"\n      )}> in <OR${occurrence}>` +\n      ` inside <${options.topLevelRule.name}> Rule,\\n` +\n      `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`\n\n    currMessage =\n      currMessage +\n      `See: https://sap.github.io/chevrotain/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n      `For Further details.`\n    return currMessage\n  },\n\n  buildEmptyRepetitionError(options: {\n    topLevelRule: Rule\n    repetition: IProductionWithOccurrence\n  }): string {\n    let dslName = getProductionDslName(options.repetition)\n    if (options.repetition.idx !== 0) {\n      dslName += options.repetition.idx\n    }\n\n    const errMsg =\n      `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n      `This could lead to an infinite loop.`\n\n    return errMsg\n  },\n\n  // TODO: remove - `errors_public` from nyc.config.js exclude\n  //       once this method is fully removed from this file\n  buildTokenNameError(options: {\n    tokenType: TokenType\n    expectedPattern: RegExp\n  }): string {\n    /* istanbul ignore next */\n    return \"deprecated\"\n  },\n\n  buildEmptyAlternationError(options: {\n    topLevelRule: Rule\n    alternation: Alternation\n    emptyChoiceIdx: number\n  }): string {\n    const errMsg =\n      `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n      ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n      `Only the last alternative may be an empty alternative.`\n\n    return errMsg\n  },\n\n  buildTooManyAlternativesError(options: {\n    topLevelRule: Rule\n    alternation: Alternation\n  }): string {\n    const errMsg =\n      `An Alternation cannot have more than 256 alternatives:\\n` +\n      `<OR${options.alternation.idx}> inside <${\n        options.topLevelRule.name\n      }> Rule.\\n has ${options.alternation.definition.length + 1} alternatives.`\n\n    return errMsg\n  },\n\n  buildLeftRecursionError(options: {\n    topLevelRule: Rule\n    leftRecursionPath: Rule[]\n  }): string {\n    const ruleName = options.topLevelRule.name\n    let pathNames = utils.map(\n      options.leftRecursionPath,\n      (currRule) => currRule.name\n    )\n    let leftRecursivePath = `${ruleName} --> ${pathNames\n      .concat([ruleName])\n      .join(\" --> \")}`\n    let errMsg =\n      `Left Recursion found in grammar.\\n` +\n      `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n      `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n      ` To fix this refactor your grammar to remove the left recursion.\\n` +\n      `see: https://en.wikipedia.org/wiki/LL_parser#Left_Factoring.`\n\n    return errMsg\n  },\n\n  // TODO: remove - `errors_public` from nyc.config.js exclude\n  //       once this method is fully removed from this file\n  buildInvalidRuleNameError(options: {\n    topLevelRule: Rule\n    expectedPattern: RegExp\n  }): string {\n    /* istanbul ignore next */\n    return \"deprecated\"\n  },\n\n  buildDuplicateRuleNameError(options: {\n    topLevelRule: Rule | string\n    grammarName: string\n  }): string {\n    let ruleName\n    if (options.topLevelRule instanceof Rule) {\n      ruleName = options.topLevelRule.name\n    } else {\n      ruleName = options.topLevelRule\n    }\n\n    const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`\n\n    return errMsg\n  }\n}\n", "import {\n  IParserUnresolvedRefDefinitionError,\n  ParserDefinitionErrorType\n} from \"../parser/parser\"\nimport { forEach, values } from \"../../utils/utils\"\nimport { NonTerminal, Rule } from \"./gast/gast_public\"\nimport { GAstVisitor } from \"./gast/gast_visitor_public\"\nimport {\n  IGrammarResolverErrorMessageProvider,\n  IParserDefinitionError\n} from \"../../../api\"\n\nexport function resolveGrammar(\n  topLevels: Record<string, Rule>,\n  errMsgProvider: IGrammarResolverErrorMessageProvider\n): IParserDefinitionError[] {\n  let refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider)\n  refResolver.resolveRefs()\n  return refResolver.errors\n}\n\nexport class GastRefResolverVisitor extends GAstVisitor {\n  public errors: IParserUnresolvedRefDefinitionError[] = []\n  private currTopLevel: Rule\n\n  constructor(\n    private nameToTopRule: Record<string, Rule>,\n    private errMsgProvider: IGrammarResolverErrorMessageProvider\n  ) {\n    super()\n  }\n\n  public resolveRefs(): void {\n    forEach(values(this.nameToTopRule), (prod) => {\n      this.currTopLevel = prod\n      prod.accept(this)\n    })\n  }\n\n  public visitNonTerminal(node: NonTerminal): void {\n    let ref = this.nameToTopRule[node.nonTerminalName]\n\n    if (!ref) {\n      let msg = this.errMsgProvider.buildRuleNotFoundError(\n        this.currTopLevel,\n        node\n      )\n      this.errors.push({\n        message: msg,\n        type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n        ruleName: this.currTopLevel.name,\n        unresolvedRefName: node.nonTerminalName\n      })\n    } else {\n      node.referencedRule = ref\n    }\n  }\n}\n", "import { RestWalker } from \"./rest\"\nimport {\n  cloneArr,\n  drop,\n  dropRight,\n  first as _first,\n  forEach,\n  isEmpty,\n  last\n} from \"../../utils/utils\"\nimport { first } from \"./first\"\nimport { TokenMatcher } from \"../parser/parser\"\nimport {\n  AbstractProduction,\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"./gast/gast_public\"\nimport {\n  IGrammarPath,\n  IProduction,\n  ISyntacticContentAssistPath,\n  IToken,\n  ITokenGrammarPath,\n  TokenType\n} from \"../../../api\"\n\nexport abstract class AbstractNextPossibleTokensWalker extends RestWalker {\n  protected possibleTokTypes: TokenType[] = []\n  protected ruleStack: string[]\n  protected occurrenceStack: number[]\n\n  protected nextProductionName = \"\"\n  protected nextProductionOccurrence = 0\n  protected found = false\n  protected isAtEndOfPath = false\n\n  constructor(protected topProd: Rule, protected path: IGrammarPath) {\n    super()\n  }\n\n  startWalking(): TokenType[] {\n    this.found = false\n\n    if (this.path.ruleStack[0] !== this.topProd.name) {\n      throw Error(\"The path does not start with the walker's top Rule!\")\n    }\n\n    // immutable for the win\n    this.ruleStack = cloneArr(this.path.ruleStack).reverse() // intelij bug requires assertion\n    this.occurrenceStack = cloneArr(this.path.occurrenceStack).reverse() // intelij bug requires assertion\n\n    // already verified that the first production is valid, we now seek the 2nd production\n    this.ruleStack.pop()\n    this.occurrenceStack.pop()\n\n    this.updateExpectedNext()\n    this.walk(this.topProd)\n\n    return this.possibleTokTypes\n  }\n\n  walk(prod: AbstractProduction, prevRest: IProduction[] = []): void {\n    // stop scanning once we found the path\n    if (!this.found) {\n      super.walk(prod, prevRest)\n    }\n  }\n\n  walkProdRef(\n    refProd: NonTerminal,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    // found the next production, need to keep walking in it\n    if (\n      refProd.referencedRule.name === this.nextProductionName &&\n      refProd.idx === this.nextProductionOccurrence\n    ) {\n      let fullRest = currRest.concat(prevRest)\n      this.updateExpectedNext()\n      this.walk(refProd.referencedRule, <any>fullRest)\n    }\n  }\n\n  updateExpectedNext(): void {\n    // need to consume the Terminal\n    if (isEmpty(this.ruleStack)) {\n      // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n      // really seeking is the last Terminal...\n      this.nextProductionName = \"\"\n      this.nextProductionOccurrence = 0\n      this.isAtEndOfPath = true\n    } else {\n      this.nextProductionName = this.ruleStack.pop()\n      this.nextProductionOccurrence = this.occurrenceStack.pop()\n    }\n  }\n}\n\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n  private nextTerminalName = \"\"\n  private nextTerminalOccurrence = 0\n\n  constructor(topProd: Rule, protected path: ITokenGrammarPath) {\n    super(topProd, path)\n    this.nextTerminalName = this.path.lastTok.name\n    this.nextTerminalOccurrence = this.path.lastTokOccurrence\n  }\n\n  walkTerminal(\n    terminal: Terminal,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (\n      this.isAtEndOfPath &&\n      terminal.terminalType.name === this.nextTerminalName &&\n      terminal.idx === this.nextTerminalOccurrence &&\n      !this.found\n    ) {\n      let fullRest = currRest.concat(prevRest)\n      let restProd = new Alternative({ definition: fullRest })\n      this.possibleTokTypes = first(restProd)\n      this.found = true\n    }\n  }\n}\n\nexport type AlternativesFirstTokens = TokenType[][]\n\nexport interface IFirstAfterRepetition {\n  token: TokenType\n  occurrence: number\n  isEndOfRule: boolean\n}\n\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n  protected result = {\n    token: undefined,\n    occurrence: undefined,\n    isEndOfRule: undefined\n  }\n\n  constructor(protected topRule: Rule, protected occurrence: number) {\n    super()\n  }\n\n  startWalking(): IFirstAfterRepetition {\n    this.walk(this.topRule)\n    return this.result\n  }\n}\n\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkMany(\n    manyProd: Repetition,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (manyProd.idx === this.occurrence) {\n      let firstAfterMany = _first(currRest.concat(prevRest))\n      this.result.isEndOfRule = firstAfterMany === undefined\n      if (firstAfterMany instanceof Terminal) {\n        this.result.token = firstAfterMany.terminalType\n        this.result.occurrence = firstAfterMany.idx\n      }\n    } else {\n      super.walkMany(manyProd, currRest, prevRest)\n    }\n  }\n}\n\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkManySep(\n    manySepProd: RepetitionWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (manySepProd.idx === this.occurrence) {\n      let firstAfterManySep = _first(currRest.concat(prevRest))\n      this.result.isEndOfRule = firstAfterManySep === undefined\n      if (firstAfterManySep instanceof Terminal) {\n        this.result.token = firstAfterManySep.terminalType\n        this.result.occurrence = firstAfterManySep.idx\n      }\n    } else {\n      super.walkManySep(manySepProd, currRest, prevRest)\n    }\n  }\n}\n\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkAtLeastOne(\n    atLeastOneProd: RepetitionMandatory,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (atLeastOneProd.idx === this.occurrence) {\n      let firstAfterAtLeastOne = _first(currRest.concat(prevRest))\n      this.result.isEndOfRule = firstAfterAtLeastOne === undefined\n      if (firstAfterAtLeastOne instanceof Terminal) {\n        this.result.token = firstAfterAtLeastOne.terminalType\n        this.result.occurrence = firstAfterAtLeastOne.idx\n      }\n    } else {\n      super.walkAtLeastOne(atLeastOneProd, currRest, prevRest)\n    }\n  }\n}\n\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n  walkAtLeastOneSep(\n    atleastOneSepProd: RepetitionMandatoryWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (atleastOneSepProd.idx === this.occurrence) {\n      let firstAfterfirstAfterAtLeastOneSep = _first(currRest.concat(prevRest))\n      this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined\n      if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n        this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType\n        this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx\n      }\n    } else {\n      super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest)\n    }\n  }\n}\n\nexport interface PartialPathAndSuffixes {\n  partialPath: TokenType[]\n  suffixDef: IProduction[]\n}\n\nexport function possiblePathsFrom(\n  targetDef: IProduction[],\n  maxLength: number,\n  currPath = []\n): PartialPathAndSuffixes[] {\n  // avoid side effects\n  currPath = cloneArr(currPath)\n  let result = []\n  let i = 0\n\n  // TODO: avoid inner funcs\n  function remainingPathWith(nextDef: IProduction[]) {\n    return nextDef.concat(drop(targetDef, i + 1))\n  }\n\n  // TODO: avoid inner funcs\n  function getAlternativesForProd(definition: IProduction[]) {\n    let alternatives = possiblePathsFrom(\n      remainingPathWith(definition),\n      maxLength,\n      currPath\n    )\n    return result.concat(alternatives)\n  }\n\n  /**\n   * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n   * following (rest) of the targetDef.\n   *\n   * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n   * the optional production.\n   */\n  while (currPath.length < maxLength && i < targetDef.length) {\n    let prod = targetDef[i]\n\n    /* istanbul ignore else */\n    if (prod instanceof Alternative) {\n      return getAlternativesForProd(prod.definition)\n    } else if (prod instanceof NonTerminal) {\n      return getAlternativesForProd(prod.definition)\n    } else if (prod instanceof Option) {\n      result = getAlternativesForProd(prod.definition)\n    } else if (prod instanceof RepetitionMandatory) {\n      const newDef = prod.definition.concat([\n        new Repetition({\n          definition: prod.definition\n        })\n      ])\n      return getAlternativesForProd(newDef)\n    } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n      const newDef = [\n        new Alternative({ definition: prod.definition }),\n        new Repetition({\n          definition: [new Terminal({ terminalType: prod.separator })].concat(\n            <any>prod.definition\n          )\n        })\n      ]\n      return getAlternativesForProd(newDef)\n    } else if (prod instanceof RepetitionWithSeparator) {\n      const newDef = prod.definition.concat([\n        new Repetition({\n          definition: [new Terminal({ terminalType: prod.separator })].concat(\n            <any>prod.definition\n          )\n        })\n      ])\n      result = getAlternativesForProd(newDef)\n    } else if (prod instanceof Repetition) {\n      const newDef = prod.definition.concat([\n        new Repetition({\n          definition: prod.definition\n        })\n      ])\n      result = getAlternativesForProd(newDef)\n    } else if (prod instanceof Alternation) {\n      forEach(prod.definition, (currAlt) => {\n        // TODO: this is a limited check for empty alternatives\n        //   It would prevent a common case of infinite loops during parser initialization.\n        //   However **in-directly** empty alternatives may still cause issues.\n        if (isEmpty(currAlt.definition) === false) {\n          result = getAlternativesForProd(currAlt.definition)\n        }\n      })\n      return result\n    } else if (prod instanceof Terminal) {\n      currPath.push(prod.terminalType)\n    } else {\n      throw Error(\"non exhaustive match\")\n    }\n\n    i++\n  }\n  result.push({\n    partialPath: currPath,\n    suffixDef: drop(targetDef, i)\n  })\n\n  return result\n}\n\ninterface IPathToExamine {\n  idx: number\n  def: IProduction[]\n  ruleStack: string[]\n  occurrenceStack: number[]\n}\n\nexport function nextPossibleTokensAfter(\n  initialDef: IProduction[],\n  tokenVector: IToken[],\n  tokMatcher: TokenMatcher,\n  maxLookAhead: number\n): ISyntacticContentAssistPath[] {\n  const EXIT_NON_TERMINAL: any = \"EXIT_NONE_TERMINAL\"\n  // to avoid creating a new Array each time.\n  const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL]\n  const EXIT_ALTERNATIVE: any = \"EXIT_ALTERNATIVE\"\n  let foundCompletePath = false\n\n  const tokenVectorLength = tokenVector.length\n  let minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1\n\n  let result: ISyntacticContentAssistPath[] = []\n\n  let possiblePaths: IPathToExamine[] = []\n  possiblePaths.push({\n    idx: -1,\n    def: initialDef,\n    ruleStack: [],\n    occurrenceStack: []\n  })\n\n  while (!isEmpty(possiblePaths)) {\n    let currPath = possiblePaths.pop()\n\n    // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n    if (currPath === EXIT_ALTERNATIVE) {\n      if (\n        foundCompletePath &&\n        last(possiblePaths).idx <= minimalAlternativesIndex\n      ) {\n        // remove irrelevant alternative\n        possiblePaths.pop()\n      }\n      continue\n    }\n\n    let currDef = currPath.def\n    let currIdx = currPath.idx\n    let currRuleStack = currPath.ruleStack\n    let currOccurrenceStack = currPath.occurrenceStack\n\n    // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n    if (isEmpty(currDef)) {\n      continue\n    }\n\n    let prod = currDef[0]\n    /* istanbul ignore else */\n    if (prod === EXIT_NON_TERMINAL) {\n      let nextPath = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: dropRight(currRuleStack),\n        occurrenceStack: dropRight(currOccurrenceStack)\n      }\n      possiblePaths.push(nextPath)\n    } else if (prod instanceof Terminal) {\n      /* istanbul ignore else */\n      if (currIdx < tokenVectorLength - 1) {\n        let nextIdx = currIdx + 1\n        let actualToken = tokenVector[nextIdx]\n        if (tokMatcher(actualToken, prod.terminalType)) {\n          let nextPath = {\n            idx: nextIdx,\n            def: drop(currDef),\n            ruleStack: currRuleStack,\n            occurrenceStack: currOccurrenceStack\n          }\n          possiblePaths.push(nextPath)\n        }\n        // end of the line\n      } else if (currIdx === tokenVectorLength - 1) {\n        // IGNORE ABOVE ELSE\n        result.push({\n          nextTokenType: prod.terminalType,\n          nextTokenOccurrence: prod.idx,\n          ruleStack: currRuleStack,\n          occurrenceStack: currOccurrenceStack\n        })\n        foundCompletePath = true\n      } else {\n        throw Error(\"non exhaustive match\")\n      }\n    } else if (prod instanceof NonTerminal) {\n      let newRuleStack = cloneArr(currRuleStack)\n      newRuleStack.push(prod.nonTerminalName)\n\n      let newOccurrenceStack = cloneArr(currOccurrenceStack)\n      newOccurrenceStack.push(prod.idx)\n\n      let nextPath = {\n        idx: currIdx,\n        def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n        ruleStack: newRuleStack,\n        occurrenceStack: newOccurrenceStack\n      }\n      possiblePaths.push(nextPath)\n    } else if (prod instanceof Option) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      let nextPathWithout = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPathWithout)\n      // required marker to avoid backtracking paths whose higher priority alternatives already matched\n      possiblePaths.push(EXIT_ALTERNATIVE)\n\n      let nextPathWith = {\n        idx: currIdx,\n        def: prod.definition.concat(drop(currDef)),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPathWith)\n    } else if (prod instanceof RepetitionMandatory) {\n      // TODO:(THE NEW operators here take a while...) (convert once?)\n      let secondIteration = new Repetition({\n        definition: prod.definition,\n        idx: prod.idx\n      })\n      let nextDef = prod.definition.concat([secondIteration], drop(currDef))\n      let nextPath = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPath)\n    } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n      // TODO:(THE NEW operators here take a while...) (convert once?)\n      let separatorGast = new Terminal({\n        terminalType: prod.separator\n      })\n      let secondIteration = new Repetition({\n        definition: [<any>separatorGast].concat(prod.definition),\n        idx: prod.idx\n      })\n      let nextDef = prod.definition.concat([secondIteration], drop(currDef))\n      let nextPath = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPath)\n    } else if (prod instanceof RepetitionWithSeparator) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      let nextPathWithout = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPathWithout)\n      // required marker to avoid backtracking paths whose higher priority alternatives already matched\n      possiblePaths.push(EXIT_ALTERNATIVE)\n\n      let separatorGast = new Terminal({\n        terminalType: prod.separator\n      })\n      let nthRepetition = new Repetition({\n        definition: [<any>separatorGast].concat(prod.definition),\n        idx: prod.idx\n      })\n      let nextDef = prod.definition.concat([nthRepetition], drop(currDef))\n      let nextPathWith = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPathWith)\n    } else if (prod instanceof Repetition) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      let nextPathWithout = {\n        idx: currIdx,\n        def: drop(currDef),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPathWithout)\n      // required marker to avoid backtracking paths whose higher priority alternatives already matched\n      possiblePaths.push(EXIT_ALTERNATIVE)\n\n      // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n      let nthRepetition = new Repetition({\n        definition: prod.definition,\n        idx: prod.idx\n      })\n      let nextDef = prod.definition.concat([nthRepetition], drop(currDef))\n      let nextPathWith = {\n        idx: currIdx,\n        def: nextDef,\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      }\n      possiblePaths.push(nextPathWith)\n    } else if (prod instanceof Alternation) {\n      // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n      for (let i = prod.definition.length - 1; i >= 0; i--) {\n        let currAlt: any = prod.definition[i]\n        let currAltPath = {\n          idx: currIdx,\n          def: currAlt.definition.concat(drop(currDef)),\n          ruleStack: currRuleStack,\n          occurrenceStack: currOccurrenceStack\n        }\n        possiblePaths.push(currAltPath)\n        possiblePaths.push(EXIT_ALTERNATIVE)\n      }\n    } else if (prod instanceof Alternative) {\n      possiblePaths.push({\n        idx: currIdx,\n        def: prod.definition.concat(drop(currDef)),\n        ruleStack: currRuleStack,\n        occurrenceStack: currOccurrenceStack\n      })\n    } else if (prod instanceof Rule) {\n      // last because we should only encounter at most a single one of these per invocation.\n      possiblePaths.push(\n        expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack)\n      )\n    } else {\n      throw Error(\"non exhaustive match\")\n    }\n  }\n  return result\n}\n\nfunction expandTopLevelRule(\n  topRule: Rule,\n  currIdx: number,\n  currRuleStack: string[],\n  currOccurrenceStack: number[]\n): IPathToExamine {\n  let newRuleStack = cloneArr(currRuleStack)\n  newRuleStack.push(topRule.name)\n\n  let newCurrOccurrenceStack = cloneArr(currOccurrenceStack)\n  // top rule is always assumed to have been called with occurrence index 1\n  newCurrOccurrenceStack.push(1)\n\n  return {\n    idx: currIdx,\n    def: topRule.definition,\n    ruleStack: newRuleStack,\n    occurrenceStack: newCurrOccurrenceStack\n  }\n}\n", "import {\n  map,\n  reduce,\n  every,\n  isEmpty,\n  flatten,\n  forEach,\n  has\n} from \"../../utils/utils\"\nimport { possiblePathsFrom } from \"./interpreter\"\nimport { RestWalker } from \"./rest\"\nimport { Predicate, TokenMatcher, lookAheadSequence } from \"../parser/parser\"\nimport {\n  tokenStructuredMatcher,\n  tokenStructuredMatcherNoCategories\n} from \"../../scan/tokens\"\nimport {\n  AbstractProduction,\n  Alternation,\n  Alternative as AlternativeGAST,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule\n} from \"./gast/gast_public\"\nimport { GAstVisitor } from \"./gast/gast_visitor_public\"\nimport {\n  IOrAlt,\n  IProduction,\n  IProductionWithOccurrence,\n  TokenType\n} from \"../../../api\"\n\nexport enum PROD_TYPE {\n  OPTION,\n  REPETITION,\n  REPETITION_MANDATORY,\n  REPETITION_MANDATORY_WITH_SEPARATOR,\n  REPETITION_WITH_SEPARATOR,\n  ALTERNATION\n}\n\nexport function getProdType(prod: IProduction): PROD_TYPE {\n  /* istanbul ignore else */\n  if (prod instanceof Option) {\n    return PROD_TYPE.OPTION\n  } else if (prod instanceof Repetition) {\n    return PROD_TYPE.REPETITION\n  } else if (prod instanceof RepetitionMandatory) {\n    return PROD_TYPE.REPETITION_MANDATORY\n  } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n    return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR\n  } else if (prod instanceof RepetitionWithSeparator) {\n    return PROD_TYPE.REPETITION_WITH_SEPARATOR\n  } else if (prod instanceof Alternation) {\n    return PROD_TYPE.ALTERNATION\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n\nexport function buildLookaheadFuncForOr(\n  occurrence: number,\n  ruleGrammar: Rule,\n  maxLookahead: number,\n  hasPredicates: boolean,\n  dynamicTokensEnabled: boolean,\n  laFuncBuilder: Function\n): (orAlts?: IOrAlt<any>[]) => number {\n  let lookAheadPaths = getLookaheadPathsForOr(\n    occurrence,\n    ruleGrammar,\n    maxLookahead\n  )\n\n  const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n    ? tokenStructuredMatcherNoCategories\n    : tokenStructuredMatcher\n\n  return laFuncBuilder(\n    lookAheadPaths,\n    hasPredicates,\n    tokenMatcher,\n    dynamicTokensEnabled\n  )\n}\n\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(\n  occurrence: number,\n  ruleGrammar: Rule,\n  k: number,\n  dynamicTokensEnabled: boolean,\n  prodType: PROD_TYPE,\n  lookaheadBuilder: (lookAheadSequence, TokenMatcher, boolean) => () => boolean\n): () => boolean {\n  let lookAheadPaths = getLookaheadPathsForOptionalProd(\n    occurrence,\n    ruleGrammar,\n    prodType,\n    k\n  )\n\n  const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n    ? tokenStructuredMatcherNoCategories\n    : tokenStructuredMatcher\n\n  return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled)\n}\n\nexport type Alternative = TokenType[][]\n\nexport function buildAlternativesLookAheadFunc(\n  alts: lookAheadSequence[],\n  hasPredicates: boolean,\n  tokenMatcher: TokenMatcher,\n  dynamicTokensEnabled: boolean\n): (orAlts?: IOrAlt<any>[]) => number {\n  let numOfAlts = alts.length\n  let areAllOneTokenLookahead = every(alts, (currAlt) => {\n    return every(currAlt, (currPath) => {\n      return currPath.length === 1\n    })\n  })\n\n  // This version takes into account the predicates as well.\n  if (hasPredicates) {\n    /**\n     * @returns {number} - The chosen alternative index\n     */\n    return function (orAlts: IOrAlt<any>[]): number {\n      // unfortunately the predicates must be extracted every single time\n      // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n      // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n      let predicates: Predicate[] = map(orAlts, (currAlt) => currAlt.GATE)\n\n      for (let t = 0; t < numOfAlts; t++) {\n        let currAlt = alts[t]\n        let currNumOfPaths = currAlt.length\n\n        let currPredicate = predicates[t]\n        if (currPredicate !== undefined && currPredicate.call(this) === false) {\n          // if the predicate does not match there is no point in checking the paths\n          continue\n        }\n        nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n          let currPath = currAlt[j]\n          let currPathLength = currPath.length\n          for (let i = 0; i < currPathLength; i++) {\n            let nextToken = this.LA(i + 1)\n            if (tokenMatcher(nextToken, currPath[i]) === false) {\n              // mismatch in current path\n              // try the next pth\n              continue nextPath\n            }\n          }\n          // found a full path that matches.\n          // this will also work for an empty ALT as the loop will be skipped\n          return t\n        }\n        // none of the paths for the current alternative matched\n        // try the next alternative\n      }\n      // none of the alternatives could be matched\n      return undefined\n    }\n  } else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n    let singleTokenAlts = map(alts, (currAlt) => {\n      return flatten(currAlt)\n    })\n\n    let choiceToAlt = reduce(\n      singleTokenAlts,\n      (result, currAlt, idx) => {\n        forEach(currAlt, (currTokType) => {\n          if (!has(result, currTokType.tokenTypeIdx)) {\n            result[currTokType.tokenTypeIdx] = idx\n          }\n          forEach(currTokType.categoryMatches, (currExtendingType) => {\n            if (!has(result, currExtendingType)) {\n              result[currExtendingType] = idx\n            }\n          })\n        })\n        return result\n      },\n      []\n    )\n\n    /**\n     * @returns {number} - The chosen alternative index\n     */\n    return function (): number {\n      let nextToken = this.LA(1)\n      return choiceToAlt[nextToken.tokenTypeIdx]\n    }\n  } else {\n    // optimized lookahead without needing to check the predicates at all.\n    // this causes code duplication which is intentional to improve performance.\n    /**\n     * @returns {number} - The chosen alternative index\n     */\n    return function (): number {\n      for (let t = 0; t < numOfAlts; t++) {\n        let currAlt = alts[t]\n        let currNumOfPaths = currAlt.length\n        nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n          let currPath = currAlt[j]\n          let currPathLength = currPath.length\n          for (let i = 0; i < currPathLength; i++) {\n            let nextToken = this.LA(i + 1)\n            if (tokenMatcher(nextToken, currPath[i]) === false) {\n              // mismatch in current path\n              // try the next pth\n              continue nextPath\n            }\n          }\n          // found a full path that matches.\n          // this will also work for an empty ALT as the loop will be skipped\n          return t\n        }\n        // none of the paths for the current alternative matched\n        // try the next alternative\n      }\n      // none of the alternatives could be matched\n      return undefined\n    }\n  }\n}\n\nexport function buildSingleAlternativeLookaheadFunction(\n  alt: lookAheadSequence,\n  tokenMatcher: TokenMatcher,\n  dynamicTokensEnabled: boolean\n): () => boolean {\n  let areAllOneTokenLookahead = every(alt, (currPath) => {\n    return currPath.length === 1\n  })\n\n  let numOfPaths = alt.length\n\n  // optimized (common) case of all the lookaheads paths requiring only\n  // a single token lookahead.\n  if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n    let singleTokensTypes = flatten(alt)\n\n    if (\n      singleTokensTypes.length === 1 &&\n      isEmpty((<any>singleTokensTypes[0]).categoryMatches)\n    ) {\n      let expectedTokenType = singleTokensTypes[0]\n      let expectedTokenUniqueKey = (<any>expectedTokenType).tokenTypeIdx\n\n      return function (): boolean {\n        return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey\n      }\n    } else {\n      let choiceToAlt = reduce(\n        singleTokensTypes,\n        (result, currTokType, idx) => {\n          result[currTokType.tokenTypeIdx] = true\n          forEach(currTokType.categoryMatches, (currExtendingType) => {\n            result[currExtendingType] = true\n          })\n          return result\n        },\n        []\n      )\n\n      return function (): boolean {\n        let nextToken = this.LA(1)\n        return choiceToAlt[nextToken.tokenTypeIdx] === true\n      }\n    }\n  } else {\n    return function (): boolean {\n      nextPath: for (let j = 0; j < numOfPaths; j++) {\n        let currPath = alt[j]\n        let currPathLength = currPath.length\n        for (let i = 0; i < currPathLength; i++) {\n          let nextToken = this.LA(i + 1)\n          if (tokenMatcher(nextToken, currPath[i]) === false) {\n            // mismatch in current path\n            // try the next pth\n            continue nextPath\n          }\n        }\n        // found a full path that matches.\n        return true\n      }\n\n      // none of the paths matched\n      return false\n    }\n  }\n}\n\nclass RestDefinitionFinderWalker extends RestWalker {\n  private restDef: IProduction[]\n\n  constructor(\n    private topProd: Rule,\n    private targetOccurrence: number,\n    private targetProdType: PROD_TYPE\n  ) {\n    super()\n  }\n\n  startWalking(): IProduction[] {\n    this.walk(this.topProd)\n    return this.restDef\n  }\n\n  private checkIsTarget(\n    node: AbstractProduction & IProductionWithOccurrence,\n    expectedProdType: PROD_TYPE,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): boolean {\n    if (\n      node.idx === this.targetOccurrence &&\n      this.targetProdType === expectedProdType\n    ) {\n      this.restDef = currRest.concat(prevRest)\n      return true\n    }\n    // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n    return false\n  }\n\n  walkOption(\n    optionProd: Option,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n      super.walkOption(optionProd, currRest, prevRest)\n    }\n  }\n\n  walkAtLeastOne(\n    atLeastOneProd: RepetitionMandatory,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (\n      !this.checkIsTarget(\n        atLeastOneProd,\n        PROD_TYPE.REPETITION_MANDATORY,\n        currRest,\n        prevRest\n      )\n    ) {\n      super.walkOption(atLeastOneProd, currRest, prevRest)\n    }\n  }\n\n  walkAtLeastOneSep(\n    atLeastOneSepProd: RepetitionMandatoryWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (\n      !this.checkIsTarget(\n        atLeastOneSepProd,\n        PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,\n        currRest,\n        prevRest\n      )\n    ) {\n      super.walkOption(atLeastOneSepProd, currRest, prevRest)\n    }\n  }\n\n  walkMany(\n    manyProd: Repetition,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (\n      !this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)\n    ) {\n      super.walkOption(manyProd, currRest, prevRest)\n    }\n  }\n\n  walkManySep(\n    manySepProd: RepetitionWithSeparator,\n    currRest: IProduction[],\n    prevRest: IProduction[]\n  ): void {\n    if (\n      !this.checkIsTarget(\n        manySepProd,\n        PROD_TYPE.REPETITION_WITH_SEPARATOR,\n        currRest,\n        prevRest\n      )\n    ) {\n      super.walkOption(manySepProd, currRest, prevRest)\n    }\n  }\n}\n\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n  public result: IProduction[] = []\n\n  constructor(\n    private targetOccurrence: number,\n    private targetProdType: PROD_TYPE,\n    private targetRef?: any\n  ) {\n    super()\n  }\n\n  private checkIsTarget(\n    node: AbstractProduction & IProductionWithOccurrence,\n    expectedProdName: PROD_TYPE\n  ): void {\n    if (\n      node.idx === this.targetOccurrence &&\n      this.targetProdType === expectedProdName &&\n      (this.targetRef === undefined || node === this.targetRef)\n    ) {\n      this.result = node.definition\n    }\n  }\n\n  public visitOption(node: Option): void {\n    this.checkIsTarget(node, PROD_TYPE.OPTION)\n  }\n\n  public visitRepetition(node: Repetition): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION)\n  }\n\n  public visitRepetitionMandatory(node: RepetitionMandatory): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY)\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    node: RepetitionMandatoryWithSeparator\n  ): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR)\n  }\n\n  public visitRepetitionWithSeparator(node: RepetitionWithSeparator): void {\n    this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR)\n  }\n\n  public visitAlternation(node: Alternation): void {\n    this.checkIsTarget(node, PROD_TYPE.ALTERNATION)\n  }\n}\n\nfunction initializeArrayOfArrays(size): any[][] {\n  let result = new Array(size)\n  for (let i = 0; i < size; i++) {\n    result[i] = []\n  }\n  return result\n}\n\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path: TokenType[]): string[] {\n  let keys = [\"\"]\n  for (let i = 0; i < path.length; i++) {\n    const tokType = path[i]\n    let longerKeys = []\n    for (let j = 0; j < keys.length; j++) {\n      const currShorterKey = keys[j]\n      longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx)\n      for (let t = 0; t < tokType.categoryMatches.length; t++) {\n        const categoriesKeySuffix = \"_\" + tokType.categoryMatches[t]\n        longerKeys.push(currShorterKey + categoriesKeySuffix)\n      }\n    }\n    keys = longerKeys\n  }\n  return keys\n}\n\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(\n  altKnownPathsKeys: Record<string, boolean>[],\n  searchPathKeys: string[],\n  idx: number\n): boolean {\n  for (\n    let currAltIdx = 0;\n    currAltIdx < altKnownPathsKeys.length;\n    currAltIdx++\n  ) {\n    // We only want to test vs the other alternatives\n    if (currAltIdx === idx) {\n      continue\n    }\n    const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx]\n    for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n      const searchKey = searchPathKeys[searchIdx]\n      if (otherAltKnownPathsKeys[searchKey] === true) {\n        return false\n      }\n    }\n  }\n  // None of the SearchPathKeys were found in any of the other alternatives\n  return true\n}\n\nexport function lookAheadSequenceFromAlternatives(\n  altsDefs: IProduction[],\n  k: number\n): lookAheadSequence[] {\n  let partialAlts = map(altsDefs, (currAlt) => possiblePathsFrom([currAlt], 1))\n  let finalResult = initializeArrayOfArrays(partialAlts.length)\n  const altsHashes = map(partialAlts, (currAltPaths) => {\n    const dict = {}\n    forEach(currAltPaths, (item) => {\n      const keys = pathToHashKeys(item.partialPath)\n      forEach(keys, (currKey) => {\n        dict[currKey] = true\n      })\n    })\n    return dict\n  })\n  let newData = partialAlts\n\n  // maxLookahead loop\n  for (let pathLength = 1; pathLength <= k; pathLength++) {\n    let currDataset = newData\n    newData = initializeArrayOfArrays(currDataset.length)\n\n    // alternatives loop\n    for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n      let currAltPathsAndSuffixes = currDataset[altIdx]\n      // paths in current alternative loop\n      for (\n        let currPathIdx = 0;\n        currPathIdx < currAltPathsAndSuffixes.length;\n        currPathIdx++\n      ) {\n        let currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath\n        let suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef\n        const prefixKeys = pathToHashKeys(currPathPrefix)\n        let isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx)\n        // End of the line for this path.\n        if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n          let currAltResult = finalResult[altIdx]\n          // TODO: Can we implement a containsPath using Maps/Dictionaries?\n          if (containsPath(currAltResult, currPathPrefix) === false) {\n            currAltResult.push(currPathPrefix)\n            // Update all new  keys for the current path.\n            for (let j = 0; j < prefixKeys.length; j++) {\n              const currKey = prefixKeys[j]\n              altsHashes[altIdx][currKey] = true\n            }\n          }\n        }\n        // Expand longer paths\n        else {\n          let newPartialPathsAndSuffixes = possiblePathsFrom(\n            suffixDef,\n            pathLength + 1,\n            currPathPrefix\n          )\n          newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes)\n\n          // Update keys for new known paths\n          forEach(newPartialPathsAndSuffixes, (item) => {\n            const prefixKeys = pathToHashKeys(item.partialPath)\n            forEach(prefixKeys, (key) => {\n              altsHashes[altIdx][key] = true\n            })\n          })\n        }\n      }\n    }\n  }\n\n  return finalResult\n}\n\nexport function getLookaheadPathsForOr(\n  occurrence: number,\n  ruleGrammar: Rule,\n  k: number,\n  orProd?: Alternation\n): lookAheadSequence[] {\n  const visitor = new InsideDefinitionFinderVisitor(\n    occurrence,\n    PROD_TYPE.ALTERNATION,\n    orProd\n  )\n  ruleGrammar.accept(visitor)\n  return lookAheadSequenceFromAlternatives(visitor.result, k)\n}\n\nexport function getLookaheadPathsForOptionalProd(\n  occurrence: number,\n  ruleGrammar: Rule,\n  prodType: PROD_TYPE,\n  k: number\n): lookAheadSequence[] {\n  let insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType)\n  ruleGrammar.accept(insideDefVisitor)\n  let insideDef = insideDefVisitor.result\n\n  let afterDefWalker = new RestDefinitionFinderWalker(\n    ruleGrammar,\n    occurrence,\n    prodType\n  )\n  let afterDef = afterDefWalker.startWalking()\n\n  let insideFlat = new AlternativeGAST({ definition: insideDef })\n  let afterFlat = new AlternativeGAST({ definition: afterDef })\n\n  return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k)\n}\n\nexport function containsPath(\n  alternative: Alternative,\n  searchPath: TokenType[]\n): boolean {\n  compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n    const otherPath = alternative[i]\n    if (otherPath.length !== searchPath.length) {\n      continue\n    }\n    for (let j = 0; j < otherPath.length; j++) {\n      const searchTok = searchPath[j]\n      const otherTok = otherPath[j]\n\n      const matchingTokens =\n        searchTok === otherTok ||\n        otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined\n      if (matchingTokens === false) {\n        continue compareOtherPath\n      }\n    }\n    return true\n  }\n\n  return false\n}\n\nexport function isStrictPrefixOfPath(\n  prefix: TokenType[],\n  other: TokenType[]\n): boolean {\n  return (\n    prefix.length < other.length &&\n    every(prefix, (tokType, idx) => {\n      const otherTokType = other[idx]\n      return (\n        tokType === otherTokType ||\n        otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]\n      )\n    })\n  )\n}\n\nexport function areTokenCategoriesNotUsed(\n  lookAheadPaths: lookAheadSequence[]\n): boolean {\n  return every(lookAheadPaths, (singleAltPaths) =>\n    every(singleAltPaths, (singlePath) =>\n      every(singlePath, (token) => isEmpty(token.categoryMatches))\n    )\n  )\n}\n", "import * as utils from \"../../utils/utils\"\nimport {\n  contains,\n  every,\n  findAll,\n  flatten,\n  forEach,\n  isEmpty,\n  map,\n  reduce,\n  reject\n} from \"../../utils/utils\"\nimport {\n  IParserAmbiguousAlternativesDefinitionError,\n  IParserDuplicatesDefinitionError,\n  IParserEmptyAlternativeDefinitionError,\n  ParserDefinitionErrorType\n} from \"../parser/parser\"\nimport { getProductionDslName, isOptionalProd } from \"./gast/gast\"\nimport {\n  Alternative,\n  containsPath,\n  getLookaheadPathsForOptionalProd,\n  getLookaheadPathsForOr,\n  getProdType,\n  isStrictPrefixOfPath\n} from \"./lookahead\"\nimport { nextPossibleTokensAfter } from \"./interpreter\"\nimport {\n  Alternation,\n  Alternative as AlternativeGAST,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"./gast/gast_public\"\nimport { GAstVisitor } from \"./gast/gast_visitor_public\"\nimport {\n  IGrammarValidatorErrorMessageProvider,\n  IParserDefinitionError,\n  IProduction,\n  IProductionWithOccurrence,\n  TokenType\n} from \"../../../api\"\n\nexport function validateGrammar(\n  topLevels: Rule[],\n  globalMaxLookahead: number,\n  tokenTypes: TokenType[],\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n  grammarName: string\n): IParserDefinitionError[] {\n  let duplicateErrors: any = utils.map(topLevels, (currTopLevel) =>\n    validateDuplicateProductions(currTopLevel, errMsgProvider)\n  )\n  let leftRecursionErrors: any = utils.map(topLevels, (currTopRule) =>\n    validateNoLeftRecursion(currTopRule, currTopRule, errMsgProvider)\n  )\n\n  let emptyAltErrors = []\n  let ambiguousAltsErrors = []\n  let emptyRepetitionErrors = []\n\n  // left recursion could cause infinite loops in the following validations.\n  // It is safest to first have the user fix the left recursion errors first and only then examine Further issues.\n  if (every(leftRecursionErrors, isEmpty)) {\n    emptyAltErrors = map(topLevels, (currTopRule) =>\n      validateEmptyOrAlternative(currTopRule, errMsgProvider)\n    )\n    ambiguousAltsErrors = map(topLevels, (currTopRule) =>\n      validateAmbiguousAlternationAlternatives(\n        currTopRule,\n        globalMaxLookahead,\n        errMsgProvider\n      )\n    )\n\n    emptyRepetitionErrors = validateSomeNonEmptyLookaheadPath(\n      topLevels,\n      globalMaxLookahead,\n      errMsgProvider\n    )\n  }\n\n  let termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(\n    topLevels,\n    tokenTypes,\n    errMsgProvider\n  )\n\n  const tooManyAltsErrors = map(topLevels, (curRule) =>\n    validateTooManyAlts(curRule, errMsgProvider)\n  )\n\n  const duplicateRulesError = map(topLevels, (curRule) =>\n    validateRuleDoesNotAlreadyExist(\n      curRule,\n      topLevels,\n      grammarName,\n      errMsgProvider\n    )\n  )\n\n  return <any>(\n    utils.flatten(\n      duplicateErrors.concat(\n        emptyRepetitionErrors,\n        leftRecursionErrors,\n        emptyAltErrors,\n        ambiguousAltsErrors,\n        termsNamespaceConflictErrors,\n        tooManyAltsErrors,\n        duplicateRulesError\n      )\n    )\n  )\n}\n\nfunction validateDuplicateProductions(\n  topLevelRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserDuplicatesDefinitionError[] {\n  let collectorVisitor = new OccurrenceValidationCollector()\n  topLevelRule.accept(collectorVisitor)\n  let allRuleProductions = collectorVisitor.allProductions\n\n  let productionGroups = utils.groupBy(\n    allRuleProductions,\n    identifyProductionForDuplicates\n  )\n\n  let duplicates: any = utils.pick(productionGroups, (currGroup) => {\n    return currGroup.length > 1\n  })\n\n  let errors = utils.map(utils.values(duplicates), (currDuplicates: any) => {\n    let firstProd: any = utils.first(currDuplicates)\n    let msg = errMsgProvider.buildDuplicateFoundError(\n      topLevelRule,\n      currDuplicates\n    )\n    let dslName = getProductionDslName(firstProd)\n    let defError: IParserDuplicatesDefinitionError = {\n      message: msg,\n      type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n      ruleName: topLevelRule.name,\n      dslName: dslName,\n      occurrence: firstProd.idx\n    }\n\n    let param = getExtraProductionArgument(firstProd)\n    if (param) {\n      defError.parameter = param\n    }\n\n    return defError\n  })\n  return errors\n}\n\nexport function identifyProductionForDuplicates(\n  prod: IProductionWithOccurrence\n): string {\n  return `${getProductionDslName(prod)}_#_${\n    prod.idx\n  }_#_${getExtraProductionArgument(prod)}`\n}\n\nfunction getExtraProductionArgument(prod: IProductionWithOccurrence): string {\n  if (prod instanceof Terminal) {\n    return prod.terminalType.name\n  } else if (prod instanceof NonTerminal) {\n    return prod.nonTerminalName\n  } else {\n    return \"\"\n  }\n}\n\nexport class OccurrenceValidationCollector extends GAstVisitor {\n  public allProductions: IProduction[] = []\n\n  public visitNonTerminal(subrule: NonTerminal): void {\n    this.allProductions.push(subrule)\n  }\n\n  public visitOption(option: Option): void {\n    this.allProductions.push(option)\n  }\n\n  public visitRepetitionWithSeparator(manySep: RepetitionWithSeparator): void {\n    this.allProductions.push(manySep)\n  }\n\n  public visitRepetitionMandatory(atLeastOne: RepetitionMandatory): void {\n    this.allProductions.push(atLeastOne)\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    atLeastOneSep: RepetitionMandatoryWithSeparator\n  ): void {\n    this.allProductions.push(atLeastOneSep)\n  }\n\n  public visitRepetition(many: Repetition): void {\n    this.allProductions.push(many)\n  }\n\n  public visitAlternation(or: Alternation): void {\n    this.allProductions.push(or)\n  }\n\n  public visitTerminal(terminal: Terminal): void {\n    this.allProductions.push(terminal)\n  }\n}\n\nexport function validateRuleDoesNotAlreadyExist(\n  rule: Rule,\n  allRules: Rule[],\n  className,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserDefinitionError[] {\n  let errors = []\n  const occurrences = reduce(\n    allRules,\n    (result, curRule) => {\n      if (curRule.name === rule.name) {\n        return result + 1\n      }\n      return result\n    },\n    0\n  )\n  if (occurrences > 1) {\n    const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n      topLevelRule: rule,\n      grammarName: className\n    })\n    errors.push({\n      message: errMsg,\n      type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n      ruleName: rule.name\n    })\n  }\n\n  return errors\n}\n\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(\n  ruleName: string,\n  definedRulesNames: string[],\n  className\n): IParserDefinitionError[] {\n  let errors = []\n  let errMsg\n\n  if (!utils.contains(definedRulesNames, ruleName)) {\n    errMsg =\n      `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n      `as it is not defined in any of the super grammars `\n    errors.push({\n      message: errMsg,\n      type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n      ruleName: ruleName\n    })\n  }\n\n  return errors\n}\n\nexport function validateNoLeftRecursion(\n  topRule: Rule,\n  currRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider,\n  path: Rule[] = []\n): IParserDefinitionError[] {\n  let errors = []\n  let nextNonTerminals = getFirstNoneTerminal(currRule.definition)\n  if (utils.isEmpty(nextNonTerminals)) {\n    return []\n  } else {\n    let ruleName = topRule.name\n    let foundLeftRecursion = utils.contains(<any>nextNonTerminals, topRule)\n    if (foundLeftRecursion) {\n      errors.push({\n        message: errMsgProvider.buildLeftRecursionError({\n          topLevelRule: topRule,\n          leftRecursionPath: path\n        }),\n        type: ParserDefinitionErrorType.LEFT_RECURSION,\n        ruleName: ruleName\n      })\n    }\n\n    // we are only looking for cyclic paths leading back to the specific topRule\n    // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n    let validNextSteps = utils.difference(\n      nextNonTerminals,\n      path.concat([topRule])\n    )\n    let errorsFromNextSteps = utils.map(validNextSteps, (currRefRule) => {\n      let newPath = utils.cloneArr(path)\n      newPath.push(currRefRule)\n      return validateNoLeftRecursion(\n        topRule,\n        currRefRule,\n        errMsgProvider,\n        newPath\n      )\n    })\n\n    return errors.concat(utils.flatten(errorsFromNextSteps))\n  }\n}\n\nexport function getFirstNoneTerminal(definition: IProduction[]): Rule[] {\n  let result = []\n  if (utils.isEmpty(definition)) {\n    return result\n  }\n  let firstProd = utils.first(definition)\n\n  /* istanbul ignore else */\n  if (firstProd instanceof NonTerminal) {\n    result.push(firstProd.referencedRule)\n  } else if (\n    firstProd instanceof AlternativeGAST ||\n    firstProd instanceof Option ||\n    firstProd instanceof RepetitionMandatory ||\n    firstProd instanceof RepetitionMandatoryWithSeparator ||\n    firstProd instanceof RepetitionWithSeparator ||\n    firstProd instanceof Repetition\n  ) {\n    result = result.concat(\n      getFirstNoneTerminal(<IProduction[]>firstProd.definition)\n    )\n  } else if (firstProd instanceof Alternation) {\n    // each sub definition in alternation is a FLAT\n    result = utils.flatten(\n      utils.map(firstProd.definition, (currSubDef) =>\n        getFirstNoneTerminal((<AlternativeGAST>currSubDef).definition)\n      )\n    )\n  } else if (firstProd instanceof Terminal) {\n    // nothing to see, move along\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n\n  let isFirstOptional = isOptionalProd(firstProd)\n  let hasMore = definition.length > 1\n  if (isFirstOptional && hasMore) {\n    let rest = utils.drop(definition)\n    return result.concat(getFirstNoneTerminal(rest))\n  } else {\n    return result\n  }\n}\n\nclass OrCollector extends GAstVisitor {\n  public alternations = []\n\n  public visitAlternation(node: Alternation): void {\n    this.alternations.push(node)\n  }\n}\n\nexport function validateEmptyOrAlternative(\n  topLevelRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserEmptyAlternativeDefinitionError[] {\n  let orCollector = new OrCollector()\n  topLevelRule.accept(orCollector)\n  let ors = orCollector.alternations\n\n  let errors = utils.reduce(\n    ors,\n    (errors, currOr) => {\n      let exceptLast = utils.dropRight(currOr.definition)\n      let currErrors = utils.map(\n        exceptLast,\n        (currAlternative: IProduction, currAltIdx) => {\n          const possibleFirstInAlt = nextPossibleTokensAfter(\n            [currAlternative],\n            [],\n            null,\n            1\n          )\n          if (utils.isEmpty(possibleFirstInAlt)) {\n            return {\n              message: errMsgProvider.buildEmptyAlternationError({\n                topLevelRule: topLevelRule,\n                alternation: currOr,\n                emptyChoiceIdx: currAltIdx\n              }),\n              type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n              ruleName: topLevelRule.name,\n              occurrence: currOr.idx,\n              alternative: currAltIdx + 1\n            }\n          } else {\n            return null\n          }\n        }\n      )\n      return errors.concat(utils.compact(currErrors))\n    },\n    []\n  )\n\n  return errors\n}\n\nexport function validateAmbiguousAlternationAlternatives(\n  topLevelRule: Rule,\n  globalMaxLookahead: number,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserAmbiguousAlternativesDefinitionError[] {\n  let orCollector = new OrCollector()\n  topLevelRule.accept(orCollector)\n  let ors = orCollector.alternations\n\n  // New Handling of ignoring ambiguities\n  // - https://github.com/SAP/chevrotain/issues/869\n  ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true)\n\n  let errors = utils.reduce(\n    ors,\n    (result, currOr: Alternation) => {\n      let currOccurrence = currOr.idx\n      const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead\n      let alternatives = getLookaheadPathsForOr(\n        currOccurrence,\n        topLevelRule,\n        actualMaxLookahead,\n        currOr\n      )\n      let altsAmbiguityErrors = checkAlternativesAmbiguities(\n        alternatives,\n        currOr,\n        topLevelRule,\n        errMsgProvider\n      )\n      let altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(\n        alternatives,\n        currOr,\n        topLevelRule,\n        errMsgProvider\n      )\n\n      return result.concat(altsAmbiguityErrors, altsPrefixAmbiguityErrors)\n    },\n    []\n  )\n\n  return errors\n}\n\nexport class RepetionCollector extends GAstVisitor {\n  public allProductions: IProduction[] = []\n\n  public visitRepetitionWithSeparator(manySep: RepetitionWithSeparator): void {\n    this.allProductions.push(manySep)\n  }\n\n  public visitRepetitionMandatory(atLeastOne: RepetitionMandatory): void {\n    this.allProductions.push(atLeastOne)\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    atLeastOneSep: RepetitionMandatoryWithSeparator\n  ): void {\n    this.allProductions.push(atLeastOneSep)\n  }\n\n  public visitRepetition(many: Repetition): void {\n    this.allProductions.push(many)\n  }\n}\n\nexport function validateTooManyAlts(\n  topLevelRule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserDefinitionError[] {\n  let orCollector = new OrCollector()\n  topLevelRule.accept(orCollector)\n  let ors = orCollector.alternations\n\n  let errors = utils.reduce(\n    ors,\n    (errors, currOr) => {\n      if (currOr.definition.length > 255) {\n        errors.push({\n          message: errMsgProvider.buildTooManyAlternativesError({\n            topLevelRule: topLevelRule,\n            alternation: currOr\n          }),\n          type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n          ruleName: topLevelRule.name,\n          occurrence: currOr.idx\n        })\n      }\n      return errors\n    },\n    []\n  )\n\n  return errors\n}\n\nexport function validateSomeNonEmptyLookaheadPath(\n  topLevelRules: Rule[],\n  maxLookahead: number,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserDefinitionError[] {\n  let errors = []\n  forEach(topLevelRules, (currTopRule) => {\n    let collectorVisitor = new RepetionCollector()\n    currTopRule.accept(collectorVisitor)\n    let allRuleProductions = collectorVisitor.allProductions\n    forEach(allRuleProductions, (currProd) => {\n      let prodType = getProdType(currProd)\n      const actualMaxLookahead = currProd.maxLookahead || maxLookahead\n      let currOccurrence = currProd.idx\n      let paths = getLookaheadPathsForOptionalProd(\n        currOccurrence,\n        currTopRule,\n        prodType,\n        actualMaxLookahead\n      )\n      let pathsInsideProduction = paths[0]\n      if (isEmpty(flatten(pathsInsideProduction))) {\n        const errMsg = errMsgProvider.buildEmptyRepetitionError({\n          topLevelRule: currTopRule,\n          repetition: currProd\n        })\n        errors.push({\n          message: errMsg,\n          type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n          ruleName: currTopRule.name\n        })\n      }\n    })\n  })\n\n  return errors\n}\n\nexport interface IAmbiguityDescriptor {\n  alts: number[]\n  path: TokenType[]\n}\n\nfunction checkAlternativesAmbiguities(\n  alternatives: Alternative[],\n  alternation: Alternation,\n  rule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserAmbiguousAlternativesDefinitionError[] {\n  let foundAmbiguousPaths = []\n  let identicalAmbiguities = reduce(\n    alternatives,\n    (result, currAlt, currAltIdx) => {\n      // ignore (skip) ambiguities with this alternative\n      if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n        return result\n      }\n\n      forEach(currAlt, (currPath) => {\n        let altsCurrPathAppearsIn = [currAltIdx]\n        forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n          if (\n            currAltIdx !== currOtherAltIdx &&\n            containsPath(currOtherAlt, currPath) &&\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true\n          ) {\n            altsCurrPathAppearsIn.push(currOtherAltIdx)\n          }\n        })\n\n        if (\n          altsCurrPathAppearsIn.length > 1 &&\n          !containsPath(foundAmbiguousPaths, currPath)\n        ) {\n          foundAmbiguousPaths.push(currPath)\n          result.push({\n            alts: altsCurrPathAppearsIn,\n            path: currPath\n          })\n        }\n      })\n      return result\n    },\n    []\n  )\n\n  let currErrors = utils.map(identicalAmbiguities, (currAmbDescriptor) => {\n    let ambgIndices = map(\n      currAmbDescriptor.alts,\n      (currAltIdx) => currAltIdx + 1\n    )\n\n    const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n      topLevelRule: rule,\n      alternation: alternation,\n      ambiguityIndices: ambgIndices,\n      prefixPath: currAmbDescriptor.path\n    })\n\n    return {\n      message: currMessage,\n      type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n      ruleName: rule.name,\n      occurrence: alternation.idx,\n      alternatives: [currAmbDescriptor.alts]\n    }\n  })\n\n  return currErrors\n}\n\nexport function checkPrefixAlternativesAmbiguities(\n  alternatives: Alternative[],\n  alternation: Alternation,\n  rule: Rule,\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IAmbiguityDescriptor[] {\n  let errors = []\n\n  // flatten\n  let pathsAndIndices = reduce(\n    alternatives,\n    (result, currAlt, idx) => {\n      let currPathsAndIdx = map(currAlt, (currPath) => {\n        return { idx: idx, path: currPath }\n      })\n      return result.concat(currPathsAndIdx)\n    },\n    []\n  )\n\n  forEach(pathsAndIndices, (currPathAndIdx) => {\n    const alternativeGast = alternation.definition[currPathAndIdx.idx]\n    // ignore (skip) ambiguities with this alternative\n    if (alternativeGast.ignoreAmbiguities === true) {\n      return\n    }\n    let targetIdx = currPathAndIdx.idx\n    let targetPath = currPathAndIdx.path\n\n    let prefixAmbiguitiesPathsAndIndices = findAll(\n      pathsAndIndices,\n      (searchPathAndIdx) => {\n        // prefix ambiguity can only be created from lower idx (higher priority) path\n        return (\n          // ignore (skip) ambiguities with this \"other\" alternative\n          alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n            true &&\n          searchPathAndIdx.idx < targetIdx &&\n          // checking for strict prefix because identical lookaheads\n          // will be be detected using a different validation.\n          isStrictPrefixOfPath(searchPathAndIdx.path, targetPath)\n        )\n      }\n    )\n\n    let currPathPrefixErrors = map(\n      prefixAmbiguitiesPathsAndIndices,\n      (currAmbPathAndIdx) => {\n        let ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1]\n        const occurrence = alternation.idx === 0 ? \"\" : alternation.idx\n\n        const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n          topLevelRule: rule,\n          alternation: alternation,\n          ambiguityIndices: ambgIndices,\n          prefixPath: currAmbPathAndIdx.path\n        })\n        return {\n          message: message,\n          type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n          ruleName: rule.name,\n          occurrence: occurrence,\n          alternatives: ambgIndices\n        }\n      }\n    )\n    errors = errors.concat(currPathPrefixErrors)\n  })\n\n  return errors\n}\n\nfunction checkTerminalAndNoneTerminalsNameSpace(\n  topLevels: Rule[],\n  tokenTypes: TokenType[],\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n): IParserDefinitionError[] {\n  let errors = []\n\n  let tokenNames = map(tokenTypes, (currToken) => currToken.name)\n\n  forEach(topLevels, (currRule) => {\n    const currRuleName = currRule.name\n    if (contains(tokenNames, currRuleName)) {\n      let errMsg = errMsgProvider.buildNamespaceConflictError(currRule)\n\n      errors.push({\n        message: errMsg,\n        type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n        ruleName: currRuleName\n      })\n    }\n  })\n\n  return errors\n}\n", "import { Rule } from \"./gast_public\"\n\nimport { defaults, forEach } from \"../../../utils/utils\"\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver\"\nimport { validateGrammar as orgValidateGrammar } from \"../checks\"\nimport {\n  defaultGrammarResolverErrorProvider,\n  defaultGrammarValidatorErrorProvider\n} from \"../../errors_public\"\nimport { DslMethodsCollectorVisitor } from \"./gast\"\nimport {\n  IGrammarResolverErrorMessageProvider,\n  IGrammarValidatorErrorMessageProvider,\n  IParserDefinitionError,\n  IProductionWithOccurrence,\n  TokenType\n} from \"../../../../api\"\n\nexport function resolveGrammar(options: {\n  rules: Rule[]\n  errMsgProvider?: IGrammarResolverErrorMessageProvider\n}): IParserDefinitionError[] {\n  options = defaults(options, {\n    errMsgProvider: defaultGrammarResolverErrorProvider\n  })\n\n  const topRulesTable = {}\n  forEach(options.rules, (rule) => {\n    topRulesTable[rule.name] = rule\n  })\n  return orgResolveGrammar(topRulesTable, options.errMsgProvider)\n}\n\nexport function validateGrammar(options: {\n  rules: Rule[]\n  maxLookahead: number\n  tokenTypes: TokenType[]\n  grammarName: string\n  errMsgProvider: IGrammarValidatorErrorMessageProvider\n}): IParserDefinitionError[] {\n  options = defaults(options, {\n    errMsgProvider: defaultGrammarValidatorErrorProvider\n  })\n\n  return orgValidateGrammar(\n    options.rules,\n    options.maxLookahead,\n    options.tokenTypes,\n    options.errMsgProvider,\n    options.grammarName\n  )\n}\n\nexport function assignOccurrenceIndices(options: { rules: Rule[] }): void {\n  forEach(options.rules, (currRule) => {\n    const methodsCollector = new DslMethodsCollectorVisitor()\n    currRule.accept(methodsCollector)\n    forEach(methodsCollector.dslMethods, (methods) => {\n      forEach(methods, (currMethod: IProductionWithOccurrence, arrIdx) => {\n        currMethod.idx = arrIdx + 1\n      })\n    })\n  })\n}\n", "import { contains } from \"../utils/utils\"\nimport { IToken, IRecognitionException, IRecognizerContext } from \"../../api\"\n\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\"\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\"\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\"\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\"\n\nconst RECOGNITION_EXCEPTION_NAMES = [\n  MISMATCHED_TOKEN_EXCEPTION,\n  NO_VIABLE_ALT_EXCEPTION,\n  EARLY_EXIT_EXCEPTION,\n  NOT_ALL_INPUT_PARSED_EXCEPTION\n]\n\nObject.freeze(RECOGNITION_EXCEPTION_NAMES)\n\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error: Error) {\n  // can't do instanceof on hacked custom js exceptions\n  return contains(RECOGNITION_EXCEPTION_NAMES, error.name)\n}\n\nabstract class RecognitionException\n  extends Error\n  implements IRecognitionException {\n  context: IRecognizerContext\n  resyncedTokens = []\n\n  protected constructor(message: string, public token: IToken) {\n    super(message)\n\n    // fix prototype chain when typescript target is ES5\n    Object.setPrototypeOf(this, new.target.prototype)\n\n    /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor)\n    }\n  }\n}\n\nexport class MismatchedTokenException extends RecognitionException {\n  constructor(message: string, token: IToken, public previousToken: IToken) {\n    super(message, token)\n    this.name = MISMATCHED_TOKEN_EXCEPTION\n  }\n}\n\nexport class NoViableAltException extends RecognitionException {\n  constructor(message: string, token: IToken, public previousToken: IToken) {\n    super(message, token)\n    this.name = NO_VIABLE_ALT_EXCEPTION\n  }\n}\n\nexport class NotAllInputParsedException extends RecognitionException {\n  constructor(message: string, token: IToken) {\n    super(message, token)\n    this.name = NOT_ALL_INPUT_PARSED_EXCEPTION\n  }\n}\n\nexport class EarlyExitException extends RecognitionException {\n  constructor(message: string, token: IToken, public previousToken: IToken) {\n    super(message, token)\n    this.name = EARLY_EXIT_EXCEPTION\n  }\n}\n", "import { createTokenInstance, EOF } from \"../../../scan/tokens_public\"\nimport {\n  AbstractNextTerminalAfterProductionWalker,\n  IFirstAfterRepetition\n} from \"../../grammar/interpreter\"\nimport {\n  cloneArr,\n  contains,\n  dropRight,\n  find,\n  flatten,\n  has,\n  isEmpty,\n  map\n} from \"../../../utils/utils\"\nimport {\n  IParserConfig,\n  IToken,\n  ITokenGrammarPath,\n  TokenType\n} from \"../../../../api\"\nimport { MismatchedTokenException } from \"../../exceptions_public\"\nimport { IN } from \"../../constants\"\nimport { MixedInParser } from \"./parser_traits\"\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\"\n\nexport const EOF_FOLLOW_KEY: any = {}\n\nexport interface IFollowKey {\n  ruleName: string\n  idxInCallingRule: number\n  inRule: string\n}\n\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\"\n\nexport function InRuleRecoveryException(message: string) {\n  this.name = IN_RULE_RECOVERY_EXCEPTION\n  this.message = message\n}\n\nInRuleRecoveryException.prototype = Error.prototype\n\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n  recoveryEnabled: boolean\n  firstAfterRepMap: Record<string, IFirstAfterRepetition>\n  resyncFollows: Record<string, TokenType[]>\n\n  initRecoverable(config: IParserConfig) {\n    this.firstAfterRepMap = {}\n    this.resyncFollows = {}\n\n    this.recoveryEnabled = has(config, \"recoveryEnabled\")\n      ? config.recoveryEnabled\n      : DEFAULT_PARSER_CONFIG.recoveryEnabled\n\n    // performance optimization, NOOP will be inlined which\n    // effectively means that this optional feature does not exist\n    // when not used.\n    if (this.recoveryEnabled) {\n      this.attemptInRepetitionRecovery = attemptInRepetitionRecovery\n    }\n  }\n\n  public getTokenToInsert(tokType: TokenType): IToken {\n    let tokToInsert = createTokenInstance(\n      tokType,\n      \"\",\n      NaN,\n      NaN,\n      NaN,\n      NaN,\n      NaN,\n      NaN\n    )\n    tokToInsert.isInsertedInRecovery = true\n    return tokToInsert\n  }\n\n  public canTokenTypeBeInsertedInRecovery(tokType: TokenType) {\n    return true\n  }\n\n  tryInRepetitionRecovery(\n    this: MixedInParser,\n    grammarRule: Function,\n    grammarRuleArgs: any[],\n    lookAheadFunc: () => boolean,\n    expectedTokType: TokenType\n  ): void {\n    // TODO: can the resyncTokenType be cached?\n    let reSyncTokType = this.findReSyncTokenType()\n    let savedLexerState = this.exportLexerState()\n    let resyncedTokens = []\n    let passedResyncPoint = false\n\n    let nextTokenWithoutResync = this.LA(1)\n    let currToken = this.LA(1)\n\n    let generateErrorMessage = () => {\n      let previousToken = this.LA(0)\n      // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n      // the error that would have been thrown\n      let msg = this.errorMessageProvider.buildMismatchTokenMessage({\n        expected: expectedTokType,\n        actual: nextTokenWithoutResync,\n        previous: previousToken,\n        ruleName: this.getCurrRuleFullName()\n      })\n      let error = new MismatchedTokenException(\n        msg,\n        nextTokenWithoutResync,\n        this.LA(0)\n      )\n      // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n      error.resyncedTokens = dropRight(resyncedTokens)\n      this.SAVE_ERROR(error)\n    }\n\n    while (!passedResyncPoint) {\n      // re-synced to a point where we can safely exit the repetition/\n      if (this.tokenMatcher(currToken, expectedTokType)) {\n        generateErrorMessage()\n        return // must return here to avoid reverting the inputIdx\n      } else if (lookAheadFunc.call(this)) {\n        // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n        generateErrorMessage()\n        // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n        grammarRule.apply(this, grammarRuleArgs)\n        return // must return here to avoid reverting the inputIdx\n      } else if (this.tokenMatcher(currToken, reSyncTokType)) {\n        passedResyncPoint = true\n      } else {\n        currToken = this.SKIP_TOKEN()\n        this.addToResyncTokens(currToken, resyncedTokens)\n      }\n    }\n\n    // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n    // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n    // \"between rules\" resync recovery later in the flow.\n    this.importLexerState(savedLexerState)\n  }\n\n  shouldInRepetitionRecoveryBeTried(\n    this: MixedInParser,\n    expectTokAfterLastMatch: TokenType,\n    nextTokIdx: number,\n    notStuck: boolean | undefined\n  ): boolean {\n    // Edge case of arriving from a MANY repetition which is stuck\n    // Attempting recovery in this case could cause an infinite loop\n    if (notStuck === false) {\n      return false\n    }\n\n    // arguments to try and perform resync into the next iteration of the many are missing\n    if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n      return false\n    }\n\n    // no need to recover, next token is what we expect...\n    if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n      return false\n    }\n\n    // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n    // and prefer some backtracking path that includes recovered errors.\n    if (this.isBackTracking()) {\n      return false\n    }\n\n    // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n    // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n    //noinspection RedundantIfStatementJS\n    if (\n      this.canPerformInRuleRecovery(\n        expectTokAfterLastMatch,\n        this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx)\n      )\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  // Error Recovery functionality\n  getFollowsForInRuleRecovery(\n    this: MixedInParser,\n    tokType: TokenType,\n    tokIdxInRule: number\n  ): TokenType[] {\n    let grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule)\n    let follows = this.getNextPossibleTokenTypes(grammarPath)\n    return follows\n  }\n\n  tryInRuleRecovery(\n    this: MixedInParser,\n    expectedTokType: TokenType,\n    follows: TokenType[]\n  ): IToken {\n    if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n      let tokToInsert = this.getTokenToInsert(expectedTokType)\n      return tokToInsert\n    }\n\n    if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n      let nextTok = this.SKIP_TOKEN()\n      this.consumeToken()\n      return nextTok\n    }\n\n    throw new InRuleRecoveryException(\"sad sad panda\")\n  }\n\n  canPerformInRuleRecovery(\n    this: MixedInParser,\n    expectedToken: TokenType,\n    follows: TokenType[]\n  ): boolean {\n    return (\n      this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n      this.canRecoverWithSingleTokenDeletion(expectedToken)\n    )\n  }\n\n  canRecoverWithSingleTokenInsertion(\n    this: MixedInParser,\n    expectedTokType: TokenType,\n    follows: TokenType[]\n  ): boolean {\n    if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n      return false\n    }\n\n    // must know the possible following tokens to perform single token insertion\n    if (isEmpty(follows)) {\n      return false\n    }\n\n    let mismatchedTok = this.LA(1)\n    let isMisMatchedTokInFollows =\n      find(follows, (possibleFollowsTokType: TokenType) => {\n        return this.tokenMatcher(mismatchedTok, possibleFollowsTokType)\n      }) !== undefined\n\n    return isMisMatchedTokInFollows\n  }\n\n  canRecoverWithSingleTokenDeletion(\n    this: MixedInParser,\n    expectedTokType: TokenType\n  ): boolean {\n    let isNextTokenWhatIsExpected = this.tokenMatcher(\n      this.LA(2),\n      expectedTokType\n    )\n    return isNextTokenWhatIsExpected\n  }\n\n  isInCurrentRuleReSyncSet(\n    this: MixedInParser,\n    tokenTypeIdx: TokenType\n  ): boolean {\n    let followKey = this.getCurrFollowKey()\n    let currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey)\n    return contains(currentRuleReSyncSet, tokenTypeIdx)\n  }\n\n  findReSyncTokenType(this: MixedInParser): TokenType {\n    let allPossibleReSyncTokTypes = this.flattenFollowSet()\n    // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n    let nextToken = this.LA(1)\n    let k = 2\n    while (true) {\n      let nextTokenType: any = nextToken.tokenType\n      if (contains(allPossibleReSyncTokTypes, nextTokenType)) {\n        return nextTokenType\n      }\n      nextToken = this.LA(k)\n      k++\n    }\n  }\n\n  getCurrFollowKey(this: MixedInParser): IFollowKey {\n    // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n    if (this.RULE_STACK.length === 1) {\n      return EOF_FOLLOW_KEY\n    }\n    let currRuleShortName = this.getLastExplicitRuleShortName()\n    let currRuleIdx = this.getLastExplicitRuleOccurrenceIndex()\n    let prevRuleShortName = this.getPreviousExplicitRuleShortName()\n\n    return {\n      ruleName: this.shortRuleNameToFullName(currRuleShortName),\n      idxInCallingRule: currRuleIdx,\n      inRule: this.shortRuleNameToFullName(prevRuleShortName)\n    }\n  }\n\n  buildFullFollowKeyStack(this: MixedInParser): IFollowKey[] {\n    let explicitRuleStack = this.RULE_STACK\n    let explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK\n\n    return map(explicitRuleStack, (ruleName, idx) => {\n      if (idx === 0) {\n        return EOF_FOLLOW_KEY\n      }\n      return {\n        ruleName: this.shortRuleNameToFullName(ruleName),\n        idxInCallingRule: explicitOccurrenceStack[idx],\n        inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1])\n      }\n    })\n  }\n\n  flattenFollowSet(this: MixedInParser): TokenType[] {\n    let followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n      return this.getFollowSetFromFollowKey(currKey)\n    })\n    return <any>flatten(followStack)\n  }\n\n  getFollowSetFromFollowKey(\n    this: MixedInParser,\n    followKey: IFollowKey\n  ): TokenType[] {\n    if (followKey === EOF_FOLLOW_KEY) {\n      return [EOF]\n    }\n\n    let followName =\n      followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule\n\n    return this.resyncFollows[followName]\n  }\n\n  // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n  // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n  addToResyncTokens(\n    this: MixedInParser,\n    token: IToken,\n    resyncTokens: IToken[]\n  ): IToken[] {\n    if (!this.tokenMatcher(token, EOF)) {\n      resyncTokens.push(token)\n    }\n    return resyncTokens\n  }\n\n  reSyncTo(this: MixedInParser, tokType: TokenType): IToken[] {\n    let resyncedTokens = []\n    let nextTok = this.LA(1)\n    while (this.tokenMatcher(nextTok, tokType) === false) {\n      nextTok = this.SKIP_TOKEN()\n      this.addToResyncTokens(nextTok, resyncedTokens)\n    }\n    // the last token is not part of the error.\n    return dropRight(resyncedTokens)\n  }\n\n  attemptInRepetitionRecovery(\n    this: MixedInParser,\n    prodFunc: Function,\n    args: any[],\n    lookaheadFunc: () => boolean,\n    dslMethodIdx: number,\n    prodOccurrence: number,\n    nextToksWalker: typeof AbstractNextTerminalAfterProductionWalker,\n    notStuck?: boolean\n  ): void {\n    // by default this is a NO-OP\n    // The actual implementation is with the function(not method) below\n  }\n\n  getCurrentGrammarPath(\n    this: MixedInParser,\n    tokType: TokenType,\n    tokIdxInRule: number\n  ): ITokenGrammarPath {\n    let pathRuleStack: string[] = this.getHumanReadableRuleStack()\n    let pathOccurrenceStack: number[] = cloneArr(this.RULE_OCCURRENCE_STACK)\n    let grammarPath: any = {\n      ruleStack: pathRuleStack,\n      occurrenceStack: pathOccurrenceStack,\n      lastTok: tokType,\n      lastTokOccurrence: tokIdxInRule\n    }\n\n    return grammarPath\n  }\n  getHumanReadableRuleStack(this: MixedInParser): string[] {\n    return map(this.RULE_STACK, (currShortName) =>\n      this.shortRuleNameToFullName(currShortName)\n    )\n  }\n}\n\nexport function attemptInRepetitionRecovery(\n  this: MixedInParser,\n  prodFunc: Function,\n  args: any[],\n  lookaheadFunc: () => boolean,\n  dslMethodIdx: number,\n  prodOccurrence: number,\n  nextToksWalker: typeof AbstractNextTerminalAfterProductionWalker,\n  notStuck?: boolean\n) {\n  let key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence)\n  let firstAfterRepInfo = this.firstAfterRepMap[key]\n  if (firstAfterRepInfo === undefined) {\n    let currRuleName = this.getCurrRuleFullName()\n    let ruleGrammar = this.getGAstProductions()[currRuleName]\n    let walker: AbstractNextTerminalAfterProductionWalker = new nextToksWalker(\n      ruleGrammar,\n      prodOccurrence\n    )\n    firstAfterRepInfo = walker.startWalking()\n    this.firstAfterRepMap[key] = firstAfterRepInfo\n  }\n\n  let expectTokAfterLastMatch = firstAfterRepInfo.token\n  let nextTokIdx = firstAfterRepInfo.occurrence\n  let isEndOfRule = firstAfterRepInfo.isEndOfRule\n\n  // special edge case of a TOP most repetition after which the input should END.\n  // this will force an attempt for inRule recovery in that scenario.\n  if (\n    this.RULE_STACK.length === 1 &&\n    isEndOfRule &&\n    expectTokAfterLastMatch === undefined\n  ) {\n    expectTokAfterLastMatch = EOF\n    nextTokIdx = 1\n  }\n\n  if (\n    this.shouldInRepetitionRecoveryBeTried(\n      expectTokAfterLastMatch,\n      nextTokIdx,\n      notStuck\n    )\n  ) {\n    // TODO: performance optimization: instead of passing the original args here, we modify\n    // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n    // to avoid searching the cache for it once more.\n    this.tryInRepetitionRecovery(\n      prodFunc,\n      args,\n      lookaheadFunc,\n      expectTokAfterLastMatch\n    )\n  }\n}\n", "// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\n\nexport const BITS_FOR_METHOD_TYPE = 4\nexport const BITS_FOR_OCCURRENCE_IDX = 8\nexport const BITS_FOR_RULE_IDX = 12\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8\n\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\n/* tslint:disable */\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX\n/* tslint:enable */\n\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(\n  ruleIdx: number,\n  dslMethodIdx: number,\n  occurrence: number\n): number {\n  /* tslint:disable */\n  return occurrence | dslMethodIdx | ruleIdx\n  /* tslint:enable */\n}\n\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX\n", "import {\n  buildAlternativesLookAheadFunc,\n  buildLookaheadFuncForOptionalProd,\n  buildLookaheadFuncForOr,\n  buildSingleAlternativeLookaheadFunction,\n  PROD_TYPE\n} from \"../../grammar/lookahead\"\nimport { forEach, has, isES2015MapSupported } from \"../../../utils/utils\"\nimport {\n  DEFAULT_PARSER_CONFIG,\n  lookAheadSequence,\n  TokenMatcher\n} from \"../parser\"\nimport { IOrAlt, IParserConfig } from \"../../../../api\"\nimport {\n  AT_LEAST_ONE_IDX,\n  AT_LEAST_ONE_SEP_IDX,\n  getKeyForAutomaticLookahead,\n  MANY_IDX,\n  MANY_SEP_IDX,\n  OPTION_IDX,\n  OR_IDX\n} from \"../../grammar/keys\"\nimport { MixedInParser } from \"./parser_traits\"\nimport { Rule } from \"../../grammar/gast/gast_public\"\nimport { collectMethods, getProductionDslName } from \"../../grammar/gast/gast\"\n\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n  maxLookahead: number\n  lookAheadFuncsCache: any\n  dynamicTokensEnabled: boolean\n\n  initLooksAhead(config: IParserConfig) {\n    this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n      ? config.dynamicTokensEnabled\n      : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled\n\n    this.maxLookahead = has(config, \"maxLookahead\")\n      ? config.maxLookahead\n      : DEFAULT_PARSER_CONFIG.maxLookahead\n\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    this.lookAheadFuncsCache = isES2015MapSupported() ? new Map() : []\n\n    // Performance optimization on newer engines that support ES6 Map\n    // For larger Maps this is slightly faster than using a plain object (array in our case).\n    /* istanbul ignore else - The else branch will be tested on older node.js versions and IE11 */\n    if (isES2015MapSupported()) {\n      this.getLaFuncFromCache = this.getLaFuncFromMap\n      this.setLaFuncCache = this.setLaFuncCacheUsingMap\n    } else {\n      this.getLaFuncFromCache = this.getLaFuncFromObj\n      this.setLaFuncCache = this.setLaFuncUsingObj\n    }\n  }\n\n  preComputeLookaheadFunctions(this: MixedInParser, rules: Rule[]): void {\n    forEach(rules, (currRule) => {\n      this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n        const {\n          alternation,\n          repetition,\n          option,\n          repetitionMandatory,\n          repetitionMandatoryWithSeparator,\n          repetitionWithSeparator\n        } = collectMethods(currRule)\n\n        forEach(alternation, (currProd) => {\n          const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx\n          this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n            const laFunc = buildLookaheadFuncForOr(\n              currProd.idx,\n              currRule,\n              currProd.maxLookahead || this.maxLookahead,\n              currProd.hasPredicates,\n              this.dynamicTokensEnabled,\n              this.lookAheadBuilderForAlternatives\n            )\n\n            const key = getKeyForAutomaticLookahead(\n              this.fullRuleNameToShort[currRule.name],\n              OR_IDX,\n              currProd.idx\n            )\n            this.setLaFuncCache(key, laFunc)\n          })\n        })\n\n        forEach(repetition, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            MANY_IDX,\n            PROD_TYPE.REPETITION,\n            currProd.maxLookahead,\n            getProductionDslName(currProd)\n          )\n        })\n\n        forEach(option, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            OPTION_IDX,\n            PROD_TYPE.OPTION,\n            currProd.maxLookahead,\n            getProductionDslName(currProd)\n          )\n        })\n\n        forEach(repetitionMandatory, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            AT_LEAST_ONE_IDX,\n            PROD_TYPE.REPETITION_MANDATORY,\n            currProd.maxLookahead,\n            getProductionDslName(currProd)\n          )\n        })\n\n        forEach(repetitionMandatoryWithSeparator, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            AT_LEAST_ONE_SEP_IDX,\n            PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,\n            currProd.maxLookahead,\n            getProductionDslName(currProd)\n          )\n        })\n\n        forEach(repetitionWithSeparator, (currProd) => {\n          this.computeLookaheadFunc(\n            currRule,\n            currProd.idx,\n            MANY_SEP_IDX,\n            PROD_TYPE.REPETITION_WITH_SEPARATOR,\n            currProd.maxLookahead,\n            getProductionDslName(currProd)\n          )\n        })\n      })\n    })\n  }\n\n  computeLookaheadFunc(\n    this: MixedInParser,\n    rule: Rule,\n    prodOccurrence: number,\n    prodKey: number,\n    prodType: PROD_TYPE,\n    prodMaxLookahead: number,\n    dslMethodName: string\n  ): void {\n    this.TRACE_INIT(\n      `${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`,\n      () => {\n        const laFunc = buildLookaheadFuncForOptionalProd(\n          prodOccurrence,\n          rule,\n          prodMaxLookahead || this.maxLookahead,\n          this.dynamicTokensEnabled,\n          prodType,\n          this.lookAheadBuilderForOptional\n        )\n        const key = getKeyForAutomaticLookahead(\n          this.fullRuleNameToShort[rule.name],\n          prodKey,\n          prodOccurrence\n        )\n        this.setLaFuncCache(key, laFunc)\n      }\n    )\n  }\n\n  lookAheadBuilderForOptional(\n    this: MixedInParser,\n    alt: lookAheadSequence,\n    tokenMatcher: TokenMatcher,\n    dynamicTokensEnabled: boolean\n  ): () => boolean {\n    return buildSingleAlternativeLookaheadFunction(\n      alt,\n      tokenMatcher,\n      dynamicTokensEnabled\n    )\n  }\n\n  lookAheadBuilderForAlternatives(\n    this: MixedInParser,\n    alts: lookAheadSequence[],\n    hasPredicates: boolean,\n    tokenMatcher: TokenMatcher,\n    dynamicTokensEnabled: boolean\n  ): (orAlts?: IOrAlt<any>[]) => number | undefined {\n    return buildAlternativesLookAheadFunc(\n      alts,\n      hasPredicates,\n      tokenMatcher,\n      dynamicTokensEnabled\n    )\n  }\n\n  // this actually returns a number, but it is always used as a string (object prop key)\n  getKeyForAutomaticLookahead(\n    this: MixedInParser,\n    dslMethodIdx: number,\n    occurrence: number\n  ): number {\n    let currRuleShortName: any = this.getLastExplicitRuleShortName()\n    return getKeyForAutomaticLookahead(\n      currRuleShortName,\n      dslMethodIdx,\n      occurrence\n    )\n  }\n\n  /* istanbul ignore next */\n  getLaFuncFromCache(this: MixedInParser, key: number): Function {\n    return undefined\n  }\n\n  getLaFuncFromMap(this: MixedInParser, key: number): Function {\n    return this.lookAheadFuncsCache.get(key)\n  }\n\n  /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n  getLaFuncFromObj(this: MixedInParser, key: number): Function {\n    return this.lookAheadFuncsCache[key]\n  }\n\n  /* istanbul ignore next */\n  setLaFuncCache(this: MixedInParser, key: number, value: Function): void {}\n\n  setLaFuncCacheUsingMap(\n    this: MixedInParser,\n    key: number,\n    value: Function\n  ): void {\n    this.lookAheadFuncsCache.set(key, value)\n  }\n\n  /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n  setLaFuncUsingObj(this: MixedInParser, key: number, value: Function): void {\n    this.lookAheadFuncsCache[key] = value\n  }\n}\n", "import { CstNode, CstNodeLocation, IToken } from \"../../../api\"\n\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(\n  currNodeLocation: CstNodeLocation,\n  newLocationInfo: IToken\n): void {\n  // First (valid) update for this cst node\n  if (isNaN(currNodeLocation.startOffset) === true) {\n    // assumption1: Token location information is either NaN or a valid number\n    // assumption2: Token location information is fully valid if it exist\n    // (both start/end offsets exist and are numbers).\n    currNodeLocation.startOffset = newLocationInfo.startOffset\n    currNodeLocation.endOffset = newLocationInfo.endOffset\n  }\n  // Once the startOffset has been updated with a valid number it should never receive\n  // any farther updates as the Token vector is sorted.\n  // We still have to check this this condition for every new possible location info\n  // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n  else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n    currNodeLocation.endOffset = newLocationInfo.endOffset\n  }\n}\n\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(\n  currNodeLocation: CstNodeLocation,\n  newLocationInfo: CstNodeLocation\n): void {\n  // First (valid) update for this cst node\n  if (isNaN(currNodeLocation.startOffset) === true) {\n    // assumption1: Token location information is either NaN or a valid number\n    // assumption2: Token location information is fully valid if it exist\n    // (all start/end props exist and are numbers).\n    currNodeLocation.startOffset = newLocationInfo.startOffset\n    currNodeLocation.startColumn = newLocationInfo.startColumn\n    currNodeLocation.startLine = newLocationInfo.startLine\n    currNodeLocation.endOffset = newLocationInfo.endOffset\n    currNodeLocation.endColumn = newLocationInfo.endColumn\n    currNodeLocation.endLine = newLocationInfo.endLine\n  }\n  // Once the start props has been updated with a valid number it should never receive\n  // any farther updates as the Token vector is sorted.\n  // We still have to check this this condition for every new possible location info\n  // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n  else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n    currNodeLocation.endOffset = newLocationInfo.endOffset\n    currNodeLocation.endColumn = newLocationInfo.endColumn\n    currNodeLocation.endLine = newLocationInfo.endLine\n  }\n}\n\nexport function addTerminalToCst(\n  node: CstNode,\n  token: IToken,\n  tokenTypeName: string\n): void {\n  if (node.children[tokenTypeName] === undefined) {\n    node.children[tokenTypeName] = [token]\n  } else {\n    node.children[tokenTypeName].push(token)\n  }\n}\n\nexport function addNoneTerminalToCst(\n  node: CstNode,\n  ruleName: string,\n  ruleResult: any\n): void {\n  if (node.children[ruleName] === undefined) {\n    node.children[ruleName] = [ruleResult]\n  } else {\n    node.children[ruleName].push(ruleResult)\n  }\n}\n", "import { TokenType } from \"../../api\"\nimport { isUndefined } from \"../utils/utils\"\n\nexport function classNameFromInstance(instance: any): string {\n  return functionName(instance.constructor)\n}\n\nconst NAME = \"name\"\n\n/**\n * Utility to obtain Function names.\n * Note that there should not be an assumptions on the result of this function.\n * E.g: When running from minified source code the result may be auto generated.\n */\nexport function functionName(func: TokenType): string {\n  // Engines that support Function.prototype.name OR the nth (n>1) time after\n  // the name has been computed in the following else block.\n  let existingNameProp = (<any>func).name\n  /* istanbul ignore else - too many hacks for IE/old versions of node.js here*/\n  if (existingNameProp) {\n    return existingNameProp\n  } else {\n    return \"anonymous\"\n  }\n}\n\n/**\n * @returns {boolean} - has the property been successfully defined\n */\nexport function defineNameProp(obj, nameValue): boolean {\n  let namePropDescriptor = Object.getOwnPropertyDescriptor(obj, NAME)\n  /* istanbul ignore else -> will only run in old versions of node.js */\n  if (isUndefined(namePropDescriptor) || namePropDescriptor.configurable) {\n    Object.defineProperty(obj, NAME, {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: nameValue\n    })\n\n    return true\n  }\n  /* istanbul ignore next -> will only run in old versions of node.js */\n  return false\n}\n", "import {\n  compact,\n  contains,\n  forEach,\n  isArray,\n  isEmpty,\n  isFunction,\n  isUndefined,\n  keys,\n  map\n} from \"../../utils/utils\"\nimport { defineNameProp, functionName } from \"../../lang/lang_extensions\"\nimport { ICstVisitor } from \"../../../api\"\n\nexport function defaultVisit<IN, OUT>(ctx: any, param: IN): OUT {\n  let childrenNames = keys(ctx)\n  let childrenNamesLength = childrenNames.length\n  for (let i = 0; i < childrenNamesLength; i++) {\n    let currChildName = childrenNames[i]\n    let currChildArray = ctx[currChildName]\n    let currChildArrayLength = currChildArray.length\n    for (let j = 0; j < currChildArrayLength; j++) {\n      let currChild: any = currChildArray[j]\n      // distinction between Tokens Children and CstNode children\n      if (currChild.tokenTypeIdx === undefined) {\n        this[currChild.name](currChild.children, param)\n      }\n    }\n  }\n  // defaultVisit does not support generic out param\n  return undefined\n}\n\nexport function createBaseSemanticVisitorConstructor(\n  grammarName: string,\n  ruleNames: string[]\n): {\n  new (...args: any[]): ICstVisitor<any, any>\n} {\n  let derivedConstructor: any = function () {}\n\n  // can be overwritten according to:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n  // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n  defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\")\n\n  let semanticProto = {\n    visit: function (cstNode, param) {\n      // enables writing more concise visitor methods when CstNode has only a single child\n      if (isArray(cstNode)) {\n        // A CST Node's children dictionary can never have empty arrays as values\n        // If a key is defined there will be at least one element in the corresponding value array.\n        cstNode = cstNode[0]\n      }\n\n      // enables passing optional CstNodes concisely.\n      if (isUndefined(cstNode)) {\n        return undefined\n      }\n\n      return this[cstNode.name](cstNode.children, param)\n    },\n\n    validateVisitor: function () {\n      let semanticDefinitionErrors = validateVisitor(this, ruleNames)\n      if (!isEmpty(semanticDefinitionErrors)) {\n        let errorMessages = map(\n          semanticDefinitionErrors,\n          (currDefError) => currDefError.msg\n        )\n        throw Error(\n          `Errors Detected in CST Visitor <${functionName(\n            this.constructor\n          )}>:\\n\\t` + `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`\n        )\n      }\n    }\n  }\n\n  derivedConstructor.prototype = semanticProto\n  derivedConstructor.prototype.constructor = derivedConstructor\n\n  derivedConstructor._RULE_NAMES = ruleNames\n\n  return derivedConstructor\n}\n\nexport function createBaseVisitorConstructorWithDefaults(\n  grammarName: string,\n  ruleNames: string[],\n  baseConstructor: Function\n): {\n  new (...args: any[]): ICstVisitor<any, any>\n} {\n  let derivedConstructor: any = function () {}\n\n  // can be overwritten according to:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n  // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n  defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\")\n\n  let withDefaultsProto = Object.create(baseConstructor.prototype)\n  forEach(ruleNames, (ruleName) => {\n    withDefaultsProto[ruleName] = defaultVisit\n  })\n\n  derivedConstructor.prototype = withDefaultsProto\n  derivedConstructor.prototype.constructor = derivedConstructor\n\n  return derivedConstructor\n}\n\nexport enum CstVisitorDefinitionError {\n  REDUNDANT_METHOD,\n  MISSING_METHOD\n}\n\nexport interface IVisitorDefinitionError {\n  msg: string\n  type: CstVisitorDefinitionError\n  methodName: string\n}\n\nexport function validateVisitor(\n  visitorInstance: Function,\n  ruleNames: string[]\n): IVisitorDefinitionError[] {\n  let missingErrors = validateMissingCstMethods(visitorInstance, ruleNames)\n  let redundantErrors = validateRedundantMethods(visitorInstance, ruleNames)\n\n  return missingErrors.concat(redundantErrors)\n}\n\nexport function validateMissingCstMethods(\n  visitorInstance: Function,\n  ruleNames: string[]\n): IVisitorDefinitionError[] {\n  let errors: IVisitorDefinitionError[] = map(ruleNames, (currRuleName) => {\n    if (!isFunction(visitorInstance[currRuleName])) {\n      return {\n        msg: `Missing visitor method: <${currRuleName}> on ${functionName(\n          <any>visitorInstance.constructor\n        )} CST Visitor.`,\n        type: CstVisitorDefinitionError.MISSING_METHOD,\n        methodName: currRuleName\n      }\n    }\n  })\n\n  return compact<IVisitorDefinitionError>(errors)\n}\n\nconst VALID_PROP_NAMES = [\"constructor\", \"visit\", \"validateVisitor\"]\nexport function validateRedundantMethods(\n  visitorInstance: Function,\n  ruleNames: string[]\n): IVisitorDefinitionError[] {\n  let errors = []\n\n  for (let prop in visitorInstance) {\n    if (\n      isFunction(visitorInstance[prop]) &&\n      !contains(VALID_PROP_NAMES, prop) &&\n      !contains(ruleNames, prop)\n    ) {\n      errors.push({\n        msg:\n          `Redundant visitor method: <${prop}> on ${functionName(\n            <any>visitorInstance.constructor\n          )} CST Visitor\\n` +\n          `There is no Grammar Rule corresponding to this method's name.\\n`,\n        type: CstVisitorDefinitionError.REDUNDANT_METHOD,\n        methodName: prop\n      })\n    }\n  }\n  return errors\n}\n", "import {\n  addNoneTerminalToCst,\n  addTerminalToCst,\n  setNodeLocationFull,\n  setNodeLocationOnlyOffset\n} from \"../../cst/cst\"\nimport { has, isUndefined, keys, NOOP } from \"../../../utils/utils\"\nimport {\n  createBaseSemanticVisitorConstructor,\n  createBaseVisitorConstructorWithDefaults\n} from \"../../cst/cst_visitor\"\nimport {\n  CstNode,\n  CstNodeLocation,\n  ICstVisitor,\n  IParserConfig,\n  IToken,\n  nodeLocationTrackingOptions\n} from \"../../../../api\"\nimport { MixedInParser } from \"./parser_traits\"\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\"\n\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n  outputCst: boolean\n  CST_STACK: CstNode[]\n  baseCstVisitorConstructor: Function\n  baseCstVisitorWithDefaultsConstructor: Function\n\n  // dynamically assigned Methods\n  setNodeLocationFromNode: (\n    nodeLocation: CstNodeLocation,\n    locationInformation: CstNodeLocation\n  ) => void\n  setNodeLocationFromToken: (\n    nodeLocation: CstNodeLocation,\n    locationInformation: CstNodeLocation\n  ) => void\n  cstPostRule: (this: MixedInParser, ruleCstNode: CstNode) => void\n\n  setInitialNodeLocation: (cstNode: CstNode) => void\n  nodeLocationTracking: nodeLocationTrackingOptions\n\n  initTreeBuilder(this: MixedInParser, config: IParserConfig) {\n    this.CST_STACK = []\n\n    // outputCst is no longer exposed/defined in the pubic API\n    this.outputCst = (config as any).outputCst\n\n    this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n      ? config.nodeLocationTracking\n      : DEFAULT_PARSER_CONFIG.nodeLocationTracking\n\n    if (!this.outputCst) {\n      this.cstInvocationStateUpdate = NOOP\n      this.cstFinallyStateUpdate = NOOP\n      this.cstPostTerminal = NOOP\n      this.cstPostNonTerminal = NOOP\n      this.cstPostRule = NOOP\n    } else {\n      if (/full/i.test(this.nodeLocationTracking)) {\n        if (this.recoveryEnabled) {\n          this.setNodeLocationFromToken = setNodeLocationFull\n          this.setNodeLocationFromNode = setNodeLocationFull\n          this.cstPostRule = NOOP\n          this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery\n        } else {\n          this.setNodeLocationFromToken = NOOP\n          this.setNodeLocationFromNode = NOOP\n          this.cstPostRule = this.cstPostRuleFull\n          this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular\n        }\n      } else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n        if (this.recoveryEnabled) {\n          this.setNodeLocationFromToken = <any>setNodeLocationOnlyOffset\n          this.setNodeLocationFromNode = <any>setNodeLocationOnlyOffset\n          this.cstPostRule = NOOP\n          this.setInitialNodeLocation = this.setInitialNodeLocationOnlyOffsetRecovery\n        } else {\n          this.setNodeLocationFromToken = NOOP\n          this.setNodeLocationFromNode = NOOP\n          this.cstPostRule = this.cstPostRuleOnlyOffset\n          this.setInitialNodeLocation = this.setInitialNodeLocationOnlyOffsetRegular\n        }\n      } else if (/none/i.test(this.nodeLocationTracking)) {\n        this.setNodeLocationFromToken = NOOP\n        this.setNodeLocationFromNode = NOOP\n        this.cstPostRule = NOOP\n        this.setInitialNodeLocation = NOOP\n      } else {\n        throw Error(\n          `Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`\n        )\n      }\n    }\n  }\n\n  setInitialNodeLocationOnlyOffsetRecovery(\n    this: MixedInParser,\n    cstNode: any\n  ): void {\n    cstNode.location = {\n      startOffset: NaN,\n      endOffset: NaN\n    }\n  }\n\n  setInitialNodeLocationOnlyOffsetRegular(\n    this: MixedInParser,\n    cstNode: any\n  ): void {\n    cstNode.location = {\n      // without error recovery the starting Location of a new CstNode is guaranteed\n      // To be the next Token's startOffset (for valid inputs).\n      // For invalid inputs there won't be any CSTOutput so this potential\n      // inaccuracy does not matter\n      startOffset: this.LA(1).startOffset,\n      endOffset: NaN\n    }\n  }\n\n  setInitialNodeLocationFullRecovery(this: MixedInParser, cstNode: any): void {\n    cstNode.location = {\n      startOffset: NaN,\n      startLine: NaN,\n      startColumn: NaN,\n      endOffset: NaN,\n      endLine: NaN,\n      endColumn: NaN\n    }\n  }\n\n  /**\n     *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n\n     * @param cstNode\n     */\n  setInitialNodeLocationFullRegular(this: MixedInParser, cstNode: any): void {\n    const nextToken = this.LA(1)\n    cstNode.location = {\n      startOffset: nextToken.startOffset,\n      startLine: nextToken.startLine,\n      startColumn: nextToken.startColumn,\n      endOffset: NaN,\n      endLine: NaN,\n      endColumn: NaN\n    }\n  }\n\n  cstInvocationStateUpdate(\n    this: MixedInParser,\n    fullRuleName: string,\n    shortName: string | number\n  ): void {\n    const cstNode: CstNode = {\n      name: fullRuleName,\n      children: {}\n    }\n\n    this.setInitialNodeLocation(cstNode)\n    this.CST_STACK.push(cstNode)\n  }\n\n  cstFinallyStateUpdate(this: MixedInParser): void {\n    this.CST_STACK.pop()\n  }\n\n  cstPostRuleFull(this: MixedInParser, ruleCstNode: CstNode): void {\n    const prevToken = this.LA(0)\n    const loc = ruleCstNode.location\n\n    // If this condition is true it means we consumed at least one Token\n    // In this CstNode.\n    if (loc.startOffset <= prevToken.startOffset === true) {\n      loc.endOffset = prevToken.endOffset\n      loc.endLine = prevToken.endLine\n      loc.endColumn = prevToken.endColumn\n    }\n    // \"empty\" CstNode edge case\n    else {\n      loc.startOffset = NaN\n      loc.startLine = NaN\n      loc.startColumn = NaN\n    }\n  }\n\n  cstPostRuleOnlyOffset(this: MixedInParser, ruleCstNode: CstNode): void {\n    const prevToken = this.LA(0)\n    const loc = ruleCstNode.location\n\n    // If this condition is true it means we consumed at least one Token\n    // In this CstNode.\n    if (loc.startOffset <= prevToken.startOffset === true) {\n      loc.endOffset = prevToken.endOffset\n    }\n    // \"empty\" CstNode edge case\n    else {\n      loc.startOffset = NaN\n    }\n  }\n\n  cstPostTerminal(\n    this: MixedInParser,\n    key: string,\n    consumedToken: IToken\n  ): void {\n    const rootCst = this.CST_STACK[this.CST_STACK.length - 1]\n    addTerminalToCst(rootCst, consumedToken, key)\n    // This is only used when **both** error recovery and CST Output are enabled.\n    this.setNodeLocationFromToken(rootCst.location, <any>consumedToken)\n  }\n\n  cstPostNonTerminal(\n    this: MixedInParser,\n    ruleCstResult: CstNode,\n    ruleName: string\n  ): void {\n    const preCstNode = this.CST_STACK[this.CST_STACK.length - 1]\n    addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult)\n    // This is only used when **both** error recovery and CST Output are enabled.\n    this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location)\n  }\n\n  getBaseCstVisitorConstructor<IN = any, OUT = any>(\n    this: MixedInParser\n  ): {\n    new (...args: any[]): ICstVisitor<IN, OUT>\n  } {\n    if (isUndefined(this.baseCstVisitorConstructor)) {\n      const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(\n        this.className,\n        keys(this.gastProductionsCache)\n      )\n      this.baseCstVisitorConstructor = newBaseCstVisitorConstructor\n      return newBaseCstVisitorConstructor\n    }\n\n    return <any>this.baseCstVisitorConstructor\n  }\n\n  getBaseCstVisitorConstructorWithDefaults<IN = any, OUT = any>(\n    this: MixedInParser\n  ): {\n    new (...args: any[]): ICstVisitor<IN, OUT>\n  } {\n    if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n      const newConstructor = createBaseVisitorConstructorWithDefaults(\n        this.className,\n        keys(this.gastProductionsCache),\n        this.getBaseCstVisitorConstructor()\n      )\n      this.baseCstVisitorWithDefaultsConstructor = newConstructor\n      return newConstructor\n    }\n\n    return <any>this.baseCstVisitorWithDefaultsConstructor\n  }\n\n  getLastExplicitRuleShortName(this: MixedInParser): string {\n    let ruleStack = this.RULE_STACK\n    return ruleStack[ruleStack.length - 1]\n  }\n\n  getPreviousExplicitRuleShortName(this: MixedInParser): string {\n    let ruleStack = this.RULE_STACK\n    return ruleStack[ruleStack.length - 2]\n  }\n\n  getLastExplicitRuleOccurrenceIndex(this: MixedInParser): number {\n    let occurrenceStack = this.RULE_OCCURRENCE_STACK\n    return occurrenceStack[occurrenceStack.length - 1]\n  }\n}\n", "import { END_OF_FILE } from \"../parser\"\nimport { IToken } from \"../../../../api\"\nimport { MixedInParser } from \"./parser_traits\"\n\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n  tokVector: IToken[]\n  tokVectorLength\n  currIdx: number\n\n  initLexerAdapter() {\n    this.tokVector = []\n    this.tokVectorLength = 0\n    this.currIdx = -1\n  }\n\n  set input(newInput: IToken[]) {\n    // @ts-ignore - `this parameter` not supported in setters/getters\n    //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n    if (this.selfAnalysisDone !== true) {\n      throw Error(\n        `Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`\n      )\n    }\n    // @ts-ignore - `this parameter` not supported in setters/getters\n    //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n    this.reset()\n    this.tokVector = newInput\n    this.tokVectorLength = newInput.length\n  }\n\n  get input(): IToken[] {\n    return this.tokVector\n  }\n\n  // skips a token and returns the next token\n  SKIP_TOKEN(this: MixedInParser): IToken {\n    if (this.currIdx <= this.tokVector.length - 2) {\n      this.consumeToken()\n      return this.LA(1)\n    } else {\n      return END_OF_FILE\n    }\n  }\n\n  // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n  // or lexers dependent on parser context.\n  LA(this: MixedInParser, howMuch: number): IToken {\n    const soughtIdx = this.currIdx + howMuch\n    if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n      return END_OF_FILE\n    } else {\n      return this.tokVector[soughtIdx]\n    }\n  }\n\n  consumeToken(this: MixedInParser) {\n    this.currIdx++\n  }\n\n  exportLexerState(this: MixedInParser): number {\n    return this.currIdx\n  }\n\n  importLexerState(this: MixedInParser, newState: number) {\n    this.currIdx = newState\n  }\n\n  resetLexerState(this: MixedInParser): void {\n    this.currIdx = -1\n  }\n\n  moveToTerminatedState(this: MixedInParser): void {\n    this.currIdx = this.tokVector.length - 1\n  }\n\n  getLexerPosition(this: MixedInParser): number {\n    return this.exportLexerState()\n  }\n}\n", "import {\n  AtLeastOneSepMethodOpts,\n  ConsumeMethodOpts,\n  DSLMethodOpts,\n  DSLMethodOptsWithErr,\n  GrammarAction,\n  IOrAlt,\n  IRuleConfig,\n  ISerializedGast,\n  IToken,\n  ManySepMethodOpts,\n  OrMethodOpts,\n  SubruleMethodOpts,\n  TokenType\n} from \"../../../../api\"\nimport { contains, values } from \"../../../utils/utils\"\nimport { isRecognitionException } from \"../../exceptions_public\"\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser\"\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public\"\nimport { validateRuleIsOverridden } from \"../../grammar/checks\"\nimport { MixedInParser } from \"./parser_traits\"\nimport { Rule, serializeGrammar } from \"../../grammar/gast/gast_public\"\n\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n  ACTION<T>(this: MixedInParser, impl: () => T): T {\n    return impl.call(this)\n  }\n\n  consume(\n    this: MixedInParser,\n    idx: number,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, idx, options)\n  }\n\n  subrule<T>(\n    this: MixedInParser,\n    idx: number,\n    ruleToCall: (idx: number) => T,\n    options?: SubruleMethodOpts\n  ): T {\n    return this.subruleInternal(ruleToCall, idx, options)\n  }\n\n  option<OUT>(\n    this: MixedInParser,\n    idx: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT {\n    return this.optionInternal(actionORMethodDef, idx)\n  }\n\n  or(\n    this: MixedInParser,\n    idx: number,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<any>\n  ): any {\n    return this.orInternal(altsOrOpts, idx)\n  }\n\n  many(\n    this: MixedInParser,\n    idx: number,\n    actionORMethodDef: GrammarAction<any> | DSLMethodOpts<any>\n  ): void {\n    return this.manyInternal(idx, actionORMethodDef)\n  }\n\n  atLeastOne(\n    this: MixedInParser,\n    idx: number,\n    actionORMethodDef: GrammarAction<any> | DSLMethodOptsWithErr<any>\n  ): void {\n    return this.atLeastOneInternal(idx, actionORMethodDef)\n  }\n\n  CONSUME(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 0, options)\n  }\n\n  CONSUME1(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 1, options)\n  }\n\n  CONSUME2(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 2, options)\n  }\n\n  CONSUME3(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 3, options)\n  }\n\n  CONSUME4(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 4, options)\n  }\n\n  CONSUME5(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 5, options)\n  }\n\n  CONSUME6(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 6, options)\n  }\n\n  CONSUME7(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 7, options)\n  }\n\n  CONSUME8(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 8, options)\n  }\n\n  CONSUME9(\n    this: MixedInParser,\n    tokType: TokenType,\n    options?: ConsumeMethodOpts\n  ): IToken {\n    return this.consumeInternal(tokType, 9, options)\n  }\n\n  SUBRULE<T>(\n    this: MixedInParser,\n    ruleToCall: (idx: number) => T,\n    options?: SubruleMethodOpts\n  ): T {\n    return this.subruleInternal(ruleToCall, 0, options)\n  }\n\n  SUBRULE1<T>(\n    this: MixedInParser,\n    ruleToCall: (idx: number) => T,\n    options?: SubruleMethodOpts\n  ): T {\n    return this.subruleInternal(ruleToCall, 1, options)\n  }\n\n  SUBRULE2<T>(\n    this: MixedInParser,\n    ruleToCall: (idx: number) => T,\n    options?: SubruleMethodOpts\n  ): T {\n    return this.subruleInternal(ruleToCall, 2, options)\n  }\n\n  SUBRULE3<T>(\n    this: MixedInParser,\n    ruleToCall: (idx: number) => T,\n    options?: SubruleMethodOpts\n  ): T {\n    return this.subruleInternal(ruleToCall, 3, options)\n  }\n\n  SUBRULE4<T>(\n    this: MixedInParser,\n    ruleToCall: (idx: number) => T,\n    options?: SubruleMethodOpts\n  ): T {\n    return this.subruleInternal(ruleToCall, 4, options)\n  }\n\n  SUBRULE5<T>(\n    this: MixedInParser,\n    ruleToCall: (idx: number) => T,\n    options?: SubruleMethodOpts\n  ): T {\n    return this.subruleInternal(ruleToCall, 5, options)\n  }\n\n  SUBRULE6<T>(\n    this: MixedInParser,\n    ruleToCall: (idx: number) => T,\n    options?: SubruleMethodOpts\n  ): T {\n    return this.subruleInternal(ruleToCall, 6, options)\n  }\n\n  SUBRULE7<T>(\n    this: MixedInParser,\n    ruleToCall: (idx: number) => T,\n    options?: SubruleMethodOpts\n  ): T {\n    return this.subruleInternal(ruleToCall, 7, options)\n  }\n\n  SUBRULE8<T>(\n    this: MixedInParser,\n    ruleToCall: (idx: number) => T,\n    options?: SubruleMethodOpts\n  ): T {\n    return this.subruleInternal(ruleToCall, 8, options)\n  }\n\n  SUBRULE9<T>(\n    this: MixedInParser,\n    ruleToCall: (idx: number) => T,\n    options?: SubruleMethodOpts\n  ): T {\n    return this.subruleInternal(ruleToCall, 9, options)\n  }\n\n  OPTION<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT {\n    return this.optionInternal(actionORMethodDef, 0)\n  }\n\n  OPTION1<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT {\n    return this.optionInternal(actionORMethodDef, 1)\n  }\n\n  OPTION2<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT {\n    return this.optionInternal(actionORMethodDef, 2)\n  }\n\n  OPTION3<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT {\n    return this.optionInternal(actionORMethodDef, 3)\n  }\n\n  OPTION4<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT {\n    return this.optionInternal(actionORMethodDef, 4)\n  }\n\n  OPTION5<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT {\n    return this.optionInternal(actionORMethodDef, 5)\n  }\n\n  OPTION6<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT {\n    return this.optionInternal(actionORMethodDef, 6)\n  }\n\n  OPTION7<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT {\n    return this.optionInternal(actionORMethodDef, 7)\n  }\n\n  OPTION8<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT {\n    return this.optionInternal(actionORMethodDef, 8)\n  }\n\n  OPTION9<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): OUT {\n    return this.optionInternal(actionORMethodDef, 9)\n  }\n\n  OR<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 0)\n  }\n\n  OR1<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 1)\n  }\n\n  OR2<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 2)\n  }\n\n  OR3<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 3)\n  }\n\n  OR4<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 4)\n  }\n\n  OR5<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 5)\n  }\n\n  OR6<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 6)\n  }\n\n  OR7<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 7)\n  }\n\n  OR8<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 8)\n  }\n\n  OR9<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>\n  ): T {\n    return this.orInternal(altsOrOpts, 9)\n  }\n\n  MANY<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(0, actionORMethodDef)\n  }\n\n  MANY1<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(1, actionORMethodDef)\n  }\n\n  MANY2<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(2, actionORMethodDef)\n  }\n\n  MANY3<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(3, actionORMethodDef)\n  }\n\n  MANY4<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(4, actionORMethodDef)\n  }\n\n  MANY5<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(5, actionORMethodDef)\n  }\n\n  MANY6<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(6, actionORMethodDef)\n  }\n\n  MANY7<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(7, actionORMethodDef)\n  }\n\n  MANY8<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(8, actionORMethodDef)\n  }\n\n  MANY9<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    this.manyInternal(9, actionORMethodDef)\n  }\n\n  MANY_SEP<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(0, options)\n  }\n\n  MANY_SEP1<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(1, options)\n  }\n\n  MANY_SEP2<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(2, options)\n  }\n\n  MANY_SEP3<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(3, options)\n  }\n\n  MANY_SEP4<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(4, options)\n  }\n\n  MANY_SEP5<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(5, options)\n  }\n\n  MANY_SEP6<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(6, options)\n  }\n\n  MANY_SEP7<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(7, options)\n  }\n\n  MANY_SEP8<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(8, options)\n  }\n\n  MANY_SEP9<OUT>(this: MixedInParser, options: ManySepMethodOpts<OUT>): void {\n    this.manySepFirstInternal(9, options)\n  }\n\n  AT_LEAST_ONE<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(0, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE1<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    return this.atLeastOneInternal(1, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE2<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(2, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE3<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(3, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE4<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(4, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE5<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(5, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE6<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(6, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE7<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(7, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE8<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(8, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE9<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    this.atLeastOneInternal(9, actionORMethodDef)\n  }\n\n  AT_LEAST_ONE_SEP<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(0, options)\n  }\n\n  AT_LEAST_ONE_SEP1<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(1, options)\n  }\n\n  AT_LEAST_ONE_SEP2<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(2, options)\n  }\n\n  AT_LEAST_ONE_SEP3<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(3, options)\n  }\n\n  AT_LEAST_ONE_SEP4<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(4, options)\n  }\n\n  AT_LEAST_ONE_SEP5<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(5, options)\n  }\n\n  AT_LEAST_ONE_SEP6<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(6, options)\n  }\n\n  AT_LEAST_ONE_SEP7<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(7, options)\n  }\n\n  AT_LEAST_ONE_SEP8<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(8, options)\n  }\n\n  AT_LEAST_ONE_SEP9<OUT>(\n    this: MixedInParser,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    this.atLeastOneSepFirstInternal(9, options)\n  }\n\n  RULE<T>(\n    this: MixedInParser,\n    name: string,\n    implementation: (...implArgs: any[]) => T,\n    config: IRuleConfig<T> = DEFAULT_RULE_CONFIG\n  ): (idxInCallingRule?: number, ...args: any[]) => T | any {\n    if (contains(this.definedRulesNames, name)) {\n      const errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError(\n        {\n          topLevelRule: name,\n          grammarName: this.className\n        }\n      )\n\n      const error = {\n        message: errMsg,\n        type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n        ruleName: name\n      }\n      this.definitionErrors.push(error)\n    }\n\n    this.definedRulesNames.push(name)\n\n    let ruleImplementation = this.defineRule(name, implementation, config)\n    this[name] = ruleImplementation\n    return ruleImplementation\n  }\n\n  OVERRIDE_RULE<T>(\n    this: MixedInParser,\n    name: string,\n    impl: (...implArgs: any[]) => T,\n    config: IRuleConfig<T> = DEFAULT_RULE_CONFIG\n  ): (idxInCallingRule?: number, ...args: any[]) => T {\n    let ruleErrors = []\n    ruleErrors = ruleErrors.concat(\n      validateRuleIsOverridden(name, this.definedRulesNames, this.className)\n    )\n    this.definitionErrors.push.apply(this.definitionErrors, ruleErrors) // mutability for the win\n\n    let ruleImplementation = this.defineRule(name, impl, config)\n    this[name] = ruleImplementation\n    return ruleImplementation\n  }\n\n  BACKTRACK<T>(\n    this: MixedInParser,\n    grammarRule: (...args: any[]) => T,\n    args?: any[]\n  ): () => boolean {\n    return function () {\n      // save org state\n      this.isBackTrackingStack.push(1)\n      const orgState = this.saveRecogState()\n      try {\n        grammarRule.apply(this, args)\n        // if no exception was thrown we have succeed parsing the rule.\n        return true\n      } catch (e) {\n        if (isRecognitionException(e)) {\n          return false\n        } else {\n          throw e\n        }\n      } finally {\n        this.reloadRecogState(orgState)\n        this.isBackTrackingStack.pop()\n      }\n    }\n  }\n\n  // GAST export APIs\n  public getGAstProductions(this: MixedInParser): Record<string, Rule> {\n    return this.gastProductionsCache\n  }\n\n  public getSerializedGastProductions(this: MixedInParser): ISerializedGast[] {\n    return serializeGrammar(values(this.gastProductionsCache))\n  }\n}\n", "import {\n  AtLeastOneSepMethodOpts,\n  ConsumeMethodOpts,\n  DSLMethodOpts,\n  DSLMethodOptsWithErr,\n  GrammarAction,\n  IOrAlt,\n  IParserConfig,\n  IRuleConfig,\n  IToken,\n  ManySepMethodOpts,\n  OrMethodOpts,\n  SubruleMethodOpts,\n  TokenType,\n  TokenVocabulary\n} from \"../../../../api\"\nimport {\n  cloneArr,\n  cloneObj,\n  every,\n  flatten,\n  has,\n  isArray,\n  isEmpty,\n  isObject,\n  reduce,\n  uniq,\n  values\n} from \"../../../utils/utils\"\nimport {\n  AT_LEAST_ONE_IDX,\n  AT_LEAST_ONE_SEP_IDX,\n  BITS_FOR_METHOD_TYPE,\n  BITS_FOR_OCCURRENCE_IDX,\n  MANY_IDX,\n  MANY_SEP_IDX,\n  OPTION_IDX,\n  OR_IDX\n} from \"../../grammar/keys\"\nimport {\n  isRecognitionException,\n  MismatchedTokenException,\n  NotAllInputParsedException\n} from \"../../exceptions_public\"\nimport { PROD_TYPE } from \"../../grammar/lookahead\"\nimport {\n  AbstractNextTerminalAfterProductionWalker,\n  NextTerminalAfterAtLeastOneSepWalker,\n  NextTerminalAfterAtLeastOneWalker,\n  NextTerminalAfterManySepWalker,\n  NextTerminalAfterManyWalker\n} from \"../../grammar/interpreter\"\nimport { DEFAULT_RULE_CONFIG, IParserState, TokenMatcher } from \"../parser\"\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable\"\nimport { EOF } from \"../../../scan/tokens_public\"\nimport { MixedInParser } from \"./parser_traits\"\nimport {\n  augmentTokenTypes,\n  isTokenType,\n  tokenStructuredMatcher,\n  tokenStructuredMatcherNoCategories\n} from \"../../../scan/tokens\"\nimport { classNameFromInstance } from \"../../../lang/lang_extensions\"\nimport { Rule } from \"../../grammar/gast/gast_public\"\n\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n  isBackTrackingStack\n  className: string\n  RULE_STACK: string[]\n  RULE_OCCURRENCE_STACK: number[]\n  definedRulesNames: string[]\n  tokensMap: { [fqn: string]: TokenType }\n  gastProductionsCache: Record<string, Rule>\n  shortRuleNameToFull: Record<string, string>\n  fullRuleNameToShort: Record<string, number>\n  // The shortName Index must be coded \"after\" the first 8bits to enable building unique lookahead keys\n  ruleShortNameIdx: number\n  tokenMatcher: TokenMatcher\n\n  initRecognizerEngine(\n    tokenVocabulary: TokenVocabulary,\n    config: IParserConfig\n  ) {\n    this.className = classNameFromInstance(this)\n    // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n    this.shortRuleNameToFull = {}\n    this.fullRuleNameToShort = {}\n    this.ruleShortNameIdx = 256\n    this.tokenMatcher = tokenStructuredMatcherNoCategories\n\n    this.definedRulesNames = []\n    this.tokensMap = {}\n    this.isBackTrackingStack = []\n    this.RULE_STACK = []\n    this.RULE_OCCURRENCE_STACK = []\n    this.gastProductionsCache = {}\n\n    if (has(config, \"serializedGrammar\")) {\n      throw Error(\n        \"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n          \"\\tSee: https://sap.github.io/chevrotain/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n          \"\\tFor Further details.\"\n      )\n    }\n\n    if (isArray(tokenVocabulary)) {\n      // This only checks for Token vocabularies provided as arrays.\n      // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n      // rather than all edge cases of empty Token vocabularies.\n      if (isEmpty(tokenVocabulary as any[])) {\n        throw Error(\n          \"A Token Vocabulary cannot be empty.\\n\" +\n            \"\\tNote that the first argument for the parser constructor\\n\" +\n            \"\\tis no longer a Token vector (since v4.0).\"\n        )\n      }\n\n      if (typeof (tokenVocabulary as any[])[0].startOffset === \"number\") {\n        throw Error(\n          \"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n            \"\\tSee: https://sap.github.io/chevrotain/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n            \"\\tFor Further details.\"\n        )\n      }\n    }\n\n    if (isArray(tokenVocabulary)) {\n      this.tokensMap = <any>reduce(\n        <any>tokenVocabulary,\n        (acc, tokType: TokenType) => {\n          acc[tokType.name] = tokType\n          return acc\n        },\n        {}\n      )\n    } else if (\n      has(tokenVocabulary, \"modes\") &&\n      every(flatten(values((<any>tokenVocabulary).modes)), isTokenType)\n    ) {\n      let allTokenTypes = flatten(values((<any>tokenVocabulary).modes))\n      let uniqueTokens = uniq(allTokenTypes)\n      this.tokensMap = <any>reduce(\n        uniqueTokens,\n        (acc, tokType: TokenType) => {\n          acc[tokType.name] = tokType\n          return acc\n        },\n        {}\n      )\n    } else if (isObject(tokenVocabulary)) {\n      this.tokensMap = cloneObj(tokenVocabulary)\n    } else {\n      throw new Error(\n        \"<tokensDictionary> argument must be An Array of Token constructors,\" +\n          \" A dictionary of Token constructors or an IMultiModeLexerDefinition\"\n      )\n    }\n\n    // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n    // parsed with a clear error message (\"expecting EOF but found ...\")\n    /* tslint:disable */\n    this.tokensMap[\"EOF\"] = EOF\n\n    // TODO: This check may not be accurate for multi mode lexers\n    const noTokenCategoriesUsed = every(\n      values(tokenVocabulary),\n      (tokenConstructor) => isEmpty(tokenConstructor.categoryMatches)\n    )\n\n    this.tokenMatcher = noTokenCategoriesUsed\n      ? tokenStructuredMatcherNoCategories\n      : tokenStructuredMatcher\n\n    // Because ES2015+ syntax should be supported for creating Token classes\n    // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n    // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n    augmentTokenTypes(values(this.tokensMap))\n  }\n\n  defineRule<T>(\n    this: MixedInParser,\n    ruleName: string,\n    impl: (...implArgs: any[]) => T,\n    config: IRuleConfig<T>\n  ): (idxInCallingRule?: number, ...args: any[]) => T {\n    if (this.selfAnalysisDone) {\n      throw Error(\n        `Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n          `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`\n      )\n    }\n    let resyncEnabled = has(config, \"resyncEnabled\")\n      ? config.resyncEnabled\n      : DEFAULT_RULE_CONFIG.resyncEnabled\n    let recoveryValueFunc = has(config, \"recoveryValueFunc\")\n      ? config.recoveryValueFunc\n      : DEFAULT_RULE_CONFIG.recoveryValueFunc\n\n    // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n    // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n    /* tslint:disable */\n    let shortName =\n      this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX)\n    /* tslint:enable */\n\n    this.ruleShortNameIdx++\n    this.shortRuleNameToFull[shortName] = ruleName\n    this.fullRuleNameToShort[ruleName] = shortName\n\n    function invokeRuleWithTry(args: any[]) {\n      try {\n        if (this.outputCst === true) {\n          impl.apply(this, args)\n          const cst = this.CST_STACK[this.CST_STACK.length - 1]\n          this.cstPostRule(cst)\n          return cst\n        } else {\n          return impl.apply(this, args)\n        }\n      } catch (e) {\n        return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc)\n      } finally {\n        this.ruleFinallyStateUpdate()\n      }\n    }\n\n    let wrappedGrammarRule\n\n    wrappedGrammarRule = function (idxInCallingRule: number = 0, args: any[]) {\n      this.ruleInvocationStateUpdate(shortName, ruleName, idxInCallingRule)\n      return invokeRuleWithTry.call(this, args)\n    }\n\n    let ruleNamePropName = \"ruleName\"\n    wrappedGrammarRule[ruleNamePropName] = ruleName\n    wrappedGrammarRule[\"originalGrammarAction\"] = impl\n    return wrappedGrammarRule\n  }\n\n  invokeRuleCatch(\n    this: MixedInParser,\n    e: Error,\n    resyncEnabledConfig: boolean,\n    recoveryValueFunc: Function\n  ): void {\n    let isFirstInvokedRule = this.RULE_STACK.length === 1\n    // note the reSync is always enabled for the first rule invocation, because we must always be able to\n    // reSync with EOF and just output some INVALID ParseTree\n    // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n    // path is really the most valid one\n    let reSyncEnabled =\n      resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled\n\n    if (isRecognitionException(e)) {\n      const recogError: any = e\n      if (reSyncEnabled) {\n        let reSyncTokType = this.findReSyncTokenType()\n        if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n          recogError.resyncedTokens = this.reSyncTo(reSyncTokType)\n          if (this.outputCst) {\n            let partialCstResult: any = this.CST_STACK[\n              this.CST_STACK.length - 1\n            ]\n            partialCstResult.recoveredNode = true\n            return partialCstResult\n          } else {\n            return recoveryValueFunc()\n          }\n        } else {\n          if (this.outputCst) {\n            const partialCstResult: any = this.CST_STACK[\n              this.CST_STACK.length - 1\n            ]\n            partialCstResult.recoveredNode = true\n            recogError.partialCstResult = partialCstResult\n          }\n          // to be handled Further up the call stack\n          throw recogError\n        }\n      } else if (isFirstInvokedRule) {\n        // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n        this.moveToTerminatedState()\n        // the parser should never throw one of its own errors outside its flow.\n        // even if error recovery is disabled\n        return recoveryValueFunc()\n      } else {\n        // to be recovered Further up the call stack\n        throw recogError\n      }\n    } else {\n      // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n      throw e\n    }\n  }\n\n  // Implementation of parsing DSL\n  optionInternal<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    occurrence: number\n  ): OUT {\n    let key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence)\n    return this.optionInternalLogic(actionORMethodDef, occurrence, key)\n  }\n\n  optionInternalLogic<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    occurrence: number,\n    key: number\n  ): OUT {\n    let lookAheadFunc = this.getLaFuncFromCache(key)\n    let action\n    let predicate\n    if ((<DSLMethodOpts<OUT>>actionORMethodDef).DEF !== undefined) {\n      action = (<DSLMethodOpts<OUT>>actionORMethodDef).DEF\n      predicate = (<DSLMethodOpts<OUT>>actionORMethodDef).GATE\n      // predicate present\n      if (predicate !== undefined) {\n        let orgLookaheadFunction = lookAheadFunc\n        lookAheadFunc = () => {\n          return predicate.call(this) && orgLookaheadFunction.call(this)\n        }\n      }\n    } else {\n      action = actionORMethodDef\n    }\n\n    if (lookAheadFunc.call(this) === true) {\n      return action.call(this)\n    }\n    return undefined\n  }\n\n  atLeastOneInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    let laKey = this.getKeyForAutomaticLookahead(\n      AT_LEAST_ONE_IDX,\n      prodOccurrence\n    )\n    return this.atLeastOneInternalLogic(\n      prodOccurrence,\n      actionORMethodDef,\n      laKey\n    )\n  }\n\n  atLeastOneInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>,\n    key: number\n  ): void {\n    let lookAheadFunc = this.getLaFuncFromCache(key)\n\n    let action\n    let predicate\n    if ((<DSLMethodOptsWithErr<OUT>>actionORMethodDef).DEF !== undefined) {\n      action = (<DSLMethodOptsWithErr<OUT>>actionORMethodDef).DEF\n      predicate = (<DSLMethodOptsWithErr<OUT>>actionORMethodDef).GATE\n      // predicate present\n      if (predicate !== undefined) {\n        let orgLookaheadFunction = lookAheadFunc\n        lookAheadFunc = () => {\n          return predicate.call(this) && orgLookaheadFunction.call(this)\n        }\n      }\n    } else {\n      action = actionORMethodDef\n    }\n\n    if ((<Function>lookAheadFunc).call(this) === true) {\n      let notStuck = this.doSingleRepetition(action)\n      while (\n        (<Function>lookAheadFunc).call(this) === true &&\n        notStuck === true\n      ) {\n        notStuck = this.doSingleRepetition(action)\n      }\n    } else {\n      throw this.raiseEarlyExitException(\n        prodOccurrence,\n        PROD_TYPE.REPETITION_MANDATORY,\n        (<DSLMethodOptsWithErr<OUT>>actionORMethodDef).ERR_MSG\n      )\n    }\n\n    // note that while it may seem that this can cause an error because by using a recursive call to\n    // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n    // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n    this.attemptInRepetitionRecovery(\n      this.atLeastOneInternal,\n      [prodOccurrence, actionORMethodDef],\n      <any>lookAheadFunc,\n      AT_LEAST_ONE_IDX,\n      prodOccurrence,\n      NextTerminalAfterAtLeastOneWalker\n    )\n  }\n\n  atLeastOneSepFirstInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    let laKey = this.getKeyForAutomaticLookahead(\n      AT_LEAST_ONE_SEP_IDX,\n      prodOccurrence\n    )\n    this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey)\n  }\n\n  atLeastOneSepFirstInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: AtLeastOneSepMethodOpts<OUT>,\n    key: number\n  ): void {\n    let action = options.DEF\n    let separator = options.SEP\n\n    let firstIterationLookaheadFunc = this.getLaFuncFromCache(key)\n\n    // 1st iteration\n    if (firstIterationLookaheadFunc.call(this) === true) {\n      ;(<GrammarAction<OUT>>action).call(this)\n\n      //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n      //  because it is only needed in error recovery scenarios.\n      let separatorLookAheadFunc = () => {\n        return this.tokenMatcher(this.LA(1), separator)\n      }\n\n      // 2nd..nth iterations\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator)\n        // No need for checking infinite loop here due to consuming the separator.\n        ;(<GrammarAction<OUT>>action).call(this)\n      }\n\n      // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n      this.attemptInRepetitionRecovery(\n        this.repetitionSepSecondInternal,\n        [\n          prodOccurrence,\n          separator,\n          separatorLookAheadFunc,\n          action,\n          NextTerminalAfterAtLeastOneSepWalker\n        ],\n        separatorLookAheadFunc,\n        AT_LEAST_ONE_SEP_IDX,\n        prodOccurrence,\n        NextTerminalAfterAtLeastOneSepWalker\n      )\n    } else {\n      throw this.raiseEarlyExitException(\n        prodOccurrence,\n        PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,\n        options.ERR_MSG\n      )\n    }\n  }\n\n  manyInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    let laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence)\n    return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey)\n  }\n\n  manyInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    key: number\n  ) {\n    let lookaheadFunction = this.getLaFuncFromCache(key)\n\n    let action\n    let predicate\n    if ((<DSLMethodOpts<OUT>>actionORMethodDef).DEF !== undefined) {\n      action = (<DSLMethodOpts<OUT>>actionORMethodDef).DEF\n      predicate = (<DSLMethodOpts<OUT>>actionORMethodDef).GATE\n      // predicate present\n      if (predicate !== undefined) {\n        let orgLookaheadFunction = lookaheadFunction\n        lookaheadFunction = () => {\n          return predicate.call(this) && orgLookaheadFunction.call(this)\n        }\n      }\n    } else {\n      action = actionORMethodDef\n    }\n\n    let notStuck = true\n    while (lookaheadFunction.call(this) === true && notStuck === true) {\n      notStuck = this.doSingleRepetition(action)\n    }\n\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n    this.attemptInRepetitionRecovery(\n      this.manyInternal,\n      [prodOccurrence, actionORMethodDef],\n      <any>lookaheadFunction,\n      MANY_IDX,\n      prodOccurrence,\n      NextTerminalAfterManyWalker,\n      // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n      // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n      // An infinite loop cannot occur as:\n      // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n      // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n      notStuck\n    )\n  }\n\n  manySepFirstInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: ManySepMethodOpts<OUT>\n  ): void {\n    let laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence)\n    this.manySepFirstInternalLogic(prodOccurrence, options, laKey)\n  }\n\n  manySepFirstInternalLogic<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    options: ManySepMethodOpts<OUT>,\n    key: number\n  ): void {\n    let action = options.DEF\n    let separator = options.SEP\n    let firstIterationLaFunc = this.getLaFuncFromCache(key)\n\n    // 1st iteration\n    if (firstIterationLaFunc.call(this) === true) {\n      action.call(this)\n\n      let separatorLookAheadFunc = () => {\n        return this.tokenMatcher(this.LA(1), separator)\n      }\n      // 2nd..nth iterations\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator)\n        // No need for checking infinite loop here due to consuming the separator.\n        action.call(this)\n      }\n\n      // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n      this.attemptInRepetitionRecovery(\n        this.repetitionSepSecondInternal,\n        [\n          prodOccurrence,\n          separator,\n          separatorLookAheadFunc,\n          action,\n          NextTerminalAfterManySepWalker\n        ],\n        separatorLookAheadFunc,\n        MANY_SEP_IDX,\n        prodOccurrence,\n        NextTerminalAfterManySepWalker\n      )\n    }\n  }\n\n  repetitionSepSecondInternal<OUT>(\n    this: MixedInParser,\n    prodOccurrence: number,\n    separator: TokenType,\n    separatorLookAheadFunc: () => boolean,\n    action: GrammarAction<OUT>,\n    nextTerminalAfterWalker: typeof AbstractNextTerminalAfterProductionWalker\n  ): void {\n    while (separatorLookAheadFunc()) {\n      // note that this CONSUME will never enter recovery because\n      // the separatorLookAheadFunc checks that the separator really does exist.\n      this.CONSUME(separator)\n      action.call(this)\n    }\n\n    // we can only arrive to this function after an error\n    // has occurred (hence the name 'second') so the following\n    // IF will always be entered, its possible to remove it...\n    // however it is kept to avoid confusion and be consistent.\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n    /* istanbul ignore else */\n    this.attemptInRepetitionRecovery(\n      this.repetitionSepSecondInternal,\n      [\n        prodOccurrence,\n        separator,\n        separatorLookAheadFunc,\n        action,\n        nextTerminalAfterWalker\n      ],\n      separatorLookAheadFunc,\n      AT_LEAST_ONE_SEP_IDX,\n      prodOccurrence,\n      nextTerminalAfterWalker\n    )\n  }\n\n  doSingleRepetition(this: MixedInParser, action: Function): any {\n    const beforeIteration = this.getLexerPosition()\n    action.call(this)\n    const afterIteration = this.getLexerPosition()\n\n    // This boolean will indicate if this repetition progressed\n    // or if we are \"stuck\" (potential infinite loop in the repetition).\n    return afterIteration > beforeIteration\n  }\n\n  orInternal<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n    occurrence: number\n  ): T {\n    let laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence)\n    let alts = isArray(altsOrOpts)\n      ? (altsOrOpts as IOrAlt<any>[])\n      : (altsOrOpts as OrMethodOpts<unknown>).DEF\n\n    const laFunc = this.getLaFuncFromCache(laKey)\n    let altIdxToTake = laFunc.call(this, alts)\n    if (altIdxToTake !== undefined) {\n      let chosenAlternative: any = alts[altIdxToTake]\n      return chosenAlternative.ALT.call(this)\n    }\n    this.raiseNoAltException(\n      occurrence,\n      (altsOrOpts as OrMethodOpts<unknown>).ERR_MSG\n    )\n  }\n\n  ruleFinallyStateUpdate(this: MixedInParser): void {\n    this.RULE_STACK.pop()\n    this.RULE_OCCURRENCE_STACK.pop()\n\n    // NOOP when cst is disabled\n    this.cstFinallyStateUpdate()\n\n    if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n      let firstRedundantTok = this.LA(1)\n      let errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n        firstRedundant: firstRedundantTok,\n        ruleName: this.getCurrRuleFullName()\n      })\n      this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok))\n    }\n  }\n\n  subruleInternal<T>(\n    this: MixedInParser,\n    ruleToCall: (idx: number) => T,\n    idx: number,\n    options?: SubruleMethodOpts\n  ) {\n    let ruleResult\n    try {\n      const args = options !== undefined ? options.ARGS : undefined\n      ruleResult = ruleToCall.call(this, idx, args)\n      this.cstPostNonTerminal(\n        ruleResult,\n        options !== undefined && options.LABEL !== undefined\n          ? options.LABEL\n          : (<any>ruleToCall).ruleName\n      )\n      return ruleResult\n    } catch (e) {\n      this.subruleInternalError(e, options, (<any>ruleToCall).ruleName)\n    }\n  }\n\n  subruleInternalError(\n    this: MixedInParser,\n    e: any,\n    options: SubruleMethodOpts,\n    ruleName: string\n  ): void {\n    if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n      this.cstPostNonTerminal(\n        e.partialCstResult,\n        options !== undefined && options.LABEL !== undefined\n          ? options.LABEL\n          : ruleName\n      )\n\n      delete e.partialCstResult\n    }\n    throw e\n  }\n\n  consumeInternal(\n    this: MixedInParser,\n    tokType: TokenType,\n    idx: number,\n    options: ConsumeMethodOpts\n  ): IToken {\n    let consumedToken\n    try {\n      let nextToken = this.LA(1)\n      if (this.tokenMatcher(nextToken, tokType) === true) {\n        this.consumeToken()\n        consumedToken = nextToken\n      } else {\n        this.consumeInternalError(tokType, nextToken, options)\n      }\n    } catch (eFromConsumption) {\n      consumedToken = this.consumeInternalRecovery(\n        tokType,\n        idx,\n        eFromConsumption\n      )\n    }\n\n    this.cstPostTerminal(\n      options !== undefined && options.LABEL !== undefined\n        ? options.LABEL\n        : tokType.name,\n      consumedToken\n    )\n    return consumedToken\n  }\n\n  consumeInternalError(\n    this: MixedInParser,\n    tokType: TokenType,\n    nextToken: IToken,\n    options: ConsumeMethodOpts\n  ): void {\n    let msg\n    let previousToken = this.LA(0)\n    if (options !== undefined && options.ERR_MSG) {\n      msg = options.ERR_MSG\n    } else {\n      msg = this.errorMessageProvider.buildMismatchTokenMessage({\n        expected: tokType,\n        actual: nextToken,\n        previous: previousToken,\n        ruleName: this.getCurrRuleFullName()\n      })\n    }\n    throw this.SAVE_ERROR(\n      new MismatchedTokenException(msg, nextToken, previousToken)\n    )\n  }\n\n  consumeInternalRecovery(\n    this: MixedInParser,\n    tokType: TokenType,\n    idx: number,\n    eFromConsumption: Error\n  ): IToken {\n    // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n    // but the original syntax could have been parsed successfully without any backtracking + recovery\n    if (\n      this.recoveryEnabled &&\n      // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n      eFromConsumption.name === \"MismatchedTokenException\" &&\n      !this.isBackTracking()\n    ) {\n      let follows = this.getFollowsForInRuleRecovery(<any>tokType, idx)\n      try {\n        return this.tryInRuleRecovery(<any>tokType, follows)\n      } catch (eFromInRuleRecovery) {\n        if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n          // failed in RuleRecovery.\n          // throw the original error in order to trigger reSync error recovery\n          throw eFromConsumption\n        } else {\n          throw eFromInRuleRecovery\n        }\n      }\n    } else {\n      throw eFromConsumption\n    }\n  }\n\n  saveRecogState(this: MixedInParser): IParserState {\n    // errors is a getter which will clone the errors array\n    let savedErrors = this.errors\n    let savedRuleStack = cloneArr(this.RULE_STACK)\n    return {\n      errors: savedErrors,\n      lexerState: this.exportLexerState(),\n      RULE_STACK: savedRuleStack,\n      CST_STACK: this.CST_STACK\n    }\n  }\n\n  reloadRecogState(this: MixedInParser, newState: IParserState) {\n    this.errors = newState.errors\n    this.importLexerState(newState.lexerState)\n    this.RULE_STACK = newState.RULE_STACK\n  }\n\n  ruleInvocationStateUpdate(\n    this: MixedInParser,\n    shortName: string,\n    fullName: string,\n    idxInCallingRule: number\n  ): void {\n    this.RULE_OCCURRENCE_STACK.push(idxInCallingRule)\n    this.RULE_STACK.push(shortName)\n    // NOOP when cst is disabled\n    this.cstInvocationStateUpdate(fullName, shortName)\n  }\n\n  isBackTracking(this: MixedInParser): boolean {\n    return this.isBackTrackingStack.length !== 0\n  }\n\n  getCurrRuleFullName(this: MixedInParser): string {\n    let shortName = this.getLastExplicitRuleShortName()\n    return this.shortRuleNameToFull[shortName]\n  }\n\n  shortRuleNameToFullName(this: MixedInParser, shortName: string) {\n    return this.shortRuleNameToFull[shortName]\n  }\n\n  public isAtEndOfInput(this: MixedInParser): boolean {\n    return this.tokenMatcher(this.LA(1), EOF)\n  }\n\n  public reset(this: MixedInParser): void {\n    this.resetLexerState()\n\n    this.isBackTrackingStack = []\n    this.errors = []\n    this.RULE_STACK = []\n    // TODO: extract a specific reset for TreeBuilder trait\n    this.CST_STACK = []\n    this.RULE_OCCURRENCE_STACK = []\n  }\n}\n", "import {\n  IParserConfig,\n  IParserErrorMessageProvider,\n  IRecognitionException\n} from \"../../../../api\"\nimport {\n  EarlyExitException,\n  isRecognitionException,\n  NoViableAltException\n} from \"../../exceptions_public\"\nimport { cloneArr, has } from \"../../../utils/utils\"\nimport {\n  getLookaheadPathsForOptionalProd,\n  getLookaheadPathsForOr,\n  PROD_TYPE\n} from \"../../grammar/lookahead\"\nimport { MixedInParser } from \"./parser_traits\"\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\"\n\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n  _errors: IRecognitionException[]\n  errorMessageProvider: IParserErrorMessageProvider\n\n  initErrorHandler(config: IParserConfig) {\n    this._errors = []\n    this.errorMessageProvider = has(config, \"errorMessageProvider\")\n      ? config.errorMessageProvider\n      : DEFAULT_PARSER_CONFIG.errorMessageProvider\n  }\n\n  SAVE_ERROR(\n    this: MixedInParser,\n    error: IRecognitionException\n  ): IRecognitionException {\n    if (isRecognitionException(error)) {\n      error.context = {\n        ruleStack: this.getHumanReadableRuleStack(),\n        ruleOccurrenceStack: cloneArr(this.RULE_OCCURRENCE_STACK)\n      }\n      this._errors.push(error)\n      return error\n    } else {\n      throw Error(\"Trying to save an Error which is not a RecognitionException\")\n    }\n  }\n\n  get errors(): IRecognitionException[] {\n    return cloneArr(this._errors)\n  }\n\n  set errors(newErrors: IRecognitionException[]) {\n    this._errors = newErrors\n  }\n\n  // TODO: consider caching the error message computed information\n  raiseEarlyExitException(\n    this: MixedInParser,\n    occurrence: number,\n    prodType: PROD_TYPE,\n    userDefinedErrMsg: string\n  ): void {\n    let ruleName = this.getCurrRuleFullName()\n    let ruleGrammar = this.getGAstProductions()[ruleName]\n    let lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(\n      occurrence,\n      ruleGrammar,\n      prodType,\n      this.maxLookahead\n    )\n    let insideProdPaths = lookAheadPathsPerAlternative[0]\n    let actualTokens = []\n    for (let i = 1; i <= this.maxLookahead; i++) {\n      actualTokens.push(this.LA(i))\n    }\n    let msg = this.errorMessageProvider.buildEarlyExitMessage({\n      expectedIterationPaths: insideProdPaths,\n      actual: actualTokens,\n      previous: this.LA(0),\n      customUserDescription: userDefinedErrMsg,\n      ruleName: ruleName\n    })\n\n    throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)))\n  }\n\n  // TODO: consider caching the error message computed information\n  raiseNoAltException(\n    this: MixedInParser,\n    occurrence: number,\n    errMsgTypes: string\n  ): void {\n    let ruleName = this.getCurrRuleFullName()\n    let ruleGrammar = this.getGAstProductions()[ruleName]\n    // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n    let lookAheadPathsPerAlternative = getLookaheadPathsForOr(\n      occurrence,\n      ruleGrammar,\n      this.maxLookahead\n    )\n\n    let actualTokens = []\n    for (let i = 1; i <= this.maxLookahead; i++) {\n      actualTokens.push(this.LA(i))\n    }\n    let previousToken = this.LA(0)\n\n    let errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n      expectedPathsPerAlt: lookAheadPathsPerAlternative,\n      actual: actualTokens,\n      previous: previousToken,\n      customUserDescription: errMsgTypes,\n      ruleName: this.getCurrRuleFullName()\n    })\n\n    throw this.SAVE_ERROR(\n      new NoViableAltException(errMsg, this.LA(1), previousToken)\n    )\n  }\n}\n", "import {\n  ISyntacticContentAssistPath,\n  IToken,\n  ITokenGrammarPath,\n  TokenType\n} from \"../../../../api\"\nimport {\n  NextAfterTokenWalker,\n  nextPossibleTokensAfter\n} from \"../../grammar/interpreter\"\nimport { first, isUndefined } from \"../../../utils/utils\"\nimport { MixedInParser } from \"./parser_traits\"\n\nexport class ContentAssist {\n  initContentAssist() {}\n\n  public computeContentAssist(\n    this: MixedInParser,\n    startRuleName: string,\n    precedingInput: IToken[]\n  ): ISyntacticContentAssistPath[] {\n    let startRuleGast = this.gastProductionsCache[startRuleName]\n\n    if (isUndefined(startRuleGast)) {\n      throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`)\n    }\n\n    return nextPossibleTokensAfter(\n      [startRuleGast],\n      precedingInput,\n      this.tokenMatcher,\n      this.maxLookahead\n    )\n  }\n\n  // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n  // TODO: should this be more explicitly part of the public API?\n  public getNextPossibleTokenTypes(\n    this: MixedInParser,\n    grammarPath: ITokenGrammarPath\n  ): TokenType[] {\n    let topRuleName = first(grammarPath.ruleStack)\n    let gastProductions = this.getGAstProductions()\n    let topProduction = gastProductions[topRuleName]\n    let nextPossibleTokenTypes = new NextAfterTokenWalker(\n      topProduction,\n      grammarPath\n    ).startWalking()\n    return nextPossibleTokenTypes\n  }\n}\n", "import {\n  AtLeastOneSepMethodOpts,\n  ConsumeMethodOpts,\n  CstNode,\n  DSLMethodOpts,\n  DSLMethodOptsWithErr,\n  GrammarAction,\n  IOrAlt,\n  IParserConfig,\n  IProduction,\n  IToken,\n  ManySepMethodOpts,\n  OrMethodOpts,\n  SubruleMethodOpts,\n  TokenType\n} from \"../../../../api\"\nimport {\n  forEach,\n  has,\n  isArray,\n  isFunction,\n  peek,\n  some\n} from \"../../../utils/utils\"\nimport { MixedInParser } from \"./parser_traits\"\nimport {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"../../grammar/gast/gast_public\"\nimport { Lexer } from \"../../../scan/lexer_public\"\nimport { augmentTokenTypes, hasShortKeyProperty } from \"../../../scan/tokens\"\nimport { createToken, createTokenInstance } from \"../../../scan/tokens_public\"\nimport { END_OF_FILE } from \"../parser\"\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys\"\n\ntype ProdWithDef = IProduction & { definition?: IProduction[] }\nconst RECORDING_NULL_OBJECT = {\n  description: \"This Object indicates the Parser is during Recording Phase\"\n}\nObject.freeze(RECORDING_NULL_OBJECT)\n\nconst HANDLE_SEPARATOR = true\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1\n\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA })\naugmentTokenTypes([RFT])\nconst RECORDING_PHASE_TOKEN = createTokenInstance(\n  RFT,\n  \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://sap.github.io/chevrotain/docs/guide/internals.html#grammar-recording for details\",\n  // Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n  // cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1\n)\nObject.freeze(RECORDING_PHASE_TOKEN)\n\nconst RECORDING_PHASE_CSTNODE: CstNode = {\n  name:\n    \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n    \"See: https://sap.github.io/chevrotain/docs/guide/internals.html#grammar-recording for details\",\n  children: {}\n}\n\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n  recordingProdStack: ProdWithDef[]\n  RECORDING_PHASE: boolean\n\n  initGastRecorder(this: MixedInParser, config: IParserConfig): void {\n    this.recordingProdStack = []\n    this.RECORDING_PHASE = false\n  }\n\n  enableRecording(this: MixedInParser): void {\n    this.RECORDING_PHASE = true\n\n    this.TRACE_INIT(\"Enable Recording\", () => {\n      /**\n       * Warning Dark Voodoo Magic upcoming!\n       * We are \"replacing\" the public parsing DSL methods API\n       * With **new** alternative implementations on the Parser **instance**\n       *\n       * So far this is the only way I've found to avoid performance regressions during parsing time.\n       * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n       *   implementations directly instead.\n       */\n      for (let i = 0; i < 10; i++) {\n        const idx = i > 0 ? i : \"\"\n        this[`CONSUME${idx}`] = function (arg1, arg2) {\n          return this.consumeInternalRecord(arg1, i, arg2)\n        }\n        this[`SUBRULE${idx}`] = function (arg1, arg2) {\n          return this.subruleInternalRecord(arg1, i, arg2)\n        }\n        this[`OPTION${idx}`] = function (arg1) {\n          return this.optionInternalRecord(arg1, i)\n        }\n        this[`OR${idx}`] = function (arg1) {\n          return this.orInternalRecord(arg1, i)\n        }\n        this[`MANY${idx}`] = function (arg1) {\n          this.manyInternalRecord(i, arg1)\n        }\n        this[`MANY_SEP${idx}`] = function (arg1) {\n          this.manySepFirstInternalRecord(i, arg1)\n        }\n        this[`AT_LEAST_ONE${idx}`] = function (arg1) {\n          this.atLeastOneInternalRecord(i, arg1)\n        }\n        this[`AT_LEAST_ONE_SEP${idx}`] = function (arg1) {\n          this.atLeastOneSepFirstInternalRecord(i, arg1)\n        }\n      }\n\n      // DSL methods with the idx(suffix) as an argument\n      this[`consume`] = function (idx, arg1, arg2) {\n        return this.consumeInternalRecord(arg1, idx, arg2)\n      }\n      this[`subrule`] = <any>function (idx, arg1, arg2) {\n        return this.subruleInternalRecord(arg1, idx, arg2)\n      }\n      this[`option`] = function (idx, arg1) {\n        return this.optionInternalRecord(arg1, idx)\n      }\n      this[`or`] = function (idx, arg1) {\n        return this.orInternalRecord(arg1, idx)\n      }\n      this[`many`] = function (idx, arg1) {\n        this.manyInternalRecord(idx, arg1)\n      }\n      this[`atLeastOne`] = function (idx, arg1) {\n        this.atLeastOneInternalRecord(idx, arg1)\n      }\n\n      this.ACTION = this.ACTION_RECORD\n      this.BACKTRACK = this.BACKTRACK_RECORD\n      this.LA = this.LA_RECORD\n    })\n  }\n\n  disableRecording(this: MixedInParser) {\n    this.RECORDING_PHASE = false\n    // By deleting these **instance** properties, any future invocation\n    // will be deferred to the original methods on the **prototype** object\n    // This seems to get rid of any incorrect optimizations that V8 may\n    // do during the recording phase.\n    this.TRACE_INIT(\"Deleting Recording methods\", () => {\n      for (let i = 0; i < 10; i++) {\n        const idx = i > 0 ? i : \"\"\n        delete this[`CONSUME${idx}`]\n        delete this[`SUBRULE${idx}`]\n        delete this[`OPTION${idx}`]\n        delete this[`OR${idx}`]\n        delete this[`MANY${idx}`]\n        delete this[`MANY_SEP${idx}`]\n        delete this[`AT_LEAST_ONE${idx}`]\n        delete this[`AT_LEAST_ONE_SEP${idx}`]\n      }\n\n      delete this[`consume`]\n      delete this[`subrule`]\n      delete this[`option`]\n      delete this[`or`]\n      delete this[`many`]\n      delete this[`atLeastOne`]\n\n      delete this.ACTION\n      delete this.BACKTRACK\n      delete this.LA\n    })\n  }\n\n  // TODO: is there any way to use this method to check no\n  //   Parser methods are called inside an ACTION?\n  //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n  ACTION_RECORD<T>(this: MixedInParser, impl: () => T): T {\n    // NO-OP during recording\n    return\n  }\n\n  // Executing backtracking logic will break our recording logic assumptions\n  BACKTRACK_RECORD<T>(\n    grammarRule: (...args: any[]) => T,\n    args?: any[]\n  ): () => boolean {\n    return () => true\n  }\n\n  // LA is part of the official API and may be used for custom lookahead logic\n  // by end users who may forget to wrap it in ACTION or inside a GATE\n  LA_RECORD(howMuch: number): IToken {\n    // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n    // On LA return EOF at the end of the input so an infinite loop may occur.\n    return END_OF_FILE\n  }\n\n  topLevelRuleRecord(name: string, def: Function): Rule {\n    try {\n      const newTopLevelRule = new Rule({ definition: [], name: name })\n      newTopLevelRule.name = name\n      this.recordingProdStack.push(newTopLevelRule)\n      def.call(this)\n      this.recordingProdStack.pop()\n      return newTopLevelRule\n    } catch (originalError) {\n      if (originalError.KNOWN_RECORDER_ERROR !== true) {\n        try {\n          originalError.message =\n            originalError.message +\n            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n            \"https://sap.github.io/chevrotain/docs/guide/internals.html#grammar-recording\"\n        } catch (mutabilityError) {\n          // We may not be able to modify the original error object\n          throw originalError\n        }\n      }\n      throw originalError\n    }\n  }\n\n  // Implementation of parsing DSL\n  optionInternalRecord<OUT>(\n    this: MixedInParser,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>,\n    occurrence: number\n  ): OUT {\n    return recordProd.call(this, Option, actionORMethodDef, occurrence)\n  }\n\n  atLeastOneInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOptsWithErr<OUT>\n  ): void {\n    recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence)\n  }\n\n  atLeastOneSepFirstInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    options: AtLeastOneSepMethodOpts<OUT>\n  ): void {\n    recordProd.call(\n      this,\n      RepetitionMandatoryWithSeparator,\n      options,\n      occurrence,\n      HANDLE_SEPARATOR\n    )\n  }\n\n  manyInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    actionORMethodDef: GrammarAction<OUT> | DSLMethodOpts<OUT>\n  ): void {\n    recordProd.call(this, Repetition, actionORMethodDef, occurrence)\n  }\n\n  manySepFirstInternalRecord<OUT>(\n    this: MixedInParser,\n    occurrence: number,\n    options: ManySepMethodOpts<OUT>\n  ): void {\n    recordProd.call(\n      this,\n      RepetitionWithSeparator,\n      options,\n      occurrence,\n      HANDLE_SEPARATOR\n    )\n  }\n\n  orInternalRecord<T>(\n    this: MixedInParser,\n    altsOrOpts: IOrAlt<any>[] | OrMethodOpts<unknown>,\n    occurrence: number\n  ): T {\n    return recordOrProd.call(this, altsOrOpts, occurrence)\n  }\n\n  subruleInternalRecord<T>(\n    this: MixedInParser,\n    ruleToCall: (idx: number) => T,\n    occurrence: number,\n    options?: SubruleMethodOpts\n  ): T | CstNode {\n    assertMethodIdxIsValid(occurrence)\n    if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n      const error: any = new Error(\n        `<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n          ` expecting a Parser method reference but got: <${JSON.stringify(\n            ruleToCall\n          )}>` +\n          `\\n inside top level rule: <${\n            (<Rule>this.recordingProdStack[0]).name\n          }>`\n      )\n      error.KNOWN_RECORDER_ERROR = true\n      throw error\n    }\n\n    const prevProd: any = peek(this.recordingProdStack)\n    const ruleName = ruleToCall[\"ruleName\"]\n    const newNoneTerminal = new NonTerminal({\n      idx: occurrence,\n      nonTerminalName: ruleName,\n      // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n      referencedRule: undefined\n    })\n    prevProd.definition.push(newNoneTerminal)\n\n    return this.outputCst ? RECORDING_PHASE_CSTNODE : <any>RECORDING_NULL_OBJECT\n  }\n\n  consumeInternalRecord(\n    this: MixedInParser,\n    tokType: TokenType,\n    occurrence: number,\n    options: ConsumeMethodOpts\n  ): IToken {\n    assertMethodIdxIsValid(occurrence)\n    if (!hasShortKeyProperty(tokType)) {\n      const error: any = new Error(\n        `<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n          ` expecting a TokenType reference but got: <${JSON.stringify(\n            tokType\n          )}>` +\n          `\\n inside top level rule: <${\n            (<Rule>this.recordingProdStack[0]).name\n          }>`\n      )\n      error.KNOWN_RECORDER_ERROR = true\n      throw error\n    }\n    const prevProd: any = peek(this.recordingProdStack)\n    const newNoneTerminal = new Terminal({\n      idx: occurrence,\n      terminalType: tokType\n    })\n    prevProd.definition.push(newNoneTerminal)\n\n    return RECORDING_PHASE_TOKEN\n  }\n}\n\nfunction recordProd(\n  prodConstructor: any,\n  mainProdArg: any,\n  occurrence: number,\n  handleSep: boolean = false\n): any {\n  assertMethodIdxIsValid(occurrence)\n  const prevProd: any = peek(this.recordingProdStack)\n  const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF\n\n  const newProd = new prodConstructor({ definition: [], idx: occurrence })\n  if (handleSep) {\n    newProd.separator = mainProdArg.SEP\n  }\n  if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n    newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD\n  }\n\n  this.recordingProdStack.push(newProd)\n  grammarAction.call(this)\n  prevProd.definition.push(newProd)\n  this.recordingProdStack.pop()\n\n  return RECORDING_NULL_OBJECT\n}\n\nfunction recordOrProd(mainProdArg: any, occurrence: number): any {\n  assertMethodIdxIsValid(occurrence)\n  const prevProd: any = peek(this.recordingProdStack)\n  // Only an array of alternatives\n  const hasOptions = isArray(mainProdArg) === false\n  const alts = hasOptions === false ? mainProdArg : mainProdArg.DEF\n\n  const newOrProd = new Alternation({\n    definition: [],\n    idx: occurrence,\n    ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true\n  })\n  if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n    newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD\n  }\n\n  const hasPredicates = some(alts, (currAlt: any) => isFunction(currAlt.GATE))\n  newOrProd.hasPredicates = hasPredicates\n\n  prevProd.definition.push(newOrProd)\n\n  forEach(alts, (currAlt) => {\n    const currAltFlat = new Alternative({ definition: [] })\n    newOrProd.definition.push(currAltFlat)\n    if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n      currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES\n    }\n    // **implicit** ignoreAmbiguities due to usage of gate\n    else if (has(currAlt, \"GATE\")) {\n      currAltFlat.ignoreAmbiguities = true\n    }\n    this.recordingProdStack.push(currAltFlat)\n    currAlt.ALT.call(this)\n    this.recordingProdStack.pop()\n  })\n  return RECORDING_NULL_OBJECT\n}\n\nfunction getIdxSuffix(idx: number): string {\n  return idx === 0 ? \"\" : `${idx}`\n}\n\nfunction assertMethodIdxIsValid(idx): void {\n  if (idx < 0 || idx > MAX_METHOD_IDX) {\n    const error: any = new Error(\n      // The stack trace will contain all the needed details\n      `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n        `Idx value must be a none negative value smaller than ${\n          MAX_METHOD_IDX + 1\n        }`\n    )\n    error.KNOWN_RECORDER_ERROR = true\n    throw error\n  }\n}\n", "import { IParserConfig } from \"../../../../api\"\nimport { has, timer } from \"../../../utils/utils\"\nimport { MixedInParser } from \"./parser_traits\"\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\"\n\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n  traceInitPerf: boolean | number\n  traceInitMaxIdent: number\n  traceInitIndent: number\n\n  initPerformanceTracer(config: IParserConfig) {\n    if (has(config, \"traceInitPerf\")) {\n      const userTraceInitPerf = config.traceInitPerf\n      const traceIsNumber = typeof userTraceInitPerf === \"number\"\n      this.traceInitMaxIdent = traceIsNumber\n        ? <number>userTraceInitPerf\n        : Infinity\n      this.traceInitPerf = traceIsNumber\n        ? userTraceInitPerf > 0\n        : userTraceInitPerf\n    } else {\n      this.traceInitMaxIdent = 0\n      this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf\n    }\n\n    this.traceInitIndent = -1\n  }\n\n  TRACE_INIT<T>(this: MixedInParser, phaseDesc: string, phaseImpl: () => T): T {\n    // No need to optimize this using NOOP pattern because\n    // It is not called in a hot spot...\n    if (this.traceInitPerf === true) {\n      this.traceInitIndent++\n      const indent = new Array(this.traceInitIndent + 1).join(\"\\t\")\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        console.log(`${indent}--> <${phaseDesc}>`)\n      }\n      const { time, value } = timer(phaseImpl)\n      /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n      const traceMethod = time > 10 ? console.warn : console.log\n      if (this.traceInitIndent < this.traceInitMaxIdent) {\n        traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`)\n      }\n      this.traceInitIndent--\n      return value\n    } else {\n      return phaseImpl()\n    }\n  }\n}\n", "import {\n  applyMixins,\n  cloneObj,\n  forEach,\n  has,\n  isEmpty,\n  map,\n  toFastProperties,\n  values\n} from \"../../utils/utils\"\nimport { computeAllProdsFollows } from \"../grammar/follow\"\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public\"\nimport {\n  defaultGrammarValidatorErrorProvider,\n  defaultParserErrorProvider\n} from \"../errors_public\"\nimport {\n  resolveGrammar,\n  validateGrammar\n} from \"../grammar/gast/gast_resolver_public\"\nimport {\n  CstNode,\n  IParserConfig,\n  IParserDefinitionError,\n  IRecognitionException,\n  IRuleConfig,\n  IToken,\n  TokenType,\n  TokenVocabulary\n} from \"../../../api\"\nimport { Recoverable } from \"./traits/recoverable\"\nimport { LooksAhead } from \"./traits/looksahead\"\nimport { TreeBuilder } from \"./traits/tree_builder\"\nimport { LexerAdapter } from \"./traits/lexer_adapter\"\nimport { RecognizerApi } from \"./traits/recognizer_api\"\nimport { RecognizerEngine } from \"./traits/recognizer_engine\"\n\nimport { ErrorHandler } from \"./traits/error_handler\"\nimport { MixedInParser } from \"./traits/parser_traits\"\nimport { ContentAssist } from \"./traits/context_assist\"\nimport { GastRecorder } from \"./traits/gast_recorder\"\nimport { PerformanceTracer } from \"./traits/perf_tracer\"\n\nexport const END_OF_FILE = createTokenInstance(\n  EOF,\n  \"\",\n  NaN,\n  NaN,\n  NaN,\n  NaN,\n  NaN,\n  NaN\n)\nObject.freeze(END_OF_FILE)\n\nexport type TokenMatcher = (token: IToken, tokType: TokenType) => boolean\n\nexport type lookAheadSequence = TokenType[][]\n\nexport const DEFAULT_PARSER_CONFIG: IParserConfig = Object.freeze({\n  recoveryEnabled: false,\n  maxLookahead: 3,\n  dynamicTokensEnabled: false,\n  outputCst: true,\n  errorMessageProvider: defaultParserErrorProvider,\n  nodeLocationTracking: \"none\",\n  traceInitPerf: false,\n  skipValidations: false\n})\n\nexport const DEFAULT_RULE_CONFIG: IRuleConfig<any> = Object.freeze({\n  recoveryValueFunc: () => undefined,\n  resyncEnabled: true\n})\n\nexport enum ParserDefinitionErrorType {\n  INVALID_RULE_NAME = 0,\n  DUPLICATE_RULE_NAME = 1,\n  INVALID_RULE_OVERRIDE = 2,\n  DUPLICATE_PRODUCTIONS = 3,\n  UNRESOLVED_SUBRULE_REF = 4,\n  LEFT_RECURSION = 5,\n  NONE_LAST_EMPTY_ALT = 6,\n  AMBIGUOUS_ALTS = 7,\n  CONFLICT_TOKENS_RULES_NAMESPACE = 8,\n  INVALID_TOKEN_NAME = 9,\n  NO_NON_EMPTY_LOOKAHEAD = 10,\n  AMBIGUOUS_PREFIX_ALTS = 11,\n  TOO_MANY_ALTS = 12\n}\n\nexport interface IParserDuplicatesDefinitionError\n  extends IParserDefinitionError {\n  dslName: string\n  occurrence: number\n  parameter?: string\n}\n\nexport interface IParserEmptyAlternativeDefinitionError\n  extends IParserDefinitionError {\n  occurrence: number\n  alternative: number\n}\n\nexport interface IParserAmbiguousAlternativesDefinitionError\n  extends IParserDefinitionError {\n  occurrence: number\n  alternatives: number[]\n}\n\nexport interface IParserUnresolvedRefDefinitionError\n  extends IParserDefinitionError {\n  unresolvedRefName: string\n}\n\nexport interface IParserState {\n  errors: IRecognitionException[]\n  lexerState: any\n  RULE_STACK: string[]\n  CST_STACK: CstNode[]\n}\n\nexport type Predicate = () => boolean\n\nexport function EMPTY_ALT<T>(value: T = undefined): () => T {\n  return function () {\n    return value\n  }\n}\n\nexport class Parser {\n  // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n  // (normally during the parser's constructor).\n  // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n  // for example: duplicate rule names, referencing an unresolved subrule, ect...\n  // This flag should not be enabled during normal usage, it is used in special situations, for example when\n  // needing to display the parser definition errors in some GUI(online playground).\n  static DEFER_DEFINITION_ERRORS_HANDLING: boolean = false\n\n  /**\n   *  @deprecated use the **instance** method with the same name instead\n   */\n  static performSelfAnalysis(parserInstance: Parser): void {\n    throw Error(\n      \"The **static** `performSelfAnalysis` method has been deprecated.\" +\n        \"\\t\\nUse the **instance** method with the same name instead.\"\n    )\n  }\n\n  public performSelfAnalysis(this: MixedInParser): void {\n    this.TRACE_INIT(\"performSelfAnalysis\", () => {\n      let defErrorsMsgs\n\n      this.selfAnalysisDone = true\n      let className = this.className\n\n      this.TRACE_INIT(\"toFastProps\", () => {\n        // Without this voodoo magic the parser would be x3-x4 slower\n        // It seems it is better to invoke `toFastProperties` **before**\n        // Any manipulations of the `this` object done during the recording phase.\n        toFastProperties(this)\n      })\n\n      this.TRACE_INIT(\"Grammar Recording\", () => {\n        try {\n          this.enableRecording()\n          // Building the GAST\n          forEach(this.definedRulesNames, (currRuleName) => {\n            const wrappedRule = this[currRuleName]\n            const originalGrammarAction = wrappedRule[\"originalGrammarAction\"]\n            let recordedRuleGast = undefined\n            this.TRACE_INIT(`${currRuleName} Rule`, () => {\n              recordedRuleGast = this.topLevelRuleRecord(\n                currRuleName,\n                originalGrammarAction\n              )\n            })\n            this.gastProductionsCache[currRuleName] = recordedRuleGast\n          })\n        } finally {\n          this.disableRecording()\n        }\n      })\n\n      let resolverErrors = []\n      this.TRACE_INIT(\"Grammar Resolving\", () => {\n        resolverErrors = resolveGrammar({\n          rules: values(this.gastProductionsCache)\n        })\n        this.definitionErrors.push.apply(this.definitionErrors, resolverErrors) // mutability for the win?\n      })\n\n      this.TRACE_INIT(\"Grammar Validations\", () => {\n        // only perform additional grammar validations IFF no resolving errors have occurred.\n        // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n        if (isEmpty(resolverErrors) && this.skipValidations === false) {\n          let validationErrors = validateGrammar({\n            rules: values(this.gastProductionsCache),\n            maxLookahead: this.maxLookahead,\n            tokenTypes: values(this.tokensMap),\n            errMsgProvider: defaultGrammarValidatorErrorProvider,\n            grammarName: className\n          })\n\n          this.definitionErrors.push.apply(\n            this.definitionErrors,\n            validationErrors\n          ) // mutability for the win?\n        }\n      })\n\n      // this analysis may fail if the grammar is not perfectly valid\n      if (isEmpty(this.definitionErrors)) {\n        // The results of these computations are not needed unless error recovery is enabled.\n        if (this.recoveryEnabled) {\n          this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n            let allFollows = computeAllProdsFollows(\n              values(this.gastProductionsCache)\n            )\n            this.resyncFollows = allFollows\n          })\n        }\n\n        this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n          this.preComputeLookaheadFunctions(values(this.gastProductionsCache))\n        })\n      }\n\n      if (\n        !Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n        !isEmpty(this.definitionErrors)\n      ) {\n        defErrorsMsgs = map(\n          this.definitionErrors,\n          (defError) => defError.message\n        )\n        throw new Error(\n          `Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\n            \"\\n-------------------------------\\n\"\n          )}`\n        )\n      }\n    })\n  }\n\n  definitionErrors: IParserDefinitionError[] = []\n  selfAnalysisDone = false\n  protected skipValidations: boolean\n\n  constructor(tokenVocabulary: TokenVocabulary, config: IParserConfig) {\n    const that: MixedInParser = this as any\n    that.initErrorHandler(config)\n    that.initLexerAdapter()\n    that.initLooksAhead(config)\n    that.initRecognizerEngine(tokenVocabulary, config)\n    that.initRecoverable(config)\n    that.initTreeBuilder(config)\n    that.initContentAssist()\n    that.initGastRecorder(config)\n    that.initPerformanceTracer(config)\n\n    if (has(config, \"ignoredIssues\")) {\n      throw new Error(\n        \"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n          \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n          \"See: https://sap.github.io/chevrotain/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n          \"For further details.\"\n      )\n    }\n\n    this.skipValidations = has(config, \"skipValidations\")\n      ? config.skipValidations\n      : DEFAULT_PARSER_CONFIG.skipValidations\n  }\n}\n\napplyMixins(Parser, [\n  Recoverable,\n  LooksAhead,\n  TreeBuilder,\n  LexerAdapter,\n  RecognizerEngine,\n  RecognizerApi,\n  ErrorHandler,\n  ContentAssist,\n  GastRecorder,\n  PerformanceTracer\n])\n\nexport class CstParser extends Parser {\n  constructor(\n    tokenVocabulary: TokenVocabulary,\n    config: IParserConfig = DEFAULT_PARSER_CONFIG\n  ) {\n    const configClone = cloneObj(config)\n    configClone.outputCst = true\n    super(tokenVocabulary, configClone)\n  }\n}\n\nexport class EmbeddedActionsParser extends Parser {\n  constructor(\n    tokenVocabulary: TokenVocabulary,\n    config: IParserConfig = DEFAULT_PARSER_CONFIG\n  ) {\n    const configClone = cloneObj(config)\n    configClone.outputCst = false\n    super(tokenVocabulary, configClone)\n  }\n}\n", "import { VERSION } from \"../version\"\nimport { ISerializedGast } from \"../../api\"\n\nexport function createSyntaxDiagramsCode(\n  grammar: ISerializedGast[],\n  {\n    resourceBase = `https://unpkg.com/chevrotain@${VERSION}/diagrams/`,\n    css = `https://unpkg.com/chevrotain@${VERSION}/diagrams/diagrams.css`\n  }: {\n    resourceBase?: string\n    css?: string\n  } = {}\n) {\n  const header = `\n<!-- This is a generated file -->\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  body {\n    background-color: hsl(30, 20%, 95%)\n  }\n</style>\n\n`\n  const cssHtml = `\n<link rel='stylesheet' href='${css}'>\n`\n\n  const scripts = `\n<script src='${resourceBase}vendor/railroad-diagrams.js'></script>\n<script src='${resourceBase}src/diagrams_builder.js'></script>\n<script src='${resourceBase}src/diagrams_behavior.js'></script>\n<script src='${resourceBase}src/main.js'></script>\n`\n  const diagramsDiv = `\n<div id=\"diagrams\" align=\"center\"></div>    \n`\n  const serializedGrammar = `\n<script>\n    window.serializedGrammar = ${JSON.stringify(grammar, null, \"  \")};\n</script>\n`\n\n  const initLogic = `\n<script>\n    var diagramsDiv = document.getElementById(\"diagrams\");\n    main.drawDiagramsFromSerializedGrammar(serializedGrammar, diagramsDiv);\n</script>\n`\n  return (\n    header + cssHtml + scripts + diagramsDiv + serializedGrammar + initLogic\n  )\n}\n", "import { forEach, map } from \"../utils/utils\"\nimport {\n  RepetitionMandatory,\n  Option,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Terminal,\n  NonTerminal,\n  Alternation,\n  Alternative,\n  Repetition\n} from \"../parse/grammar/gast/gast_public\"\nimport { IProduction, TokenType, Rule } from \"../../api\"\n\n/**\n * Missing features\n * 1. Rule arguments\n * 2. Gates\n * 3. embedded actions\n */\n\nconst NL = \"\\n\"\n\nexport function genUmdModule(options: { name: string; rules: Rule[] }): string {\n  return `\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['chevrotain'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory(require('chevrotain'));\n    } else {\n        // Browser globals (root is window)\n        root.returnExports = factory(root.b);\n    }\n}(typeof self !== 'undefined' ? self : this, function (chevrotain) {\n\n${genClass(options)}\n    \nreturn {\n    ${options.name}: ${options.name} \n}\n}));\n`\n}\n\nexport function genWrapperFunction(options: {\n  name: string\n  rules: Rule[]\n}): string {\n  return `    \n${genClass(options)}\nreturn new ${options.name}(tokenVocabulary, config)    \n`\n}\n\nexport function genClass(options: { name: string; rules: Rule[] }): string {\n  // TODO: how to pass the token vocabulary? Constructor? other?\n  let result = `\nfunction ${options.name}(tokenVocabulary, config) {\n    // invoke super constructor\n    // No support for embedded actions currently, so we can 'hardcode'\n    // The use of CstParser.\n    chevrotain.CstParser.call(this, tokenVocabulary, config)\n\n    const $ = this\n\n    ${genAllRules(options.rules)}\n\n    // very important to call this after all the rules have been defined.\n    // otherwise the parser may not work correctly as it will lack information\n    // derived during the self analysis phase.\n    this.performSelfAnalysis(this)\n}\n\n// inheritance as implemented in javascript in the previous decade... :(\n${options.name}.prototype = Object.create(chevrotain.CstParser.prototype)\n${options.name}.prototype.constructor = ${options.name}    \n    `\n\n  return result\n}\n\nexport function genAllRules(rules: Rule[]): string {\n  let rulesText = map(rules, (currRule) => {\n    return genRule(currRule, 1)\n  })\n\n  return rulesText.join(\"\\n\")\n}\n\nexport function genRule(prod: Rule, n: number): string {\n  let result = indent(n, `$.RULE(\"${prod.name}\", function() {`) + NL\n  result += genDefinition(prod.definition, n + 1)\n  result += indent(n + 1, `})`) + NL\n  return result\n}\n\nexport function genTerminal(prod: Terminal, n: number): string {\n  const name = prod.terminalType.name\n  // TODO: potential performance optimization, avoid tokenMap Dictionary access\n  return indent(n, `$.CONSUME${prod.idx}(this.tokensMap.${name})` + NL)\n}\n\nexport function genNonTerminal(prod: NonTerminal, n: number): string {\n  return indent(n, `$.SUBRULE${prod.idx}($.${prod.nonTerminalName})` + NL)\n}\n\nexport function genAlternation(prod: Alternation, n: number): string {\n  let result = indent(n, `$.OR${prod.idx}([`) + NL\n  const alts = map(prod.definition, (altDef) => genSingleAlt(altDef, n + 1))\n  result += alts.join(\",\" + NL)\n  result += NL + indent(n, `])` + NL)\n  return result\n}\n\nexport function genSingleAlt(prod: Alternative, n: number): string {\n  let result = indent(n, `{`) + NL\n\n  result += indent(n + 1, \"ALT: function() {\") + NL\n  result += genDefinition(prod.definition, n + 1)\n  result += indent(n + 1, `}`) + NL\n  result += indent(n, `}`)\n\n  return result\n}\n\nfunction genProd(prod: IProduction, n: number): string {\n  /* istanbul ignore else */\n  if (prod instanceof NonTerminal) {\n    return genNonTerminal(prod, n)\n  } else if (prod instanceof Option) {\n    return genDSLRule(\"OPTION\", prod, n)\n  } else if (prod instanceof RepetitionMandatory) {\n    return genDSLRule(\"AT_LEAST_ONE\", prod, n)\n  } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n    return genDSLRule(\"AT_LEAST_ONE_SEP\", prod, n)\n  } else if (prod instanceof RepetitionWithSeparator) {\n    return genDSLRule(\"MANY_SEP\", prod, n)\n  } else if (prod instanceof Repetition) {\n    return genDSLRule(\"MANY\", prod, n)\n  } else if (prod instanceof Alternation) {\n    return genAlternation(prod, n)\n  } else if (prod instanceof Terminal) {\n    return genTerminal(prod, n)\n  } else if (prod instanceof Alternative) {\n    return genDefinition(prod.definition, n)\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n\nfunction genDSLRule(\n  dslName,\n  prod: {\n    definition: IProduction[]\n    idx: number\n    separator?: TokenType\n  },\n  n: number\n): string {\n  let result = indent(n, `$.${dslName + prod.idx}(`)\n\n  if (prod.separator) {\n    result += \"{\" + NL\n    result +=\n      indent(n + 1, `SEP: this.tokensMap.${prod.separator.name}`) + \",\" + NL\n    result += `DEF: ${genDefFunction(prod.definition, n + 2)}` + NL\n    result += indent(n, \"}\") + NL\n  } else {\n    result += genDefFunction(prod.definition, n + 1)\n  }\n\n  result += indent(n, `)`) + NL\n  return result\n}\n\nfunction genDefFunction(definition: IProduction[], n: number): string {\n  let def = \"function() {\" + NL\n  def += genDefinition(definition, n)\n  def += indent(n, `}`) + NL\n  return def\n}\n\nfunction genDefinition(def: IProduction[], n: number): string {\n  let result = \"\"\n  forEach(def, (prod) => {\n    result += genProd(prod, n + 1)\n  })\n  return result\n}\n\nfunction indent(howMuch: number, text: string): string {\n  const spaces = Array(howMuch * 4 + 1).join(\" \")\n  return spaces + text\n}\n", "import { Rule, IParserConfig, TokenVocabulary, BaseParser } from \"../../api\"\nimport { genUmdModule, genWrapperFunction } from \"./generate\"\n\nexport function generateParserFactory<T extends BaseParser>(options: {\n  name: string\n  rules: Rule[]\n  tokenVocabulary: TokenVocabulary\n}): (config?: IParserConfig) => T {\n  const wrapperText = genWrapperFunction({\n    name: options.name,\n    rules: options.rules\n  })\n\n  const constructorWrapper = new Function(\n    \"tokenVocabulary\",\n    \"config\",\n    \"chevrotain\",\n    wrapperText\n  )\n\n  return function (config) {\n    return constructorWrapper(\n      options.tokenVocabulary,\n      config,\n      // TODO: check how the require is transpiled/webpacked\n      require(\"../api\")\n    )\n  }\n}\n\nexport function generateParserModule(options: {\n  name: string\n  rules: Rule[]\n}): string {\n  return genUmdModule({ name: options.name, rules: options.rules })\n}\n", "/* istanbul ignore file - tricky to import some things from this module during testing */\n\n// semantic version\nexport { VERSION } from \"./version\"\n\nexport {\n  CstParser,\n  EmbeddedActionsParser,\n  ParserDefinitionErrorType,\n  EMPTY_ALT\n} from \"./parse/parser/parser\"\n\nexport { Lexer, LexerDefinitionErrorType } from \"./scan/lexer_public\"\n\n// Tokens utilities\n\nexport {\n  createToken,\n  createTokenInstance,\n  EOF,\n  tokenLabel,\n  tokenMatcher,\n  tokenName\n} from \"./scan/tokens_public\"\n\n// Other Utilities\n\nexport {\n  defaultGrammarResolverErrorProvider,\n  defaultGrammarValidatorErrorProvider,\n  defaultParserErrorProvider\n} from \"./parse/errors_public\"\n\nexport {\n  EarlyExitException,\n  isRecognitionException,\n  MismatchedTokenException,\n  NotAllInputParsedException,\n  NoViableAltException\n} from \"./parse/exceptions_public\"\n\nexport { defaultLexerErrorProvider } from \"./scan/lexer_errors_public\"\n\n// grammar reflection API\n\nexport {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"./parse/grammar/gast/gast_public\"\n\n// GAST Utilities\n\nexport {\n  serializeGrammar,\n  serializeProduction\n} from \"./parse/grammar/gast/gast_public\"\n\nexport { GAstVisitor } from \"./parse/grammar/gast/gast_visitor_public\"\n\nexport {\n  assignOccurrenceIndices,\n  resolveGrammar,\n  validateGrammar\n} from \"./parse/grammar/gast/gast_resolver_public\"\n\n/* istanbul ignore next */\nexport function clearCache() {\n  console.warn(\n    \"The clearCache function was 'soft' removed from the Chevrotain API.\" +\n      \"\\n\\t It performs no action other than printing this message.\" +\n      \"\\n\\t Please avoid using it as it will be completely removed in the future\"\n  )\n}\n\nexport { createSyntaxDiagramsCode } from \"./diagrams/render_public\"\n\nexport {\n  generateParserFactory,\n  generateParserModule\n} from \"./generate/generate_public\"\n\nexport class Parser {\n  constructor() {\n    throw new Error(\n      \"The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\\t\\n\" +\n        \"See: https://sap.github.io/chevrotain/docs/changes/BREAKING_CHANGES.html#_7-0-0\"\n    )\n  }\n}\n", "const { createToken: createTokenOrg, Lexer } = require(\"chevrotain\");\n\n// A little mini DSL for easier lexer definition.\nconst fragments = {};\nconst f = fragments;\n\nfunction FRAGMENT(name, def) {\n  fragments[name] = typeof def === \"string\" ? def : def.source;\n}\n\nfunction makePattern(strings, ...args) {\n  let combined = \"\";\n  for (let i = 0; i < strings.length; i++) {\n    combined += strings[i];\n    if (i < args.length) {\n      let pattern = args[i];\n      // By wrapping in a RegExp (none) capturing group\n      // We enabled the safe usage of qualifiers and assertions.\n      combined += `(?:${pattern})`;\n    }\n  }\n  return new RegExp(combined);\n}\n\nconst tokensArray = [];\nconst tokensDictionary = {};\n\nfunction createToken(options) {\n  const newTokenType = createTokenOrg(options);\n  tokensArray.push(newTokenType);\n  tokensDictionary[options.name] = newTokenType;\n  return newTokenType;\n}\n\nFRAGMENT(\n  \"NameStartChar\",\n  \"(:|[a-zA-Z]|_|\\\\u2070-\\\\u218F|\\\\u2C00-\\\\u2FEF|\\\\u3001-\\\\uD7FF|\\\\uF900-\\\\uFDCF|\\\\uFDF0-\\\\uFFFD)\"\n);\n\nFRAGMENT(\n  \"NameChar\",\n  makePattern`${f.NameStartChar}|-|\\\\.|\\\\d|\\\\u00B7||[\\\\u0300-\\\\u036F]|[\\\\u203F-\\\\u2040]`\n);\nFRAGMENT(\"Name\", makePattern`${f.NameStartChar}(${f.NameChar})*`);\n\nconst Comment = createToken({\n  name: \"Comment\",\n  pattern: /<!--(.|\\r?\\n)*?-->/,\n  // A Comment may span multiple lines.\n  line_breaks: true,\n});\n\nconst CData = createToken({\n  name: \"CData\",\n  pattern: /<!\\[CDATA\\[(.|\\r?\\n)*?]]>/,\n  line_breaks: true,\n});\n\nconst DocType = createToken({\n  name: \"DocType\",\n  pattern: /<!DOCTYPE/,\n  push_mode: \"INSIDE\",\n});\n\nconst IgnoredDTD = createToken({\n  name: \"DTD\",\n  pattern: /<!.*?>/,\n  group: Lexer.SKIPPED,\n});\n\nconst EntityRef = createToken({\n  name: \"EntityRef\",\n  pattern: makePattern`&${f.Name};`,\n});\n\nconst CharRef = createToken({\n  name: \"CharRef\",\n  pattern: /&#\\d+;|&#x[a-fA-F0-9]/,\n});\n\nconst SEA_WS = createToken({\n  name: \"SEA_WS\",\n  pattern: /( |\\t|\\n|\\r\\n)+/,\n});\n\nconst XMLDeclOpen = createToken({\n  name: \"XMLDeclOpen\",\n  pattern: /<\\?xml[ \\t\\r\\n]/,\n  push_mode: \"INSIDE\",\n});\n\nconst SLASH_OPEN = createToken({\n  name: \"SLASH_OPEN\",\n  pattern: /<\\//,\n  push_mode: \"INSIDE\",\n});\n\nconst INVALID_SLASH_OPEN = createToken({\n  name: \"INVALID_SLASH_OPEN\",\n  pattern: /<\\//,\n  categories: [SLASH_OPEN],\n});\n\nconst PROCESSING_INSTRUCTION = createToken({\n  name: \"PROCESSING_INSTRUCTION\",\n  pattern: makePattern`<\\\\?${f.Name}.*\\\\?>`,\n});\n\nconst OPEN = createToken({ name: \"OPEN\", pattern: /</, push_mode: \"INSIDE\" });\n// Meant to avoid skipping '<' token in a partial sequence of elements.\n// Example of the problem this solves:\n// <\n// <from>john</from>\n//  - The second '<' will be skipped because in the mode \"INSIDE\" '<' is not recognized.\n//  - This means the AST will include only a single element instead of two\nconst INVALID_OPEN_INSIDE = createToken({\n  name: \"INVALID_OPEN_INSIDE\",\n  pattern: /</,\n  categories: [OPEN],\n});\n\nconst TEXT = createToken({ name: \"TEXT\", pattern: /[^<&]+/ });\n\nconst CLOSE = createToken({ name: \"CLOSE\", pattern: />/, pop_mode: true });\n\nconst SPECIAL_CLOSE = createToken({\n  name: \"SPECIAL_CLOSE\",\n  pattern: /\\?>/,\n  pop_mode: true,\n});\n\nconst SLASH_CLOSE = createToken({\n  name: \"SLASH_CLOSE\",\n  pattern: /\\/>/,\n  pop_mode: true,\n});\n\nconst SLASH = createToken({ name: \"SLASH\", pattern: /\\// });\n\nconst STRING = createToken({\n  name: \"STRING\",\n  pattern: /\"[^<\"]*\"|'[^<']*'/,\n});\n\nconst EQUALS = createToken({ name: \"EQUALS\", pattern: /=/ });\n\nconst Name = createToken({ name: \"Name\", pattern: makePattern`${f.Name}` });\n\nconst S = createToken({\n  name: \"S\",\n  pattern: /[ \\t\\r\\n]/,\n  group: Lexer.SKIPPED,\n});\n\nconst xmlLexerDefinition = {\n  defaultMode: \"OUTSIDE\",\n\n  modes: {\n    OUTSIDE: [\n      Comment,\n      CData,\n      DocType,\n      IgnoredDTD,\n      EntityRef,\n      CharRef,\n      SEA_WS,\n      XMLDeclOpen,\n      SLASH_OPEN,\n      PROCESSING_INSTRUCTION,\n      OPEN,\n      TEXT,\n    ],\n    INSIDE: [\n      // Tokens from `OUTSIDE` to improve error recovery behavior\n      Comment,\n      INVALID_SLASH_OPEN,\n      INVALID_OPEN_INSIDE,\n      // \"Real\" `INSIDE` tokens\n      CLOSE,\n      SPECIAL_CLOSE,\n      SLASH_CLOSE,\n      SLASH,\n      EQUALS,\n      STRING,\n      Name,\n      S,\n    ],\n  },\n};\n\nconst xmlLexer = new Lexer(xmlLexerDefinition, {\n  // Reducing the amount of position tracking can provide a small performance boost (<10%)\n  // Likely best to keep the full info for better error position reporting and\n  // to expose \"fuller\" ITokens from the Lexer.\n  positionTracking: \"full\",\n  ensureOptimizations: false,\n\n  // TODO: inspect definitions for XML line terminators\n  lineTerminatorCharacters: [\"\\n\"],\n  lineTerminatorsPattern: /\\n|\\r\\n/g,\n});\n\nmodule.exports = {\n  xmlLexer,\n  tokensDictionary,\n};\n", "const { CstParser, tokenMatcher } = require(\"chevrotain\");\nconst { tokensDictionary: t } = require(\"./lexer\");\n\nclass Parser extends CstParser {\n  constructor() {\n    super(t, {\n      maxLookahead: 1,\n      recoveryEnabled: true,\n      nodeLocationTracking: \"full\",\n    });\n\n    this.deletionRecoveryEnabled = true;\n\n    const $ = this;\n\n    $.RULE(\"document\", () => {\n      $.OPTION(() => {\n        $.SUBRULE($.prolog);\n      });\n\n      $.MANY(() => {\n        $.SUBRULE($.misc);\n      });\n\n      $.OPTION2(() => {\n        $.SUBRULE($.docTypeDecl);\n      });\n\n      $.MANY2(() => {\n        $.SUBRULE2($.misc);\n      });\n\n      $.SUBRULE($.element);\n\n      $.MANY3(() => {\n        $.SUBRULE3($.misc);\n      });\n    });\n\n    $.RULE(\"prolog\", () => {\n      $.CONSUME(t.XMLDeclOpen);\n      $.MANY(() => {\n        $.SUBRULE($.attribute);\n      });\n      $.CONSUME(t.SPECIAL_CLOSE);\n    });\n\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    $.RULE(\"docTypeDecl\", () => {\n      $.CONSUME(t.DocType);\n      $.CONSUME(t.Name);\n\n      $.OPTION(() => {\n        $.SUBRULE($.externalID);\n      });\n\n      // The internal subSet part is intentionally not implemented because we do not at this\n      // time wish to implement a full DTD Parser as part of this project...\n      // https://www.w3.org/TR/xml/#NT-intSubset\n\n      $.CONSUME(t.CLOSE);\n    });\n\n    $.RULE(\"externalID\", () => {\n      // Using gates to assert the value of the \"Name\" Identifiers.\n      // We could use Categories to model un-reserved keywords, however I am not sure\n      // The added complexity is needed at this time...\n      $.OR([\n        {\n          GATE: () => $.LA(1).image === \"SYSTEM\",\n          ALT: () => {\n            $.CONSUME2(t.Name, { LABEL: \"System\" });\n            $.CONSUME(t.STRING, { LABEL: \"SystemLiteral\" });\n          },\n        },\n        {\n          GATE: () => $.LA(1).image === \"PUBLIC\",\n          ALT: () => {\n            $.CONSUME3(t.Name, { LABEL: \"Public\" });\n            $.CONSUME2(t.STRING, { LABEL: \"PubIDLiteral\" });\n            $.CONSUME3(t.STRING, { LABEL: \"SystemLiteral\" });\n          },\n        },\n      ]);\n    });\n\n    $.RULE(\"content\", () => {\n      $.MANY(() => {\n        $.OR([\n          { ALT: () => $.SUBRULE($.element) },\n          { ALT: () => $.SUBRULE($.chardata) },\n          { ALT: () => $.SUBRULE($.reference) },\n          { ALT: () => $.CONSUME(t.CData) },\n          { ALT: () => $.CONSUME(t.PROCESSING_INSTRUCTION) },\n          { ALT: () => $.CONSUME(t.Comment) },\n        ]);\n      });\n    });\n\n    $.RULE(\"element\", () => {\n      $.CONSUME(t.OPEN);\n      try {\n        this.deletionRecoveryEnabled = false;\n        // disabling single token deletion here\n        // because `<\n        //            </note>`\n        // will be parsed as: `<note>`\n        // and the next element will be lost\n        $.CONSUME(t.Name);\n      } finally {\n        this.deletionRecoveryEnabled = true;\n      }\n      $.MANY(() => {\n        $.SUBRULE($.attribute);\n      });\n\n      $.OR([\n        {\n          ALT: () => {\n            $.CONSUME(t.CLOSE, { LABEL: \"START_CLOSE\" });\n            $.SUBRULE($.content);\n            $.CONSUME(t.SLASH_OPEN);\n            $.CONSUME2(t.Name, { LABEL: \"END_NAME\" });\n            $.CONSUME2(t.CLOSE, { LABEL: \"END\" });\n          },\n        },\n        {\n          ALT: () => {\n            $.CONSUME(t.SLASH_CLOSE);\n          },\n        },\n      ]);\n    });\n\n    $.RULE(\"reference\", () => {\n      $.OR([\n        { ALT: () => $.CONSUME(t.EntityRef) },\n        { ALT: () => $.CONSUME(t.CharRef) },\n      ]);\n    });\n\n    $.RULE(\"attribute\", () => {\n      $.CONSUME(t.Name);\n      try {\n        this.deletionRecoveryEnabled = false;\n        // disabling single token deletion here\n        // because `attrib1 attrib2=\"666`\n        // will be parsed as: `attrib1=\"666`\n        $.CONSUME(t.EQUALS);\n        // disabling single token deletion here\n        // to avoid new elementName being\n        $.CONSUME(t.STRING);\n      } finally {\n        this.deletionRecoveryEnabled = true;\n      }\n    });\n\n    $.RULE(\"chardata\", () => {\n      $.OR([\n        { ALT: () => $.CONSUME(t.TEXT) },\n        { ALT: () => $.CONSUME(t.SEA_WS) },\n      ]);\n    });\n\n    $.RULE(\"misc\", () => {\n      $.OR([\n        { ALT: () => $.CONSUME(t.Comment) },\n        { ALT: () => $.CONSUME(t.PROCESSING_INSTRUCTION) },\n        { ALT: () => $.CONSUME(t.SEA_WS) },\n      ]);\n    });\n\n    this.performSelfAnalysis();\n  }\n\n  canRecoverWithSingleTokenDeletion(expectedTokType) {\n    if (this.deletionRecoveryEnabled === false) {\n      return false;\n    }\n    return super.canRecoverWithSingleTokenDeletion(expectedTokType);\n  }\n\n  // TODO: provide this fix upstream to chevrotain\n  // https://github.com/SAP/chevrotain/issues/1055\n  /* istanbul ignore next - should be tested as part of Chevrotain */\n  findReSyncTokenType() {\n    const allPossibleReSyncTokTypes = this.flattenFollowSet();\n    // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n    let nextToken = this.LA(1);\n    let k = 2;\n    /* eslint-disable-next-line no-constant-condition -- see above comment */\n    while (true) {\n      const foundMatch = allPossibleReSyncTokTypes.find((resyncTokType) => {\n        const canMatch = tokenMatcher(nextToken, resyncTokType);\n        return canMatch;\n      });\n      if (foundMatch !== undefined) {\n        return foundMatch;\n      }\n      nextToken = this.LA(k);\n      k++;\n    }\n  }\n}\n\n// Re-use the same parser instance\nconst xmlParser = new Parser();\n\nmodule.exports = {\n  xmlParser,\n};\n", "const { xmlLexer } = require(\"./lexer\");\nconst { xmlParser } = require(\"./parser\");\n\nmodule.exports = {\n  parse: function parse(text) {\n    const lexResult = xmlLexer.tokenize(text);\n    // setting a new input will RESET the parser instance's state.\n    xmlParser.input = lexResult.tokens;\n    // any top level rule may be used as an entry point\n    const cst = xmlParser.document();\n\n    return {\n      cst: cst,\n      tokenVector: lexResult.tokens,\n      lexErrors: lexResult.errors,\n      parseErrors: xmlParser.errors,\n    };\n  },\n\n  BaseXmlCstVisitor: xmlParser.getBaseCstVisitorConstructor(),\n};\n", "/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('d\u00E9j\u00E0 vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n", "const { findIndex } = require(\"lodash\");\n\nfunction findNextTextualToken(tokenVector, prevTokenEndOffset) {\n  // The TokenVector is sorted, so we could use a BinarySearch to optimize performance\n  const prevTokenIdx = findIndex(\n    tokenVector,\n    (tok) => tok.endOffset === prevTokenEndOffset\n  );\n  let nextTokenIdx = prevTokenIdx;\n  let found = false;\n  while (found === false) {\n    nextTokenIdx++;\n    const nextPossibleToken = tokenVector[nextTokenIdx];\n    // No Next textualToken\n    if (nextPossibleToken === undefined) {\n      return null;\n    }\n    /* istanbul ignore next\n     * I don't think this scenario can be created, however defensive coding never killed anyone...\n     * Basically SEA_WS can only only appear in \"OUTSIDE\" mode, and we need a CLOSE/SLASH_CLOSE to get back to outside\n     * mode, however if we had those  this function would never have been called...\n     */\n    if (nextPossibleToken.tokenType.name === \"SEA_WS\") {\n      // skip pure WS tokens as they do not contain any actual text\n    } else {\n      return nextPossibleToken;\n    }\n  }\n}\n\nmodule.exports = {\n  findNextTextualToken: findNextTextualToken,\n};\n", "// The xml parser takes care of validating the attribute name.\n// If the user started the attribute name with \"xmlns:\" we can assume that\n// they meant for it to be an xml namespace attribute.\n// xmlns attributes explicitly can't contain \":\" after the \"xmlns:\" part.\nconst namespaceRegex = /^xmlns(?<prefixWithColon>:(?<prefix>[^:]*))?$/;\n\n/**\n * See comment in api.d.ts.\n *\n * @param {string} key\n * @param {boolean} includeEmptyPrefix\n * @returns {boolean}\n */\nfunction isXMLNamespaceKey({ key, includeEmptyPrefix }) {\n  if (typeof key !== \"string\") {\n    return false;\n  }\n  const matchArr = key.match(namespaceRegex);\n\n  // No match - this is not an xmlns key\n  if (matchArr === null) {\n    return false;\n  }\n\n  return !!(\n    includeEmptyPrefix === true ||\n    // \"xmlns\" case\n    !matchArr.groups.prefixWithColon ||\n    // \"xmlns:<prefix>\" case\n    matchArr.groups.prefix\n  );\n}\n\n/**\n * See comment in api.d.ts.\n *\n * @param {string} key\n * @returns {string|undefined}\n */\nfunction getXMLNamespaceKeyPrefix(key) {\n  if (typeof key !== \"string\") {\n    return undefined;\n  }\n  const matchArr = key.match(namespaceRegex);\n  if (matchArr === null) {\n    return undefined;\n  }\n  return (matchArr.groups && matchArr.groups.prefix) || \"\";\n}\n\nmodule.exports = {\n  isXMLNamespaceKey: isXMLNamespaceKey,\n  getXMLNamespaceKeyPrefix: getXMLNamespaceKeyPrefix,\n};\n", "const { findNextTextualToken } = require(\"./find-next-textual-token\");\nconst {\n  isXMLNamespaceKey,\n  getXMLNamespaceKeyPrefix,\n} = require(\"./xml-ns-key.js\");\n\nmodule.exports = {\n  findNextTextualToken: findNextTextualToken,\n  isXMLNamespaceKey: isXMLNamespaceKey,\n  getXMLNamespaceKeyPrefix: getXMLNamespaceKeyPrefix,\n};\n", "const { reduce, has, isArray } = require(\"lodash\");\n\nfunction getAstChildrenReflective(astParent) {\n  const astChildren = reduce(\n    astParent,\n    (result, prop, name) => {\n      if (name === \"parent\") {\n        // parent property is never a child...\n      } else if (has(prop, \"type\")) {\n        result.push(prop);\n      } else if (isArray(prop) && prop.length > 0 && has(prop[0], \"type\")) {\n        result = result.concat(prop);\n      }\n\n      return result;\n    },\n    []\n  );\n\n  return astChildren;\n}\n\nmodule.exports = {\n  getAstChildrenReflective: getAstChildrenReflective,\n};\n", "module.exports = {\n  DEFAULT_NS: \"::DEFAULT\",\n};\n", "const { BaseXmlCstVisitor } = require(\"@xml-tools/parser\");\nconst {\n  last,\n  forEach,\n  reduce,\n  map,\n  pick,\n  sortBy,\n  isEmpty,\n  isArray,\n  assign,\n} = require(\"lodash\");\nconst {\n  findNextTextualToken,\n  isXMLNamespaceKey,\n  getXMLNamespaceKeyPrefix,\n} = require(\"@xml-tools/common\");\n\nconst { getAstChildrenReflective } = require(\"./utils\");\nconst { DEFAULT_NS } = require(\"./constants\");\n\n/**\n * @param {DocumentCstNode} docCst\n * @param {IToken[]} tokenVector\n * @returns {XMLDocument}\n */\nfunction buildAst(docCst, tokenVector) {\n  AstBuilder.setState({ tokenVector });\n  const xmlDocAst = AstBuilder.visit(docCst);\n\n  if (xmlDocAst.rootElement !== invalidSyntax) {\n    updateNamespaces(xmlDocAst.rootElement);\n  }\n  return xmlDocAst;\n}\n\n/* eslint-disable no-unused-vars -- consistent signatures in visitor methods even if they are empty placeholders */\nclass CstToAstVisitor extends BaseXmlCstVisitor {\n  constructor() {\n    super();\n  }\n\n  setState({ tokenVector }) {\n    this.tokenVector = tokenVector;\n  }\n\n  visit(cstNode, params = {}) {\n    return super.visit(cstNode, { location: cstNode.location, ...params });\n  }\n\n  /**\n   * @param ctx {DocumentCtx}\n   * @param opts {Object}\n   * @param opts.location {SourcePosition}\n   *\n   * @returns {XMLDocument}\n   */\n  document(ctx, { location }) {\n    const astNode = {\n      type: \"XMLDocument\",\n      rootElement: invalidSyntax,\n      position: location,\n    };\n\n    if (ctx.prolog !== undefined) {\n      astNode.prolog = this.visit(ctx.prolog[0]);\n    }\n\n    if (\n      ctx.element !== undefined &&\n      isEmpty(ctx.element[0].children) === false\n    ) {\n      astNode.rootElement = this.visit(ctx.element[0]);\n    }\n\n    setChildrenParent(astNode);\n\n    return astNode;\n  }\n\n  /**\n   * @param ctx {PrologCtx}\n   * @param opts {Object}\n   * @param opts.location {SourcePosition}\n   */\n  prolog(ctx, { location }) {\n    const astNode = {\n      type: \"XMLProlog\",\n      attributes: [],\n      position: location,\n    };\n\n    if (ctx.attribute !== undefined) {\n      astNode.attributes = map(ctx.attribute, (_) =>\n        this.visit(_, { isPrologParent: true })\n      );\n    }\n\n    setChildrenParent(astNode);\n\n    return astNode;\n  }\n\n  /**\n   * @param {docTypeDeclCtx} ctx\n   */\n  /* istanbul ignore next - place holder*/\n  docTypeDecl(ctx, astNode) {}\n\n  /**\n   * @param {ExternalIDCtx} ctx\n   */\n  /* istanbul ignore next - place holder*/\n  externalID(ctx, astNode) {}\n\n  /**\n   * @param ctx {ContentCtx}\n   * @param opts {Object}\n   * @param opts.location {SourcePosition}\n   *\n   * @return {{elements, textContents}}\n   */\n  content(ctx, { location }) {\n    let elements = [];\n    let textContents = [];\n\n    if (ctx.element !== undefined) {\n      elements = map(ctx.element, this.visit.bind(this));\n    }\n\n    if (ctx.chardata !== undefined) {\n      textContents = map(ctx.chardata, this.visit.bind(this));\n    }\n\n    return { elements, textContents };\n  }\n\n  /**\n   * @param ctx {ElementCtx}\n   * @param opts {Object}\n   * @param opts.location {SourcePosition}\n   */\n  element(ctx, { location }) {\n    const astNode = {\n      type: \"XMLElement\",\n      // Avoid Accidental Keys in this map\n      namespaces: Object.create(null),\n      name: invalidSyntax,\n      attributes: [],\n      subElements: [],\n      textContents: [],\n      position: location,\n      syntax: {},\n    };\n\n    if (ctx.attribute !== undefined) {\n      astNode.attributes = map(ctx.attribute, this.visit.bind(this));\n    }\n\n    if (ctx.content !== undefined) {\n      const { elements, textContents } = this.visit(ctx.content[0]);\n      astNode.subElements = elements;\n      astNode.textContents = textContents;\n    }\n\n    handleElementOpenCloseNameRanges(astNode, ctx);\n    handleElementOpenCloseBodyRanges(astNode, ctx);\n    handleElementAttributeRanges(astNode, ctx, this.tokenVector);\n\n    setChildrenParent(astNode);\n\n    return astNode;\n  }\n\n  /**\n   * @param ctx {ReferenceCtx}\n   * @param opts {Object}\n   * @param opts.location {SourcePosition}\n   */\n  /* istanbul ignore next - place holder*/\n  reference(ctx, { location }) {\n    // Irrelevant for the AST at this time\n  }\n\n  /**\n   * @param ctx {AttributeCtx}\n   * @param opts {Object}\n   * @param opts.location {SourcePosition}\n   * @param opts.isPrologParent {boolean}\n   */\n  attribute(ctx, { location, isPrologParent }) {\n    const astNode = {\n      type: isPrologParent ? \"XMLPrologAttribute\" : \"XMLAttribute\",\n      position: location,\n      key: invalidSyntax,\n      value: invalidSyntax,\n      syntax: {},\n    };\n\n    /* istanbul ignore else - Defensive Coding, not actually possible else branch */\n    if (ctx.Name !== undefined && ctx.Name[0].isInsertedInRecovery !== true) {\n      const keyToken = ctx.Name[0];\n      astNode.key = keyToken.image;\n      astNode.syntax.key = toXMLToken(keyToken);\n    }\n\n    if (\n      ctx.STRING !== undefined &&\n      ctx.STRING[0].isInsertedInRecovery !== true\n    ) {\n      const valueToken = ctx.STRING[0];\n      astNode.value = stripQuotes(valueToken.image);\n      astNode.syntax.value = toXMLToken(valueToken);\n    }\n\n    setChildrenParent(astNode);\n\n    return astNode;\n  }\n\n  /**\n   * @param ctx {ChardataCtx}\n   * @param opts {Object}\n   * @param opts.location {SourcePosition}\n   */\n  chardata(ctx, { location }) {\n    const astNode = {\n      type: \"XMLTextContent\",\n      position: location,\n      text: invalidSyntax,\n    };\n\n    let allTokens = [];\n    if (ctx.SEA_WS !== undefined) {\n      allTokens = allTokens.concat(ctx.SEA_WS);\n    }\n    if (ctx.TEXT !== undefined) {\n      allTokens = allTokens.concat(ctx.TEXT);\n    }\n    const sortedTokens = sortBy(allTokens, [\"startOffset\"]);\n    const fullText = map(sortedTokens, \"image\").join(\"\");\n    astNode.text = fullText;\n\n    return astNode;\n  }\n\n  /**\n   * @param ctx {MiscCtx}\n   * @param opts {Object}\n   * @param opts.location {SourcePosition}\n   */\n  /* istanbul ignore next - place holder*/\n  misc(ctx, { location }) {\n    // Irrelevant for the AST at this time\n  }\n}\n/* eslint-enable no-unused-vars -- see matching disable comment */\n\nconst AstBuilder = new CstToAstVisitor();\n\nfunction setChildrenParent(astParent) {\n  const astChildren = getAstChildrenReflective(astParent);\n  forEach(astChildren, (child) => (child.parent = astParent));\n}\n\n/**\n * @param {XMLElement} element\n * @param {Record<Prefix, Uri>} prevNamespaces\n */\nfunction updateNamespaces(element, prevNamespaces = []) {\n  const currElemNamespaces = reduce(\n    element.attributes,\n    (result, attrib) => {\n      /* istanbul ignore else - Defensive Coding, not actually possible branch */\n      if (attrib.key !== invalidSyntax) {\n        if (\n          isXMLNamespaceKey({ key: attrib.key, includeEmptyPrefix: false }) ===\n          true\n        ) {\n          const prefix = getXMLNamespaceKeyPrefix(attrib.key);\n          // TODO: Support un-defining namespaces (including the default one)\n          if (attrib.value) {\n            const uri = attrib.value;\n            if (prefix !== \"\") {\n              result[prefix] = uri;\n            } else {\n              // default namespace\n              result[DEFAULT_NS] = uri;\n            }\n          }\n        }\n      }\n\n      return result;\n    },\n    {}\n  );\n\n  const emptyMap = Object.create(null);\n  // \"newer\" (closer scope)  namespaces definitions will overwrite \"older\" ones.\n  element.namespaces = assign(emptyMap, prevNamespaces, currElemNamespaces);\n\n  forEach(element.subElements, (subElem) =>\n    updateNamespaces(subElem, element.namespaces)\n  );\n}\n\n/**\n * @param {chevrotain.IToken} token\n */\nfunction toXMLToken(token) {\n  return pick(token, [\n    \"image\",\n    \"startOffset\",\n    \"endOffset\",\n    \"startLine\",\n    \"endLine\",\n    \"startColumn\",\n    \"endColumn\",\n  ]);\n}\n\nfunction startOfXMLToken(token) {\n  return pick(token, [\"startOffset\", \"startLine\", \"startColumn\"]);\n}\n\nfunction endOfXMLToken(token) {\n  return pick(token, [\"endOffset\", \"endLine\", \"endColumn\"]);\n}\n\nfunction exists(tokArr) {\n  return (\n    isArray(tokArr) &&\n    tokArr.length === 1 &&\n    tokArr[0].isInsertedInRecovery !== true\n  );\n}\n\nfunction stripQuotes(quotedText) {\n  return quotedText.substring(1, quotedText.length - 1);\n}\n\n/**\n * @param {string} text\n */\nfunction nsToParts(text) {\n  const matchResult = /^([^:]+):([^:]+)$/.exec(text);\n  if (matchResult === null) {\n    return null;\n  }\n  const ns = matchResult[1];\n  const name = matchResult[2];\n  return { ns, name };\n}\n\n/**\n * @type {InvalidSyntax}\n */\nconst invalidSyntax = null;\n\n/**\n * @param {XMLElement} astNode\n * @param {ElementCtx} ctx\n */\nfunction handleElementOpenCloseNameRanges(astNode, ctx) {\n  if (ctx.Name !== undefined && ctx.Name[0].isInsertedInRecovery !== true) {\n    const openNameToken = ctx.Name[0];\n    astNode.syntax.openName = toXMLToken(openNameToken);\n    const nsParts = nsToParts(openNameToken.image);\n    if (nsParts !== null) {\n      astNode.ns = nsParts.ns;\n      astNode.name = nsParts.name;\n    } else {\n      astNode.name = openNameToken.image;\n    }\n  }\n\n  if (\n    ctx.END_NAME !== undefined &&\n    ctx.END_NAME[0].isInsertedInRecovery !== true\n  ) {\n    astNode.syntax.closeName = toXMLToken(ctx.END_NAME[0]);\n  }\n}\n\n/**\n * @param {XMLElement} astNode\n * @param {ElementCtx} ctx\n */\nfunction handleElementOpenCloseBodyRanges(astNode, ctx) {\n  /* istanbul ignore else - Defensive Coding */\n  if (exists(ctx.OPEN)) {\n    let openBodyCloseTok = undefined;\n    /* istanbul ignore else - Defensive Coding */\n    if (exists(ctx.START_CLOSE)) {\n      openBodyCloseTok = ctx.START_CLOSE[0];\n      astNode.syntax.isSelfClosing = false;\n    } else if (exists(ctx.SLASH_CLOSE)) {\n      openBodyCloseTok = ctx.SLASH_CLOSE[0];\n      astNode.syntax.isSelfClosing = true;\n    }\n\n    if (openBodyCloseTok !== undefined) {\n      astNode.syntax.openBody = {\n        ...startOfXMLToken(ctx.OPEN[0]),\n        ...endOfXMLToken(openBodyCloseTok),\n      };\n    }\n\n    if (exists(ctx.SLASH_OPEN) && exists(ctx.END)) {\n      astNode.syntax.closeBody = {\n        ...startOfXMLToken(ctx.SLASH_OPEN[0]),\n        ...endOfXMLToken(ctx.END[0]),\n      };\n    }\n  }\n}\n\n/**\n * @param {XMLElement} astNode\n * @param {ElementCtx} ctx\n * @param {IToken[]} tokenVector\n */\nfunction handleElementAttributeRanges(astNode, ctx, tokenVector) {\n  if (exists(ctx.Name)) {\n    const startOffset = ctx.Name[0].endOffset + 2;\n    // Valid `attributesRange` exists\n    if (exists(ctx.START_CLOSE) || exists(ctx.SLASH_CLOSE)) {\n      const endOffset =\n        (exists(ctx.START_CLOSE)\n          ? ctx.START_CLOSE[0].startOffset\n          : ctx.SLASH_CLOSE[0].startOffset) - 1;\n      astNode.syntax.attributesRange = { startOffset, endOffset };\n    }\n    // Have to scan-ahead and guess where the attributes range ends\n    else {\n      const hasAttributes = isArray(ctx.attribute);\n      const lastKnownAttribRangeTokenEnd = hasAttributes\n        ? last(ctx.attribute).location.endOffset\n        : ctx.Name[0].endOffset;\n      const nextTextualToken = findNextTextualToken(\n        tokenVector,\n        lastKnownAttribRangeTokenEnd\n      );\n      if (nextTextualToken !== null) {\n        astNode.syntax.guessedAttributesRange = {\n          startOffset,\n          endOffset: nextTextualToken.endOffset - 1,\n        };\n      }\n    }\n  }\n}\n\nmodule.exports = {\n  buildAst: buildAst,\n};\n", "const { forEach, isFunction } = require(\"lodash\");\nconst { getAstChildrenReflective } = require(\"./utils\");\n\n/**\n * @param {XMLAstNode} node\n * @param {XMLAstVisitor} visitor\n *\n * @returns {void}\n */\nfunction accept(node, visitor) {\n  switch (node.type) {\n    case \"XMLDocument\": {\n      if (isFunction(visitor.visitXMLDocument)) {\n        visitor.visitXMLDocument(node);\n      }\n      break;\n    }\n    case \"XMLProlog\": {\n      if (isFunction(visitor.visitXMLProlog)) {\n        visitor.visitXMLProlog(node);\n      }\n      break;\n    }\n    case \"XMLPrologAttribute\": {\n      if (isFunction(visitor.visitXMLPrologAttribute)) {\n        visitor.visitXMLPrologAttribute(node);\n      }\n      break;\n    }\n    case \"XMLElement\": {\n      if (isFunction(visitor.visitXMLElement)) {\n        visitor.visitXMLElement(node);\n      }\n      break;\n    }\n    case \"XMLAttribute\": {\n      if (isFunction(visitor.visitXMLAttribute)) {\n        visitor.visitXMLAttribute(node);\n      }\n      break;\n    }\n    case \"XMLTextContent\": {\n      if (isFunction(visitor.visitXMLTextContent)) {\n        visitor.visitXMLTextContent(node);\n      }\n      break;\n    }\n    /* istanbul ignore next  defensive programming */\n    default:\n      throw Error(\"None Exhaustive Match\");\n  }\n\n  const astChildren = getAstChildrenReflective(node);\n  forEach(astChildren, (childNode) => {\n    accept(childNode, visitor);\n  });\n}\n\nmodule.exports = {\n  accept: accept,\n};\n", "const { buildAst } = require(\"./build-ast\");\nconst { accept } = require(\"./visit-ast\");\nconst { DEFAULT_NS } = require(\"./constants\");\n\nmodule.exports = {\n  buildAst: buildAst,\n  accept: accept,\n  DEFAULT_NS: DEFAULT_NS,\n};\n", "export * from './api';\nexport * from './extensionLogger';\nexport * from './project';\nexport * from './specification/schemaAccess';\n\nexport * from '@sap/ux-specification-types';\n", "/**\n * This file implements the interface 'Specification' from ./types and serves as API to specification\n */\nimport {\n    FioriElementsVersion,\n    SchemaType,\n    TemplateType,\n    CustomExtensionType,\n    defaultExportResult\n} from '@sap/ux-specification-types';\nimport type {\n    CustomExtensionData,\n    ExportResults,\n    File,\n    GenerateSchemaParameters,\n    ExportConfigParameters,\n    ImportConfigParameters,\n    ImportProjectParameters,\n    ApiVersion,\n    UI5Version,\n    GenerateCustomExtensionParams,\n    ExportConfigWithPath\n} from '@sap/ux-specification-types';\nimport {\n    generateListReportInterfaceV2,\n    generateObjectPageInterfaceV2,\n    generateOVPInterfaceV2,\n    generateAnalyticalListPageInterfaceV2\n} from './sync/v2/generate';\nimport {\n    generateFreestyleInterfaceV4,\n    generateListReportInterfaceV4,\n    generateObjectPageInterfaceV4,\n    generateFPMCustomPageInterfaceV4\n} from './sync/v4/generate';\nimport { exportConfigEntityByPathV2, exportPageV2 } from './sync/v2/export/exportPage';\nimport {\n    createListReportConfig as createListReportConfigV2,\n    createObjectPageConfigV2,\n    createOverviewPageConfig as createOverviewPageConfigV2,\n    createAnalyticalListPageConfig as createAnalyticalListPageConfigV2\n} from './sync/v2/import';\nimport { exportConfigEntityByPathV4, exportPageV4 } from './sync/v4/export/export';\nimport {\n    createListReportConfig as createListReportConfigV4,\n    createObjectPageConfigV4,\n    createCustomPageConfig\n} from './sync/v4/import';\nimport { importProjectSchemaAndConfig, importProjectSchema as importProjectSchemaOnly } from './sync/common';\nimport type { Editor } from 'mem-fs-editor';\nimport {\n    enableFPM,\n    generateControllerExtension,\n    generateCustomAction,\n    generateCustomColumn,\n    generateCustomPage,\n    generateCustomSection,\n    generateCustomView,\n    generateObjectPage,\n    generateCustomSubSection,\n    generateCustomFilter,\n    generateCustomHeaderSection\n} from '@sap-ux/fe-fpm-writer';\n\nconst FPMWriterMap = new Map<CustomExtensionType, (basePath: string, data: CustomExtensionData, fs?: Editor) => Editor>(\n    [\n        [CustomExtensionType.CustomPage, generateCustomPage],\n        [CustomExtensionType.CustomColumn, generateCustomColumn],\n        [CustomExtensionType.CustomSection, generateCustomSection],\n        [CustomExtensionType.ObjectPage, generateObjectPage],\n        [CustomExtensionType.CustomAction, generateCustomAction],\n        [CustomExtensionType.CustomView, generateCustomView],\n        [CustomExtensionType.ControllerExtension, generateControllerExtension],\n        [CustomExtensionType.CustomSubSection, generateCustomSubSection],\n        [CustomExtensionType.CustomFilterField, generateCustomFilter],\n        [CustomExtensionType.CustomHeaderSection, generateCustomHeaderSection]\n    ]\n);\n\n/**\n * Return the generic (project independent) JSON schema\n * @param specification - reference to spec\n * @param version - Fiori elements version (v2 or v4)\n * @param schemaType - type of the schema, e.g. ListReport, ObjectPage\n * @returns the generic schema for the given Fiori Elements version and schema type\n */\nexport { getGenericSchema } from './specification/schemaAccess';\n\n/**\n * Generate JSON schema for a given Fiori elements version and page type\n * @param generateParameters: the input structure that contains the version, schema type, and parameters\n * @returns the app-specific schema for the given schema type and page\n */\nexport function generateSchema(generateParameters: GenerateSchemaParameters): object {\n    let schema: object;\n    if (generateParameters[FioriElementsVersion.v2]) {\n        /**\n         * Handle v2 schema generation\n         */\n        const v2Params = generateParameters[FioriElementsVersion.v2];\n        if (v2Params[SchemaType.ListReport]) {\n            const { genericSchema, entitySet, annotations, manifest, fragments, logger } =\n                v2Params[SchemaType.ListReport];\n            schema = generateListReportInterfaceV2(genericSchema, entitySet, annotations, manifest, fragments, logger);\n        } else if (v2Params[SchemaType.ObjectPage]) {\n            const { genericSchema, entitySet, annotations, manifest, fragments, logger } =\n                v2Params[SchemaType.ObjectPage];\n            schema = generateObjectPageInterfaceV2(genericSchema, entitySet, annotations, manifest, fragments, logger);\n        } else if (v2Params[SchemaType.OverviewPage]) {\n            const { genericSchema, manifest } = v2Params[SchemaType.OverviewPage];\n            schema = generateOVPInterfaceV2(genericSchema, manifest);\n        } else if (v2Params[SchemaType.AnalyticalListPage]) {\n            const { genericSchema, entitySet, annotations, manifest, fragments, logger } =\n                v2Params[SchemaType.AnalyticalListPage];\n            schema = generateAnalyticalListPageInterfaceV2(\n                genericSchema,\n                entitySet,\n                annotations,\n                manifest,\n                fragments,\n                logger\n            );\n        }\n    } else if (generateParameters[FioriElementsVersion.v4]) {\n        /**\n         * Handle v4 schema generation\n         */\n        const v4Params = generateParameters[FioriElementsVersion.v4];\n        if (v4Params[SchemaType.ListReport]) {\n            const { genericSchema, entitySet, annotations, logger, manifest, contextPath } =\n                v4Params[SchemaType.ListReport];\n            schema = generateListReportInterfaceV4(\n                TemplateType.ListReportObjectPageV4,\n                genericSchema,\n                entitySet,\n                annotations,\n                logger,\n                manifest,\n                contextPath\n            );\n        } else if (v4Params[SchemaType.ObjectPage]) {\n            const {\n                genericSchema,\n                entitySet,\n                annotations,\n                manifest,\n                logger,\n                fragments,\n                contextPath,\n                genericMacrosSchema\n            } = v4Params[SchemaType.ObjectPage];\n            schema = generateObjectPageInterfaceV4(\n                genericSchema,\n                entitySet,\n                annotations,\n                manifest,\n                logger,\n                fragments,\n                contextPath,\n                genericMacrosSchema,\n                generateParameters.featureToggles\n            );\n        } else if (v4Params[SchemaType.AnalyticalListPage]) {\n            const { genericSchema, entitySet, annotations, logger, manifest, contextPath } =\n                v4Params[SchemaType.AnalyticalListPage];\n            //As of now, the LR logic can also be applied to ALP\n            schema = generateListReportInterfaceV4(\n                TemplateType.AnalyticalListPageV4,\n                genericSchema,\n                entitySet,\n                annotations,\n                logger,\n                manifest,\n                contextPath\n            );\n        } else if (v4Params[SchemaType.FreestylePage]) {\n            const { genericSchema, entitySet, annotations, logger, manifest } = v4Params[SchemaType.FreestylePage];\n            schema = generateFreestyleInterfaceV4(\n                TemplateType.FreestylePageV4,\n                genericSchema,\n                annotations,\n                manifest,\n                entitySet,\n                logger\n            );\n        } else if (v4Params[SchemaType.FPMCustomPage]) {\n            const { genericSchema, routingId, manifest, views, logger, annotations } =\n                v4Params[SchemaType.FPMCustomPage];\n            schema = generateFPMCustomPageInterfaceV4(\n                genericSchema,\n                routingId,\n                manifest,\n                views,\n                annotations,\n                generateParameters.featureToggles,\n                logger\n            );\n        }\n    }\n    return schema;\n}\n\n/**\n * Exports the whole config (src/*.json, src/pages/*.json) to flex changes and/or manifest settings\n * @param exportParameters - parameters to control the export\n * @returns a bundle of all actual objects of any artifact type\n */\nexport function exportConfig(exportParameters: ExportConfigParameters): ExportResults {\n    let exportResults: ExportResults;\n    const ui5Config: UI5Version = { ui5Version: exportParameters.ui5Version, layer: exportParameters.layer };\n    if (exportParameters[FioriElementsVersion.v2]) {\n        /**\n         * Handle v2 export\n         */\n        const v2Params = exportParameters[FioriElementsVersion.v2];\n        exportResults = exportPageV2(v2Params, ui5Config);\n    } else if (exportParameters[FioriElementsVersion.v4]) {\n        /**\n         * Handle v4 export\n         */\n        const v4Params = exportParameters[FioriElementsVersion.v4];\n        exportResults = exportPageV4(v4Params, ui5Config);\n    }\n    return exportResults;\n}\n\n/**\n * Exports a part of the config, specifified by a propertyPath, to flex changes and/or manifest settings\n * @param exportParameters - parameters to control the export\n * @returns a bundle of all changed objects of any artifact type\n */\nexport function exportConfigEntityByPath(exportParameters: ExportConfigWithPath): ExportResults {\n    let exportResults: ExportResults = defaultExportResult;\n\n    const ui5Config: UI5Version = { ui5Version: exportParameters.ui5Version, layer: exportParameters.layer };\n    if (exportParameters[FioriElementsVersion.v2]) {\n        /**\n         * Handle v2 export\n         */\n        const v2Params = exportParameters[FioriElementsVersion.v2];\n        exportResults = exportConfigEntityByPathV2(v2Params, ui5Config);\n    } else if (exportParameters[FioriElementsVersion.v4]) {\n        /**\n         * Handle v4 export\n         */\n        const v4Params = exportParameters[FioriElementsVersion.v4];\n        exportResults = exportConfigEntityByPathV4(v4Params, ui5Config);\n    }\n    return exportResults;\n}\n\n/**\n * Exports a part of the config, specifified by a propertyPath, to flex changes and/or manifest settings\n * @param exportParameters - parameters to control the export\n * @returns a bundle of all changed objects of any artifact type\n *\n */\nexport function deleteConfigEntityByPath(exportParameters: ExportConfigWithPath): ExportResults {\n    let exportResults: ExportResults = defaultExportResult;\n\n    const ui5Config: UI5Version = { ui5Version: exportParameters.ui5Version, layer: exportParameters.layer };\n    if (exportParameters[FioriElementsVersion.v2]) {\n        /**\n         * Handle v2 export\n         */\n        const v2Params = exportParameters[FioriElementsVersion.v2];\n        exportResults = exportConfigEntityByPathV2(v2Params, ui5Config, true);\n    } else if (exportParameters[FioriElementsVersion.v4]) {\n        /**\n         * Handle v4 export\n         */\n        const v4Params = exportParameters[FioriElementsVersion.v4];\n        exportResults = exportConfigEntityByPathV4(v4Params, ui5Config, true);\n    }\n    return exportResults;\n}\n\n/**\n * Imports manifest settings and flex changes to a config (src/*.json, src/pages/*.json)\n * @param importParameters - parameters to control the import\n * @returns the generated config json file\n */\nexport function importConfig(importParameters: ImportConfigParameters): object | undefined {\n    let config;\n    if (importParameters[FioriElementsVersion.v2]) {\n        /**\n         * Handle v2 import\n         */\n        const v2Params = importParameters[FioriElementsVersion.v2];\n        if (v2Params[SchemaType.ListReport]) {\n            config = createListReportConfigV2(v2Params[SchemaType.ListReport]);\n        } else if (v2Params[SchemaType.ObjectPage]) {\n            config = createObjectPageConfigV2(v2Params[SchemaType.ObjectPage]);\n        } else if (v2Params[SchemaType.OverviewPage]) {\n            config = createOverviewPageConfigV2(v2Params[SchemaType.OverviewPage]);\n        } else if (v2Params[SchemaType.AnalyticalListPage]) {\n            config = createAnalyticalListPageConfigV2(v2Params[SchemaType.AnalyticalListPage]);\n        }\n    } else if (importParameters[FioriElementsVersion.v4]) {\n        /**\n         * Handle v4 import\n         */\n        const v4Params = importParameters[FioriElementsVersion.v4];\n        if (v4Params[SchemaType.ListReport]) {\n            config = createListReportConfigV4(v4Params[SchemaType.ListReport], SchemaType.ListReport);\n        } else if (v4Params[SchemaType.ObjectPage]) {\n            config = createObjectPageConfigV4(v4Params[SchemaType.ObjectPage]);\n        } else if (v4Params[SchemaType.AnalyticalListPage]) {\n            config = createListReportConfigV4(v4Params[SchemaType.AnalyticalListPage], SchemaType.AnalyticalListPage);\n        } else if (v4Params[SchemaType.FPMCustomPage]) {\n            config = createCustomPageConfig(v4Params[SchemaType.FPMCustomPage]);\n        }\n    }\n    return config;\n}\n\n/**\n * Evaluates all project files and generates app schemas and configs out of it\n * @param importParameters - parameters to control the import; here: all relevant project files\n * @returns a list of files, comprising app schemas and configs\n */\nexport async function importProject(importParameters: ImportProjectParameters): Promise<File[]> {\n    return importProjectSchemaAndConfig(importParameters);\n}\n\n/**\n * Evaluates all project files and generates app schemas out of it, but no configs\n * @param importParameters - parameters to control the import; here: all relevant project files\n * @returns a list of files, comprising all app schemas\n */\nexport async function importProjectSchema(importParameters: ImportProjectParameters): Promise<File[]> {\n    return importProjectSchemaOnly(importParameters);\n}\n\n/**\n * Returns specification API version.\n * @returns {ApiVersion} Object of API version.\n */\nexport function getApiVersion(): ApiVersion {\n    return {\n        version: '15',\n        fpmWriter: '13'\n    };\n}\n\n/**\n * Calls the FPM Writer for generating a custom extension\n *\n * @param customExtensionParams parameters for generating the custom extension\n * @returns {Editor} Instance of mem-fs-editor\n */\nexport function generateCustomExtension(customExtensionParams: GenerateCustomExtensionParams): Editor | undefined {\n    const fpmWriterFunction = FPMWriterMap.get(customExtensionParams.customExtension);\n    if (fpmWriterFunction && typeof fpmWriterFunction === 'function') {\n        enableFPM(customExtensionParams.basePath, {});\n        return fpmWriterFunction(\n            customExtensionParams.basePath,\n            customExtensionParams.data,\n            customExtensionParams.fsEditor\n        );\n    } else {\n        return;\n    }\n}\n", "import type { Definition } from 'typescript-json-schema';\nimport type { MetadataInstanceInterface } from './decoration/factory';\nimport type {\n    Manifest,\n    ExtensionLogger,\n    FacetConfig,\n    FacetConfigs,\n    FacetSection,\n    FileData,\n    SchemaFilePath,\n    FeatureToggle\n} from '@sap/ux-specification-types';\nimport {\n    DirName,\n    FacetBase,\n    FacetTitlePrefix,\n    MANIFESTPATH,\n    SchemaTag,\n    TemplateType,\n    SchemaKeyName,\n    UIVOCABULARY,\n    VOCWITHSLASH,\n    v4,\n    v2,\n    ALPViewType,\n    FioriElementsVersion,\n    ManifestSection,\n    PageTypeV2,\n    LogSeverity,\n    PageTypeV4,\n    SchemaType,\n    UIVOCABULARYDOT,\n    UIVOCABULARYALPHADOT\n} from '@sap/ux-specification-types';\nimport type {\n    DataField,\n    DataFieldAbstractTypes,\n    DataFieldForAction,\n    DataFieldForAnnotation,\n    FacetTypes,\n    ReferenceFacetTypes\n} from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport type {\n    ConvertedMetadata,\n    EntityType,\n    RawMetadata,\n    PropertyPath,\n    PropertyAnnotationValue\n} from '@sap-ux/vocabularies-types';\n\nimport i18next from 'i18next';\nimport merge from 'deepmerge';\nimport { convert } from '@sap-ux/annotation-converter';\nimport { merge as mergeParser, parse } from '@sap-ux/edmx-parser';\nimport { UIAnnotationTypes, UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { CommunicationAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/Communication';\nimport { log } from '../../extensionLogger';\nimport type { PropertyAnnotations } from '@sap-ux/vocabularies-types/vocabularies/Edm_Types';\n\nexport const DEFINITION_LINK_PREFIX = '#/definitions/';\n\nexport const arrayIncludes = (arr: string[], target: string[]) => target.every((v) => arr.includes(v));\n\n/**\n * Function returns annotation path for schema based on received params.\n * @param entityTypeName - Entity type name.\n * @param term - Annotation term.\n * @param qualifier - Annotation qualifier.\n * @returns Annotation path based on received params\n */\nexport const createAnnotationPath = (entityTypeName: string, term: string, qualifier?: string): string | undefined => {\n    if (!entityTypeName) {\n        return undefined;\n    }\n    let annotationPath = `/${entityTypeName}/@${term}`;\n    if (qualifier) {\n        annotationPath += `#${qualifier}`;\n    }\n    return annotationPath;\n};\n\n/**\n * Parses, merges, and converts a list of annotation files with aid of tools from annotation-vocabularies-tools\n * @param annotationFiles - The list of all annotation files, in JSON format\n * @returns the complete service information\n */\nexport function parseAndMergeAndConvert(annotationFiles: FileData[], logger: ExtensionLogger): ConvertedMetadata {\n    const parseResult: RawMetadata[] = [];\n    let converterOutput: ConvertedMetadata;\n    if (annotationFiles) {\n        annotationFiles.forEach(function (annotationData: FileData) {\n            try {\n                parseResult.push(parse(annotationData.fileContent, annotationData.dataSourceUri));\n            } catch (error) {\n                log(\n                    logger,\n                    {\n                        severity: LogSeverity.Error,\n                        message: i18next.t('ANNOERR'),\n                        location: { path: i18next.t('ANNOTATIONFILE', { file: annotationData.dataSourceUri }) }\n                    },\n                    error\n                );\n                return converterOutput;\n            }\n        });\n    }\n    if (parseResult.length > 0) {\n        converterOutput = convert(mergeParser(...parseResult));\n    }\n\n    return converterOutput;\n}\n\nexport const getAnnotationPropertyValue = (annotationProperty: DataField['Value']): string =>\n    annotationProperty?.value || annotationProperty?.path;\n\n/**\n * Checks for Common.Label and overwrites the label from it if present\n * @param {PropertyAnnotations} annotations - property annotations\n * @param {EntityType} entityType - entity type\n * @param {string} label - label, to be actualized\n */\nexport function evaluateCommonLabel(annotations: PropertyAnnotations, entityType: EntityType, label: string): string {\n    if (annotations?.Common?.Label) {\n        if (typeof annotations.Common.Label === 'string') {\n            label = annotations.Common.Label;\n        } else if (annotations.Common.Label['type'] === 'Path') {\n            const targetProperty = entityType && entityType.resolvePath(annotations.Common.Label['path']);\n            if (targetProperty?.value) {\n                label = targetProperty.value;\n            } else if (typeof targetProperty?.Common?.Label === 'string') {\n                label = targetProperty.annotations.Common.Label;\n            }\n        } else if (typeof annotations.Common?.Label?.toString() === 'string') {\n            label = annotations.Common.Label.toString();\n        }\n    }\n    return label;\n}\n\n/**\n * Determines the label for a property path\n * @param {PropertyPath} propertyPath - property path\n * @param {EntityType} entityType - entity type\n * @returns label, derived from Common.Label or from property value\n */\nexport function getLabelForPropertyPath(propertyPath: PropertyPath, entityType: EntityType): string {\n    let label = propertyPath.value;\n    if (propertyPath.$target) {\n        label = evaluateCommonLabel(propertyPath.$target.annotations, entityType, label);\n    }\n    return label;\n}\n\n/**\n * Determines the label for a LineItem record\n * @param {DataFieldAbstractType} field - Line item record\n * @param {EntityType} entityType - entity type\n * @returns label, derived from Common.Label or from property value\n */\nexport function getLabelForDataField(field: DataFieldAbstractTypes, entityType: EntityType): string {\n    let label: string, property;\n    if (field['Value']) {\n        if (typeof field['Value'] === 'string') {\n            property = entityType && entityType.entityProperties.find((ep) => ep.name === field['Value']);\n        } else {\n            property = entityType && entityType.resolvePath(field['Value'].path);\n            if (!property) {\n                property = field['Value'].$target;\n            }\n        }\n    } else if (field['Target'] && field['Target'].$target) {\n        if (field['Target'].$target.Value) {\n            property = field['Target'].$target.Value.$target;\n        } else if (field['Target'].$target.Label) {\n            label = field['Target'].$target.Label;\n        }\n    }\n    if (property?.annotations?.Common?.Label) {\n        label = evaluateCommonLabel(property.annotations, entityType, label);\n    }\n    return label;\n}\n\n/**\n * Function to resolve the dataField label\n * @param dataFieldLabel - Given dataField label; might be of type string, or an object in case of a path reference\n * @param entityType - the entity type as part of the AVT ConvertedMetadata\n * @returns undefined or the right string value\n */\nfunction getLabel(dataFieldLabel: any, entityType: EntityType): string {\n    if (typeof dataFieldLabel === 'string') {\n        return dataFieldLabel;\n    } else if (typeof dataFieldLabel === 'object' && dataFieldLabel.path) {\n        const property = entityType && entityType.resolvePath(dataFieldLabel.path);\n        if (!property || property.length === 0) {\n            return undefined;\n        } else {\n            const singleProperty = property[0];\n            if (singleProperty?.annotations?.Common?.Label) {\n                const label: string = dataFieldLabel;\n                return evaluateCommonLabel(singleProperty.annotations, entityType, label);\n            }\n        }\n    } else {\n        return undefined;\n    }\n}\n\nfunction getTitleForDataField(dataField: DataField, entityType: EntityType, dataFieldLabel: string): string {\n    const propertyCommonLabel = getLabelForDataField(dataField as DataFieldAbstractTypes, entityType);\n    return (\n        dataFieldLabel ||\n        propertyCommonLabel ||\n        (dataField.Value.$target ? dataField.Value.$target.name : dataField.Value.value || dataField.Value.path)\n    );\n}\n\n/**\n * Determines the description of a data field, e.g. for the column header\n * @param dataFieldAbstract - the given record of the line item annotation\n * @param entityType - the entity type as part of the AVT ConvertedMetadata\n */\nexport function getDataFieldDescription(dataFieldAbstract: DataFieldAbstractTypes, entityType: EntityType): string {\n    let title = '',\n        propertyCommonLabel,\n        dataField,\n        actionName = '';\n    try {\n        const dataFieldLabel = getLabel(dataFieldAbstract.Label, entityType);\n\n        switch (dataFieldAbstract.$Type) {\n            case UIAnnotationTypes.DataField:\n                title = getTitleForDataField(dataFieldAbstract, entityType, dataFieldLabel);\n                break;\n            case UIAnnotationTypes.DataFieldWithUrl:\n                propertyCommonLabel = getLabelForDataField(dataFieldAbstract, entityType);\n                title =\n                    dataFieldLabel ||\n                    propertyCommonLabel ||\n                    (typeof dataFieldAbstract.Value === 'string'\n                        ? dataFieldAbstract.Value\n                        : dataFieldAbstract.Value.path);\n                break;\n            case UIAnnotationTypes.DataFieldForAnnotation:\n                dataField = dataFieldAbstract as DataFieldForAnnotation;\n                propertyCommonLabel = getLabelForDataField(dataFieldAbstract, entityType);\n                title =\n                    dataFieldLabel ||\n                    propertyCommonLabel ||\n                    dataField.Target?.$target?.Title ||\n                    dataField.Target?.value.split('UI.v1.')[1];\n                break;\n            case UIAnnotationTypes.DataFieldForAction:\n            case UIAnnotationTypes.DataFieldWithAction:\n            case UIAnnotationTypes.DataFieldForIntentBasedNavigation:\n                dataField = dataFieldAbstract as DataFieldForAction;\n                actionName = typeof dataFieldAbstract.Action === 'string' ? dataField.Action : dataField.Action?.path;\n                if (dataFieldLabel) {\n                    title = typeof dataFieldLabel === 'string' ? dataFieldLabel : actionName;\n                } else {\n                    title = actionName;\n                }\n                break;\n            case UIAnnotationTypes.DataFieldWithIntentBasedNavigation:\n                propertyCommonLabel = getLabelForDataField(dataFieldAbstract, entityType);\n                title = propertyCommonLabel || dataFieldAbstract.Value.path;\n                break;\n            case UIAnnotationTypes.DataFieldWithNavigationPath:\n                dataField = dataFieldAbstract;\n                title = getTitleForDataField(dataField, entityType, dataFieldLabel);\n                break;\n            default:\n                break;\n        }\n        return title;\n    } catch (error) {\n        return title;\n    }\n}\n\n/**\n * Prepare string for reference use in schema\n * @param refInput string to be character checked and replaced\n * @returns string with replaced characters\n */\nexport function prepareRef(refInput: string | PropertyAnnotationValue<String>): string {\n    return (refInput as string).replace('#', '::').replace(/\\//g, ':2f');\n}\n\n/**\n * Return the page type for a given V2 page in manifest\n * @param name - page component name\n */\nexport function getPageTypeV2(name: string): PageTypeV2 | undefined {\n    if (name) {\n        const templatePart = `${v2.FE_TEMPLATE_V2}.`;\n        return name.split(templatePart)[1] as PageTypeV2;\n    }\n}\n\n/**\n * Return the page type for a given V4 page in manifest\n * @param name - page component name\n */\nexport function getPageTypeV4(v4App: v4.SapUiAppPageV4 | v4.SapUi5RoutingTargetCustomPageV4): PageTypeV4 | undefined {\n    if ((v4App as v4.SapUiAppPageV4).name && (v4App as v4.SapUiAppPageV4).name !== v4.FE_TEMPLATE_V4_CUSTOM_PAGE) {\n        const templatePart = `${v4.FE_TEMPLATE_V4}.`;\n        return (v4App as v4.SapUiAppPageV4).name.split(templatePart)[1] as PageTypeV4;\n    } else if ((v4App as v4.SapUiAppPageV4)?.name === v4.FE_TEMPLATE_V4_CUSTOM_PAGE) {\n        return PageTypeV4.FPMCustomPage;\n    } else if (\n        (v4App as v4.SapUi5RoutingTargetCustomPageV4).viewId ||\n        (v4App as v4.SapUi5RoutingTargetCustomPageV4).viewName\n    ) {\n        return PageTypeV4.CustomPage;\n    }\n}\n\nfunction getTargetAnnotationName(targetAnnotation: any, keyForRelatedFacetKeys = false): string {\n    const termWithQualifier = `${targetAnnotation.term}#${targetAnnotation.qualifier}`;\n    return `${!keyForRelatedFacetKeys ? '@' : ''}${\n        targetAnnotation.qualifier ? termWithQualifier : targetAnnotation.term\n    }`;\n}\n\n/**\n * Finds the alias for a given namespace in the references' section of the converted service metadata\n * @param {string} namespace - complete namespace, e.g. 'com.sap.vocabularies.UI.v1'\n * @param {ConvertedMetadata} oDataServiceAVT - combined service metadata, as returned by annotation vocabularies tools\n * @returns alias for the given namespace\n */\nexport function findAlias(namespace: string, oDataServiceAVT: ConvertedMetadata): string | undefined {\n    if (!oDataServiceAVT) {\n        return;\n    }\n    let aliasReference = oDataServiceAVT.references.find((reference) => {\n        return reference.namespace === namespace;\n    });\n    if (!aliasReference) {\n        aliasReference = oDataServiceAVT.references.find((reference) => {\n            return reference.alias === namespace;\n        });\n    }\n    if (!aliasReference) {\n        aliasReference = oDataServiceAVT.references.find((reference) => {\n            return (\n                reference.alias.toUpperCase() ===\n                namespace.split('SAP__')[namespace.split('SAP__').length - 1].toUpperCase()\n            );\n        });\n    }\n    return aliasReference?.alias;\n}\n\n/**\n * Method returns annotation from passed meta path.\n * @param metaPath - annotation meta path\n * @returns annotation name\n */\nexport function getAnnotationFromMetaPath(metaPath: string): string {\n    return metaPath.substring(metaPath.lastIndexOf('.') + 1, metaPath.length);\n}\n\n/**\n * Determines the target annotation\n * @param navigationParts - parts of the target annotation path\n * @param entityType - entity type\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @returns the target annotation\n */\nfunction determineTargetAnnotation(\n    navigationParts: string[],\n    entityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata\n): any {\n    const lastNavigationPart = navigationParts[navigationParts.length - 1];\n    const annotation = getAnnotationFromMetaPath(lastNavigationPart);\n    const alias = findAlias(\n        lastNavigationPart.substring(0, lastNavigationPart.lastIndexOf('.')).replace('@', ''),\n        oDataServiceAVT\n    );\n    return entityType?.annotations?.[alias]?.[annotation];\n}\n\n/**\n * Adjust key by considering navigation\n * @param key - given key\n * @param keyForRelatedFacetKeys - construct key for 'keyForRelatedFacetKeys' property(used to define custom sections) - we should not add '@' symbol there.\n * @param navigationParts - parts of the target annotation path\n */\nfunction adjustKey(key: string, navigationParts: string[], keyForRelatedFacetKeys: boolean): string {\n    const uiClass = navigationParts[navigationParts.length - 1].split('#')[0];\n    if (uiClass.includes('.LineItem')) {\n        const pathParts = key.split('::');\n        pathParts[pathParts.length - 1] = `${!keyForRelatedFacetKeys ? '@' : ''}${UIAnnotationTerms.LineItem}`;\n        key = pathParts.join('::');\n    } else {\n        key = uiClass.replace('@UI', `${!keyForRelatedFacetKeys ? '@' : ''}${UIVOCABULARY}`);\n    }\n    return key;\n}\n\nfunction getKeyAndEntityTypeOfReferenceFacet(\n    oDataServiceAVT: ConvertedMetadata,\n    key: string,\n    entityType: EntityType,\n    propertyValue: string,\n    oDataVersion = FioriElementsVersion.v2,\n    keyForRelatedFacetKeys = false\n): { key: string; entityType: EntityType; stopProcessing: boolean; namespace: string } {\n    let stopProcessing = false;\n    let namespace: string;\n    const navigationParts = propertyValue.split('/');\n    const navigation = navigationParts.length > 1;\n    if (navigation && entityType) {\n        entityType = entityType.resolvePath(propertyValue.substring(0, propertyValue.lastIndexOf('/')))?.targetType;\n    }\n    key = adjustKey(key, navigationParts, keyForRelatedFacetKeys);\n\n    const targetAnnotation = determineTargetAnnotation(navigationParts, entityType, oDataServiceAVT);\n    if (targetAnnotation) {\n        const separator = oDataVersion === FioriElementsVersion.v2 ? '::' : '#';\n        key = getTargetAnnotationName(targetAnnotation, keyForRelatedFacetKeys).replace('#', separator);\n        namespace = targetAnnotation.fullyQualifiedName?.split('@')[0];\n    } else {\n        stopProcessing = true;\n        return { key, entityType, stopProcessing, namespace };\n    }\n\n    if (navigation) {\n        const navSeparator = oDataVersion === FioriElementsVersion.v2 ? '::' : '/';\n        navigationParts.pop();\n        const navigationIDs = [...navigationParts].join(navSeparator);\n        key = `${navigationIDs}${navSeparator}${key}`;\n    }\n    return { key, entityType, stopProcessing, namespace };\n}\n\n/**\n * Resolve page section(get key and label->description).\n * @param facetDefinition - the actual annotation record\n * @param keyForRelatedFacetKeys - construct key for 'keyForRelatedFacetKeys' property(used to define custom sections) - we should not add '@' symbol there.\n * @param {FioriElementsVersion} oDataVersion - OData version\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @returns {FacetSection} - object comprising the relevant facet information\n */\nexport function getSectionFacet(\n    facetDefinition: FacetTypes,\n    sourceEntityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata,\n    logger?: ExtensionLogger,\n    oDataVersion = FioriElementsVersion.v2,\n    keyForRelatedFacetKeys = false\n): FacetSection | undefined {\n    //Take facet ID as fallback\n    const facetName = facetDefinition.fullyQualifiedName?.substring(\n        facetDefinition.fullyQualifiedName?.lastIndexOf('@')\n    );\n    let key: string = facetDefinition.ID ? facetDefinition.ID.toString() : facetName;\n    let namespace = facetDefinition.fullyQualifiedName?.split('@')[0];\n    let entityType = sourceEntityType; //default\n\n    //If reference facet: overwrite with target annotation if present\n    if (facetDefinition.$Type !== UIAnnotationTypes.CollectionFacet && 'Target' in facetDefinition) {\n        const propertyValue = getAnnotationPropertyValue(facetDefinition.Target);\n        if (!propertyValue) {\n            log(logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOTARGET', { target: facetDefinition.Target })\n            });\n            return;\n        }\n        const {\n            key: newKey,\n            entityType: newEntityType,\n            stopProcessing,\n            namespace: sectionNameSpace\n        } = getKeyAndEntityTypeOfReferenceFacet(\n            oDataServiceAVT,\n            key,\n            entityType,\n            propertyValue,\n            oDataVersion,\n            keyForRelatedFacetKeys\n        );\n        if (stopProcessing) {\n            return;\n        }\n        key = newKey;\n        entityType = newEntityType;\n        namespace = sectionNameSpace;\n    }\n    key = key.replace(/\\//gi, '::');\n    if (key) {\n        return {\n            key,\n            ...(facetDefinition.Label && { label: facetDefinition.Label.toString() }),\n            ...(facetDefinition.ID && { ID: facetDefinition.ID.toString() }),\n            entityType,\n            namespace\n        };\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Decodes encoded path element and returns it in form as used in manifest settings\n * @param {string} pathElement - path of the property in the manifest\n * @param {string} targetAnnotation - target annotation (optional)\n * @param {string} targetAnnotationEncoded - target annotation in its encoded form, as used in manifest settings (optional)\n * @returns returns decoded element (manifest setting key)\n */\nfunction getDecodedPathElement(\n    pathElement: string,\n    targetAnnotation?: string,\n    targetAnnotationEncoded?: string\n): string {\n    let decodedElement: string;\n    if (targetAnnotationEncoded && targetAnnotationEncoded === pathElement) {\n        decodedElement = targetAnnotation;\n    } else {\n        decodedElement = pathElement.replace(/\\?\\?/g, '/');\n    }\n    return decodedElement;\n}\n\n/**\n * Method prepares value as empty object or array based on passed path.\n * For array path should end with '[]'.\n * @param {string} path - path of the property in the manifest\n * @returns prepared value based on passed path\n */\nexport const prepareValueForPath = (path?: string): Array<unknown> | object => {\n    if (path?.endsWith('[]')) {\n        return [];\n    }\n    return {};\n};\n\n/**\n * Method find object by given path in format \"sap.ui5/extends/extensions\".\n * An empty object is created if the path element does not exist yet.\n * Exception: if an empty array is the next element  of the 'path' definition, an empty array is created instead of an empty object.\n * @param {object} manifest - manifest that is being modified during export\n * @param {string} path - path of the property in the manifest\n * @param {string} targetAnnotation - target annotation (optional)\n * @param {string} targetAnnotationEncoded - target annotation in its encoded form, as used in manifest settings\n * @param {boolean} value - specific value to apply for unexisting property for given path\n * @param {boolean} [readOnly=false] - indicates if the function should create object/array if existing value not found by given path\n * @returns returns section of the manifest based on path\n */\nconst resolveManifestPath = (\n    manifest: object,\n    path: string,\n    targetAnnotation?: string,\n    targetAnnotationEncoded?: string,\n    value?: unknown,\n    readOnly = false\n): object | undefined => {\n    if (!path) {\n        return undefined;\n    }\n    let manifestSection = manifest;\n    const pathElements = path.split('/');\n    for (let index = 0; index < pathElements.length; index++) {\n        const element = pathElements[index];\n        if (element === '[]') {\n            continue;\n        }\n        const decodedElement = getDecodedPathElement(element, targetAnnotation, targetAnnotationEncoded);\n        if (value !== undefined && !readOnly && pathElements.length - 1 === index) {\n            // Apply or overwrite if value passed\n            manifestSection[decodedElement] = value;\n        } else if (!manifestSection[decodedElement]) {\n            if (readOnly) {\n                return undefined;\n            }\n            manifestSection[decodedElement] = prepareValueForPath(pathElements[index + 1]);\n        }\n        manifestSection = manifestSection[decodedElement];\n    }\n    return manifestSection;\n};\n\n/**\n * Finds the alias for a given namespace in the references' section of the converted service metadata.\n * An empty object is created if the path element does not exist yet.\n * Exception: if an empty array is the next element  of the 'path' definition, an empty array is created instead of an empty object.\n * @param {object} manifest - manifest that is being modified during export\n * @param {string} path - path of the property in the manifest\n * @param {string} targetAnnotation - target annotation (optional)\n * @param {string} targetAnnotationEncoded - target annotation in its encoded form, as used in manifest settings\n * @param {boolean} [readOnly=false] - indicates if the function should create object/array if existing value not found by given path\n * @returns returns section of the manifest based on path, generates an empty object in case it does not exists\n */\nexport const getManifestSectionByPathV4 = (\n    manifest: object,\n    path: string,\n    targetAnnotation?: string,\n    targetAnnotationEncoded?: string,\n    readOnly = false\n): object | undefined => {\n    return resolveManifestPath(manifest, path, targetAnnotation, targetAnnotationEncoded, undefined, readOnly);\n};\n\n/**\n * Method sets value for passed path in manifest.\n * @param {object} manifest - manifest that is being modified during export\n * @param {string} path - path of the property in the manifest\n * @param {unknown} value - value to apply\n * @param {string} targetAnnotation - target annotation (optional)\n * @param {string} targetAnnotationEncoded - target annotation in its encoded form, as used in manifest settings\n */\nexport const setManifestSectionByPathV4 = (\n    manifest: object,\n    path: string,\n    value: unknown,\n    targetAnnotation?: string,\n    targetAnnotationEncoded?: string\n): void => {\n    resolveManifestPath(manifest, path, targetAnnotation, targetAnnotationEncoded, value);\n};\n\nexport function getSchemaKeyOfLineItemRecord(lineItemRecord: DataFieldAbstractTypes): string {\n    let schemaKey, target, value;\n    switch (lineItemRecord.$Type) {\n        case UIAnnotationTypes.DataField:\n            schemaKey = getAnnotationPropertyValue(lineItemRecord.Value);\n            break;\n        case UIAnnotationTypes.DataFieldWithUrl:\n            schemaKey =\n                typeof lineItemRecord.Value === 'string'\n                    ? lineItemRecord.Value\n                    : getAnnotationPropertyValue(lineItemRecord.Value);\n            break;\n        case UIAnnotationTypes.DataFieldForAnnotation:\n            target = lineItemRecord.Target.value;\n            if (target) {\n                schemaKey =\n                    'DataFieldForAnnotation:::sTarget::' +\n                    target\n                        .replace('@UI', `@${UIVOCABULARY}`)\n                        .replace('@Communication', '@com.sap.vocabularies.Communication.v1')\n                        .replace('@Contact', '@com.sap.vocabularies.Contact.v1');\n            }\n            break;\n        case UIAnnotationTypes.DataFieldForAction:\n            if (lineItemRecord.Inline) {\n                schemaKey = `DataFieldForAction:::sAction::${prepareRef(lineItemRecord.Action as string)}`;\n            }\n            break;\n        case UIAnnotationTypes.DataFieldWithIntentBasedNavigation:\n            value = getAnnotationPropertyValue(lineItemRecord.Value);\n            schemaKey = `DataFieldWithIntentBasedNavigation:::sProperty::${value}:::sSemanticObject::${lineItemRecord.SemanticObject}:::sAction::${lineItemRecord.Action}`;\n            break;\n        case UIAnnotationTypes.DataFieldForIntentBasedNavigation:\n            if (lineItemRecord.Inline) {\n                schemaKey = `DataFieldForIntentBasedNavigation:::sSemanticObject::${\n                    lineItemRecord.SemanticObject\n                }:::sAction::${prepareRef(lineItemRecord.Action)}`;\n            }\n            break;\n        case UIAnnotationTypes.DataFieldWithNavigationPath:\n            value = getAnnotationPropertyValue(lineItemRecord.Value);\n            target = getAnnotationPropertyValue(lineItemRecord.Target);\n            schemaKey = 'DataFieldWithNavigationPath:::sProperty::' + value + ':::sTarget::' + target;\n            break;\n        default:\n            break;\n    }\n\n    return schemaKey;\n}\n\n/**\n * Determines if type of given annotation term is of UIAnnotationTerm\n * @param {string} path path in manifest\n * @param {string} alias for a given namespace\n * @param {EntityType} entityType - the entity type\n * @returns UI annotation term type\n */\nfunction getUIAnnotationTerm(path: string, alias: string, entityType: EntityType): UIAnnotationTerms | undefined {\n    if (path.includes(UIAnnotationTerms.Chart) || path.includes(alias + '.Chart')) {\n        return UIAnnotationTerms.Chart;\n    } else if (path.includes(UIAnnotationTerms.Identification) || path.includes(alias + '.Identification')) {\n        return UIAnnotationTerms.Identification;\n    } else if ((entityType && path.includes(UIAnnotationTerms.LineItem)) || path.includes(alias + '.LineItem')) {\n        return UIAnnotationTerms.LineItem;\n    } else if (path.includes(UIAnnotationTerms.FieldGroup) || path.includes(alias + '.FieldGroup')) {\n        return UIAnnotationTerms.FieldGroup;\n    } else if (path.includes(UIAnnotationTerms.DataPoint) || path.includes(alias + '.DataPoint')) {\n        return UIAnnotationTerms.DataPoint;\n    } else if (path.includes(UIAnnotationTerms.PresentationVariant) || path.includes(alias + '.PresentationVariant')) {\n        return UIAnnotationTerms.PresentationVariant;\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Determines if type of given annotation term is of CommunicationAnnotationTerm\n * @param {string} path path in manifest\n * @param {string} alias for a given namespace\n * @param {EntityType} entityType - the entity type\n * @returns Communication annotation term type\n */\nfunction getCommunicationAnnotationTerm(path: string, alias: string): CommunicationAnnotationTerms | undefined {\n    if (path.includes('com.sap.vocabularies.Communication.v1.Contact') || path.includes(alias + '.Contact')) {\n        return CommunicationAnnotationTerms.Contact;\n    } else if (path.includes('com.sap.vocabularies.Communication.v1.Address') || path.includes(alias + '.Address')) {\n        return CommunicationAnnotationTerms.Address;\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Determines the type of given annotation term\n * @param {string} path path in manifest\n * @param {string} alias for a given namespace\n * @param {EntityType} entityType - the entity type\n * @returns annotation term type\n */\nfunction getAnnotationTerm(\n    path: string,\n    alias: string,\n    entityType: EntityType\n): UIAnnotationTerms | CommunicationAnnotationTerms | undefined {\n    return getUIAnnotationTerm(path, alias, entityType) || getCommunicationAnnotationTerm(path, alias);\n}\n\n/**\n * Evaluates the target annotation of a reference facet and actualizes the facets for the config\n * @param {AnnotationTerm} annotationRecord - the actual annotation record\n * @param {FacetConfigs} facets - list of facets in config format, to be updated\n * @param {EntityType} entityType - the entity type\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n */\nfunction evaluateTargetAnnotation(\n    section: FacetSection,\n    annotationRecord: ReferenceFacetTypes,\n    facets: FacetConfigs,\n    entityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata\n): void {\n    const alias = findAlias(UIVOCABULARY, oDataServiceAVT);\n    let path = section ? section.key : '';\n    const targetEntityType = section.entityType;\n    const annotationTerm = getAnnotationTerm(path, alias, entityType);\n\n    switch (annotationTerm) {\n        case UIAnnotationTerms.Chart: {\n            facets[path] = { base: FacetBase.Chart };\n            facets[path].target = annotationRecord?.Target?.$target;\n            facets[path].entityType = targetEntityType;\n            facets[path].namespace = section.namespace;\n            break;\n        }\n        case UIAnnotationTerms.Identification: {\n            facets[path] = { base: FacetBase.Identification };\n            facets[path].target = annotationRecord?.Target?.$target;\n            facets[path].entityType = targetEntityType;\n            facets[path].namespace = section.namespace;\n            break;\n        }\n        case UIAnnotationTerms.LineItem: {\n            if (!path.includes(UIAnnotationTerms.LineItem) && path.includes('.LineItem')) {\n                const pathParts = path.split('::');\n                pathParts[pathParts.length - 1] = `@${UIAnnotationTerms.LineItem}`;\n                path = pathParts.join('::');\n            }\n            facets[path] = { base: FacetBase.LineItem };\n            facets[path].target = annotationRecord?.Target?.$target;\n            facets[path].entityType = targetEntityType;\n            facets[path].namespace = section.namespace;\n            break;\n        }\n        case UIAnnotationTerms.FieldGroup: {\n            facets[path] = { base: FacetBase.Form };\n            facets[path].target = annotationRecord?.Target?.$target;\n            facets[path].entityType = targetEntityType;\n            facets[path].namespace = section.namespace;\n            break;\n        }\n        case UIAnnotationTerms.DataPoint: {\n            facets[path] = { base: FacetBase.DataPoint };\n            facets[path].Label = annotationRecord?.Target?.$target['Title'];\n            facets[path].target = annotationRecord?.Target?.$target;\n            facets[path].entityType = targetEntityType;\n            facets[path].namespace = section.namespace;\n            break;\n        }\n        case UIAnnotationTerms.PresentationVariant: {\n            facets[path] = { base: FacetBase.PresentationVariant };\n            facets[path].target = annotationRecord?.Target?.$target;\n            facets[path].entityType = targetEntityType;\n            facets[path].namespace = section.namespace;\n            break;\n        }\n        case CommunicationAnnotationTerms.Contact: {\n            facets[path] = { base: FacetBase.Contact };\n            facets[path].target = annotationRecord?.Target?.$target;\n            facets[path].entityType = targetEntityType;\n            facets[path].namespace = section.namespace;\n            break;\n        }\n        case CommunicationAnnotationTerms.Address: {\n            facets[path] = { base: FacetBase.Address };\n            facets[path].target = annotationRecord?.Target?.$target;\n            facets[path].entityType = targetEntityType;\n            facets[path].namespace = section.namespace;\n            break;\n        }\n        default: {\n            facets[path] = { base: FacetBase.Unknown };\n        }\n    }\n\n    if (facets[path]) {\n        facets[path].annotationPath = `/${annotationRecord.fullyQualifiedName.replace(\n            '@com.sap.vocabularies',\n            VOCWITHSLASH\n        )}`;\n        if (annotationRecord.Label) {\n            facets[path].Label = annotationRecord.Label as unknown as string;\n        }\n        // Add Facet ID\n        if (annotationRecord.ID) {\n            facets[path]['ID'] = annotationRecord.ID as string;\n        }\n        if (section && section.entityType) {\n            facets[path].entityType = section.entityType;\n        }\n    }\n}\n\n/**\n * Method returns schema annotation path for passed fullyQualifiedName.\n * @param {EntityType} entityType entity type.\n * @param {string} fullyQualifiedName fully qualifier name.\n * @returns {TemplateType} Schema annotation path.\n */\nexport function getAnnotationPathUsingFullyQualifiedName(entityType: EntityType, fullyQualifiedName: string): string {\n    return `/${entityType.fullyQualifiedName}/${fullyQualifiedName.split(entityType.fullyQualifiedName)[1]}`;\n}\n\n/**\n * Adds the information from facets to the config\n * @param {AnnotationTerm} annotationRecord - the actual annotation record\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {string} serviceName - name of the service of the app\n * @param {string} entityName - the entity (type) name\n * @param {FacetConfigs} facets - list of facets in config format, to be updated\n * @param {FioriElementsVersion} oDataVersion - OData version\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nfunction addFacetToConfig(\n    annotationRecord: FacetTypes,\n    oDataServiceAVT: ConvertedMetadata,\n    serviceName: string,\n    entityType: EntityType,\n    facets: FacetConfigs,\n    oDataVersion = FioriElementsVersion.v2,\n    logger?: ExtensionLogger\n): void {\n    const section: FacetSection = getSectionFacet(\n        annotationRecord,\n        entityType,\n        oDataServiceAVT,\n        logger,\n        oDataVersion,\n        false\n    );\n    if (section) {\n        switch (annotationRecord.$Type) {\n            case UIAnnotationTypes.ReferenceFacet: {\n                evaluateTargetAnnotation(section, annotationRecord, facets, entityType, oDataServiceAVT);\n                break;\n            }\n            case UIAnnotationTypes.CollectionFacet: {\n                const annotationPath = getAnnotationPathUsingFullyQualifiedName(\n                    entityType,\n                    annotationRecord.fullyQualifiedName\n                );\n                const facet = (facets[section.key] = {\n                    base: FacetBase.CollectionFacet,\n                    facets: {},\n                    ID: section.ID,\n                    annotationPath: annotationPath,\n                    Label: section.label,\n                    namespace: section.namespace\n                });\n                if (!facet.ID && oDataVersion === FioriElementsVersion.v4) {\n                    log(logger, {\n                        severity: LogSeverity.Error,\n                        message: i18next.t('NOID4SECTION', { facet: annotationRecord.fullyQualifiedName })\n                    });\n                }\n                annotationRecord.Facets?.forEach((collectionItem) => {\n                    addFacetToConfig(\n                        collectionItem,\n                        oDataServiceAVT,\n                        serviceName,\n                        entityType,\n                        facet.facets,\n                        oDataVersion,\n                        logger\n                    );\n                });\n                break;\n            }\n        }\n    }\n}\n\n/**\n * Retrieve header facet configurations that can be used to generate ObjectPage schemas\n * @param {QualifiedName} entityTypeName - the name of the actual entity type\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {FioriElementsVersion} oDataVersion - OData version\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nexport function getObjectPageHeaderFacets(\n    entityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata,\n    oDataVersion = FioriElementsVersion.v2,\n    logger?: ExtensionLogger\n): FacetConfigs | undefined {\n    const facets: FacetConfigs = {};\n    if (!entityType || !entityType.annotations) {\n        return;\n    }\n    const alias = findAlias(UIVOCABULARY, oDataServiceAVT);\n    const facetAnnotation = alias && entityType?.annotations?.[alias]?.HeaderFacets;\n    if (facetAnnotation) {\n        const lastDot = entityType && entityType.fullyQualifiedName.lastIndexOf('.');\n        const serviceName = entityType && entityType.fullyQualifiedName.substring(0, lastDot);\n\n        // Add facets to configuration\n        facetAnnotation.forEach((item) => {\n            addFacetToConfig(item, oDataServiceAVT, serviceName, entityType, facets, oDataVersion, logger);\n        });\n    }\n    return facets;\n}\n\n/**\n * Retrieve facet configurations that can be used to generate ObjectPage schemas\n * @param {QualifiedName} entityTypeName - the name of the actual entity type\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {FioriElementsVersion} oDataVersion - OData version\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nexport function getObjectPageFacets(\n    entityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata,\n    oDataVersion = FioriElementsVersion.v2,\n    logger?: ExtensionLogger\n): FacetConfigs | undefined {\n    const facets: FacetConfigs = {};\n    if (!entityType || !entityType.annotations) {\n        return;\n    }\n    const alias = findAlias(UIVOCABULARY, oDataServiceAVT);\n    const facetAnnotation = alias && entityType?.annotations[alias]?.Facets;\n    if (facetAnnotation) {\n        const lastDot = entityType && entityType.fullyQualifiedName.lastIndexOf('.');\n        const serviceName = entityType && entityType.fullyQualifiedName.substring(0, lastDot);\n\n        // Add facets to configuration\n        facetAnnotation.forEach((item) => {\n            addFacetToConfig(item, oDataServiceAVT, serviceName, entityType, facets, oDataVersion, logger);\n        });\n    }\n    return facets;\n}\n\n/**\n * Returns the version of Fiori elements (v2/v4) from a given manifest\n * @param manifest - the manifest.json file\n */\nexport function getVersionFromManifest(manifest: Manifest): FioriElementsVersion {\n    if (manifest[ManifestSection.generic] || manifest[ManifestSection.ovp]) {\n        return FioriElementsVersion.v2;\n    } else {\n        return FioriElementsVersion.v4;\n    }\n}\n\n/**\n * Determines the template type of a V2 app\n * @param manifest - the manifest.json file\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @returns {TemplateType} the template type\n */\nexport function determineV2Template(manifest: Manifest, logger: ExtensionLogger): TemplateType | undefined {\n    let templateType: TemplateType;\n    if (manifest[ManifestSection.generic]) {\n        const v2Pages = manifest[ManifestSection.generic].pages;\n        if (!v2Pages) {\n            log(logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOPAGES', { appId: manifest['sap.app']['id'] }),\n                location: {\n                    path: MANIFESTPATH,\n                    range: [ManifestSection.generic]\n                }\n            });\n            return;\n        }\n        for (const pageKey in v2Pages) {\n            const v2Page = v2Pages[pageKey];\n            if (getPageTypeV2(v2Page.component?.name) === PageTypeV2.AnalyticalListPage) {\n                templateType = TemplateType.AnalyticalListPageV2;\n                break;\n            } else if (getPageTypeV2(v2Page.component?.name) === PageTypeV2.ListReport) {\n                templateType = TemplateType.ListReportObjectPageV2;\n                break;\n            }\n        }\n    } else {\n        if (!templateType) {\n            log(logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOTEMPLATE', { section: ManifestSection.generic }),\n                location: {\n                    path: MANIFESTPATH,\n                    range: [ManifestSection.generic]\n                }\n            });\n        }\n    }\n    return templateType;\n}\n\n/**\n * Determines the template type of a single page\n * @param v4Page - single page from routing targets\n * @returns {TemplateType | undefined} the template type\n */\nexport function determineV4PageTemplateType(v4Page: v4.SapUiAppPageV4): TemplateType | undefined {\n    let templateType: TemplateType;\n    const pageType = getPageTypeV4(v4Page);\n    if (pageType === PageTypeV4.AnalyticalListPage) {\n        templateType = TemplateType.AnalyticalListPageV4;\n    } else if (pageType === PageTypeV4.ListReport) {\n        const viewPath = (v4Page.options?.settings?.views?.paths as v4.SapUi5ALPPaths)?.[0];\n        if (viewPath && (viewPath[ALPViewType.Primary] || viewPath[ALPViewType.Secondary])) {\n            templateType = TemplateType.AnalyticalListPageV4;\n        } else {\n            templateType = TemplateType.ListReportObjectPageV4;\n        }\n    } else if (pageType === PageTypeV4.ObjectPage) {\n        templateType = TemplateType.ListReportObjectPageV4;\n        //fixed now for FEOP scenario, bit continue to check if LR/ALP exists\n    } else if ([PageTypeV4.CustomPage, PageTypeV4.FPMCustomPage].includes(pageType)) {\n        templateType = TemplateType.FreestylePageV4;\n    }\n    return templateType;\n}\n\n/**\n * Determines the template type, based on the given manifest routing target entries of the app\n * @param v4Pages - pages from routing targets\n * @returns {TemplateType | undefined} the template type\n */\nfunction determineV4TemplateFromPages(v4Pages: v4.SapUi5RoutingTargetsV4): TemplateType | undefined {\n    let templateType: TemplateType;\n    for (const pageKey in v4Pages) {\n        const v4Page = v4Pages[pageKey] as v4.SapUiAppPageV4;\n        templateType = determineV4PageTemplateType(v4Page);\n        if (templateType) {\n            break;\n        }\n    }\n    return templateType;\n}\n\n/**\n * Determines the template type of a V4 app\n * @param manifest - the manifest.json file\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @returns {TemplateType} the template type\n */\nexport function determineV4Template(manifest: Manifest, logger: ExtensionLogger): TemplateType | undefined {\n    const v4Pages =\n        manifest[ManifestSection.ui5].routing &&\n        (manifest[ManifestSection.ui5].routing.targets as v4.SapUi5RoutingTargetsV4);\n    // if there are no pages in routing targets, we use LROPV4 as default template type\n    if (!v4Pages || Object.keys(v4Pages).length === 0) {\n        log(logger, {\n            severity: LogSeverity.Info,\n            message: i18next.t('NOPAGES', { appId: manifest['sap.app']['id'] }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5, 'routing']\n            }\n        });\n        return TemplateType.ListReportObjectPageV4;\n    }\n    // else try to determine template type from routing targets\n    const templateType = determineV4TemplateFromPages(v4Pages);\n    if (!templateType) {\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOTEMPLATE', { section: ManifestSection.ui5 }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5, 'routing', 'targets']\n            }\n        });\n    }\n    return templateType;\n}\n\n/**\n * Determines the template type, based on the given manifest entries of the app\n * @param manifest - the manifest.json file\n * @param {FioriElementsVersion} fioriElementsVersion - OData or FE version\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @returns {TemplateType} the template type\n */\nexport function getTemplateTypeFromManifest(\n    manifest: Manifest,\n    fioriElementsVersion: FioriElementsVersion,\n    logger: ExtensionLogger\n): TemplateType | undefined {\n    let templateType: TemplateType;\n    if (manifest[ManifestSection.ovp]) {\n        templateType = TemplateType.OverviewPageV2;\n    } else if (fioriElementsVersion === FioriElementsVersion.v2) {\n        templateType = determineV2Template(manifest, logger);\n    } else if (fioriElementsVersion === FioriElementsVersion.v4) {\n        templateType = determineV4Template(manifest, logger);\n    } else {\n        if (!templateType) {\n            log(logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOFE'),\n                location: {\n                    path: MANIFESTPATH\n                }\n            });\n        }\n    }\n    return templateType;\n}\n\n/**\n * Adds title and description to a section or header section in an app schema\n * @param facet - intermediate facet structure comprising annotation information\n * @param section - section in the app schema\n * @param facetKey - key of the facet\n */\nexport function addSectionTitleAndDescription(facet: FacetConfig, section: Definition, facetKey: string): void {\n    if (facet?.ID) {\n        section.title = FacetTitlePrefix + facet.ID;\n        section[SchemaTag.keys] = [{ name: SchemaKeyName.id, value: facet.ID }];\n    } else {\n        section.title = facetKey.replace(/@com.sap/g, 'com.sap');\n        section[SchemaTag.keys] = [{ name: SchemaKeyName.id, value: facetKey.replace(UIVOCABULARYALPHADOT, '') }];\n    }\n    // Description\n    if (facet?.Label) {\n        section.description = facet.Label;\n    } else if (facet?.ID) {\n        section.description = facet.ID;\n    } else {\n        section.description = facetKey.substring(facetKey.lastIndexOf('.') + 1);\n    }\n}\n\n/**\n * Adds target title or description to a section or header section in an app schema\n * @param facet - intermediate facet structure comprising annotation information\n * @param section - section in the app schema\n * @param facetKey - key of the facet\n */\nexport function addTargetTitleAndSectionDescription(facet: FacetConfig, section: Definition, facetKey: string): void {\n    addSectionTitleAndDescription(facet, section, facetKey);\n    if (facet?.ID || facet?.Label) {\n        return;\n    }\n    if (facet?.Title) {\n        section.description = facet.Title;\n    } else if (facet?.target?.['Title']) {\n        section.description = facet.target['Title'];\n    } else if (facet?.target?.['Label']) {\n        section.description = facet.target['Label'];\n    }\n}\n\n/**\n * Creates a default object for a new section or subsection, and adds the ID as title if present.\n * @param facet Facet configuration, to be analyzed\n * @returns the new section object\n */\nexport function createDefaultSection(appSchema: Definition, facet: FacetConfig, facetKey: string): Definition {\n    if (!facet) {\n        return undefined;\n    }\n    let section: Definition;\n    if (appSchema.definitions.ObjectPageSection) {\n        //base type in V2, with properties\n        section = JSON.parse(JSON.stringify(appSchema.definitions.ObjectPageSection));\n    } else {\n        section = {\n            type: 'object',\n            properties: {},\n            additionalProperties: false\n        };\n        section[SchemaTag.isViewNode] = true;\n    }\n    section[SchemaTag.annotationPath] = facet.annotationPath;\n    addTargetTitleAndSectionDescription(facet, section, facetKey);\n    return section;\n}\n\n/**\n * Retrieve page section data(so far id/key and label/description).\n * @param {EntityType} entityType The actual entityType\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @param {FioriElementsVersion} oDataVersion - OData version\n * @param {boolean} [checkUnresolvableFacets=false] - Check and avoid facets and sections without ID and Target.\n * @returns {FacetSection[]} - Array of facets or sections\n */\nexport function getObjectPageFacetSection(\n    entityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata,\n    logger?: ExtensionLogger,\n    oDataVersion = FioriElementsVersion.v2,\n    checkUnresolvableFacets = false\n): FacetSection[] {\n    const alias = findAlias(UIVOCABULARY, oDataServiceAVT);\n    let sections: FacetSection[] = [];\n    if (entityType) {\n        const facetAnnotation = alias && entityType?.annotations?.[alias]?.Facets;\n\n        if (facetAnnotation) {\n            sections = facetAnnotation.reduce(function (result: FacetSection[], item: FacetTypes) {\n                if (checkUnresolvableFacets && !item['ID'] && !('Target' in item && item['Target'])) {\n                    return result;\n                }\n                const section: FacetSection = getSectionFacet(\n                    item,\n                    entityType,\n                    oDataServiceAVT,\n                    logger,\n                    oDataVersion,\n                    true\n                );\n                if (section) {\n                    result.push(section);\n                }\n                return result;\n            }, sections);\n        }\n        return sections;\n    }\n}\n\n/**\n * Cleans empty sub-structures from the export result for manifest\n * @param {object} manifest - manifest.json part of the export result\n * @param {string} path  - path in the manifest\n * @param {boolean} deletionRequest - if set to true, any manifest setting specified by entityPath gets deleted even if it comprises any unknown property\n * @param {string[]} entityPathArray (optional) - array of elements, describing a path to a subsection of the config.\n *                                                If specified, only elements from this subsection are getting deleted\n * @param {string} targetAnnotation (optional) - target annotation (optional, in case of sections, subsections)\n * @param {string} targetAnnotationEncoded (optional) - encoded version of the target annotation, as represented in the manifest\n */\nexport const deleteEmptyStructure = (\n    manifest: object,\n    path: string,\n    deletionRequest: boolean,\n    entityPathArray?: string[],\n    targetAnnotation?: string,\n    targetAnnotationEncoded?: string\n): void => {\n    if (!path) {\n        return;\n    }\n    let manifestSection = manifest;\n    const pathArray = path.split('/');\n    pathArray.forEach(function (element) {\n        const decodedElement =\n            targetAnnotationEncoded && targetAnnotationEncoded === element\n                ? targetAnnotation\n                : element.replace(/\\?\\?/g, '/');\n        if (!manifestSection[decodedElement]) {\n            return;\n        }\n        if (\n            Object.keys(manifestSection[decodedElement]).length === 0 ||\n            //deletion explicitly requested by using entityPath\n            (entityPathArray && entityPathArray[entityPathArray.length - 1] === decodedElement && deletionRequest)\n        ) {\n            if (Array.isArray(manifestSection)) {\n                manifestSection.splice(Number(decodedElement), 1);\n            } else {\n                delete manifestSection[decodedElement];\n            }\n            pathArray.pop();\n            deleteEmptyStructure(\n                manifest,\n                pathArray.join('/'),\n                deletionRequest,\n                entityPathArray,\n                targetAnnotation,\n                targetAnnotationEncoded\n            );\n            return;\n        }\n        manifestSection = manifestSection && manifestSection[decodedElement];\n    });\n};\n\n/**\n * Method which returns generic schema file name.\n * @param {SchemaType | PageTypeV2} schemaType Schema type or Page type.\n * @return {string} File name of generic schema.\n */\nconst getGenericSchemaFileName = (schemaType: SchemaType | PageTypeV2 | PageTypeV4): string => {\n    if (schemaType === SchemaType.FreestylePage) {\n        return PageTypeV2.CustomPage;\n    }\n    if (schemaType === SchemaType.FPMCustomPage) {\n        // FPM custom pages uses generic schema generated for building blocks\n        return SchemaType.BuildingBlocks;\n    }\n    return `${schemaType}`;\n};\n\n/**\n * Method which returns schema file name and path depending on passed schema or page type.\n * @param {SchemaType | PageTypeV2} schemaType Schema type or Page type.\n * @param {string} [pageId] target page id from manifest.json\n * @return {SchemaFilePath} File path info.\n */\nexport const getSchemaFilePath = (\n    schemaType: SchemaType | PageTypeV2 | PageTypeV4,\n    pageId?: string,\n    viewId?: string\n): SchemaFilePath => {\n    const schemaFile: SchemaFilePath = {\n        filename: '',\n        path: ''\n    };\n    switch (schemaType) {\n        // Application schema\n        case SchemaType.Application: {\n            // File name\n            schemaFile.filename = `App`;\n            // Full path\n            schemaFile.path = `./${DirName.Schemas}/${schemaFile.filename}`;\n            break;\n        }\n        // List report and object page\n        case SchemaType.ListReport:\n        case SchemaType.ObjectPage: {\n            // File name\n            schemaFile.filename = pageId ? `${schemaType}_${pageId}` : getGenericSchemaFileName(schemaType);\n            // Full path\n            schemaFile.path = `../${DirName.Schemas}/${schemaFile.filename}`;\n            break;\n        }\n        case PageTypeV4.FPMCustomPage:\n        case SchemaType.FPMCustomPage: {\n            // File name\n            schemaFile.filename = viewId\n                ? `${SchemaType.FPMCustomPage}_${viewId}`\n                : getGenericSchemaFileName(SchemaType.FPMCustomPage);\n            // Full path\n            schemaFile.path = `../${DirName.Schemas}/${schemaFile.filename}`;\n            break;\n        }\n        // Other page configs\n        default: {\n            // File name\n            schemaFile.filename = getGenericSchemaFileName(schemaType);\n            // Full path\n            schemaFile.path = `../${DirName.Schemas}/${schemaFile.filename}`;\n            break;\n        }\n    }\n    schemaFile.path += '.json';\n    return schemaFile;\n};\n\n/**\n * Method which generates id of page according to passed parameters\n * @param appVersion - Fiori Elements version - V2 or V4\n * @param pageType - Page type\n * @param entitySet - Entity Set\n * @param viewId - Custom page's viewId (optional)\n * @param pageName - Page name in manifest. Used if entitySet is empty\n * @returns {string} Generated page id\n */\n\nexport function generatePageId(\n    pageType: PageTypeV2 | PageTypeV4,\n    entitySet: string,\n    viewId?: string,\n    pageName?: string\n): string {\n    if (pageType === PageTypeV2.CustomPage) {\n        const names = viewId && viewId.split('.');\n        return names && names[names.length - 1] + 'Page';\n    }\n    const parts: string[] = [];\n    parts.push(pageType);\n    if (entitySet) {\n        parts.push(entitySet);\n    } else if (pageName) {\n        parts.push(pageName.replace('|', '').replace(pageType, ''));\n    }\n    return parts.join('_');\n}\n\nexport type NextDefinition = {\n    configObject?: object;\n    targetDefinition?: object;\n    title?: string;\n};\n\n/**\n * Method finds matching objects against passed interface of 'additionalProperties' and returns array of matching object keys.\n * @param {Definition} appSchema - App-specific JSON schema.\n * @param {Definition} additionalProperties - Allowed additional properties.\n * @param {object} configObject -Container object to find matching childs.\n * @returns {string[]} Array of matching object keys\n */\nexport function findMatchingKeysByAdditionalProperties(\n    appSchema: Definition,\n    additionalProperties: Definition,\n    configObject: object\n): string[] {\n    let properties = additionalProperties?.properties;\n    let required = additionalProperties?.required;\n    if (!properties && additionalProperties?.$ref) {\n        const reference = additionalProperties?.$ref;\n        const definition = appSchema.definitions[reference.split(DEFINITION_LINK_PREFIX)[1]];\n        if (typeof definition === 'object') {\n            properties = definition.properties;\n            required = definition.required;\n        }\n    }\n\n    if (!properties || Object.keys(properties).length === 0) {\n        return [];\n    }\n    const result: string[] = [];\n    required = required || [];\n    // Merge new entries for creation into list\n    for (const key in configObject) {\n        const entry = configObject[key];\n        // Check if interface of config entry matches additionalProperties - all required properties should exist in entry\n        if (typeof entry === 'object' && required.every((property: string): boolean => entry[property])) {\n            result.push(key);\n        }\n    }\n    return result;\n}\n\nfunction fillArrayFromAnyOfReference(\n    element: Definition,\n    appSchema: Definition,\n    currentConfigObject: object,\n    definitionArray: any[]\n) {\n    const $ref = element.$ref;\n    if (!$ref) {\n        return;\n    }\n    const definitionKey = $ref.split(DEFINITION_LINK_PREFIX)[1];\n    const innerDefinition = appSchema.definitions[definitionKey];\n    if (typeof innerDefinition === 'object' && typeof currentConfigObject === 'object') {\n        const controlProperty = innerDefinition['controlProperty'];\n        if (controlProperty) {\n            if ($ref.includes(currentConfigObject[controlProperty])) {\n                definitionArray.push(definitionKey);\n            }\n        } else if (typeof innerDefinition.additionalProperties === 'object') {\n            // Check if potential object already exists in schema properties\n            const properties = Object.keys(innerDefinition.properties || {});\n            const matchingKeys = findMatchingKeysByAdditionalProperties(\n                appSchema,\n                innerDefinition.additionalProperties,\n                currentConfigObject\n            );\n            if (properties.some((property) => property in currentConfigObject) || matchingKeys.length) {\n                definitionArray.push(definitionKey);\n            }\n        }\n    }\n}\n\n/**\n * Fills an array of next definitions from given references in the JSON schema\n * @param propertyDefinition - Definition of the current property in schema\n * @param currentConfigObject - Current object in the config JSON. Evaluated to get the right value of a controlling property,\n *                              for making the right choice in case of multiple options (anyOf)\n * @param appSchema - app-specific JSON schema\n * @returns an array of definitions to proceed with\n */\nfunction fillArrayFromPropertyDefinition(\n    propertyDefinition: Definition,\n    currentConfigObject: object,\n    appSchema: Definition\n): any[] {\n    const definitionArray = [];\n    if (propertyDefinition.$ref) {\n        definitionArray.push(propertyDefinition.$ref.split(DEFINITION_LINK_PREFIX)[1]);\n    } else if (propertyDefinition.anyOf) {\n        if (currentConfigObject) {\n            propertyDefinition.anyOf.forEach((element) => {\n                fillArrayFromAnyOfReference(element as Definition, appSchema, currentConfigObject, definitionArray);\n            });\n        }\n        if (definitionArray.length === 0) {\n            return undefined;\n        }\n    }\n    return definitionArray;\n}\n\n/**\n * Determines the next definition to be handled, based on the definition array.\n * It also creates the Metadata instance for the next definition, to subsequently access metadata like the syncRule\n * @param definitionArray - Array of definitions, as determined by fillArrayFromNextDefinition\n * @param appSchema - app-specific JSON schema\n * @param title - default title\n * @param currentConfigObject - Current object in the config JSON.\n * @param key - actual key\n * @param {MetadataInstanceInterface} factory - factory for creating metadata instances\n * @param pageType - page type\n * @param propertyDefinition - Definition of the current property in schema\n * @returns {NextDefinition} - Next target definition to process\n */\nfunction determineNextDefinitionFromDefinitionArray(\n    definitionArray: any[],\n    appSchema: object,\n    title: string,\n    currentConfigObject: object,\n    key: string,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV2 | PageTypeV4,\n    propertyDefinition: object\n): NextDefinition {\n    let nextDefinition: NextDefinition = {\n        configObject: undefined,\n        targetDefinition: {},\n        title: ''\n    };\n    if (definitionArray.length) {\n        const lastDefinition = definitionArray[definitionArray.length - 1];\n        nextDefinition.targetDefinition = appSchema['definitions'][lastDefinition];\n\n        if (nextDefinition?.targetDefinition?.['$ref'] || nextDefinition?.targetDefinition?.['type'] === 'array') {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            nextDefinition = getNextTargetDefinition(\n                appSchema,\n                title,\n                currentConfigObject,\n                nextDefinition.targetDefinition,\n                key,\n                factory,\n                pageType\n            );\n            return nextDefinition;\n        }\n        if (definitionArray.length > 1) {\n            definitionArray.forEach((element) => {\n                if (element !== '') {\n                    nextDefinition.targetDefinition['properties'] = {\n                        ...nextDefinition.targetDefinition['properties'],\n                        ...appSchema['definitions'][element]['properties']\n                    };\n                }\n            });\n        }\n        nextDefinition.title = nextDefinition?.targetDefinition?.['title']\n            ? nextDefinition.targetDefinition['title']\n            : title;\n        const factoryKey = lastDefinition?.split('<')[0];\n        const targetObject = currentConfigObject ? currentConfigObject : {};\n        nextDefinition.configObject = factory.createInstance(\n            pageType,\n            factoryKey,\n            targetObject,\n            nextDefinition?.targetDefinition?.['controlProperty']\n        );\n    } else {\n        //e.g. sections ==> loop over all properties = subsections or other\n        nextDefinition.targetDefinition = propertyDefinition;\n        nextDefinition.title = nextDefinition.targetDefinition['title']\n            ? nextDefinition.targetDefinition['title']\n            : key;\n        nextDefinition.configObject = currentConfigObject;\n    }\n    return nextDefinition;\n}\n\n/**\n * Recursive function to determine the next config part, next definition in the app schema and the title\n * @param appSchema - app-specific JSON schema\n * @param title - default title\n * @param currentConfigObject - current part of the configuration that gets traversed\n * @param propertyDefinition - definition of a given property in the app schema\n * @param key - actual key\n * @param {MetadataInstanceInterface} factory - factory for creating metadata instances\n * @param pageType - page type\n */\nexport function getNextTargetDefinition(\n    appSchema: object,\n    title: string,\n    currentConfigObject: object,\n    propertyDefinition: object,\n    key: string,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV2 | PageTypeV4\n): NextDefinition {\n    let nextDefinition: NextDefinition;\n    if (propertyDefinition['type'] === 'array') {\n        nextDefinition = getNextTargetDefinition(\n            appSchema,\n            title,\n            currentConfigObject,\n            propertyDefinition['items'],\n            key,\n            factory,\n            pageType\n        );\n        return nextDefinition;\n    }\n    const definitionArray = fillArrayFromPropertyDefinition(propertyDefinition, currentConfigObject, appSchema);\n    if (!definitionArray) {\n        return undefined;\n    }\n    nextDefinition = determineNextDefinitionFromDefinitionArray(\n        definitionArray,\n        appSchema,\n        title,\n        currentConfigObject,\n        key,\n        factory,\n        pageType,\n        propertyDefinition\n    );\n    return nextDefinition;\n}\n\n/**\n * Custom array merge function called by deepmerge's merge function\n *\n * @param {*} target Target array\n * @param {*} source Source array\n * @param {*} options options object provided by deepmerge's merge function\n * @returns\n */\nexport const arrayCombineMerge = (target, source, options): string[] => {\n    const destination = target.slice();\n    source.forEach((item, index) => {\n        if (typeof destination[index] === 'undefined') {\n            destination[index] = options.cloneUnlessOtherwiseSpecified(item, options);\n        } else if (options.isMergeableObject(item)) {\n            destination[index] = merge(target[index], item, options);\n        } else if (target.indexOf(item) === -1) {\n            destination.push(item);\n        }\n    });\n    return destination;\n};\n\n/**\n * Converts an enum into a CSV\n * @param {object} manifestSection - manifestSection where the key exists\n * @param {object} configPart - Property as mentioned in config file\n * @param {string} key - Property to be exported to manifest\n */\nexport function convertEnumToCSV(manifestSection, configPart, key: string): void {\n    manifestSection[key] = JSON.parse(JSON.stringify(configPart[key]));\n    // convert enum array to joined string\n    const field = configPart[key];\n    manifestSection[key] = field.join();\n}\n\n/**\n * Converts an action ID from the internal format (schema, config) to the stable ID representation\n * @param actionId - the (unique) internal format of the action ID\n * @returns the converted action ID\n */\nexport function convertActionKeyToStableId(actionId: string): string | undefined {\n    if (!actionId) {\n        return;\n    }\n    return (actionId.indexOf('??') > -1 ? actionId.split('??')[1] : actionId).replace(/@/g, '::');\n}\n\n/**\n * Method returns definition key for passed '$ref' property by removing 'definition' prefix\n * @param {string} $ref Definition reference.\n * @returns Definition key.\n */\nexport function getDefinitionKey($ref: string): string {\n    return $ref?.split(DEFINITION_LINK_PREFIX)[1];\n}\n\n/**\n * Method returns definition $ref' property for passed definition key.\n * @param {string} key Definition key.\n * @returns Definition reference.\n */\nexport function getDefinitionsRef(key: string): string {\n    return `#/definitions/${key}`;\n}\n\n/**\n * Returns the message property if the error is an instance of `Error` else a string representation of the error.\n *\n * @param error {Error | unknown} - the error instance\n * @returns {string} the error message\n */\nexport function getErrorMessage(error: Error | unknown): string {\n    return error instanceof Error ? error.message : String(error);\n}\n\n/**\n * Method checks if passed array of features contains required feature.\n *\n * @param {FeatureToggle[]} [featureToggles] Array of features.\n * @param {FeatureToggle} [feature] Feature to check if it is supported.\n * @returns {boolean} True if passed feature is supported.\n */\nexport function isFeatureSupported(featureToggles?: FeatureToggle[], feature?: FeatureToggle): boolean {\n    return featureToggles?.includes(feature);\n}\n\n/**\n * Method adds indices (propertyIndex property) to app-specific JSON schema properties.\n *\n * @param {Definition} [schema] App-specific JSON schema.\n * @param {string[]} [order] Order of properties.\n * @returns {void} Updates app-specific JSON schema properties with indices.\n */\nexport function updatePropertyIndices(schema: Definition, order: string[]): void {\n    order.forEach((propertyName: string, index: number) => {\n        if (schema.properties[propertyName]) {\n            schema.properties[propertyName]['propertyIndex'] = index;\n        }\n    });\n}\n\n/**\n * Method to get value for passed path in passed object.\n * @param obj Object to check.\n * @param paths Path for searching property/value.\n * @returns Found value for passed path.\n */\nexport function getJSONPropertyByPath(obj: object, paths: Array<string | number>): unknown {\n    let current = obj;\n    for (const path of paths) {\n        if (path === undefined) {\n            continue;\n        }\n        if (typeof current === 'object' && path in current) {\n            // found and continue\n            current = current[path];\n        } else {\n            return undefined;\n        }\n    }\n    return current;\n}\n\n/**\n * Method to remove namespaces\n * @param {string } [sId]\n * @returns {string} modified string without namespace\n */\nexport function removeNamespaces(sId: string): string {\n    sId = sId.replace(UIVOCABULARYDOT, '');\n    sId = sId.replace('com.sap.vocabularies.Communication.v1.', '');\n    return sId;\n}\n\n/**\n * Method to replace namespaces with short hand form\n * @param {string } [sId]\n * @returns {string} modified string with replaced namespaces\n */\nexport function replaceNamespaces(sId: string): string {\n    sId = sId.replace(UIVOCABULARY, 'UI');\n    sId = sId.replace('com.sap.vocabularies.Communication.v1', 'Communication');\n    return sId;\n}\n", "const consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    if (console && console[type]) console[type].apply(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return this.forward(args, 'log', '', true);\n  }\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return this.forward(args, 'warn', '', true);\n  }\n  error() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return this.forward(args, 'error', '');\n  }\n  deprecate() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (typeof args[0] === 'string') args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(_ref => {\n        let [observer, numTimesAdded] = _ref;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(_ref2 => {\n        let [observer, numTimesAdded] = _ref2;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nfunction defer() {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n}\nfunction makeString(object) {\n  if (object == null) return '';\n  return '' + object;\n}\nfunction copy(a, s, t) {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n}\nconst lastOfPathSeparatorRegExp = /###/g;\nfunction getLastOfPath(object, path, Empty) {\n  function cleanKey(key) {\n    return key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\n  }\n  function canNotTraverseDeeper() {\n    return !object || typeof object === 'string';\n  }\n  const stack = typeof path !== 'string' ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper()) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper()) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n}\nfunction setPath(object, path, newValue) {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last && last.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n}\nfunction pushPath(object, path, newValue, concat) {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  if (concat) obj[k] = obj[k].concat(newValue);\n  if (!concat) obj[k].push(newValue);\n}\nfunction getPath(object, path) {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  return obj[k];\n}\nfunction getPathWithDefaults(data, defaultData, key) {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n}\nfunction deepExtend(target, source, overwrite) {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n}\nfunction regexEscape(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nfunction escape(data) {\n  if (typeof data === 'string') {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n}\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nfunction looksLikeObjectPath(key, nsSeparator, keySeparator) {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n}\nfunction deepFind(obj, path) {\n  let keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n}\nfunction getCleanedCode(code) {\n  if (code && code.indexOf('_') > 0) return code.replace('_', '-');\n  return code;\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (typeof key === 'string' && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || typeof key !== 'string') return result;\n    return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      silent: false\n    };\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      silent: false\n    };\n    for (const m in resources) {\n      if (typeof resources[m] === 'string' || Object.prototype.toString.apply(resources[m]) === '[object Array]') this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      silent: false,\n      skipCopy: false\n    };\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    if (this.options.compatibilityAPI === 'v1') return {\n      ...{},\n      ...this.getResource(lng, ns)\n    };\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      if (this.processors[processor]) value = this.processors[processor].process(value, key, options, translator);\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nclass Translator extends EventEmitter {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    if (key === undefined || key === null) {\n      return false;\n    }\n    const resolved = this.resolve(key, options);\n    return resolved && resolved.res !== undefined;\n  }\n  extractFromKey(key, options) {\n    let nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    if (typeof namespaces === 'string') namespaces = [namespaces];\n    return {\n      key,\n      namespaces\n    };\n  }\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') options = {\n      ...options\n    };\n    if (!options) options = {};\n    if (keys === undefined || keys === null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng && lng.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(options)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(options)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, options);\n    let res = resolved && resolved.res;\n    const resUsedKey = resolved && resolved.usedKey || key;\n    const resExactUsedKey = resolved && resolved.exactUsedKey || key;\n    const resType = Object.prototype.toString.apply(res);\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const handleAsObject = typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';\n    if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === 'string' && resType === '[object Array]')) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, {\n          ...options,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(options);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = resType === '[object Array]';\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in res) {\n          if (Object.prototype.hasOwnProperty.call(res, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            copy[m] = this.translate(deepKey, {\n              ...options,\n              ...{\n                joinArrays: false,\n                ns: namespaces\n              }\n            });\n            if (copy[m] === deepKey) copy[m] = res[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && resType === '[object Array]') {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      const needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n      const hasDefaultValue = Translator.hasDefaultValue(options);\n      const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n      const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {\n        ordinal: false\n      }) : '';\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && this.pluralResolver.shouldUseIntlApi();\n      const defaultValue = needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] || options[`defaultValue${defaultValueSuffix}`] || options[`defaultValue${defaultValueSuffixOrdinalFallback}`] || options.defaultValue;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...options,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n          } else if (this.backendConnector && this.backendConnector.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, options);\n              if (needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = `${namespace}:${key}`;\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        if (this.options.compatibilityAPI !== 'v1') {\n          res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key, usedDefault ? res : undefined);\n        } else {\n          res = this.options.parseMissingKeyHandler(res);\n        }\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(options);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, options, resolved, lastKey) {\n    var _this = this;\n    if (this.i18nFormat && this.i18nFormat.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...options\n      }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!options.skipInterpolation) {\n      if (options.interpolation) this.interpolator.init({\n        ...options,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...options.interpolation\n          }\n        }\n      });\n      const skipOnVariables = typeof res === 'string' && (options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = options.replace && typeof options.replace !== 'string' ? options.replace : options;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, options.lng || this.language, options);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n      if (!options.lng && this.options.compatibilityAPI !== 'v1' && resolved && resolved.res) options.lng = resolved.usedLng;\n      if (options.nest !== false) res = this.interpolator.nest(res, function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (lastKey && lastKey[0] === args[0] && !options.context) {\n          _this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return _this.translate(...args, key);\n      }, options);\n      if (options.interpolation) this.interpolator.reset();\n    }\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;\n    if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(options)\n        },\n        ...options\n      } : options, this);\n    }\n    return res;\n  }\n  resolve(keys) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (typeof keys === 'string') keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && this.pluralResolver.shouldUseIntlApi();\n      const needsContextHandling = options.context !== undefined && (typeof options.context === 'string' || typeof options.context === 'number') && options.context !== '';\n      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils && this.utils.hasLoadedNamespace && !this.utils.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat && this.i18nFormat.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && typeof options.replace !== 'string';\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (typeof code === 'string' && code.indexOf('-') > -1) {\n      const specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n      let p = code.split('-');\n      if (this.options.lowerCaseLng) {\n        p = p.map(part => part.toLowerCase());\n      } else if (p.length === 2) {\n        p[0] = p[0].toLowerCase();\n        p[1] = p[1].toUpperCase();\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n      } else if (p.length === 3) {\n        p[0] = p[0].toLowerCase();\n        if (p[1].length === 2) p[1] = p[1].toUpperCase();\n        if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n      }\n      return p.join('-');\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n    if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (typeof code === 'string' && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (typeof code === 'string') {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nlet sets = [{\n  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'tl', 'ti', 'tr', 'uz', 'wa'],\n  nr: [1, 2],\n  fc: 1\n}, {\n  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kk', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],\n  nr: [1, 2],\n  fc: 2\n}, {\n  lngs: ['ay', 'bo', 'cgg', 'fa', 'ht', 'id', 'ja', 'jbo', 'ka', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],\n  nr: [1],\n  fc: 3\n}, {\n  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],\n  nr: [1, 2, 5],\n  fc: 4\n}, {\n  lngs: ['ar'],\n  nr: [0, 1, 2, 3, 11, 100],\n  fc: 5\n}, {\n  lngs: ['cs', 'sk'],\n  nr: [1, 2, 5],\n  fc: 6\n}, {\n  lngs: ['csb', 'pl'],\n  nr: [1, 2, 5],\n  fc: 7\n}, {\n  lngs: ['cy'],\n  nr: [1, 2, 3, 8],\n  fc: 8\n}, {\n  lngs: ['fr'],\n  nr: [1, 2],\n  fc: 9\n}, {\n  lngs: ['ga'],\n  nr: [1, 2, 3, 7, 11],\n  fc: 10\n}, {\n  lngs: ['gd'],\n  nr: [1, 2, 3, 20],\n  fc: 11\n}, {\n  lngs: ['is'],\n  nr: [1, 2],\n  fc: 12\n}, {\n  lngs: ['jv'],\n  nr: [0, 1],\n  fc: 13\n}, {\n  lngs: ['kw'],\n  nr: [1, 2, 3, 4],\n  fc: 14\n}, {\n  lngs: ['lt'],\n  nr: [1, 2, 10],\n  fc: 15\n}, {\n  lngs: ['lv'],\n  nr: [1, 2, 0],\n  fc: 16\n}, {\n  lngs: ['mk'],\n  nr: [1, 2],\n  fc: 17\n}, {\n  lngs: ['mnk'],\n  nr: [0, 1, 2],\n  fc: 18\n}, {\n  lngs: ['mt'],\n  nr: [1, 2, 11, 20],\n  fc: 19\n}, {\n  lngs: ['or'],\n  nr: [2, 1],\n  fc: 2\n}, {\n  lngs: ['ro'],\n  nr: [1, 2, 20],\n  fc: 20\n}, {\n  lngs: ['sl'],\n  nr: [5, 1, 2, 3],\n  fc: 21\n}, {\n  lngs: ['he', 'iw'],\n  nr: [1, 2, 20, 21],\n  fc: 22\n}];\nlet _rulesPluralsTypes = {\n  1: function (n) {\n    return Number(n > 1);\n  },\n  2: function (n) {\n    return Number(n != 1);\n  },\n  3: function (n) {\n    return 0;\n  },\n  4: function (n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  5: function (n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);\n  },\n  6: function (n) {\n    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);\n  },\n  7: function (n) {\n    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  8: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);\n  },\n  9: function (n) {\n    return Number(n >= 2);\n  },\n  10: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);\n  },\n  11: function (n) {\n    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);\n  },\n  12: function (n) {\n    return Number(n % 10 != 1 || n % 100 == 11);\n  },\n  13: function (n) {\n    return Number(n !== 0);\n  },\n  14: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);\n  },\n  15: function (n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  16: function (n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);\n  },\n  17: function (n) {\n    return Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1);\n  },\n  18: function (n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);\n  },\n  19: function (n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);\n  },\n  20: function (n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);\n  },\n  21: function (n) {\n    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);\n  },\n  22: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);\n  }\n};\nconst nonIntlVersions = ['v1', 'v2', 'v3'];\nconst intlVersions = ['v4'];\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nfunction createRules() {\n  const rules = {};\n  sets.forEach(set => {\n    set.lngs.forEach(l => {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n}\nclass PluralResolver {\n  constructor(languageUtils) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    if ((!this.options.compatibilityJSON || intlVersions.includes(this.options.compatibilityJSON)) && (typeof Intl === 'undefined' || !Intl.PluralRules)) {\n      this.options.compatibilityJSON = 'v3';\n      this.logger.error('Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.');\n    }\n    this.rules = createRules();\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  getRule(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (this.shouldUseIntlApi()) {\n      try {\n        return new Intl.PluralRules(getCleanedCode(code === 'dev' ? 'en' : code), {\n          type: options.ordinal ? 'ordinal' : 'cardinal'\n        });\n      } catch (err) {\n        return;\n      }\n    }\n    return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n  }\n  needsPlural(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const rule = this.getRule(code, options);\n    if (this.shouldUseIntlApi()) {\n      return rule && rule.resolvedOptions().pluralCategories.length > 1;\n    }\n    return rule && rule.numbers.length > 1;\n  }\n  getPluralFormsOfKey(code, key) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const rule = this.getRule(code, options);\n    if (!rule) {\n      return [];\n    }\n    if (this.shouldUseIntlApi()) {\n      return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n    }\n    return rule.numbers.map(number => this.getSuffix(code, number, options));\n  }\n  getSuffix(code, count) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const rule = this.getRule(code, options);\n    if (rule) {\n      if (this.shouldUseIntlApi()) {\n        return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n      }\n      return this.getSuffixRetroCompatible(rule, count);\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return '';\n  }\n  getSuffixRetroCompatible(rule, count) {\n    const idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n    let suffix = rule.numbers[idx];\n    if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      if (suffix === 2) {\n        suffix = 'plural';\n      } else if (suffix === 1) {\n        suffix = '';\n      }\n    }\n    const returnSuffix = () => this.options.prepend && suffix.toString() ? this.options.prepend + suffix.toString() : suffix.toString();\n    if (this.options.compatibilityJSON === 'v1') {\n      if (suffix === 1) return '';\n      if (typeof suffix === 'number') return `_plural_${suffix.toString()}`;\n      return returnSuffix();\n    } else if (this.options.compatibilityJSON === 'v2') {\n      return returnSuffix();\n    } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      return returnSuffix();\n    }\n    return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n  }\n  shouldUseIntlApi() {\n    return !nonIntlVersions.includes(this.options.compatibilityJSON);\n  }\n}\n\nfunction deepFindWithDefaults(data, defaultData, key) {\n  let keySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && typeof key === 'string') {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n}\nclass Interpolator {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options.interpolation && options.interpolation.format || (value => value);\n    this.init(options);\n  }\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const iOpts = options.interpolation;\n    this.escape = iOpts.escape !== undefined ? iOpts.escape : escape;\n    this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;\n    this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;\n    this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';\n    this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';\n    this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n    this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';\n    this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ',';\n    this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;\n    this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp && existingRegExp.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    function regexSafe(val) {\n      return val.replace(/\\$/g, '$$$$');\n    }\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = typeof temp === 'string' ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (typeof value !== 'string' && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let match;\n    let value;\n    let clonedOptions;\n    function handleHasOptions(key, inheritedOptions) {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if (matchedSingleQuotes && matchedSingleQuotes.length % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      delete clonedOptions.defaultValue;\n      return key;\n    }\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && typeof clonedOptions.replace !== 'string' ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map(elem => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && typeof value !== 'string') return value;\n      if (typeof value !== 'string') value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (doReduce) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nfunction parseFormatStr(formatStr) {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (!opt) return;\n        const [key, ...rest] = opt.split(':');\n        const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n        if (!formatOptions[key.trim()]) formatOptions[key.trim()] = val;\n        if (val === 'false') formatOptions[key.trim()] = false;\n        if (val === 'true') formatOptions[key.trim()] = true;\n        if (!isNaN(val)) formatOptions[key.trim()] = parseInt(val, 10);\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n}\nfunction createCachedFormatter(fn) {\n  const cache = {};\n  return function invokeFormatter(val, lng, options) {\n    const key = lng + JSON.stringify(options);\n    let formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(getCleanedCode(lng), options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n}\nclass Formatter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n    this.init(options);\n  }\n  init(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    const iOpts = options.interpolation;\n    this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const formats = format.split(this.formatSeparator);\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options && options.formatParams && options.formatParams[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nfunction removePending(q, name) {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n}\nclass Connector extends EventEmitter {\n  constructor(backend, store, services) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    if (this.backend && this.backend.init) {\n      this.backend.init(services, options.backend, options);\n    }\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName) {\n    let tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n    let callback = arguments.length > 5 ? arguments[5] : undefined;\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let callback = arguments.length > 3 ? arguments[3] : undefined;\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n    if (typeof namespaces === 'string') namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name) {\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    let clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : () => {};\n    if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend && this.backend.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nfunction get() {\n  return {\n    debug: false,\n    initImmediate: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    supportedLngs: false,\n    nonExplicitSupportedLngs: false,\n    load: 'all',\n    preload: false,\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    saveMissing: false,\n    updateMissing: false,\n    saveMissingTo: 'fallback',\n    saveMissingPlurals: true,\n    missingKeyHandler: false,\n    missingInterpolationHandler: false,\n    postProcess: false,\n    postProcessPassResolved: false,\n    returnNull: false,\n    returnEmptyString: true,\n    returnObjects: false,\n    joinArrays: false,\n    returnedObjectHandler: false,\n    parseMissingKeyHandler: false,\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      let ret = {};\n      if (typeof args[1] === 'object') ret = args[1];\n      if (typeof args[1] === 'string') ret.defaultValue = args[1];\n      if (typeof args[2] === 'string') ret.tDescription = args[2];\n      if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n        const options = args[3] || args[2];\n        Object.keys(options).forEach(key => {\n          ret[key] = options[key];\n        });\n      }\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: value => value,\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      nestingOptionsSeparator: ',',\n      maxReplaces: 1000,\n      skipOnVariables: true\n    }\n  };\n}\nfunction transformOptions(options) {\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  return options;\n}\n\nfunction noop() {}\nfunction bindMemberFunctions(inst) {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n}\nclass I18n extends EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initImmediate) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init() {\n    var _this = this;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!options.defaultNS && options.defaultNS !== false && options.ns) {\n      if (typeof options.ns === 'string') {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    if (this.options.compatibilityAPI !== 'v1') {\n      this.options.interpolation = {\n        ...defOpts.interpolation,\n        ...this.options.interpolation\n      };\n    }\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    function createClassOnDemand(ClassOrObject) {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    }\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else if (typeof Intl !== 'undefined') {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        compatibilityJSON: this.options.compatibilityJSON,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', function (event) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        _this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', function (event) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        _this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = function () {\n        return _this.store[fcName](...arguments);\n      };\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = function () {\n        _this.store[fcName](...arguments);\n        return _this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && this.options.compatibilityAPI !== 'v1' && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initImmediate) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    let usedCallback = callback;\n    const usedLng = typeof language === 'string' ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng && usedLng.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      if (this.options.preload) {\n        this.options.preload.forEach(l => append(l));\n      }\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n  changeLanguage(lng, callback) {\n    var _this2 = this;\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve(function () {\n        return _this2.t(...arguments);\n      });\n      if (callback) callback(err, function () {\n        return _this2.t(...arguments);\n      });\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const l = typeof lngs === 'string' ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        if (this.services.languageDetector && this.services.languageDetector.cacheUserLanguage) this.services.languageDetector.cacheUserLanguage(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    var _this3 = this;\n    const fixedT = function (key, opts) {\n      let options;\n      if (typeof opts !== 'object') {\n        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          rest[_key3 - 2] = arguments[_key3];\n        }\n        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = {\n          ...opts\n        };\n      }\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = _this3.options.keySeparator || '.';\n      let resultKey;\n      if (options.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${options.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return _this3.t(resultKey, options);\n    };\n    if (typeof lng === 'string') {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t() {\n    return this.translator && this.translator.translate(...arguments);\n  }\n  exists() {\n    return this.translator && this.translator.exists(...arguments);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (typeof ns === 'string') ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'string') lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0);\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services && this.services.languageUtils || new LanguageUtil(get());\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    return new I18n(options, callback);\n  }\n  cloneInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      clone.store = new ResourceStore(this.store.data, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', function (event) {\n      for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      }\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n", "import type { ExtensionLogger, LogSeverity, Location, LogMessage } from '@sap/ux-specification-types';\nimport { LogSeverityLabel } from '@sap/ux-specification-types';\n\n/**\n * Internal representation of one log entry\n */\ninterface LogEntry {\n    severity: LogSeverity;\n    message: string;\n    location?: Location;\n}\n\n/**\n * Function to create a new log entry and add it to the logger.\n * If no logger is passed, puts the message to the console\n * @param logger - the logger instance\n * @param message - the log message\n * @param meta - option list of strings/objects\n */\nexport const log = (logger: ExtensionLogger, logEntry: LogEntry, ...meta: LogMessage[]): void => {\n    if (logger) {\n        if (logEntry.location) {\n            logger[logEntry.severity](logEntry.message, { location: logEntry.location, ...meta });\n        } else {\n            logger[logEntry.severity](logEntry.message, ...meta);\n        }\n    } else {\n        if (logEntry.location) {\n            if (logEntry.location.range) {\n                console.log(\n                    `${LogSeverityLabel[logEntry.severity]}: ${logEntry.message}, location: ${\n                        logEntry.location.path\n                    }, ${logEntry.location.range}`,\n                    ...meta\n                );\n            } else {\n                console.log(\n                    `${LogSeverityLabel[logEntry.severity]}: ${logEntry.message}, location: ${logEntry.location.path}`,\n                    ...meta\n                );\n            }\n        } else {\n            console.log(`${LogSeverityLabel[logEntry.severity]}: ${logEntry.message}`, ...meta);\n        }\n    }\n};\n", "import type { AnnotationTerm, ConvertedMetadata, EntityType, EntitySet } from '@sap-ux/vocabularies-types';\nimport type { LineItem } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { UIAnnotationTerms, UIAnnotationTypes } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport type {\n    v2,\n    FacetConfigs,\n    FacetConfig,\n    FileData,\n    GenerateAppSchemaParameters,\n    ExtensionLogger\n} from '@sap/ux-specification-types';\nimport {\n    ActionType,\n    ArtifactType,\n    SchemaKeyName,\n    ControlType,\n    SectionType,\n    FioriElementsVersion,\n    ManifestSection,\n    FacetBase,\n    FacetTitlePrefix,\n    DefinitionName,\n    MANIFESTPATH,\n    LogSeverity,\n    PropertyName,\n    SchemaTag\n} from '@sap/ux-specification-types';\nimport {\n    getDataFieldDescription,\n    getObjectPageHeaderFacets,\n    updatePropertyIndices,\n    getObjectPageFacets,\n    createDefaultSection,\n    getObjectPageFacetSection,\n    DEFINITION_LINK_PREFIX,\n    addFieldsType,\n    addDefinitionForRelatedFacetKeys,\n    addSectionTitleAndDescription,\n    handleAddressContact,\n    handleForm,\n    addPatternForBindingChangeOfEnumOP,\n    getActionNameAndId,\n    addFooterActions,\n    addHeaderActions,\n    addCommonHeaderSchema,\n    prepareRef,\n    determineEntitySetOfEntityType,\n    addEnumForSingleTabVariant,\n    determineDataTypeOfTarget,\n    DataType\n} from '../../common';\nimport { addLineItemsType, addTableColumnExtensions } from './utils';\nimport { findObjectPageV2 } from '../import';\nimport { log } from '../../../extensionLogger';\nimport i18next from 'i18next';\nimport { initI18n } from '../../../i18n/i18n';\nimport { SectionTypeV2 } from '../types';\nimport type { Definition } from 'typescript-json-schema';\nimport { getStableIdPartFromDataField } from '../../v4/utils/StableIdHelper';\n\nconst ROOT_PROPERTIES_ORDER: string[] = ['header', 'sections', 'footer'];\n\n/**\n * Adds flexChange properties for sub(sections)\n * @param appSchema - app schema in general\n * @param schemaSection - current section\n * @param property - property that will be enhanced\n * @param sectionType - type of section\n */\nfunction addFlexChangeForSection(\n    appSchema: Definition,\n    schemaSection: Definition,\n    property: string,\n    sectionType: SectionTypeV2\n) {\n    schemaSection.properties[property][SchemaTag.artifactType] = ArtifactType.FlexChange;\n    let controlType: ControlType;\n    switch (sectionType) {\n        case SectionTypeV2.Section:\n        case SectionTypeV2.SectionForm:\n        case SectionTypeV2.SectionChart:\n        case SectionTypeV2.SectionTable:\n            controlType = ControlType.Section;\n            break;\n        case SectionTypeV2.SubSection:\n            controlType = ControlType.SubSection;\n            break;\n        case SectionTypeV2.SubSectionForm:\n            controlType = ControlType.Group;\n            break;\n        case SectionTypeV2.SubSectionChart:\n            controlType = ControlType.SmartChart;\n            break;\n        case SectionTypeV2.SubSectionTable:\n            controlType = ControlType.SmartTable;\n            break;\n        case SectionTypeV2.HeaderSection:\n        case SectionTypeV2.HeaderSectionAddress:\n        case SectionTypeV2.HeaderSectionChart:\n        case SectionTypeV2.HeaderSectionDataPoint:\n        case SectionTypeV2.HeaderSectionForm:\n            controlType = ControlType.ObjectPageHeaderSection;\n            break;\n    }\n    if (!controlType) {\n        return;\n    }\n    addPatternForBindingChangeOfEnumOP(appSchema, schemaSection, property);\n    schemaSection.properties[property][SchemaTag.controlType] = controlType;\n}\n\n/**\n * Callback for adding a single action to headerActions of V2\n * @param {EntityType} entityType - current entity type\n * @param {object} appSchema Schema of the app\n * @param actionAnnotation - annotation as present in AVT ConvertedMetadata\n * @param headerActions - list of header actions, to be enhanced\n */\nfunction addHeaderActionCallBackV2(\n    entityType,\n    appSchema: Definition,\n    identification: any,\n    headerActions: {\n        type: string;\n        properties: {};\n        description: string;\n        additionalProperties: boolean;\n        isViewNode: boolean;\n    },\n    oDataServiceAVT: ConvertedMetadata\n): any {\n    identification?.forEach((item) => {\n        if (!item['Determining'] && item.$Type === UIAnnotationTypes.DataFieldForAction) {\n            const { actionName, actionId, namespace } = getActionNameAndId(item, oDataServiceAVT);\n            //actionId is used as key in V2, as this is the right part for building the full stable ID\n            if (!actionId) {\n                return;\n            }\n            const description = item.Label || actionName;\n            const actionDefinitionKey = `ObjectPageHeaderAction<${prepareRef(actionId)}>`;\n            appSchema.definitions[actionDefinitionKey] = JSON.parse(\n                JSON.stringify(appSchema.definitions['ObjectPageHeaderAction'])\n            );\n            const convertedIdentification = item.fullyQualifiedName.replace(\n                `@${UIAnnotationTerms.Identification}`,\n                `/@${UIAnnotationTerms.Identification}`\n            );\n            appSchema.definitions[actionDefinitionKey][SchemaTag.annotationPath] = `/${convertedIdentification}`;\n            (appSchema.definitions[actionDefinitionKey] as Definition)[SchemaTag.actionType] = ActionType.Annotation;\n            (appSchema.definitions[actionDefinitionKey] as Definition).description = description;\n            appSchema.definitions[actionDefinitionKey][SchemaTag.keys] = [\n                { name: SchemaKeyName.action, value: actionName }\n            ];\n            if (namespace) {\n                appSchema.definitions[actionDefinitionKey][SchemaTag.target] = namespace;\n            }\n\n            headerActions.properties[actionId] = {\n                $ref: `${DEFINITION_LINK_PREFIX}${actionDefinitionKey}`\n            };\n        }\n    });\n}\n\n/**\n * Callback for adding a single action to footerActions of V2\n * @param {EntityType} entityType - current entity type\n * @param {Definition} appSchema Schema of the app\n * @param {Definition} footerActions - list of footer actions, to be enhanced\n * @param {String} identification - converted UI.Identification term\n */\nfunction addFooterActionCallBackV2(\n    entityType,\n    appSchema: Definition,\n    footerActions: {\n        type: string;\n        properties: {};\n        description: string;\n        additionalProperties: boolean;\n        isViewNode: boolean;\n    },\n    identification\n): any {\n    identification.forEach((item) => {\n        if (item['Determining'] && item.$Type === UIAnnotationTypes.DataFieldForAction) {\n            const actionId = getStableIdPartFromDataField(item).split('::').splice(1).join('::');\n            const description = getDataFieldDescription(item, entityType);\n            const actionDefinitionKey = prepareRef(`${DefinitionName.ObjectPageFooterAction}<${actionId}>`);\n            const convertedIdentification = item.fullyQualifiedName.replace(\n                `@${UIAnnotationTerms.Identification}`,\n                `/@${UIAnnotationTerms.Identification}`\n            );\n            appSchema.definitions[actionDefinitionKey] = {\n                ...JSON.parse(JSON.stringify(appSchema.definitions[DefinitionName.ObjectPageFooterAction])),\n                description,\n                annotationPath: `/${convertedIdentification}`\n            };\n\n            footerActions.properties[actionId] = {\n                $ref: `${DEFINITION_LINK_PREFIX}${actionDefinitionKey}`\n            };\n        }\n    });\n}\n\n/**\n * Method ensures that definitions for custom columns are created for passed entitySet.\n * @param {object} appSchema App schema in general\n * @param {object} manifest manifest.json of the app\n * @param {string} entitySetName Entity set name.\n * @param {string} entityTypeName Entity type name.\n * @param {ConvertedMetadata} oDataServiceAVT Complete service information, as returned by annotation vocabularies tool\n * @param {FacetConfig} facet information\n * @param {string} facetKey - key of the facet, as listed in FacetConfigs\n * @param {FileData[]} [fragments] Array with XML fragments.\n * @return {string} Name of custom columns definition.\n */\nfunction ensureCustomColumnDefinitionExists(\n    appSchema: Definition,\n    manifest: object,\n    entitySetName: string,\n    entityTypeName: string,\n    oDataServiceAVT: ConvertedMetadata,\n    facet: FacetConfig,\n    facetKey: string,\n    fragments?: FileData[]\n): string {\n    let suffix, customColumnsDefinitionName;\n    if (facet.ID && facet.Label) {\n        suffix = facet.ID + facet.Label.replace(/\\s+/g, '');\n    } else if (facet.ID) {\n        suffix = facet.ID;\n    } else if (facet.Label) {\n        suffix = facet.Label.replace(/\\s+/g, '');\n    }\n    if (suffix) {\n        customColumnsDefinitionName = `${DefinitionName.CustomColumns}<${entitySetName}><${facetKey}><${suffix}>`;\n    } else {\n        customColumnsDefinitionName = `${DefinitionName.CustomColumns}<${entitySetName}><${facetKey}>`;\n    }\n\n    if (appSchema.definitions[customColumnsDefinitionName]) {\n        // Definition is already created - we do not need to create it again\n        return customColumnsDefinitionName;\n    }\n    // Create type specific 'TableCustomColumn' definition - use entity set as type.\n    const customColumnDefinitionName = `${DefinitionName.CustomColumn}<${entitySetName}>`;\n    const customColumnDefinition = JSON.parse(JSON.stringify(appSchema.definitions['TableCustomColumn']));\n    appSchema.definitions[customColumnDefinitionName] = customColumnDefinition;\n    // Update definitions for type specific custom columns\n    const pageKeys = [];\n    const entityType = oDataServiceAVT?.entityTypes.find((et) => et.name === entityTypeName);\n    const v2Page = findObjectPageV2(manifest[ManifestSection.generic].pages, entitySetName, pageKeys);\n    addTableColumnExtensions(\n        appSchema,\n        entityType,\n        v2Page,\n        manifest,\n        fragments,\n        customColumnsDefinitionName,\n        customColumnDefinitionName,\n        facet.ID\n    );\n\n    return customColumnsDefinitionName;\n}\n\n/**\n * Method fills new app schema section with properties.\n * @param {Definition} appSchema App schema in general\n * @param {object} appSchemaSection app schema section to be filled\n * @param {SectionTypeV2} sectionType (sub)section type\n * @param {SectionTypeV2} mainSectionType main section type, used to fill app schema section\n */\nfunction addAppSchemaDefinition(\n    appSchema: Definition,\n    appSchemaSection: Definition,\n    sectionType: SectionTypeV2,\n    mainSectionType: SectionTypeV2\n): void {\n    appSchemaSection.properties = JSON.parse(\n        JSON.stringify((appSchema.definitions[mainSectionType] as Definition).properties)\n    );\n    if (appSchemaSection.properties.visible) {\n        addFlexChangeForSection(appSchema, appSchemaSection, 'visible', sectionType);\n    }\n}\n\n/**\n * Method adds reference to section property key.\n * @param {object} sections - schema of current sections definition\n * @param {string} key section key which will contain the reference\n * @param {string} definitionKey key which the section should point to\n */\nfunction addSectionReference(sections: Definition, key: string, definitionKey: string) {\n    sections.properties[key] = { $ref: `${DEFINITION_LINK_PREFIX}${definitionKey}` };\n}\n\n/**\n * Reuse function for all table types, copies and adapts the generic definition\n * @param tableType - Table type\n * @param facetId - facet ID, as derived for the given section\n * @param facet - facet or section information\n * @param appSchema - app-specific schema, to be updated\n */\nfunction addTableDefinition(tableType: string, facetId: string, facet: FacetConfig, appSchema: Definition): void {\n    const schemaId = prepareRef(`${tableType}<${facetId}>`);\n    appSchema.definitions[schemaId] = JSON.parse(JSON.stringify(appSchema.definitions[tableType]));\n    appSchema.definitions[schemaId]['properties']['columns']['$ref'] = DEFINITION_LINK_PREFIX + facetId;\n    (appSchema.definitions[schemaId] as Definition).properties.toolBar['$ref'] =\n        `${DEFINITION_LINK_PREFIX}ObjectPageToolBar<${facetId}>`;\n    appSchema.definitions[schemaId][SchemaTag.annotationPath] = facet.annotationPath;\n    if (facet.ID !== undefined) {\n        (appSchema.definitions[schemaId] as Definition).title = FacetTitlePrefix + facet.ID;\n        appSchema.definitions[schemaId][SchemaTag.keys] = [{ name: `ID`, value: facet.ID }];\n    }\n    (appSchema.definitions[schemaId] as Definition).description = DefinitionName.Table;\n\n    //adjust quickVariantSelection\n    (appSchema.definitions[schemaId] as Definition).properties['quickVariantSelection']['$ref'] =\n        `${DEFINITION_LINK_PREFIX}QuickVariantSelectionOP<${facetId}>`;\n    appSchema.definitions[`QuickVariantSelectionOP<${facetId}>`] = JSON.parse(\n        JSON.stringify(appSchema.definitions['QuickVariantSelectionOP'])\n    );\n    appSchema.definitions[`QuickVariant<${facetId}>`] = JSON.parse(\n        JSON.stringify(appSchema.definitions['QuickVariant'])\n    );\n    (\n        (appSchema.definitions[`QuickVariantSelectionOP<${facetId}>`] as Definition).properties.variants as Definition\n    ).patternProperties['^[0-9]+$']['$ref'] = `${DEFINITION_LINK_PREFIX}QuickVariant<${facetId}>`;\n\n    addEnumForSingleTabVariant(facet.entityType, appSchema, `QuickVariant<${facetId}>`);\n}\n\n/**\n * Adds definitions for line items in object page sections to the app schema\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {string} facetKey - key of the facet, as listed in FacetConfigs\n * @param {Definition} appSchema - app schema in general\n * @param {FacetConfig} facet - the given facet from the UI annotations\n * @param {FacetConfigs} facets - list of all facets\n * @param {SectionTypeV2} sectionType (sub)section type\n */\nfunction handleLineItem(\n    generateParameters: GenerateAppSchemaParameters,\n    facetKey: string,\n    appSchema: Definition,\n    facet: FacetConfig,\n    facets: FacetConfigs,\n    sectionType?: SectionTypeV2\n): void {\n    if (facet.base !== FacetBase.LineItem || !facetKey) {\n        //no properties\n        return;\n    }\n    const navigationProperty = facetKey.split('::')[0];\n    const schemaIdForOpSection = `${sectionType}<${facetKey}>`;\n\n    appSchema.definitions[schemaIdForOpSection] = createDefaultSection(appSchema, facet, facetKey);\n    const appSchemaSection = appSchema.definitions[schemaIdForOpSection] as Definition;\n    addAppSchemaDefinition(appSchema, appSchemaSection, sectionType, SectionTypeV2.SectionTable);\n    appSchemaSection.properties.table = JSON.parse(\n        JSON.stringify(appSchema.definitions[SectionTypeV2.SectionTable]['properties'][PropertyName.table])\n    );\n    (appSchemaSection.properties.table as Definition).anyOf = [\n        {\n            $ref: `${DEFINITION_LINK_PREFIX}ObjectPageResponsiveTableWithMultiSelect<${facetKey}>`\n        },\n        {\n            $ref: `${DEFINITION_LINK_PREFIX}ObjectPageResponsiveTableWithInlineDelete<${facetKey}>`\n        },\n        {\n            $ref: `${DEFINITION_LINK_PREFIX}ObjectPageAnalyticalTable<${facetKey}>`\n        },\n        {\n            $ref: `${DEFINITION_LINK_PREFIX}ObjectPageGridTable<${facetKey}>`\n        },\n        {\n            $ref: `${DEFINITION_LINK_PREFIX}ObjectPageTreeTable<${facetKey}>`\n        }\n    ];\n    appSchemaSection[SchemaTag.annotationPath] = facet.annotationPath;\n    addSectionTitleAndDescription(facet, appSchemaSection, facetKey);\n\n    addTableDefinition('ObjectPageResponsiveTableWithMultiSelect', facetKey, facet, appSchema);\n    addTableDefinition('ObjectPageResponsiveTableWithInlineDelete', facetKey, facet, appSchema);\n    addTableDefinition('ObjectPageGridTable', facetKey, facet, appSchema);\n    addTableDefinition('ObjectPageTreeTable', facetKey, facet, appSchema);\n    addTableDefinition('ObjectPageAnalyticalTable', facetKey, facet, appSchema);\n\n    let customColumnDefinitionKey;\n    // Find target entity\n    const targetEntitySet = determineEntitySetOfEntityType(facet.entityType, generateParameters.serviceAVT);\n    if (targetEntitySet) {\n        // Make sure that custom columns definitions are created for passed entity\n        customColumnDefinitionKey = ensureCustomColumnDefinitionExists(\n            appSchema,\n            generateParameters.manifest,\n            targetEntitySet.name,\n            facet.entityType.name,\n            generateParameters.serviceAVT,\n            facet,\n            facetKey,\n            generateParameters.fragments\n        );\n    }\n    for (const facetItem in facets) {\n        if (facets[facetItem].base === FacetBase.LineItem && facetItem.includes(navigationProperty)) {\n            addLineItemsType(\n                appSchema,\n                facets[facetItem].target as AnnotationTerm<LineItem>,\n                facets[facetItem].entityType,\n                facetItem,\n                customColumnDefinitionKey\n            );\n        }\n    }\n}\n\n/**\n * Adds definitions for subsections in object page sections to the app schema\n * @param {Definition} appSchema - app schema in general\n * @param {string} definitionKey - key of app schema definition to be filled\n * @param {FacetConfig} facet facet or section information\n * @param {string} facetId - key of the facet, as listed in FacetConfigs\n * @param {SectionTypeV2} sectionType (sub)section type\n */\nfunction handleSubSection(\n    appSchema: Definition,\n    definitionKey: string,\n    facet: FacetConfig,\n    facetId: string,\n    sectionType: SectionTypeV2,\n    isHeaderFacet = false\n): void {\n    appSchema.definitions[definitionKey] = createDefaultSection(appSchema, facet, facetId);\n    const appSchemaSection = appSchema.definitions[definitionKey] as Definition;\n    const sectionDefinition = isHeaderFacet ? SectionTypeV2.HeaderSection : SectionTypeV2.SubSection;\n    addAppSchemaDefinition(appSchema, appSchemaSection, sectionType, sectionDefinition);\n    appSchemaSection.properties.subsections = {\n        type: 'object',\n        description: 'Subsections',\n        properties: {},\n        additionalProperties: false\n    };\n    appSchemaSection.properties.subsections[SchemaTag.isViewNode] = true;\n}\n\n/**\n * Method fills new chart section with properties.\n * @param {Definition} appSchema App schema in general\n * @param {string} definitionKey - key of app schema definition to be filled\n * @param {FacetConfig} facet facet or section information\n * @param {string} facetKey - facet key.\n * @param {SectionTypeV2} sectionType (sub)section type\n */\nfunction handleSectionChart(\n    appSchema: Definition,\n    definitionKey: string,\n    facet: FacetConfig,\n    facetKey: string,\n    sectionType: SectionTypeV2\n) {\n    appSchema.definitions[definitionKey] = createDefaultSection(appSchema, facet, facetKey);\n    const appSchemaSection = appSchema.definitions[definitionKey] as Definition;\n    addAppSchemaDefinition(appSchema, appSchemaSection, sectionType, SectionTypeV2.SectionChart);\n}\n/**\n * Method fills new header section with properties.\n * @param {Definition} appSchema App schema in general\n * @param {string} definitionKey - key of app schema definition to be filled\n * @param {FacetConfig} facet facet or section information\n * @param {string} facetKey - facet key.\n * @param {SectionTypeV2} sectionType (sub)section type\n */\nfunction handleHeaderFacet(\n    appSchema: Definition,\n    definitionKey: string,\n    facet: FacetConfig,\n    facetKey: string,\n    sectionType: SectionTypeV2,\n    facetDefinition?: SectionTypeV2\n) {\n    appSchema.definitions[definitionKey] = createDefaultSection(appSchema, facet, facetKey);\n    const appSchemaSection = appSchema.definitions[definitionKey] as Definition;\n    addAppSchemaDefinition(\n        appSchema,\n        appSchemaSection,\n        sectionType,\n        facetDefinition || SectionTypeV2.CommonHeaderFacetSettings\n    );\n    appSchemaSection[SchemaTag.annotationPath] = facet.annotationPath;\n    appSchemaSection[SchemaTag.isViewNode] = true;\n    appSchemaSection[SchemaTag.dataType] = determineDataTypeOfTarget(facet?.target);\n}\n\nfunction addDataPointHeaderFacetDataType(appSchema: Definition, definitionKey: string, facet: FacetConfig) {\n    const appSchemaSection = appSchema.definitions[definitionKey] as Definition;\n    const dataType = (appSchemaSection[SchemaTag.dataType] = determineDataTypeOfTarget(facet?.target));\n    if (dataType === DataType.Rating) {\n        appSchemaSection.title = `${appSchemaSection.title}::RatingIndicatorVBox`;\n    } else if (dataType === DataType.Progress) {\n        appSchemaSection.title = `${appSchemaSection.title}::ProgressIndicatorVBox`;\n    } else {\n        appSchemaSection.title = `${appSchemaSection.title}::DataPoint`;\n    }\n}\n\n/**\n * Method fills new form section in app schema with properties.\n * @param {Definition} appSchema App schema in general\n * @param {string} definitionKey - key of app schema definition to be filled\n * @param {FacetConfig} facet facet or section information\n * @param {string} facetKey - facet key.\n * @param {SectionTypeV2} sectionType (sub)section type\n * @return {object} returns filled form section in app schema.\n */\nfunction handleFormSection(\n    appSchema: Definition,\n    definitionKey: string,\n    facet: FacetConfig,\n    facetKey: string,\n    sectionType: SectionTypeV2\n) {\n    appSchema.definitions[definitionKey] = createDefaultSection(appSchema, facet, facetKey);\n    const appSchemaSection = appSchema.definitions[definitionKey] as Definition;\n    addAppSchemaDefinition(appSchema, appSchemaSection, sectionType, SectionTypeV2.SectionForm);\n    appSchemaSection[SchemaTag.annotationPath] = facet.annotationPath;\n    appSchemaSection[SchemaTag.isViewNode] = true;\n    return appSchemaSection;\n}\n\n/**\n * Mapping of facet type to (sub)section type to enable correct further handling\n * @param {FacetBase} facetType - facet type to be mapped\n * @param {boolean} isSubSection - if section is subsection of section\n * @return {SectionTypeV2} sectionType (sub)section type\n */\nfunction getSectionType(facetType: FacetBase, isSubSection: boolean, isHeaderFacet: boolean) {\n    const headerSectionMap = new Map<FacetBase, SectionTypeV2>([\n        [FacetBase.CollectionFacet, SectionTypeV2.HeaderSection],\n        [FacetBase.Address, SectionTypeV2.HeaderSectionAddress],\n        [FacetBase.Chart, SectionTypeV2.HeaderSectionChart],\n        [FacetBase.DataPoint, SectionTypeV2.HeaderSectionDataPoint],\n        [FacetBase.Form, SectionTypeV2.HeaderSectionForm],\n        [FacetBase.Identification, SectionTypeV2.HeaderSectionForm]\n    ]);\n    const sectionTypeMapping = new Map<FacetBase, SectionTypeV2>([\n        [FacetBase.CollectionFacet, SectionTypeV2.Section],\n        [FacetBase.LineItem, SectionTypeV2.SectionTable],\n        [FacetBase.Chart, SectionTypeV2.SectionChart],\n        [FacetBase.Address, SectionTypeV2.SectionAddress],\n        [FacetBase.Contact, SectionTypeV2.SectionContact],\n        [FacetBase.Form, SectionTypeV2.SectionForm],\n        [FacetBase.Identification, SectionTypeV2.SectionForm]\n    ]);\n    const subSectionTypeMapping = new Map<FacetBase, SectionTypeV2>([\n        [FacetBase.CollectionFacet, SectionTypeV2.SubSection],\n        [FacetBase.LineItem, SectionTypeV2.SubSectionTable],\n        [FacetBase.Chart, SectionTypeV2.SubSectionChart],\n        [FacetBase.Address, SectionTypeV2.SubSectionAddress],\n        [FacetBase.Contact, SectionTypeV2.SubSectionContact],\n        [FacetBase.Form, SectionTypeV2.SubSectionForm],\n        [FacetBase.Identification, SectionTypeV2.SubSectionForm]\n    ]);\n    if (isHeaderFacet) {\n        return headerSectionMap.get(facetType);\n    } else if (isSubSection) {\n        return subSectionTypeMapping.get(facetType);\n    } else {\n        return sectionTypeMapping.get(facetType);\n    }\n}\n\n/**\n * Method returns reference key, special handling of (sub)sections\n * @param {FacetConfig} facet facet or section information\n * @param {string} facetKey - facet key.\n * @param {SectionTypeV2} sectionType (sub)section type\n * @return {string} reference key\n */\nfunction getReferenceKey(facet, facetKey, sectionType): string {\n    let referenceKey = facetKey;\n    if (sectionType === (SectionTypeV2.Section || SectionTypeV2.SubSection)) {\n        referenceKey = referenceKey.replace(`@${UIAnnotationTerms.Facets}`, facet.base);\n    }\n    return `${referenceKey}`;\n}\n\n/**\n * Creates a section definition in app schema.\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {FacetConfigs} facets - list of all facets.\n * @param {string} facetKey - facet key.\n * @param {object} sections - schema of current sections definition.\n * @param {Definition} appSchema - app specific schema that potentially gets enhanced.\n * @param {boolean} isSubSection - if section is subsection of section\n */\nfunction addSection(\n    generateParameters: GenerateAppSchemaParameters,\n    facets: FacetConfigs,\n    facetKey: string,\n    sections: Definition,\n    appSchema: Definition,\n    isSubSection = false,\n    isHeaderFacet = false\n): void {\n    const facet: FacetConfig = facets[facetKey];\n    const sectionType = getSectionType(facet.base, isSubSection, isHeaderFacet);\n    const referenceKey = getReferenceKey(facet, facetKey, sectionType);\n    const definitionKey = `${sectionType}<${referenceKey}>`;\n    addSectionReference(sections, referenceKey, definitionKey);\n    switch (sectionType) {\n        case SectionTypeV2.Section:\n        case SectionTypeV2.SubSection:\n        case SectionTypeV2.HeaderSection: {\n            //handle collection facets\n            isSubSection = isHeaderFacet ? false : true;\n            handleSubSection(appSchema, definitionKey, facet, facetKey, sectionType, isHeaderFacet);\n            const subSections = (appSchema.definitions[definitionKey] as Definition).properties\n                .subsections as Definition;\n            for (const key in facet.facets) {\n                addSection(generateParameters, facet.facets, key, subSections, appSchema, isSubSection, isHeaderFacet);\n            }\n            break;\n        }\n        case SectionTypeV2.SectionTable:\n        case SectionTypeV2.SubSectionTable: {\n            handleLineItem(generateParameters, facetKey, appSchema, facet, facets, sectionType);\n            //add fields for createWithParameterDialog\n            const floorplanSuffix = 'OP';\n            addFieldsType(appSchema, facet.entityType, floorplanSuffix);\n            break;\n        }\n        case SectionTypeV2.SectionChart:\n        case SectionTypeV2.SubSectionChart: {\n            //handle reference facet (if comprising chart)\n            handleSectionChart(appSchema, definitionKey, facet, facetKey, sectionType);\n            break;\n        }\n        case SectionTypeV2.SectionForm:\n        case SectionTypeV2.SubSectionForm: {\n            const appSchemaSection = handleFormSection(appSchema, definitionKey, facet, facetKey, sectionType);\n            handleForm(SectionType.Section, facet, appSchemaSection, appSchema, FioriElementsVersion.v2, facetKey);\n            break;\n        }\n        case SectionTypeV2.SectionAddress:\n        case SectionTypeV2.SectionContact: {\n            handleAddressContact(facet, facetKey, sections, appSchema, SectionType.Section, undefined, 'V2');\n            break;\n        }\n        case SectionTypeV2.SubSectionAddress:\n        case SectionTypeV2.SubSectionContact: {\n            handleAddressContact(\n                facet,\n                facetKey,\n                sections,\n                appSchema,\n                SectionType.Section,\n                SectionType.SubSection,\n                'V2'\n            );\n            break;\n        }\n        case SectionTypeV2.HeaderSectionForm:\n        case SectionTypeV2.HeaderSectionChart:\n        case SectionTypeV2.HeaderSectionAddress: {\n            handleHeaderFacet(appSchema, definitionKey, facet, facetKey, sectionType);\n            break;\n        }\n        case SectionTypeV2.HeaderSectionDataPoint: {\n            handleHeaderFacet(appSchema, definitionKey, facet, facetKey, sectionType);\n            addDataPointHeaderFacetDataType(appSchema, definitionKey, facet);\n            break;\n        }\n        default: {\n            // Other facets -> only default properties of ObjectPageSection\n            sections.properties[facetKey] = createDefaultSection(appSchema, facet, facetKey);\n        }\n    }\n}\n\n/**\n * Helper function to add facets to the app schema\n * @param facetsExists flag if facets exists and should be added\n * @param facets collection of facets\n * @param generateParameters list of API input parameters\n * @param sections sections in config to be extended\n * @param appSchema app speci\n * @param isHeaderFacet flag if facet is located in header section\n * @returns void\n */\nfunction addSectionsFromFacets(\n    facetsExists: boolean,\n    facets: FacetConfigs,\n    sections: Definition,\n    generateParameters: GenerateAppSchemaParameters,\n    appSchema: Definition,\n    isHeaderFacet = false\n) {\n    if (!facetsExists) {\n        return;\n    }\n    for (const facetKey in facets) {\n        addSection(generateParameters, facets, facetKey, sections, appSchema, false, isHeaderFacet);\n    }\n}\n\n/**\n * Adds the sections to the app schema\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {Definition} appSchema - app specific schema that potentially gets enhanced\n * @param {SapUiAppPagesV2} pages - list of (manifest) pages\n */\nfunction addSections(\n    generateParameters: GenerateAppSchemaParameters,\n    appSchema: Definition,\n    pages: v2.SapUiAppPagesV2\n): void {\n    const sections = appSchema.definitions[DefinitionName.Sections] as Definition;\n    sections[SchemaTag.isViewNode] = true;\n    if (generateParameters.entitySet?.entityType) {\n        sections[SchemaTag.annotationPath] =\n            `/${generateParameters.entitySet.entityType.fullyQualifiedName}/@${UIAnnotationTerms.Facets}`;\n    }\n    const headerSections = appSchema.definitions[DefinitionName.HeaderSections] as Definition;\n    headerSections[SchemaTag.isViewNode] = true;\n    if (!headerSections.properties) {\n        headerSections.properties = {};\n    }\n    headerSections.additionalProperties = false;\n    if (generateParameters.entitySet?.entityType) {\n        headerSections[SchemaTag.annotationPath] =\n            `/${generateParameters.entitySet.entityType.fullyQualifiedName}/@${UIAnnotationTerms.HeaderFacets}`;\n    }\n\n    if (!pages) {\n        return;\n    }\n    // Get facet annotations\n    const facets: FacetConfigs = getObjectPageFacets(\n        generateParameters.entitySet?.entityType,\n        generateParameters.serviceAVT,\n        FioriElementsVersion.v2,\n        generateParameters.logger\n    );\n    const headerFacets: FacetConfigs = getObjectPageHeaderFacets(\n        generateParameters.entitySet?.entityType,\n        generateParameters.serviceAVT,\n        FioriElementsVersion.v2,\n        generateParameters.logger\n    );\n    const generateFacets = facets && !!Object.keys(facets).length;\n    const generateHeaderFacets = headerFacets && !!Object.keys(headerFacets).length;\n    if (!generateFacets && !generateHeaderFacets) {\n        return;\n    }\n\n    // Loop on all pages, look for the right entity set\n    for (const key in pages) {\n        const element = pages[key];\n        if (generateParameters.entitySet?.name?.includes(element.entitySet)) {\n            // Loop on all facets (of the given entitySet)\n            addSectionsFromFacets(generateFacets, facets, sections, generateParameters, appSchema);\n            addSectionsFromFacets(\n                generateHeaderFacets,\n                headerFacets,\n                headerSections,\n                generateParameters,\n                appSchema,\n                true\n            );\n        } else {\n            addSections(generateParameters, appSchema, element.pages);\n        }\n    }\n\n    // Add custom sections\n    const customSections = appSchema.definitions['CustomSections'] as Definition;\n    for (const name in customSections.properties) {\n        sections.properties[name] = customSections.properties[name];\n    }\n}\n\n/**\n * Add Object Page Header to app-specific schema\n *\n * @param {object} appSchema Schema of the app\n * @param {EntitySet} entitySet - current entity set\n * @param {EntityType} entityType - current entity type\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n */\nfunction addHeader(\n    appSchema: object,\n    entitySet: EntitySet,\n    entityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata\n): void {\n    addCommonHeaderSchema(appSchema, entityType);\n\n    //Add header actions\n    addHeaderActions(appSchema, entityType, entitySet, oDataServiceAVT, addHeaderActionCallBackV2, true);\n}\n\n/**\n * Adds the related facets keys 'enum' to the app schema\n * @param schema - app specific schema that potentially gets enhanced\n * @param {EntityType} entityType - current entity type\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nfunction addRelatedFacetKeysType(\n    schema: object,\n    entityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata,\n    logger?: ExtensionLogger\n): void {\n    // Find sections from annotation\n    // And create new definition in schema as enum with description\n    const facetSections = getObjectPageFacetSection(entityType, oDataServiceAVT, logger, undefined, true);\n    if (facetSections) {\n        addDefinitionForRelatedFacetKeys(\n            schema,\n            ['ObjectPageCustomSectionFragment', 'ObjectPageCustomSectionView'],\n            facetSections,\n            ['ID', 'key']\n        );\n    }\n}\n\n/**\n * Generates an app specific schema out of the generic schema.\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param genericSchema - generic JSON schema of an object page\n *\n * @returns the app specific JSON schema\n */\nexport function generateObjectPageSchemaV2(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchema: object\n): object {\n    // Initialize i18next\n    initI18n();\n\n    const appSchema = JSON.parse(JSON.stringify(genericSchema)) as Definition;\n\n    // Custom sections as part of sections\n    const additionalSections = {};\n    for (const name in appSchema.definitions['CustomSections']['properties']) {\n        additionalSections[name] = (appSchema.definitions['CustomSections'] as Definition).properties[name];\n    }\n\n    // Change reference to generated sections\n    appSchema.properties[PropertyName.sections] = {\n        $ref: DEFINITION_LINK_PREFIX + 'Sections'\n    };\n\n    const entityType = generateParameters.entitySet?.entityType;\n    generateParameters.entityType = entityType;\n    const pages = generateParameters.manifest[ManifestSection.generic].pages;\n    if (!pages) {\n        log(generateParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOPAGES', { appId: generateParameters.manifest['sap.app']['id'] }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n        return appSchema;\n    }\n\n    // Add header\n    addHeader(appSchema, generateParameters.entitySet, entityType, generateParameters.serviceAVT);\n\n    // Add sections\n    appSchema.definitions[DefinitionName.Sections] = {\n        type: 'object',\n        properties: {},\n        description: 'Sections',\n        additionalProperties: false\n    };\n    addSections(generateParameters, appSchema, pages as v2.SapUiAppPagesV2);\n\n    // Custom section facets\n    addRelatedFacetKeysType(appSchema, entityType, generateParameters.serviceAVT, generateParameters.logger);\n\n    if (!appSchema.definitions.Sections) {\n        if (appSchema.definitions.RelatedFacetKeys && appSchema.definitions.RelatedFacetKeys['oneOf'].length) {\n            // If related facets exists - then we need sections definition\n            appSchema.definitions.Sections = {\n                type: 'object',\n                properties: additionalSections,\n                additionalProperties: false\n            };\n            appSchema.definitions.Sections[SchemaTag.isViewNode] = true;\n        } else {\n            delete appSchema.properties[PropertyName.sections];\n        }\n    }\n    addFooterActions(\n        appSchema,\n        generateParameters,\n        FioriElementsVersion.v2,\n        addFooterActionCallBackV2,\n        pages as v2.SapUiAppPagesV2\n    );\n\n    // Eliminate generic definitions\n    delete appSchema.definitions['GenericSections'];\n    delete appSchema.definitions['GenericSubSections'];\n    delete appSchema.definitions['ObjectPageSectionTableV2'];\n    delete appSchema.definitions['GenericColumns'];\n    delete appSchema.definitions['TableColumnAction'];\n    delete appSchema.definitions['CommonHeaderFacetSettings'];\n    delete appSchema.definitions['ObjectPageHeaderSection'];\n    // Currently not used\n    delete appSchema.definitions['ObjectPageCustomHeaderSectionFragment'];\n    delete appSchema.definitions['ObjectPageSectionFormV2'];\n    delete appSchema.definitions['ObjectPageSectionTableV2'];\n    delete appSchema.definitions['ObjectPageSubSectionV2'];\n    delete appSchema.definitions['ObjectPageResponsiveTableWithMultiSelect'];\n    delete appSchema.definitions['ObjectPageResponsiveTableWithInlineDelete'];\n    delete appSchema.definitions['ObjectPageAnalyticalTable'];\n    delete appSchema.definitions['ObjectPageTreeTable'];\n    delete appSchema.definitions['ObjectPageGridTable'];\n    delete appSchema.definitions['ObjectPageToolBar'];\n    delete appSchema.definitions['ObjectPageToolBarActions'];\n    delete appSchema.definitions['ObjectPageForm'];\n    delete appSchema.definitions['ObjectPageFormFields'];\n    delete appSchema.definitions['ObjectPageFormActions'];\n    delete appSchema.definitions['FieldPathOP'];\n    updatePropertyIndices(appSchema, ROOT_PROPERTIES_ORDER);\n    return appSchema;\n}\n", "import type { Definition } from 'typescript-json-schema';\nimport type { ControlTypeFunction } from '@sap/ux-specification-types';\nimport {\n    FacetBase,\n    FacetTitlePrefix,\n    BindingPropertyRegexAsString,\n    VOCWITHSLASH,\n    PropertyName\n} from '@sap/ux-specification-types';\nimport { DEFINITION_LINK_PREFIX } from '../utils';\n\n/**\n * General export rule, joining all given breadcrumbs to the base ID\n * @param baseId - base ID, first part of the stable ID\n * @param idBreadcrumbs - array of ID parts\n */\nexport const buildControlIdFromParent = (baseId: string, idBreadcrumbs: string[]): string => {\n    return baseId + idBreadcrumbs.join('::');\n};\n\n/**\n * Export rule for pages\n * @param baseId - base ID, first part of the stable ID\n * @param idBreadcrumbs - array of ID parts\n * @param breadcrumbs - array of breadcrumbs\n */\nexport const buildControlIdForPage = (baseId: string, idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    return baseId + idBreadcrumbs.join('::') + breadcrumbs[0];\n};\n\n/**\n * Converts the section id to the right string for the stable id:\n * If the corresponsing facet has ID maintained, we must take this ID. If ID is not present, take the navigation path.\n * @param sectionId - old ID that shall get converted\n * @param breadcrumbs - array of breadcrumbs\n * @param title - title from JSON schema, comprising the facet ID\n */\nexport const convertSectionId = (sectionId: string, title: string): string => {\n    let convertedSectionId: string;\n    const prefix: string = FacetTitlePrefix;\n    if (title !== undefined && title.includes(prefix)) {\n        convertedSectionId = title.split(prefix)[1];\n    } else {\n        convertedSectionId = sectionId.replace(new RegExp('/@', 'g'), '::').replace(/@com.sap/g, 'com.sap');\n    }\n    return convertedSectionId;\n};\n\nexport function escapeId(sParam: string): string {\n    /* escape all characters not allowed in stable ids with :<hexcode>\n     * as we use : as escape character, also escape :\n     */\n    return sParam.replace(/[^-A-Za-z0-9_.:]/g, function (c) {\n        const sCode = c.charCodeAt(0).toString(16);\n        return `:${sCode.length === 1 ? '0' : ''}${sCode}`;\n    });\n}\n\n/**\n * V2 - Binding Change values, will be added on object pages  */\nexport enum BindingValue {\n    Editable = '{ui>/editable}',\n    NotEditable = '{= !${ui>/editable}}'\n}\n\n/**\n * V4 - Binding Change values, will be added on object pages  */\nexport enum BindingValueV4 {\n    Editable = '{ui>/isEditable}',\n    NotEditable = '{= !${ui>/isEditable}}'\n}\n\n/**\n * Consolidates the list of id's and other breadcrumbs into one list, for finding the right stable ID for a column\n * @param idBreadcrumbs - array of ID parts\n * @param localBreadcrumbs - array of breadcrumbs\n * @param title - (section) title = facet ID\n * @returns the consolidated breadcrumbs' list\n */\nfunction mapBreadcrumbs(idBreadcrumbs: string[], localBreadcrumbs: string[], title: string) {\n    let sectionId: string;\n    idBreadcrumbs = idBreadcrumbs.map(function (item) {\n        if (item === PropertyName.sections) {\n            for (let index = 0; index < localBreadcrumbs.length; index++) {\n                const breadcrumb = localBreadcrumbs[index];\n                if (breadcrumb === PropertyName.sections) {\n                    sectionId = localBreadcrumbs[index + 1];\n                    if (sectionId.indexOf(FacetBase.LineItem) !== -1) {\n                        localBreadcrumbs[index + 1] = convertSectionId(sectionId, title) + '::Table';\n                        return localBreadcrumbs[index + 1];\n                    }\n                }\n            }\n        }\n        return item;\n    });\n    return { idBreadcrumbs };\n}\n\n/**\n * Export rule for table columns\n * @param baseId - base ID, first part of the stable ID\n * @param idBreadcrumbs - array of ID parts\n * @param breadcrumbs - array of breadcrumbs\n * @param controlType - controlType function of ecorators, not used here\n * @param title - title from JSON schema, comprising the facet ID\n */\nexport const buildColumnControlId = (\n    baseId: string,\n    idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    title: string\n): string => {\n    let tableId = 'listReport'; //default\n    const localBreadcrumbs = [...breadcrumbs];\n\n    ({ idBreadcrumbs } = mapBreadcrumbs(idBreadcrumbs, localBreadcrumbs, title));\n    if (localBreadcrumbs[0] === PropertyName.sections) {\n        tableId = localBreadcrumbs[1]\n            .replace(/::com.sap.vocabularies/g, VOCWITHSLASH)\n            .replace(/::@com.sap.vocabularies/g, VOCWITHSLASH);\n    } else if (idBreadcrumbs[0] === PropertyName.table) {\n        tableId = idBreadcrumbs[0];\n    }\n    const lastIdPart = localBreadcrumbs[localBreadcrumbs.length - 1]\n        .replace(/::com.sap.vocabularies/g, VOCWITHSLASH)\n        .replace(/::@com.sap.vocabularies/g, VOCWITHSLASH)\n        .replace('sTarget/@', 'sTarget::@')\n        .replace('/', ':2f');\n    let fullId: string;\n    const splitPoint = lastIdPart.indexOf(':::');\n    if (lastIdPart.startsWith('DataField') && splitPoint > -1) {\n        fullId = `${baseId}template:::TableColumn:::${lastIdPart.substring(\n            0,\n            splitPoint\n        )}:::sSmartTableId::${tableId.replace('::Table', ':3a:3aTable')}:::${lastIdPart.substring(splitPoint + 3)}`;\n    } else {\n        fullId = `${baseId}${idBreadcrumbs.join('::')}-${lastIdPart}`;\n    }\n    return escapeId(fullId);\n};\n\n/**\n * Split up action breadcrumb and return different parts from it\n * @param breadcrumbs - array of breadcrumbs\n * @returns {object} - actionType, semanticObjectId, actionId of action\n */\nexport const getActionBreadcrumbParts = (\n    breadcrumbs: string[]\n): { actionType: string | undefined; semanticObjectId: string | undefined; actionId: string } => {\n    const actionIdParts = breadcrumbs[breadcrumbs.length - 1].split(':::');\n    let actionType, semanticObjectId, actionId;\n    if (actionIdParts.length > 2) {\n        actionType = actionIdParts[0];\n        semanticObjectId = actionIdParts[1].split('::')[1];\n        actionId = actionIdParts[2].split('::')[1];\n    } else if (actionIdParts.length === 2) {\n        actionType = actionIdParts[0];\n        actionId = actionIdParts[1].split('sAction::')[1];\n    } else {\n        actionId = actionIdParts[0];\n    }\n    return { actionType, semanticObjectId, actionId };\n};\n\n/**\n * Determines the valid pattern for a binding change\n * @param schemaDefinition - definition in the JSON schema\n * @returns the pattern as string\n */\nfunction determinePattern(schemaDefinition: Definition): string {\n    let pattern = BindingPropertyRegexAsString;\n    if (schemaDefinition.enum) {\n        let enumPattern;\n        schemaDefinition.enum.forEach((enumValue) => {\n            if (!enumValue.toString().startsWith('{')) {\n                enumPattern = enumPattern ? `${enumPattern}|${enumValue.toString()}` : enumValue.toString();\n            }\n        });\n        pattern = `^(${enumPattern})$|${pattern}`;\n    }\n    if (schemaDefinition['type'] && schemaDefinition['type'] === 'boolean') {\n        pattern = `^(false|true)$|${pattern}`;\n    }\n    return pattern;\n}\n\n/**\n * Reuseable function for strings that allow binding changes\n * @param schema - the complete JSON schema\n * @param definition - definition in the JSON schema, to be updated\n * @param propertyName - property in the properties' list of the given definition\n * @param bindingValues - values that shall be added to the resulting enum\n */\nconst addPatternForBindingChangeOfEnum = (\n    schema: object,\n    definition: object,\n    propertyName: string,\n    bindingValues?: BindingValue[] | BindingValueV4[]\n): void => {\n    const propertyList = definition && definition['properties'];\n    if (propertyList[propertyName].pattern) {\n        return; //as already processed\n    }\n    const originalDefinition = propertyList[propertyName];\n    let resultDefinition = originalDefinition;\n    const targetDefinition = originalDefinition.$ref\n        ? schema['definitions'][originalDefinition.$ref.split(DEFINITION_LINK_PREFIX)[1]]\n        : originalDefinition;\n    const description = originalDefinition.description ? originalDefinition.description : targetDefinition.description;\n    const pattern = determinePattern(targetDefinition);\n    if (targetDefinition['type'] && targetDefinition['type'] === 'boolean') {\n        //Always an enum, always with more than one value\n        resultDefinition = { enum: [false, true] };\n    }\n    if (bindingValues && resultDefinition['enum']) {\n        bindingValues.forEach((value) => {\n            if (resultDefinition['enum'].indexOf(value) === -1) {\n                resultDefinition['enum'].push(value);\n            }\n        });\n    }\n    propertyList[propertyName] = {\n        pattern: pattern,\n        anyOf: [\n            resultDefinition,\n            {\n                type: 'string'\n            }\n        ]\n    };\n    if (description) {\n        propertyList[propertyName].description = description;\n        delete originalDefinition.description;\n    }\n};\n\nexport const addPatternForBindingChangeOfEnumLR = (schema: object, definition: object, propertyName: string): void => {\n    addPatternForBindingChangeOfEnum(schema, definition, propertyName);\n};\n\nexport const addPatternForBindingChangeOfEnumOP = (schema: object, definition: object, propertyName: string): void => {\n    const bindingValues = Object.values(BindingValue);\n    addPatternForBindingChangeOfEnum(schema, definition, propertyName, bindingValues);\n};\n\nexport const addPatternForBindingChangeOfEnumOPV4 = (\n    schema: object,\n    definition: object,\n    propertyName: string\n): void => {\n    const bindingValues = Object.values(BindingValueV4);\n    addPatternForBindingChangeOfEnum(schema, definition, propertyName, bindingValues);\n};\n\n/**\n * sync rule for preventing the deletion of a property\n */\nexport function doNotDelete(): void {\n    return;\n}\n", "import 'reflect-metadata';\nimport type { SyncRule, PageLayoutInformation, ValidityInformation } from '@sap/ux-specification-types';\n\nexport const reflectMetadataKey = Symbol('specificationMetadataKey');\nexport const syncRule = (propSpec: SyncRule): any => {\n    return Reflect.metadata(reflectMetadataKey, propSpec);\n};\n\nexport function getReflectMetadata(target: object, propertyName: string): SyncRule | undefined {\n    let rule: SyncRule;\n    if (target) {\n        rule = Reflect.getMetadata(reflectMetadataKey, target, propertyName);\n    }\n    return rule;\n}\n\nexport const pageLayoutInformation =\n    (pageInfo: PageLayoutInformation) =>\n    (constructor: Function): void => {\n        constructor.prototype.pageLayoutInformation = pageInfo;\n    };\n\nconst childIdKey = Symbol('childId');\nexport const childId = (id: string): any => {\n    return Reflect.metadata(childIdKey, id);\n};\n\nexport const getChildId = (target: any, propertyName: string): string => {\n    return Reflect.getMetadata(childIdKey, target, propertyName);\n};\n\nexport const getPageLayoutInformation = (target: any): PageLayoutInformation => {\n    return Object.getPrototypeOf(target).pageLayoutInformation;\n};\n\n/*\n * Validity decorator and functions for it\n */\n\nexport const validityMetadataKey = Symbol('validityMetadataKey');\nexport const validity = (propSpec: ValidityInformation): any => {\n    return Reflect.metadata(validityMetadataKey, propSpec);\n};\n\nexport function getTextForDeprecated(key: string, validityInformation?: ValidityInformation): string {\n    let text = `${key} is deprecated`;\n    if (validityInformation && validityInformation.deprecated) {\n        text = validityInformation.deprecated.since ? `${text} since ${validityInformation.deprecated.since}` : text;\n        text = validityInformation.deprecated.text ? `${text}. ${validityInformation.deprecated.text}` : text;\n    }\n\n    return text;\n}\n", "import type {\n    Manifest,\n    UI5Version,\n    ChangeDefinition,\n    ChangeDefinitionInCreation,\n    SyncRule\n} from '@sap/ux-specification-types';\nimport * as flexUtils from '@ui5/flexibility-utils';\nimport { FlexChangeLayer } from '@sap/ux-specification-types';\n\nconst changesUtils = flexUtils.default.change;\n\nconst defaultValues = {\n    isCustomer: false,\n    sapui5Version: ' ', // UI5 version should be set via exportConfig(). This is the fallback in case it's missing\n    creatingTool: 'SAPFioriTools',\n    type: 'propertyChange'\n};\n\n/**\n * Create a change as string (calls changeUtils from ui5-flexibility-utils)\n * @param change - properties required to create the change\n * @param manifest - the manifest.json file\n */\nexport function createChangeString(change: ChangeDefinitionInCreation, manifest: Manifest): string {\n    let changeString = '';\n    try {\n        for (const defaultValue in defaultValues) {\n            if (change[defaultValue] === undefined) {\n                change[defaultValue] = defaultValues[defaultValue];\n            }\n        }\n        changeString = changesUtils.createChangeString(change, manifest);\n    } catch (error) {\n        console.error(`Error while create flex change.`, error);\n    }\n    return changeString;\n}\n\n/**\n * Parse string and return the change as object (calls changeUtils from ui5-flexibility-utils)\n * @param changeString - string with serialized change\n */\nexport function parseChangeString(changeString: string): ChangeDefinition | boolean {\n    try {\n        return changesUtils.parse(changeString);\n    } catch (error) {\n        return false;\n    }\n}\n\n/**\n * Creates a flex change based on the given config information\n * @param configObject - current (sub)object of the configuration file\n * @param breadcrumbs - list of breadcrumbs, i.e. ID parts for building the stable ID\n * @param syncRule - export rule from the object classes decorator\n * @param ui5Version - SAP UI5 version\n * @param baseId - selector id of the current page\n * @param ids - list of parent & child ids\n * @param title - title from the app schema (comprising for instance the facet ID)\n * @param key - key of the given property\n * @param layer - layer\n * @returns {ChangeDefinitionInCreation} - the newly created flex change\n */\nexport function fillFlexChangeContent(\n    configObject: object,\n    syncRule: SyncRule,\n    ui5Version: UI5Version,\n    key: string,\n    controlId: string\n): ChangeDefinitionInCreation {\n    const isCustomer = ui5Version.layer ? ui5Version.layer === FlexChangeLayer.Customer : true;\n\n    const flexChange: ChangeDefinitionInCreation = {\n        controlId, //syncRule.flex.controlId(baseId, ids, breadcrumbs, syncRule.flex.controlType, title),\n        controlType: syncRule.flex.controlType(),\n        content: {\n            property: key\n        },\n        sapui5Version: ui5Version.ui5Version,\n        isCustomer\n    };\n    if (configObject[key] !== undefined) {\n        if (syncRule.flex.exportFlexValue) {\n            syncRule.flex.exportFlexValue(flexChange, configObject, key);\n        } else if (configObject[key].toString().startsWith('{')) {\n            flexChange.content.newBinding = configObject[key];\n            flexChange.type = 'propertyBindingChange';\n        } else {\n            flexChange.content.newValue = configObject[key];\n        }\n    } else {\n        flexChange.content.newValue = null;\n    }\n    return flexChange;\n}\n", "import { createChangeString } from '../flexUtils';\nimport type { Manifest, ChangeDefinitionInCreation } from '@sap/ux-specification-types';\n\nexport function exportToFlexChange(change: ChangeDefinitionInCreation, manifest: Manifest): string {\n    return createChangeString(change, manifest);\n}\n", "import { DEFINITION_LINK_PREFIX, getTextForDeprecated } from '../';\nimport { log } from '../../../extensionLogger';\nimport type { Definition } from 'typescript-json-schema';\nimport type { SyncRule, DeprecatedProperties, ExtensionLogger } from '@sap/ux-specification-types/dist';\nimport { LogSeverity, FacetTitlePrefix, DefinitionName } from '@sap/ux-specification-types/dist';\n\n/**\n * Transfers the value of a single manifest setting to the config\n * @param syncRule - Metadata rule\n * @param manifestSection - Section in manifest.json\n * @param propertyKey - Key of the property or setting\n * @param configPart - Part of the config JSON\n * @param sectionId - Section or facet ID\n * @param breadcrumbs - list of breadcrumbs or id's describing the keys of all hierarchy levels\n */\nexport function importProperty(\n    syncRule: SyncRule,\n    manifestSection: {},\n    propertyKey: string,\n    configPart: { [key: string]: any },\n    sectionId?: string,\n    breadcrumbs?: string[]\n): void {\n    const manifestKey = syncRule.manifest.key || propertyKey;\n    const importHandler = syncRule.manifest.import;\n    if (importHandler && typeof importHandler === 'function') {\n        const value = importHandler(manifestSection, sectionId, propertyKey, breadcrumbs);\n        if (value !== undefined) {\n            configPart[propertyKey] = value;\n        }\n    } else if (manifestSection[manifestKey] !== undefined) {\n        configPart[propertyKey] = manifestSection[manifestKey];\n    }\n}\n\n/**\n * Validation during import: check if properties are marked as deprecated.\n * If so, log them.\n * @param deprecatedProperties - existing list, to be actualized\n * @param manifestSection - Section in manifest.json\n * @param path - path to the section in manifest\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nexport function checkDeprecatedProperties(\n    deprecatedProperties: DeprecatedProperties | undefined,\n    manifestSection: {},\n    path: string,\n    logger?: ExtensionLogger\n): void {\n    if (manifestSection && deprecatedProperties) {\n        for (const key in manifestSection) {\n            const deprecated = deprecatedProperties[key];\n            if (deprecated) {\n                log(logger, {\n                    severity: LogSeverity.Warning,\n                    message: getTextForDeprecated(key, deprecated),\n                    location: {\n                        path: 'webapp/manifest.json/',\n                        range: path.split('/')\n                    }\n                });\n                delete deprecatedProperties[key];\n            }\n        }\n    }\n}\n\n/**\n * Determines the title of a section representation in the app schema, main aspect is checking the facet ID\n * @param schemaSection - Section in manifest.json\n * @param jsonSchema - app specific schema\n */\nexport function getSectionTitle(schemaSection: Definition, jsonSchema: Definition): string | undefined {\n    if (schemaSection.$ref && !schemaSection.title) {\n        const refTitle = jsonSchema.definitions[schemaSection.$ref.split(DEFINITION_LINK_PREFIX)[1]] as Definition;\n        return getSectionTitle(refTitle, jsonSchema);\n    } else if (schemaSection.title) {\n        if (schemaSection.title.startsWith(FacetTitlePrefix)) {\n            return schemaSection.title.split(FacetTitlePrefix)[1].replace(/com.sap/g, '@com.sap');\n        } else {\n            return schemaSection.title.replace(/com.sap/g, '@com.sap');\n        }\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Method returns target by resolving custom column reference name.\n * For example - 'TableCustomColumns<dummyTarget>' is resolved as 'dummyTarget'.\n * @param {string} ref Reference key.\n * @returns {string | undefined} Resolved target.\n */\nexport function getTargetFromCustomColumnRef(ref: string): string | undefined {\n    const refParts = ref.split(`${DefinitionName.CustomColumns}<`);\n    if (refParts[1]) {\n        return refParts[1].split('>')[0];\n    }\n    return undefined;\n}\n\n/**\n * Removes part of a given config, if empty\n * @param {object} config - config part\n * @param {string} structure - part of config to be removed\n */\nexport function removeEmptyStructure(config: object, structure: string): void {\n    if (!config[structure]) {\n        return;\n    }\n    if (Object.keys(config[structure]).length < 1) {\n        delete config[structure];\n    }\n}\n", "import type { ConvertedMetadata, EntitySet, EntityType } from '@sap-ux/vocabularies-types';\nimport type { DataFieldAbstractTypes, DataFieldForAnnotation } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { UIAnnotationTerms, UIAnnotationTypes } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { getStableIdPartFromDataField } from '../../v4/utils/StableIdHelper';\nimport type { FacetConfig, GenerateAppSchemaParameters, SchemaDefinition } from '@sap/ux-specification-types';\nimport {\n    DefinitionName,\n    FacetBase,\n    FioriElementsVersion,\n    PropertyName,\n    SchemaKeyName,\n    SchemaTag,\n    SectionType,\n    UIVOCABULARY,\n    v2\n} from '@sap/ux-specification-types';\nimport {\n    DEFINITION_LINK_PREFIX,\n    getDataFieldDescription,\n    createAnnotationPath,\n    findAlias,\n    prepareRef,\n    addDataTypeToDefinition,\n    replaceNamespaces\n} from '..';\nimport type { Definition } from 'typescript-json-schema';\nimport { addStandardFooterActionsOP, addStandardHeaderActions, isDraftEnabled } from '../../v2/generate/utils';\n\ntype DefinitionsProperties = { [key: string]: SchemaDefinition };\n\ninterface FieldsContainerSchema {\n    fields?: DefinitionsProperties;\n    actions?: DefinitionsProperties;\n}\n\n/**\n * Copies the field properties from the generic definition to the specific field definition\n * @param {FioriElementsVersion} version - Fiori Elements version\n * @param {Definition} appSchema - App schema in general\n * @param {DataFieldAbstractTypes} field - field definition in parser output (AVT)\n * @param {string} fieldDefinition - the unique ID for the given field definition\n */\nfunction copyFieldProperties(\n    version: FioriElementsVersion,\n    appSchema: Definition,\n    field: DataFieldAbstractTypes,\n    fieldDefinition: string\n) {\n    if (version === FioriElementsVersion.v4 && appSchema['definitions']['Field']) {\n        switch (field.$Type) {\n            case UIAnnotationTypes.DataField:\n            case UIAnnotationTypes.DataFieldForAnnotation:\n            case UIAnnotationTypes.DataFieldWithNavigationPath:\n            case UIAnnotationTypes.DataFieldWithUrl: {\n                (appSchema.definitions[fieldDefinition] as Definition).properties =\n                    appSchema.definitions.Field['properties'];\n                break;\n            }\n        }\n    } else if (version === FioriElementsVersion.v2 && appSchema['definitions']['Field']) {\n        switch (field.$Type) {\n            case UIAnnotationTypes.DataField:\n            case UIAnnotationTypes.DataFieldForAnnotation:\n            case UIAnnotationTypes.DataFieldWithUrl: {\n                (appSchema.definitions[fieldDefinition] as Definition).properties =\n                    appSchema.definitions.Field['properties'];\n                break;\n            }\n        }\n    }\n}\n\n/**\n * Determines the name for a field definition in app schema\n * @param {FioriElementsVersion} version - Fiori Elements version\n * @param fieldReferenceId - the stable ID representation of the field\n * @param {string} targetID - unique ID, identifies the parent object (form)\n * @param fieldReference - the reference to the field definition in schema\n * @returns the field definition name in schema\n */\nfunction determineFieldDefinitionName(\n    version: FioriElementsVersion,\n    fieldReferenceId: string,\n    targetID: string,\n    fieldReference: string\n): string {\n    const fieldReferenceType =\n        version === FioriElementsVersion.v2 && fieldReferenceId && fieldReferenceId.includes('::')\n            ? fieldReferenceId.split('::')[0].replace('DataField', 'Field')\n            : undefined;\n    if (version === FioriElementsVersion.v2) {\n        return `${fieldReferenceType}<${targetID}::${fieldReference}>`;\n    } else {\n        return `${targetID}::${fieldReference}`;\n    }\n}\n\n/**\n * Add the keys and target tag for Datafield\n * @param field - the given field definition\n * @param appSchema - the app schema to be updated\n * @param schemaKeyOfField - key for the given field in the app schema\n */\nfunction addKeysTagForDataField(field, appSchema: Definition, schemaKeyOfField: string) {\n    if (typeof field.Value !== 'string' && field.Value.type === 'Path') {\n        appSchema.definitions[schemaKeyOfField][SchemaTag.keys] = [\n            {\n                name: 'Value',\n                value: field.Value.path\n            }\n        ];\n        appSchema.definitions[schemaKeyOfField][SchemaTag.target] = field.Value.$target\n            ? field.Value.$target.fullyQualifiedName.split('/')[0]\n            : field.Value.path;\n    } else if (typeof field.Value === 'string' && field.Value) {\n        appSchema.definitions[schemaKeyOfField][SchemaTag.keys] = [\n            {\n                name: 'Value',\n                value: field.Value\n            }\n        ];\n        appSchema.definitions[schemaKeyOfField][SchemaTag.target] = field.fullyQualifiedName.split('@')[0];\n    }\n}\n\n/**\n * Adds the \"keys\" tag to a field definition in schema\n * @param field - the given field definition\n * @param appSchema - the app schema to be updated\n * @param schemaKeyOfField - key for the given field in the app schema\n */\nfunction addKeysTagToField(field: DataFieldAbstractTypes, appSchema: Definition, schemaKeyOfField: string) {\n    if (\n        field.$Type === UIAnnotationTypes.DataField ||\n        field.$Type === UIAnnotationTypes.DataFieldWithUrl ||\n        field.$Type === UIAnnotationTypes.DataFieldWithNavigationPath\n    ) {\n        addKeysTagForDataField(field, appSchema, schemaKeyOfField);\n    } else if (field.$Type === UIAnnotationTypes.DataFieldForAnnotation) {\n        appSchema.definitions[schemaKeyOfField][SchemaTag.keys] = [\n            {\n                name: 'Target',\n                value: replaceNamespaces(field.Target.value)\n            }\n        ];\n        appSchema.definitions[schemaKeyOfField][SchemaTag.target] =\n            field.Target.$target.fullyQualifiedName.split('@')[0];\n    } else if (field.$Type === UIAnnotationTypes.DataFieldForAction) {\n        const separator = field.Action.lastIndexOf('.');\n        if (separator === -1) {\n            appSchema.definitions[schemaKeyOfField][SchemaTag.keys] = [\n                {\n                    name: 'Action',\n                    value: field.Action\n                }\n            ];\n        } else {\n            appSchema.definitions[schemaKeyOfField][SchemaTag.keys] = [\n                {\n                    name: 'Action',\n                    value: field.Action.substring(separator + 1, field.Action.length)\n                }\n            ];\n            appSchema.definitions[schemaKeyOfField][SchemaTag.target] = field.Action.substring(0, separator);\n        }\n    } else if (field.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation) {\n        appSchema.definitions[schemaKeyOfField][SchemaTag.keys] = [\n            {\n                name: SchemaKeyName.semanticObject,\n                value: field.SemanticObject\n            }\n        ];\n        if (field.Action) {\n            appSchema.definitions[schemaKeyOfField][SchemaTag.keys].push({\n                name: 'Action',\n                value: field.Action\n            });\n        }\n        appSchema.definitions[schemaKeyOfField][SchemaTag.target] = field.fullyQualifiedName.split('@')[0];\n    }\n}\n\n/**\n * Method checks if passed field is connected field.\n * @param field Field to check.\n * @returns True if passed field's target is ConnectedFieldsType.\n */\nfunction isConnectedField(field: DataFieldAbstractTypes): field is DataFieldForAnnotation {\n    return (\n        field.$Type === UIAnnotationTypes.DataFieldForAnnotation &&\n        field.Target?.$target?.$Type === UIAnnotationTypes.ConnectedFieldsType\n    );\n}\n\n/**\n * Method stores connected fields into schema definitions.\n * @param {SectionType} sectionType - prefix to distinguish Section and HeaderSection\n * @param {Definition} appSchema - App schema in general\n * @param {DataFieldAbstractTypes} field - field definition in parser output (AVT)\n * @param {FacetConfig} section - current section of the object page\n * @param {FioriElementsVersion} version - Fiori Elements version\n * @returns Resolved connected fields with reference to stored schema definitions.\n */\nfunction addConnectedFields(\n    sectionType: SectionType,\n    appSchema: Definition,\n    field: DataFieldForAnnotation,\n    section: FacetConfig,\n    version: FioriElementsVersion\n): DefinitionsProperties {\n    const target = field.Target.$target;\n    const properties: DefinitionsProperties = {};\n    if (target.$Type === UIAnnotationTypes.ConnectedFieldsType) {\n        const template = target.Template || '';\n        const templateParts = template.match(/(?<=\\{)[^}{]*(?=\\})/g) || [];\n        const targetData = target.Data;\n        // Maintain fallback index which should be used for fields which are not listed in 'Template'\n        let fallbackIndex = templateParts.length;\n        for (const innerKey in targetData) {\n            const innerField = targetData[innerKey];\n            if (typeof innerField === 'object' && '$Type' in innerField) {\n                let index = templateParts.findIndex((templateKey) => templateKey === innerKey);\n                if (index === -1) {\n                    index = fallbackIndex;\n                    fallbackIndex++;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                addField(\n                    sectionType,\n                    appSchema,\n                    innerField,\n                    `ConnectedFields::${target.qualifier}`,\n                    index.toString(),\n                    section,\n                    version,\n                    undefined,\n                    {\n                        actions: properties,\n                        fields: properties\n                    },\n                    target.fullyQualifiedName.split('@')[0]\n                );\n            }\n        }\n    }\n    return properties;\n}\n\n/**\n * Method returns schema container properties where to store fields.\n * @param {Definition} appSchema - App schema in general\n * @param {string} ref - Container reference id.\n * @param {DefinitionsProperties} [properties] - Preferable container properties to use.\n * @returns Schema container properties where to store fields.\n */\nfunction getFieldsSchemaContainer(\n    appSchema: Definition,\n    ref: string,\n    properties?: DefinitionsProperties\n): DefinitionsProperties {\n    if (properties) {\n        return properties;\n    }\n    const fieldsDefinition = prepareRef(ref);\n    return appSchema.definitions[fieldsDefinition]['properties'];\n}\n\n/**\n * Adds a field definition to the app specific schema\n * @param {SectionType} sectionType - prefix to distinguish Section and HeaderSection\n * @param {Definition} appSchema - App schema in general\n * @param {DataFieldAbstractTypes} field - field definition in parser output (AVT)\n * @param {string} targetID - unique ID, identifies the parent object (form)\n * @param {string} key - current field key\n * @param {FacetConfig} section - current section of the object page\n * @param {FioriElementsVersion} version - Fiori Elements version\n * @param {boolean} [withActions=true] - Fields with actions\n * @param {FieldsContainerSchema} containersSchema - Schema definitions to store fields and actions.\n * @param {string} [entityTypeName=section.entityType.fullyQualifiedNam] - Entity type name for annotation path resoluton.\n */\nfunction addField(\n    sectionType: SectionType,\n    appSchema: Definition,\n    field: DataFieldAbstractTypes,\n    targetID: string,\n    key: string,\n    section: FacetConfig,\n    version: FioriElementsVersion,\n    withActions = true,\n    containersSchema: FieldsContainerSchema = {},\n    entityTypeName = section.entityType.fullyQualifiedName\n): void {\n    // Calculate field reference\n    const fieldReferenceId = getStableIdPartFromDataField(field);\n    const fieldReference =\n        version === FioriElementsVersion.v2 && fieldReferenceId && fieldReferenceId.includes('::')\n            ? fieldReferenceId.split('::').splice(1).join('::')\n            : fieldReferenceId;\n    // Determine field definition name\n    const schemaKeyOfField = determineFieldDefinitionName(version, fieldReferenceId, targetID, fieldReference);\n    // Field properties\n    let properties: DefinitionsProperties = {};\n    // Evaluate field type, set field reference of properties of fields' or actions' definition\n    if (!field || !field.$Type) {\n        return;\n    } else if (\n        field.$Type === UIAnnotationTypes.DataFieldForAction ||\n        field.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation\n    ) {\n        if (withActions && sectionType === SectionType.Section) {\n            const actionsProperties = getFieldsSchemaContainer(\n                appSchema,\n                `${sectionType}${DefinitionName.Actions}<${targetID}>`,\n                containersSchema.actions\n            );\n            const fieldInSchema = (actionsProperties[fieldReference] = {\n                $ref: `${DEFINITION_LINK_PREFIX}${schemaKeyOfField}`\n            });\n            fieldInSchema[SchemaTag.propertyIndex] = parseInt(key);\n        }\n    } else {\n        const fieldsProperties = getFieldsSchemaContainer(\n            appSchema,\n            `${sectionType}${DefinitionName.Fields}<${targetID}>`,\n            containersSchema.fields\n        );\n        fieldsProperties[fieldReference] = {\n            $ref: `${DEFINITION_LINK_PREFIX}${schemaKeyOfField}`,\n            propertyIndex: parseInt(key)\n        };\n        if (isConnectedField(field)) {\n            // Populate connected fields\n            properties = addConnectedFields(sectionType, appSchema, field, section, version);\n        }\n    }\n    // Now set up the field definition\n    appSchema.definitions[schemaKeyOfField] = {\n        type: 'object',\n        properties,\n        description: getDataFieldDescription(field, section.entityType),\n        additionalProperties: false\n    };\n    //Add tags\n    addKeysTagToField(field, appSchema, schemaKeyOfField);\n    appSchema.definitions[schemaKeyOfField][SchemaTag.annotationPath] = `/${entityTypeName}/${\n        field.fullyQualifiedName.split(entityTypeName)[1]\n    }`;\n    appSchema.definitions[schemaKeyOfField][SchemaTag.annotationType] = field.$Type;\n    appSchema.definitions[schemaKeyOfField][SchemaTag.isViewNode] = true;\n\n    addDataTypeToDefinition(appSchema.definitions[schemaKeyOfField] as Definition, field);\n\n    // Copy the generic definition of field properties to the specific one\n    copyFieldProperties(version, appSchema, field, schemaKeyOfField);\n    if (field.$Type === UIAnnotationTypes.DataFieldForAction && appSchema.definitions?.['FormAction']) {\n        (appSchema.definitions[schemaKeyOfField] as Definition).$ref =\n            `${DEFINITION_LINK_PREFIX}${DefinitionName.FormAction}`;\n        delete (appSchema.definitions[schemaKeyOfField] as Definition).properties;\n    }\n}\n\n/**\n * The function determines the target ID that shall be used in the app schema for a form\n * @param section - object describing the section or facet\n * @returns the target ID (string)\n */\nfunction determineTargetIdOfForm(section: FacetConfig) {\n    let targetID: string;\n    if (section.target && section.target['qualifier'] && section.entityType) {\n        targetID = `${section.entityType.name}::${section.base}::${section.target['qualifier']}`;\n    } else if (section.entityType) {\n        targetID = `${section.entityType.name}::${section.base}`;\n    } else {\n        targetID = section.ID;\n    }\n    return targetID;\n}\n\n/**\n * Adds the specific definitions of the form fields to a schema\n * @param {FacetConfig} section - section definition, as prepared from the annotations\n * @param {SectionType} sectionType - prefix to distinguish Section and HeaderSection\n * @param {object} appSchema - app specific schema that gets enhanced\n * @param {string } targetID - target id of form\n * @param {FioriElementsVersion} version - Fiori Elements version\n * @param {boolean} withActions - indicates that actions shall be considered\n */\nfunction addFieldsToFormDefinition(\n    section: FacetConfig,\n    sectionType: SectionType,\n    appSchema: Definition,\n    targetID: string,\n    version: FioriElementsVersion,\n    withActions: boolean\n) {\n    if (section.base === FacetBase.Identification) {\n        for (const key in section.target) {\n            const field = section.target[key];\n            if (field) {\n                addField(sectionType, appSchema, field, targetID, key, section, version, withActions);\n            }\n        }\n    } else {\n        for (const key in section.target['Data']) {\n            const field = section.target['Data'][key];\n            addField(sectionType, appSchema, field, targetID, key, section, version);\n        }\n    }\n}\n\n/**\n * Adds the schema tags for a form definition\n * @param {FacetConfig} section - section definition, as prepared from the annotations\n * @param {object} appSchema - app specific schema that gets enhanced\n * @param {string} formDefinitionKey - key of the form definition in schema\n */\nfunction addTagsToFormDefinition(section: FacetConfig, appSchema: Definition, formDefinitionKey: string) {\n    if (section.target) {\n        const targetValue = section.target['qualifier']\n            ? `${section.target['term']}#${section.target['qualifier']}`\n            : `${section.target['term']}`;\n        appSchema.definitions[formDefinitionKey][SchemaTag.keys] = [\n            {\n                name: SchemaKeyName.target,\n                value: targetValue.replace(/com.sap.vocabularies.UI.v1./g, '')\n            }\n        ];\n        appSchema.definitions[formDefinitionKey][SchemaTag.target] =\n            section.target['fullyQualifiedName']?.split('@')[0];\n    }\n    appSchema.definitions[formDefinitionKey][SchemaTag.isViewNode] = true;\n\n    if (section.entityType?.name) {\n        appSchema.definitions[formDefinitionKey][SchemaTag.annotationPath] = createAnnotationPath(\n            section.entityType.fullyQualifiedName,\n            section.target['term'],\n            section.target['qualifier']\n        );\n    }\n}\n\n/**\n * Adds definitions for forms in object page sections to the app schema\n * @param {SectionType} sectionType - prefix to distinguish Section and HeaderSection\n * @param {FacetConfig} section - section definition, as prepared from the annotations\n * @param {object} appSchemaSection - current definition of facet or section in the JSON schema\n * @param {object} appSchema - app specific schema that gets enhanced\n * @param {FioriElementsVersion} version - Fiori Elements version\n * @param {string} facetKey - facet key\n * @returns {string | undefined} target id of form\n */\nexport function handleForm(\n    sectionType: SectionType,\n    section: FacetConfig,\n    appSchemaSection: Definition,\n    appSchema: Definition,\n    version: FioriElementsVersion,\n    facetKey: string\n): string | undefined {\n    if (!section.target) {\n        return;\n    }\n    const targetID: string = determineTargetIdOfForm(section);\n    const formDefinitionKey = prepareRef(`${sectionType}${DefinitionName.Form}<${targetID}>`);\n    const fieldsDefinitionKey = prepareRef(`${sectionType}${DefinitionName.Fields}<${targetID}>`);\n    const actionsDefinitionKey = prepareRef(`${sectionType}${DefinitionName.Actions}<${targetID}>`);\n    const withActions = section.base === FacetBase.Identification && facetKey.indexOf('#') < 0 ? false : true;\n\n    // Form definition\n    appSchemaSection.properties.form = { $ref: `${DEFINITION_LINK_PREFIX}${formDefinitionKey}` };\n\n    if (sectionType === SectionType.Section && withActions) {\n        appSchema.definitions[formDefinitionKey] = {\n            type: 'object',\n            properties: {\n                actions: {\n                    $ref: `${DEFINITION_LINK_PREFIX}${actionsDefinitionKey}`\n                },\n                fields: { $ref: `${DEFINITION_LINK_PREFIX}${fieldsDefinitionKey}` }\n            },\n            description: 'Form',\n            additionalProperties: false\n        };\n        appSchema.definitions[actionsDefinitionKey] = {\n            type: 'object',\n            properties: {},\n            description: 'Actions',\n            additionalProperties: false\n        };\n        appSchema.definitions[actionsDefinitionKey][SchemaTag.isViewNode] = true;\n    } else {\n        appSchema.definitions[formDefinitionKey] = {\n            type: 'object',\n            properties: {\n                fields: { $ref: `${DEFINITION_LINK_PREFIX}${fieldsDefinitionKey}` }\n            },\n            description: 'Form',\n            additionalProperties: false\n        };\n    }\n    //Add schema tags\n    addTagsToFormDefinition(section, appSchema, formDefinitionKey);\n\n    // Fields definition\n    appSchema.definitions[fieldsDefinitionKey] = {\n        type: 'object',\n        properties: {},\n        description: 'Fields',\n        additionalProperties: false\n    };\n    appSchema.definitions[fieldsDefinitionKey][SchemaTag.isViewNode] = true;\n    // Add fields\n    addFieldsToFormDefinition(section, sectionType, appSchema, targetID, version, withActions);\n    return targetID;\n}\n\n/**\n * Replaces an alias in an annotation ID or reference, based on the AVT references' list\n * @param annotationIdentifier - annotation ID or reference\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @returns the converted string\n */\nexport function replaceAlias(annotationIdentifier: string, oDataServiceAVT: ConvertedMetadata): string {\n    const potentialAlias = annotationIdentifier.indexOf('.') > -1 ? annotationIdentifier.split('.')[0] : undefined;\n    let result = annotationIdentifier;\n    if (potentialAlias && oDataServiceAVT) {\n        const searchTerm = potentialAlias.replace('SAP__', '');\n        const reference = oDataServiceAVT.references.find((ref) => {\n            return ref.alias === searchTerm;\n        });\n        if (reference) {\n            result = annotationIdentifier.replace(potentialAlias, reference.namespace);\n        }\n    }\n    return result;\n}\n\n/**\n * Common routine to determine the name and the ID of a header action\n * @param action - action as given by AVT\n * @param entityType - entity type by AVT\n * @returns an object comprising action name and action id\n */\n\nexport function getActionNameAndId(\n    item: any,\n    oDataServiceAVT: ConvertedMetadata\n): { actionName: string; actionId: string; namespace: string } {\n    const action = replaceAlias(item.Action, oDataServiceAVT);\n\n    let relevantAction = action;\n    let separatorIndex = action.indexOf('(');\n\n    if (separatorIndex > 0) {\n        relevantAction = action.substring(0, separatorIndex);\n    }\n    separatorIndex = relevantAction.lastIndexOf('/');\n    if (separatorIndex === -1) {\n        separatorIndex = relevantAction.lastIndexOf('.');\n    }\n    let actionName: string, actionId: string, namespace: string;\n    if (separatorIndex > -1) {\n        actionName = relevantAction.substring(separatorIndex + 1);\n        namespace = relevantAction.substring(0, separatorIndex);\n        actionId = `${relevantAction.substring(0, separatorIndex)}::${actionName}`;\n    } else {\n        actionName = relevantAction;\n        namespace = item.fullyQualifiedName.split('@')[0];\n        if (actionName && actionName !== '') {\n            actionId = `${namespace.substring(0, namespace.length - 1)}::${actionName}`;\n        }\n    }\n    return { actionName, actionId, namespace };\n}\n\n/**\n * Checks if requested Entity Set is same as first Object Page\n * @param {SapUiAppPagesV2} pages - pages found in manifest\n * @param {GenerateAppSchemaParameters} generateParameters - Schema parameters\n * @returns {boolean} If found Object Page is first Object Page\n */\nfunction isFirstObjectPage(pages: v2.SapUiAppPagesV2, generateParameters: GenerateAppSchemaParameters): boolean {\n    for (const key in pages) {\n        const element = pages[key];\n        if (element.component?.name === v2.FE_TEMPLATE_V2_OBJECT_PAGE) {\n            if (generateParameters.entitySet?.name === element.entitySet) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n        return isFirstObjectPage(element.pages, generateParameters);\n    }\n}\n\n/**\n * Add Object Page Footer Action Buttons to app-specific schema\n *\n * @param {object} appSchema Schema of the app\n * @param {GenerateAppSchemaParameters} generateParameters - Schema parameters\n * @param {FioriElementsVersion} version - Fiori elements versions\n * @param {function} addFooterActionCallBack - Callback function, either V2 or V4\n * @param {SapUiAppPagesV2} pages - pages found in manifest\n */\nexport function addFooterActions(\n    appSchema: Definition,\n    generateParameters: GenerateAppSchemaParameters,\n    version: FioriElementsVersion,\n    addFooterActionCallBack,\n    pages?: v2.SapUiAppPagesV2\n): void {\n    appSchema.definitions[DefinitionName.ObjectPageFooter] = JSON.parse(\n        JSON.stringify(appSchema.definitions[`${DefinitionName.ObjectPageFooter}<ObjectPageFooterActions>`])\n    );\n    // Change reference of footer\n    appSchema.properties['footer'] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.ObjectPageFooter}`\n    };\n    // Add action to configuration\n    (appSchema.definitions[DefinitionName.ObjectPageFooter] as Definition).properties[PropertyName.actions] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.FooterActions}`\n    };\n    const footerActions = (appSchema.definitions[DefinitionName.FooterActions] = {\n        type: 'object',\n        properties: {},\n        description: 'Actions',\n        additionalProperties: false\n    });\n    footerActions[SchemaTag.isViewNode] = true;\n\n    const alias = findAlias(UIVOCABULARY, generateParameters.serviceAVT);\n    const entitySet = generateParameters.entitySet;\n    const entityType = generateParameters.entityType;\n    const actionAnnotation = alias && entityType?.annotations?.[alias]?.Identification;\n    if (actionAnnotation) {\n        const convertedIdentification = actionAnnotation.fullyQualifiedName.replace(\n            `@${UIAnnotationTerms.Identification}`,\n            `/@${UIAnnotationTerms.Identification}`\n        );\n        footerActions[SchemaTag.annotationPath] = `/${convertedIdentification}`;\n        //V2 or V4 vcallback\n        addFooterActionCallBack(entityType, appSchema, footerActions, actionAnnotation);\n    } else if (entityType) {\n        footerActions[SchemaTag.annotationPath] =\n            `/${entityType.fullyQualifiedName}/@${UIAnnotationTerms.Identification}`;\n    }\n    if (\n        version === FioriElementsVersion.v2 &&\n        isFirstObjectPage(pages, generateParameters) &&\n        !isDraftEnabled(entitySet)\n    ) {\n        addStandardFooterActionsOP(appSchema, footerActions);\n    }\n    delete appSchema.definitions[DefinitionName.ObjectPageFooterActions];\n    delete appSchema.definitions[`${DefinitionName.ObjectPageFooter}<${DefinitionName.ObjectPageFooterActions}>`];\n}\n\n/**\n * Add Object Page Header Action Buttons to app-specific schema\n * @param {object} appSchema Schema of the app\n * @param {EntityType} entityType - current entity type\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {function} addHeaderActionCallBack - Callback function, either V2 or V4\n */\nexport function addHeaderActions(\n    appSchema: Definition,\n    entityType: EntityType,\n    entitySet: EntitySet,\n    oDataServiceAVT: ConvertedMetadata,\n    addHeaderActionCallBack,\n    isV2 = false\n): void {\n    const actionsDefinition = DefinitionName.ObjectPageHeaderActions;\n    const actions = appSchema.definitions[actionsDefinition] as Definition;\n    (appSchema.definitions[DefinitionName.ObjectPageHeader] as Definition).properties[PropertyName.actions] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${actionsDefinition}`\n    };\n    const headerActions = (appSchema.definitions[actionsDefinition] = {\n        type: 'object',\n        properties: {},\n        description: 'Actions',\n        additionalProperties: false\n    });\n    headerActions[SchemaTag.isViewNode] = true;\n\n    const alias = findAlias(UIVOCABULARY, oDataServiceAVT);\n    const identification = alias && entityType?.annotations?.[alias]?.Identification;\n\n    if (identification) {\n        headerActions[SchemaTag.annotationPath] =\n            '/' +\n            identification.fullyQualifiedName.replace(\n                `@${UIAnnotationTerms.Identification}`,\n                `/@${UIAnnotationTerms.Identification}`\n            );\n    } else if (entityType) {\n        headerActions[SchemaTag.annotationPath] =\n            `/${entityType.fullyQualifiedName}/@${UIAnnotationTerms.Identification}`;\n    }\n    addHeaderActionCallBack(entityType, appSchema, identification, headerActions, oDataServiceAVT, entitySet);\n    if (isV2) {\n        // handle header actions\n        addStandardHeaderActions(appSchema, true, actions);\n    }\n}\n\n/**\n * Adds common Object Page Header definitions to the app schema\n * @param appSchema - app-specific JSOn schema\n * @param entityType - current entity Type\n */\nexport function addCommonHeaderSchema(appSchema: Definition, entityType: EntityType): void {\n    appSchema.properties['header'] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.ObjectPageHeader}`\n    };\n    appSchema.definitions[DefinitionName.ObjectPageHeader] = JSON.parse(\n        JSON.stringify(appSchema.definitions[`${DefinitionName.ObjectPageHeader}`])\n    );\n    if (entityType) {\n        appSchema.definitions[DefinitionName.ObjectPageHeader][SchemaTag.annotationPath] =\n            `/${entityType.fullyQualifiedName}/@${UIAnnotationTerms.HeaderInfo}`;\n    }\n}\n\n/**\n * Common logic to determine the EntitySet of a given EntityType\n * @param {EntityType} - entity type\n * @param {ConvertedMetadata} serviceAVT - AVT converter output, comprising all annotation information\n * @returns the entity set as defined in AVT, if found\n */\nexport function determineEntitySetOfEntityType(\n    entityType: EntityType,\n    serviceAVT: ConvertedMetadata\n): EntitySet | undefined {\n    return entityType\n        ? serviceAVT.entitySets.find((es) => es.entityType.fullyQualifiedName === entityType.fullyQualifiedName)\n        : undefined;\n}\n", "import { UIAnnotationTypes } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { removeNamespaces } from '../../common/utils';\n\n/**\n * Stable Id helper (parts copied from sap.fe.core/helpers/StableIdHelper.ts)\n */\n\nexport function replaceSpecialChars(sId: string): string {\n    if (typeof sId !== 'string') {\n        return;\n    }\n    sId = sId\n        .replace(/^\\/|^@|^#|^\\*/, '') // remove special characters from the beginning of the string\n        .replace(/\\/$|@$|#$|\\*$/, '') // remove special characters from the end of the string\n        .replace(/[/@()#*]/g, '::'); // replace special characters with ::\n\n    // Replace double occurrences of the separator with a single separator\n    while (sId.indexOf('::::') > -1) {\n        sId = sId.replace('::::', '::');\n    }\n\n    // If there is a :: at the end of the ID remove it\n    if (sId.slice(-2) === '::') {\n        sId = sId.slice(0, -2);\n    }\n\n    return sId;\n}\n\nexport const prepareId = function (sId: string): string {\n    return replaceSpecialChars(removeNamespaces(sId));\n};\n\nfunction evaluateConcat(oValue: any) {\n    let sPathConcat = '';\n    for (const applyValue of oValue.Apply.Path) {\n        if (applyValue._text) {\n            if (sPathConcat) {\n                sPathConcat += '::';\n            }\n            sPathConcat += applyValue._text;\n        }\n    }\n    return sPathConcat;\n}\n\nexport function getStableIdPartFromValue(oValue: any): string | undefined {\n    if (oValue?.$Path || oValue?.path) {\n        return oValue.$Path || oValue.path;\n    }\n\n    if (oValue?.Apply?._attributes.Function === 'odata.concat') {\n        return evaluateConcat(oValue);\n    }\n\n    if (oValue) {\n        if (typeof oValue === 'string') {\n            return replaceSpecialChars(oValue.replace(/ /g, '_'));\n        }\n    }\n}\n\nexport const getStableIdPartFromSemanticObjectAndAction = function (oDataField: any): string {\n    let sIdPart = '';\n    if (typeof oDataField.SemanticObject === 'string') {\n        sIdPart += oDataField.SemanticObject;\n    } else if (oDataField.SemanticObject.$Path) {\n        sIdPart += oDataField.SemanticObject.$Path;\n    }\n    if (typeof oDataField.Action === 'string') {\n        sIdPart += '::' + oDataField.Action;\n    } else if (oDataField.Action && oDataField.Action.$Path) {\n        sIdPart += '::' + oDataField.Action.$Path;\n    }\n    if (oDataField['RequiresContext']) {\n        sIdPart += '::RequiresContext';\n    }\n    return sIdPart;\n};\n\nexport const getStableIdPartFromDataField = function (oDataField: any): string | undefined {\n    let sIdPart = '';\n\n    if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataFieldForAction) {\n        sIdPart = 'DataFieldForAction::';\n        sIdPart += oDataField.Action;\n        return prepareId(sIdPart);\n    } else if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation) {\n        sIdPart = 'DataFieldForIntentBasedNavigation::';\n        sIdPart += getStableIdPartFromSemanticObjectAndAction(oDataField);\n        return sIdPart;\n    } else if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataFieldForAnnotation) {\n        sIdPart = 'DataFieldForAnnotation::';\n        sIdPart += prepareId(oDataField.Target.$AnnotationPath || oDataField.Target.value);\n        return sIdPart;\n    } else if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataFieldWithAction) {\n        sIdPart = 'DataFieldWithAction::';\n        if (oDataField.Value) {\n            sIdPart += getStableIdPartFromValue(oDataField.Value) + '::';\n        }\n        sIdPart += oDataField.Action;\n        return prepareId(sIdPart);\n    } else if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataField) {\n        sIdPart = 'DataField::';\n        sIdPart += getStableIdPartFromValue(oDataField.Value);\n        return prepareId(sIdPart);\n    } else if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataFieldWithIntentBasedNavigation) {\n        sIdPart = 'DataFieldWithIntentBasedNavigation::';\n        sIdPart += getStableIdPartFromValue(oDataField.Value) + '::';\n        sIdPart += getStableIdPartFromSemanticObjectAndAction(oDataField);\n        return prepareId(sIdPart);\n    } else if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataFieldWithNavigationPath) {\n        sIdPart = 'DataFieldWithNavigationPath::';\n        sIdPart += getStableIdPartFromValue(oDataField.Value);\n        if (oDataField.Target && oDataField.Target['$NavigationPropertyPath']) {\n            sIdPart += '::' + oDataField.Target['$NavigationPropertyPath'];\n        }\n        return prepareId(sIdPart);\n    } else if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataFieldWithUrl) {\n        sIdPart = 'DataFieldWithUrl::';\n        sIdPart += getStableIdPartFromValue(oDataField.Value);\n        return prepareId(sIdPart);\n    } else {\n        // In case of a string or unknown property\n        // Log.error(\"Stable ID Helper: Unable to create a stable ID. Please check the annotations.\");\n    }\n    return undefined;\n};\n", "import type { Definition } from 'typescript-json-schema';\nimport type { MetadataInstanceInterface } from '../../common/decoration/factory';\nimport type { v2, PageTypeV2, PageTypeV4, FileData, SyncRule } from '@sap/ux-specification-types';\nimport { ArtifactType, DefinitionName, SchemaTag, SchemaKeyName, ActionType } from '@sap/ux-specification-types';\nimport type { AnnotationTerm, EntitySet, EntityType } from '@sap-ux/vocabularies-types';\nimport type { DataFieldAbstractTypes, LineItem, SelectionFields } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport {\n    addKeyToDefinition,\n    getActionKey,\n    DEFINITION_LINK_PREFIX,\n    addDataTypeToDefinition,\n    addCommonLineItemDefinitions,\n    createAnnotationPath,\n    determineDataType,\n    getDataFieldDescription,\n    getLabelForPropertyPath,\n    getNextTargetDefinition,\n    getSchemaKeyOfLineItemRecord,\n    prepareRef,\n    addEnumToSchema\n} from '../../common';\nimport { getReflectMetadata } from '../../common/decoration/decorators';\nimport { UIAnnotationTypes, UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { sep } from 'path';\nimport { xml2json } from 'xml-js';\nimport { ActionTypeV2 } from '../types';\n\n/**\n * Common function for enhancing the LineItems definiton of app schema by custom columns\n * @param appSchema - app-specific JSON schema\n * @param customColumnsDefinitionName - custom column definition name (plural)\n * @param customColumnDefinitionName - custom column definition name (singular)\n */\nfunction addCustomColumnDefinition(\n    appSchema: Definition,\n    customColumnsDefinitionName: string,\n    customColumnDefinitionName: string\n): void {\n    if (appSchema.definitions[DefinitionName.LineItems]) {\n        (appSchema.definitions[DefinitionName.LineItems] as Definition).properties['custom'] = {\n            $ref: `${DEFINITION_LINK_PREFIX}${customColumnsDefinitionName}`\n        };\n    }\n    appSchema.definitions[customColumnsDefinitionName] = {\n        type: 'array',\n        items: {\n            $ref: `${DEFINITION_LINK_PREFIX}${customColumnDefinitionName}`\n        },\n        description: 'Custom Columns'\n    };\n    appSchema.definitions[customColumnsDefinitionName][SchemaTag.isViewNode] = true;\n    const extensionType = (appSchema.definitions[customColumnDefinitionName] as Definition).properties['extensionType'];\n    if (extensionType) {\n        extensionType[SchemaTag.artifactType] = ArtifactType.Manifest;\n    }\n}\n\n/**\n * Prepares and returns id of action for further use and reference\n * @param actionType - type of action\n * @param lineItemProperties - properties of the line item collection: lineItemPath, lineItemRecord, lineItemId\n * @returns {string} actionId\n */\nfunction getActionId(\n    actionType: ActionTypeV2,\n    lineItemProperties: { lineItemPath: any; lineItemRecord: any; lineItemId: any; entityType: EntityType }\n): string {\n    let actionId: string;\n    if (actionType === ActionTypeV2.ColumnIntentBased) {\n        actionId = getSchemaKeyOfLineItemRecord(lineItemProperties.lineItemRecord);\n    } else if (actionType === ActionTypeV2.ToolBarIntentBased || actionType === ActionTypeV2.FooterIntentBased) {\n        actionId = prepareRef(\n            `${lineItemProperties.lineItemRecord.SemanticObject}::${lineItemProperties.lineItemRecord.Action}`\n        );\n    } else if (\n        actionType === ActionTypeV2.Column &&\n        lineItemProperties.lineItemRecord.$Type === UIAnnotationTypes.DataFieldForAction\n    ) {\n        actionId = prepareRef(`DataFieldForAction:::sAction::${lineItemProperties.lineItemRecord.Action}`);\n    } else {\n        actionId = prepareRef(lineItemProperties.lineItemRecord.Action);\n    }\n    if (lineItemProperties.lineItemId && lineItemProperties.lineItemId !== 'LineItems') {\n        return `${lineItemProperties.lineItemId}??${actionId}`;\n    } else {\n        return actionId;\n    }\n}\n\n/**\n * Processes a LineItem record of type DataFieldForAction and DataFieldForIntentBasedNavigation during app schema generation\n * @param appSchema - the app specific schema that shall get enhanced\n * @param entityType - the entity type as part of the AVT ConvertedMetadata\n * @param actions - actions definition in schema, parent object\n * @param lineItemProperties - properties of the line item collection: lineItemPath, lineItemRecord, lineItemId\n * @param actionType - type of action\n * @param recordIndex - record index in the collection\n */\nexport function handleActionRecord(\n    appSchema: Definition,\n    actions: Definition,\n    lineItemProps: { lineItemPath; lineItemRecord; lineItemId; entityType: EntityType },\n    actionType: ActionTypeV2,\n    recordIndex: number\n): void {\n    let actionReferenceType;\n    const actionTemplate = lineItemProps.lineItemId === DefinitionName.LineItems ? '' : 'ObjectPage';\n    const actionId = getActionId(actionType, lineItemProps);\n\n    if (actionType === ActionTypeV2.Footer || actionType === ActionTypeV2.FooterIntentBased) {\n        actionReferenceType = `Action`;\n        actionType = ActionTypeV2.Footer;\n    } else if (actionType === ActionTypeV2.Column || actionType === ActionTypeV2.ColumnIntentBased) {\n        actionReferenceType = `TableColumnAction`;\n    } else {\n        actionReferenceType = actionTemplate !== '' ? `${actionTemplate}${actionType}` : `Action`;\n        actionType = ActionTypeV2.ToolBar;\n    }\n    const actionDefinition = `${actionTemplate}${actionType}<${actionId}>`;\n    const description = getDataFieldDescription(\n        lineItemProps.lineItemRecord as DataFieldAbstractTypes,\n        lineItemProps.entityType\n    );\n    actions.properties[actionId] = {\n        $ref: DEFINITION_LINK_PREFIX + actionDefinition\n    };\n    actions.properties[actionId][SchemaTag.propertyIndex] = recordIndex;\n    const { key, ns } = getActionKey(lineItemProps.lineItemRecord.Action, true);\n    if (appSchema.definitions[actionReferenceType]) {\n        appSchema.definitions[actionDefinition] = {\n            ...JSON.parse(JSON.stringify(appSchema.definitions[actionReferenceType])),\n            description,\n            keys: [{ name: 'Action', value: key }],\n            annotationPath: `${lineItemProps.lineItemPath}/${recordIndex}`\n        };\n        if (ns) {\n            appSchema.definitions[actionDefinition][SchemaTag.target] = ns;\n        }\n    } else {\n        appSchema.definitions[actionDefinition] = {\n            type: 'object',\n            properties: {},\n            description,\n            additionalProperties: false\n        };\n        appSchema.definitions[actionDefinition][SchemaTag.isViewNode] = true;\n        appSchema.definitions[actionDefinition][SchemaTag.keys] = [{ name: SchemaKeyName.action, value: key }];\n        if (ns) {\n            appSchema.definitions[actionDefinition][SchemaTag.target] = ns;\n        }\n        appSchema.definitions[actionDefinition][SchemaTag.annotationPath] =\n            `${lineItemProps.lineItemPath}/${recordIndex}`;\n    }\n}\n\n/**\n * Returns the type of a column lineItem action\n * @param lineItemId - optional: in case of OP the parameter must be passed to distinguish the OP tables;\n * @param {object} lineItemRecord - actual record of the line item collection\n * @param actionTypes - array of action types to be filled\n */\nfunction getColumnActionType(lineItemId: string, lineItemRecord, actionTypes: ActionTypeV2[]) {\n    if (\n        lineItemId !== DefinitionName.LineItems &&\n        lineItemRecord.Inline === true &&\n        (lineItemRecord.$Type === UIAnnotationTypes.DataFieldForAction ||\n            lineItemRecord.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation)\n    ) {\n        actionTypes.push(ActionTypeV2.OPColumn);\n    } else if (lineItemRecord.Inline === true && lineItemRecord.$Type === UIAnnotationTypes.DataFieldForAction) {\n        actionTypes.push(ActionTypeV2.Column);\n    } else if (\n        lineItemRecord.Inline === true &&\n        lineItemRecord.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation\n    ) {\n        actionTypes.push(ActionTypeV2.ColumnIntentBased);\n    }\n}\n\n/**\n * Returns the type of a lineItem action\n * @param {object} lineItemRecord - actual record of the line item collection\n * @returns {string[] | undefined } ActionTypeV2[] - action type(s) of the lineItem\n */\nfunction getActionType(lineItemRecord: DataFieldAbstractTypes, lineItemId: string): ActionTypeV2[] | undefined {\n    const actionTypes: ActionTypeV2[] = [];\n    if (\n        lineItemRecord.$Type !== UIAnnotationTypes.DataFieldForAction &&\n        lineItemRecord.$Type !== UIAnnotationTypes.DataFieldForIntentBasedNavigation\n    ) {\n        return undefined;\n    }\n    if (\n        lineItemRecord.Inline !== true &&\n        lineItemRecord.Determining !== true &&\n        lineItemRecord.$Type === UIAnnotationTypes.DataFieldForAction\n    ) {\n        actionTypes.push(ActionTypeV2.ToolBar);\n    } else if (\n        lineItemRecord.Inline !== true &&\n        lineItemRecord.Determining !== true &&\n        lineItemRecord.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation\n    ) {\n        actionTypes.push(ActionTypeV2.ToolBarIntentBased);\n    } else if (lineItemRecord.Determining === true && lineItemRecord.$Type === UIAnnotationTypes.DataFieldForAction) {\n        actionTypes.push(ActionTypeV2.Footer);\n    } else if (\n        lineItemRecord.Determining === true &&\n        lineItemRecord.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation\n    ) {\n        actionTypes.push(ActionTypeV2.FooterIntentBased);\n    }\n    getColumnActionType(lineItemId, lineItemRecord, actionTypes);\n    return actionTypes;\n}\n\ntype LineItemProperties = {\n    lineItemPath: string;\n    lineItemRecord: DataFieldAbstractTypes;\n    lineItemId: string;\n    entityType: EntityType;\n};\n\nfunction generateGenericColumn(lineItemProperties: LineItemProperties, appSchema: Definition, recordIndex: number) {\n    const schemaKey = getSchemaKeyOfLineItemRecord(lineItemProperties.lineItemRecord);\n    if (schemaKey) {\n        const lineItemDefinition = appSchema.definitions[lineItemProperties.lineItemId] as Definition;\n        lineItemDefinition.properties[schemaKey] = {\n            $ref: DEFINITION_LINK_PREFIX + DefinitionName.TableColumn,\n            description: getDataFieldDescription(lineItemProperties.lineItemRecord, lineItemProperties.entityType)\n            // Custom property in schema - for object properties ordering purpose\n        };\n        lineItemDefinition.properties[schemaKey][SchemaTag.propertyIndex] = recordIndex;\n        lineItemDefinition.properties[schemaKey][SchemaTag.annotationPath] =\n            `${lineItemProperties.lineItemPath}/${recordIndex}`;\n        addDataTypeToDefinition(\n            lineItemDefinition.properties[schemaKey] as Definition,\n            lineItemProperties.lineItemRecord\n        );\n        addKeyToDefinition(lineItemProperties.lineItemRecord, lineItemDefinition.properties, schemaKey);\n    }\n}\n\nfunction handleAnyAction(\n    actionType: ActionTypeV2,\n    appSchema: Definition,\n    actions: object,\n    lineItemProperties: LineItemProperties,\n    recordIndex: number,\n    footerActions: object,\n    lineItemId: string\n) {\n    switch (actionType) {\n        case ActionTypeV2.ToolBar:\n        case ActionTypeV2.ToolBarIntentBased: {\n            handleActionRecord(appSchema, actions, lineItemProperties, actionType, recordIndex);\n            break;\n        }\n        case ActionTypeV2.Footer:\n        case ActionTypeV2.FooterIntentBased: {\n            if (footerActions) {\n                handleActionRecord(appSchema, footerActions, lineItemProperties, actionType, recordIndex);\n            }\n            break;\n        }\n        case ActionTypeV2.Column:\n        case ActionTypeV2.ColumnIntentBased: {\n            handleActionRecord(\n                appSchema,\n                appSchema.definitions[lineItemId] as Definition,\n                lineItemProperties,\n                actionType,\n                recordIndex\n            );\n            break;\n        }\n        case ActionTypeV2.OPColumn: {\n            generateGenericColumn(lineItemProperties, appSchema, recordIndex);\n        }\n    }\n}\n\n/**\n * Adds the line item records to the app schema (for the list report or an object page section comprising a table)\n * @param appSchema - the app specific schema that shall get enhanced\n * @param lineItemAnnotation - the UI.LineItem annotation, comprising all records\n * @param entityType - the entity type as part of the AVT ConvertedMetadata\n * @param lineItemId - optional: in case of OP the parameter must be passed to distinguish the OP tables;\n *                      in case of LR or ALP no ID is passed, 'LineItems' is taken then.\n * @param customColumnRef - schema reference to custom column definition.\n */\nexport function addLineItemsType(\n    appSchema: Definition,\n    lineItemAnnotation: AnnotationTerm<LineItem>,\n    entityType: EntityType,\n    lineItemId?: string,\n    customColumnRef?: string\n): void {\n    // Add the correct lineItem definition\n    lineItemId = lineItemId || DefinitionName.LineItems;\n\n    const { actions, footerActions, lineItemPath } = addCommonLineItemDefinitions(\n        appSchema,\n        lineItemAnnotation,\n        entityType,\n        lineItemId\n    );\n\n    if (lineItemAnnotation) {\n        let recordIndex = 0;\n        lineItemAnnotation.forEach((lineItemRecord) => {\n            const lineItemProperties: LineItemProperties = { lineItemPath, lineItemRecord, lineItemId, entityType };\n            const actionTypes = getActionType(lineItemRecord, lineItemId);\n            if (actionTypes) {\n                actionTypes.forEach((actionType) => {\n                    handleAnyAction(\n                        actionType,\n                        appSchema,\n                        actions,\n                        lineItemProperties,\n                        recordIndex,\n                        footerActions,\n                        lineItemId\n                    );\n                });\n            } else {\n                generateGenericColumn(lineItemProperties, appSchema, recordIndex);\n            }\n            recordIndex++;\n        });\n    }\n    if (customColumnRef) {\n        (appSchema.definitions[lineItemId] as Definition).properties['custom'] = {\n            $ref: `${DEFINITION_LINK_PREFIX}${customColumnRef}`\n        };\n    }\n}\n\n/**\n * Adds enum entries of possible leading properties for 'leadingProperty' property in TableCustomColumn properties.\n * @param appSchema - the app specific schema that shall get enhanced\n * @param entityType - the entity type as part of the AVT ConvertedMetadata\n * @param definitionName - definition name of CustomColumn definition\n */\nexport function addListReportLeadingProperties(\n    appSchema: Definition,\n    entityType: EntityType,\n    definitionName: string\n): void {\n    // Leading Property\n    const leadingPropertySchema = appSchema.definitions[definitionName]?.['properties']?.[\n        'leadingProperty'\n    ] as Definition;\n    if (leadingPropertySchema) {\n        const properties = [\n            //  Entity properties\n            ...(entityType?.entityProperties || []),\n            // Navigation Properties\n            ...(entityType?.navigationProperties || [])\n        ];\n        leadingPropertySchema['enum'] = properties?.reduce((result: string[], property) => {\n            if (!result.includes(property.name)) {\n                result.push(property.name);\n            }\n            return result;\n        }, []);\n    }\n}\n\n/**\n * Adds enum entries of posible tabKey properties for 'leadingProperty' property in TableCustomColumn properties.\n * @param appSchema - the app specific schema that shall get enhanced\n * @param definitionName - definition name of CustomColumn definition\n * @param page - sapui5 page object\n * @param {string} facet ID -  The facet ID\n */\nexport function addTabkeyEnum(\n    appSchema: Definition,\n    definitionName: string,\n    page?: v2.SapUiAppPageV2,\n    facetID?: string\n): void {\n    const tabkeyPropertySchema = appSchema.definitions[definitionName]?.['properties']?.['tabKey'];\n    if (!page) {\n        if (facetID) {\n            tabkeyPropertySchema.description =\n                'In case of Object Page, the tabkey in manifest is equivalent to the facet ID.';\n            tabkeyPropertySchema['enum'] = [facetID];\n        }\n        return;\n    }\n    const quickVariantsX = page.component?.settings?.quickVariantSelectionX?.['variants'];\n    if (quickVariantsX) {\n        const enumEntries = [];\n        for (const index in quickVariantsX) {\n            const key = quickVariantsX[index]?.key;\n            if (key !== undefined && !enumEntries.includes(key)) {\n                enumEntries.push(key);\n            }\n        }\n        addEnumToSchema(enumEntries, tabkeyPropertySchema);\n    }\n}\n\n/**\n * Adds enum entries of posible fragment entries.\n * @param {object} appSchema The app specific schema that shall get enhanced.\n * @param {FileData[]} fragments Array of fragments.\n * @param {string[]} appId Application id.\n * @param {string} property Property name.\n * @param {string} definitionName Definition name of CustomColumn definition.\n */\nexport function addFragmentEnum(\n    appSchema: Definition,\n    fragments: FileData[],\n    appId: string,\n    property: string,\n    definitionName: string\n): void {\n    if (!fragments || !appId || appId.startsWith('${')) {\n        return;\n    }\n    const enumEntries = [];\n    fragments.forEach((fragment) => {\n        let relPath = fragment.dataSourceUri.split('webapp')[1];\n        if (relPath && relPath.indexOf('.fragment.xml') > 0) {\n            const fragmentJson = JSON.parse(xml2json(fragment.fileContent, { compact: true }))[\n                'core:FragmentDefinition'\n            ];\n            if (\n                (property === 'fragmentName' &&\n                    (!fragmentJson ||\n                        fragmentJson.Column ||\n                        fragmentJson['table:Column'] ||\n                        fragmentJson['table:AnalyticalColumn'])) ||\n                (property === 'cellsFragmentName' &&\n                    (!fragmentJson ||\n                        (!fragmentJson.Column &&\n                            !fragmentJson['table:Column'] &&\n                            !fragmentJson['table:AnalyticalColumn'] &&\n                            !fragmentJson['smartfilterbar:ControlConfiguration'])))\n            ) {\n                relPath = relPath.replace(new RegExp('\\\\' + sep, 'g'), '/');\n                const fragmentName = appId + relPath.split('.fragment.xml')[0].replace(/\\//g, '.');\n                enumEntries.push(fragmentName);\n            }\n        }\n    });\n    addEnumToSchema(enumEntries, appSchema.definitions[definitionName]?.['properties']?.[property]);\n}\n\n/**\n * Adds the custom columns to the line item records of the app schema (for the list report comprising a table).\n * @param {object} appSchema The app specific schema that shall get enhanced.\n * @param {EntityType} entityType The entity type as part of the AVT ConvertedMetadata.\n * @param {SapUiAppPageV2} page Sapui5 page object.\n * @param {object} manifest Application manifest.\n * @param {FileData[]} [fragments] Array of fragments.\n * @param {string} [customColumnsDefinitionName=DefinitionName.CustomColumns] Definition name of Custom Columns definition.\n * @param {string} [customColumnDefinitionName=DefinitionName.CustomColumn] Definition name of Custom Column definition.\n * @param {string} facetID -  Facet ID\n */\nexport function addTableColumnExtensions(\n    appSchema: object,\n    entityType: EntityType,\n    page: v2.SapUiAppPageV2,\n    manifest: object,\n    fragments?: FileData[],\n    customColumnsDefinitionName: string = DefinitionName.CustomColumns,\n    customColumnDefinitionName: string = DefinitionName.CustomColumn,\n    facetID?: string\n): void {\n    addCustomColumnDefinition(appSchema, customColumnsDefinitionName, customColumnDefinitionName);\n\n    // Leading Property\n    addListReportLeadingProperties(appSchema, entityType, customColumnDefinitionName);\n    // Tab key property\n    addTabkeyEnum(appSchema, customColumnDefinitionName, page, facetID);\n    // Fragment property\n    const appId = manifest && manifest['sap.app'] && manifest['sap.app']['id'];\n    addFragmentEnum(appSchema, fragments, appId, 'fragmentName', customColumnDefinitionName);\n    //tools-suite does not distinguish by section ID, looks at the generic entry\n    addFragmentEnum(appSchema, fragments, appId, 'fragmentName', DefinitionName.CustomColumn);\n    addFragmentEnum(appSchema, fragments, appId, 'cellsFragmentName', customColumnDefinitionName);\n    addFragmentEnum(appSchema, fragments, appId, 'cellsFragmentName', DefinitionName.CustomColumn);\n}\n\n/**\n * Processes an anyOf definition of the generic schema\n * @param propertyDefinition - current definition in the generic schema\n * @param schema - the app-specific schema\n * @param propertyKey - key of the single property\n * @param factory - factory for creating metadata instances\n * @param pageType - page type\n * @param processedRefs - array of already processed refs which used to avoid cycling recursion\n */\nfunction processAnyOf(\n    propertyDefinition: any,\n    schema: object,\n    propertyKey: string,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV2 | PageTypeV4,\n    processedRefs: string[]\n) {\n    propertyDefinition['anyOf'].forEach((element) => {\n        const nextDefinition = getNextTargetDefinition(schema, '', {}, element, propertyKey, factory, pageType);\n        if (nextDefinition) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            processMetadata(\n                schema,\n                nextDefinition.targetDefinition,\n                nextDefinition.configObject,\n                pageType,\n                factory,\n                processedRefs,\n                element.$ref\n            );\n        }\n    });\n}\n\n/**\n * Processes an object reference of the generic schema\n * @param schema\n * @param propertyDefinition - current definition in the generic schema\n * @param propertyKey - key of the single property\n * @param factory - factory for creating metadata instances\n * @param pageType - page type\n * @param processedRefs - array of already processed refs which used to avoid cycling recursion\n */\nfunction processObject(\n    schema: object,\n    propertyDefinition: any,\n    propertyKey: string,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV2 | PageTypeV4,\n    processedRefs: string[]\n) {\n    const nextDefinition = getNextTargetDefinition(schema, '', {}, propertyDefinition, propertyKey, factory, pageType);\n    if (nextDefinition) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        processMetadata(\n            schema,\n            nextDefinition.targetDefinition,\n            nextDefinition.configObject,\n            pageType,\n            factory,\n            processedRefs,\n            propertyDefinition.$ref\n        );\n    }\n}\n\n/**\n * Determines the artifact type of a property and adds it to the property definition in schema\n * @param syncRule - sync rule of the current property\n * @param propertyDefinition - current definition in the generic schema\n */\nfunction addArtifactType(syncRule: SyncRule, propertyDefinition: any) {\n    if (syncRule.manifest !== undefined) {\n        propertyDefinition.artifactType = ArtifactType.Manifest;\n    } else if (syncRule.flex !== undefined) {\n        propertyDefinition.artifactType = ArtifactType.FlexChange;\n        //Add control type\n        if (syncRule.flex.controlType) {\n            propertyDefinition.controlType = syncRule.flex.controlType();\n        }\n    } else {\n        propertyDefinition.artifactType = ArtifactType.Annotation;\n    }\n}\n\n/**\n * After the generation of a generic schema, apply post-generation rule to a single property\n * @param metaDataDefinition\n * @param schema - given app schema, to be adapted\n * @param pageType - page type\n * @param factory - factory for creating metadata instances\n * @param propertyDefinition - definition of the single property\n * @param propertyKey - key of the single property\n * @param schemaDefinition - the current entry point or definition in the app schema\n * @param processedRefs - array of already processed refs which used to avoid cycling recursion\n */\nfunction processSingleProperty(\n    metaDataDefinition: { [key: string]: any },\n    schema: object,\n    pageType: PageTypeV2 | PageTypeV4,\n    factory: MetadataInstanceInterface,\n    propertyDefinition: any,\n    propertyKey: string,\n    schemaDefinition: object,\n    processedRefs: string[]\n): void {\n    if (metaDataDefinition) {\n        const syncRule = getReflectMetadata(metaDataDefinition, propertyKey);\n        if (syncRule) {\n            if (typeof syncRule.generate === 'function') {\n                syncRule.generate(schema, schemaDefinition, propertyKey);\n                propertyDefinition = schemaDefinition['properties'][propertyKey];\n            }\n            //Add artifact type\n            addArtifactType(syncRule, propertyDefinition);\n        }\n        if (propertyDefinition.type === 'object' || propertyDefinition.$ref) {\n            processObject(schema, propertyDefinition, propertyKey, factory, pageType, processedRefs);\n        } else if (propertyDefinition['anyOf']) {\n            processAnyOf(propertyDefinition, schema, propertyKey, factory, pageType, processedRefs);\n        }\n    }\n}\n\n/**\n * After the generation of a generic schema, apply rules to a list of properties of the given schema section\n * @param schema - given app schema, to be adapted\n * @param schemaDefinition - the current entry point or definition in the app schema\n * @param pageType - page type\n * @param factory - factory for creating metadata instances\n * @param processedRefs - array of already processed refs which used to avoid cycling recursion\n */\nfunction processProperties(\n    schema: object,\n    schemaDefinition: object,\n    metaDataDefinition: { [key: string]: any },\n    propertiesSection: string,\n    pageType: PageTypeV2 | PageTypeV4,\n    factory: MetadataInstanceInterface,\n    processedRefs: string[]\n) {\n    if (schemaDefinition[propertiesSection]) {\n        for (const propertyKey in schemaDefinition[propertiesSection]) {\n            if (propertyKey === 'anyOf') {\n                processAnyOf(\n                    schemaDefinition[propertiesSection],\n                    schema,\n                    propertyKey,\n                    factory,\n                    pageType,\n                    processedRefs\n                );\n            } else {\n                const propertyDefinition = schemaDefinition[propertiesSection][propertyKey];\n                if (propertyDefinition['anyOf']) {\n                    processAnyOf(propertyDefinition, schema, propertyKey, factory, pageType, processedRefs);\n                } else if (propertyKey === '$ref') {\n                    processObject(\n                        schema,\n                        schemaDefinition[propertiesSection],\n                        propertyKey,\n                        factory,\n                        pageType,\n                        processedRefs\n                    );\n                } else {\n                    processSingleProperty(\n                        metaDataDefinition,\n                        schema,\n                        pageType,\n                        factory,\n                        propertyDefinition,\n                        propertyKey,\n                        schemaDefinition,\n                        processedRefs\n                    );\n                }\n            }\n        }\n    }\n}\n\n/**\n * Apply post-processing rules as specified in form of \"generate\" at the syncRule\n * @param schema - given app schema, to be adapted\n * @param schemaDefinition - the current entry point or definition in the app schema\n * @param pageType - page type\n * @param factory - factory for creating metadata instances\n * @param processedRefs - array of already processed refs which used to avoid cycling recursion\n * @param ref - currently processed schema definition reference name\n */\nexport function processMetadata(\n    schema: object,\n    schemaDefinition: object,\n    metaDataDefinition: { [key: string]: any },\n    pageType: PageTypeV2 | PageTypeV4,\n    factory: MetadataInstanceInterface,\n    processedRefs: string[],\n    ref?: string\n): void {\n    if (ref) {\n        if (processedRefs.includes(ref)) {\n            return;\n        }\n        processedRefs.push(ref);\n    }\n    processProperties(schema, schemaDefinition, metaDataDefinition, 'properties', pageType, factory, processedRefs);\n    processProperties(\n        schema,\n        schemaDefinition,\n        metaDataDefinition,\n        'additionalProperties',\n        pageType,\n        factory,\n        processedRefs\n    );\n    processProperties(\n        schema,\n        schemaDefinition,\n        metaDataDefinition,\n        'patternProperties',\n        pageType,\n        factory,\n        processedRefs\n    );\n}\n\n/**\n * Method updates passed 'enum' array by removing passed matching entries.\n * @param {Array<unknown>} values Array of values.\n * @param {Array<unknown>} valuesToRemove Array of values to remove.\n */\nexport function removeElementsFromEnum(values: Array<unknown>, valuesToRemove: Array<unknown>): void {\n    for (const value of valuesToRemove) {\n        const index = values.indexOf(value);\n        if (index !== -1) {\n            // Value exists - remove it\n            values.splice(index, 1);\n        }\n    }\n}\n\n/**\n * Adds the selection fields to the app schema, as properties of the Filterbar\n * @param entityType - the entity type as part of the AVT ConvertedMetadata\n * @param appSchema - the app specific schema that shall get enhanced\n * @param selectionFieldsAnnotation - the UI.SelectionField annotation\n */\nexport function addSelectionFields(\n    appSchema: Definition,\n    selectionFieldsAnnotation: AnnotationTerm<SelectionFields>,\n    entityType: EntityType\n): void {\n    appSchema.definitions.SelectionFields = {\n        ...(appSchema.definitions.SelectionFields as object),\n        properties: {},\n        additionalProperties: false\n    };\n    const selectionFieldsDefinition = appSchema.definitions.SelectionFields;\n    const annotationPath = createAnnotationPath(entityType?.fullyQualifiedName, UIAnnotationTerms.SelectionFields);\n    if (annotationPath) {\n        selectionFieldsDefinition[SchemaTag.annotationPath] = annotationPath;\n    }\n    if (!selectionFieldsAnnotation) {\n        return;\n    }\n    let i = 0;\n    selectionFieldsAnnotation.forEach((selectionField) => {\n        let description = selectionField.value;\n        const fieldDefinition = `SelectionField<${prepareRef(selectionField.value)}>`;\n        const dataType = determineDataType(selectionField);\n        if (selectionField.type === 'PropertyPath') {\n            description = getLabelForPropertyPath(selectionField, entityType);\n        }\n        selectionFieldsDefinition.properties[selectionField.value] = {\n            $ref: DEFINITION_LINK_PREFIX + fieldDefinition\n        };\n        selectionFieldsDefinition.properties[selectionField.value][SchemaTag.propertyIndex] = i;\n        appSchema.definitions[fieldDefinition] = {\n            type: 'object',\n            description,\n            additionalProperties: false\n        };\n        appSchema.definitions[fieldDefinition][SchemaTag.isViewNode] = true;\n        appSchema.definitions[fieldDefinition][SchemaTag.annotationType] = selectionField?.type;\n        appSchema.definitions[fieldDefinition][SchemaTag.dataType] = dataType;\n        appSchema.definitions[fieldDefinition][SchemaTag.keys] = [\n            { name: SchemaKeyName.value, value: `${selectionField.value}` }\n        ];\n        appSchema.definitions[fieldDefinition][SchemaTag.annotationPath] = `${\n            selectionFieldsDefinition[SchemaTag.annotationPath]\n        }/${i}`;\n\n        if (['Date', 'DateTime', 'DateTimeOffset'].includes(dataType)) {\n            appSchema.definitions[fieldDefinition]['$ref'] = `${DEFINITION_LINK_PREFIX}SelectionFieldDateSettings`;\n        } else {\n            appSchema.definitions[fieldDefinition]['properties'] = {};\n        }\n        i++;\n    });\n}\n\n/**\n * Add entityProperties to passed a passed enum entry\n * @param {string[]} appSchemaEnum - Enum to be enhanced\n * @param {EntityType} entityType - Given entity type for which entries shall get generated\n */\nexport function addEntityPropertiesToEnum(appSchemaEnum: string[], entityType: EntityType): void {\n    for (const key of entityType.entityProperties) {\n        appSchemaEnum.push(key.name);\n    }\n}\n\n/**\n * Checks if an entity supports draft capabilities\n * @param {EntitySet} entitySet Entity Set\n * @returns true if the entity supports draft\n */\nexport function isDraftEnabled(entitySet: EntitySet): boolean {\n    return !!entitySet.annotations?.Common?.DraftRoot || !!entitySet.annotations?.Common?.DraftNode;\n}\n\n/**\n * Function to determine if the entity is deletable.\n * @param {EntitySet} entitySet - current entity set\n * returns {boolean} return true if the Entity is deletable\n */\n\nexport function isEntityDeletable(entitySet: EntitySet): boolean {\n    return (entitySet.annotations?.Capabilities?.DeleteRestrictions?.Deletable as unknown as boolean) !== false;\n}\n\n/**\n * Function to determine if the entity is updatable.\n * @param {EntitySet} entitySet - current entity set\n * @returns returns true if the Entity is updatable\n */\nexport function isEntityUpdatable(entitySet: EntitySet): boolean {\n    return (entitySet.annotations?.Capabilities?.UpdateRestrictions?.Updatable as unknown as boolean) !== false;\n}\n\n/**\n * Adds standard header actions to schema (LR, ALP or OP)\n * @param {Definition} appSchema - app-specific JSON schema\n * @param {boolean} isOP - flag to add to either LR/ALP or OP definition\n * @param {Definition} actions - optional standard actions definition\n */\nexport function addStandardHeaderActions(appSchema: Definition, isOP = false, actions?: Definition): void {\n    // add standard header actions definitions\n    let headerActionsKey = DefinitionName.HeaderActionsStandard;\n    let actionDefinition = DefinitionName.HeaderActionStandard;\n    if (isOP) {\n        headerActionsKey = DefinitionName.ObjectPageHeaderActions;\n        actionDefinition = DefinitionName.ObjectPageHeaderActionStandard;\n    }\n    const headerActions = appSchema.definitions[headerActionsKey] as Definition;\n    headerActions[SchemaTag.isViewNode] = true;\n    headerActions.description = 'Actions';\n    const standardActions = actions || headerActions;\n    Object.entries(standardActions.properties).forEach(([name, definition]) => {\n        const actionRef = definition['$ref'].split(DEFINITION_LINK_PREFIX)[1];\n        const actionKey = `${actionDefinition}<${actionRef}>`;\n        headerActions.properties[name] = { $ref: `${DEFINITION_LINK_PREFIX}${actionKey}` };\n        appSchema.definitions[actionKey] = appSchema.definitions[actionRef];\n        appSchema.definitions[actionRef][SchemaTag.actionType] = ActionType.Standard;\n    });\n}\n\n/**\n * Adds standard footer actions to schema of Object Page\n * @param {Definition} appSchema - app-specific JSON schema\n * @param {EntityType} entityType Entity Type of the page\n * @param {Definition} actions - optional standard actions definition\n */\nexport function addStandardFooterActionsOP(appSchema: Definition, actions: Definition): void {\n    const standardActions = appSchema.definitions[DefinitionName.ObjectPageFooterActions] as Definition;\n    for (const action in standardActions.properties) {\n        const actionRef = standardActions.properties[action]['$ref'].split(DEFINITION_LINK_PREFIX)[1];\n        const actionKey = `${DefinitionName.ObjectPageFooterActionStandard}<${actionRef}>`;\n        actions.properties[action] = { $ref: `${DEFINITION_LINK_PREFIX}${actionKey}` };\n        appSchema.definitions[actionKey] = appSchema.definitions[actionRef];\n        appSchema.definitions[actionRef][SchemaTag.actionType] = ActionType.Standard;\n    }\n}\n", "import type { UI5Version, ExtensionLogger, ExportResults } from '../..';\nimport type { v2, PageTypeV2 } from '@sap/ux-specification-types';\nimport type { FlexChangesForTransfer } from './import/controls/table';\nimport type { MetadataFactory, MetadataInstanceInterface } from '../common/decoration/factory';\nimport type * as v2controls from './export/controls';\nimport type * as v2pages from './export/pages';\nimport type { Definition } from 'typescript-json-schema';\nexport type V2Controls = typeof v2controls;\nexport type V2Pages = typeof v2pages;\n\nexport type TransferParameterTypeV2 = {\n    v2Page: v2.SapUiAppPageV2;\n    exportResults: ExportResults;\n    appId: string;\n    baseId: string;\n    appSchema: object;\n    ui5Version: UI5Version;\n    factory: MetadataFactory;\n    pageKeys: string[];\n    pageType: PageTypeV2;\n    logger: ExtensionLogger;\n    propertyDefinition?: object;\n    nextDefinition?: object;\n    entityPathArray?: string[];\n    deletionRequest: boolean;\n};\n\nexport const MULTISELECTTABLE = 'ResponsiveTableWithMultiSelect<LineItems>';\nexport const INLINEDELETETABLE = 'ResponsiveTableWithInlineDelete<LineItems>';\nexport const TREETABLE = 'TreeTable<LineItems>';\nexport const ANALYTICALTABLE = 'AnalyticalTable<LineItems>';\nexport const GRIDTABLE = 'GridTable<LineItems>';\nexport const LINEITEMTABLETYPES = [MULTISELECTTABLE, INLINEDELETETABLE, TREETABLE, ANALYTICALTABLE, GRIDTABLE];\n\nexport const OP_STANDARD_HEADER_ACTION_PREFIX = 'template::';\nexport const OP_STANDARD_FOOTER_ACTION_PREFIX = 'template:::ObjectPageAction:::';\n\nexport enum SectionTypeV2 {\n    SectionAddress = 'ObjectPageSectionAddressV2',\n    SectionChart = 'ObjectPageSectionChartV2',\n    SectionContact = 'ObjectPageSectionContactV2',\n    SectionForm = 'ObjectPageSectionFormV2',\n    Section = 'ObjectPageSectionV2',\n    SubSection = 'ObjectPageSubSectionV2',\n    SectionTable = 'ObjectPageSectionTableV2',\n    SubSectionForm = 'ObjectPageSubSectionFormV2',\n    SubSectionTable = 'ObjectPageSubSectionTableV2',\n    SubSectionAddress = 'ObjectPageSubSectionAddressV2',\n    SubSectionContact = 'ObjectPageSubSectionContactV2',\n    SubSectionChart = 'ObjectPageSubSectionChartV2',\n    CommonHeaderFacetSettings = 'CommonHeaderFacetSettings',\n    HeaderSection = 'ObjectPageHeaderSection',\n    HeaderSectionAddress = 'ObjectPageHeaderSectionAddress',\n    HeaderSectionChart = 'ObjectPageHeaderSectionChart',\n    HeaderSectionCustomFragment = 'ObjectPageCustomHeaderSectionFragment',\n    HeaderSectionDataPoint = 'ObjectPageHeaderSectionDataPoint',\n    HeaderSectionForm = 'ObjectPageHeaderSectionForm'\n}\n\nexport enum ActionTypeV2 {\n    Form = 'FormAction',\n    OPHeader = 'ObjectPageHeaderAction',\n    OPToolBar = 'ObjectPageToolBarAction',\n    OPFooter = 'ObjectPageFooterAction',\n    OPColumn = 'ObjectPageTableColumnAction',\n    ToolBar = 'ToolBarAction',\n    Footer = 'FooterAction',\n    Column = 'TableColumnAction',\n    ToolBarIntentBased = 'ToolBarActionIntentBased',\n    FooterIntentBased = 'FooterActionIntentBased',\n    ColumnIntentBased = 'TableColumnActionIntentBased',\n    HeaderStandard = 'HeaderActionStandard',\n    OPHeaderStandard = 'ObjectPageHeaderActionStandard',\n    OPFooterStandard = 'ObjectPageFooterActionStandard'\n}\n\nexport type ObjectPageV2ConfigParameters = {\n    factory: MetadataInstanceInterface;\n    pageKeys: string[];\n    flexChanges: FlexChangesForTransfer;\n    v2Page: v2.SapUiAppPageV2;\n    objectPageConfig?: v2.ObjectPageConfigV2;\n};\n\nexport type SectionPartProperties = {\n    id?: string;\n    type?: SectionTypeV2;\n    schema?: Definition;\n    title?: string;\n};\n", "import type { AnnotationTerm, ConvertedMetadata, EntitySet, EntityType } from '@sap-ux/vocabularies-types';\nimport type { LineItem } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { UIAnnotationTypes, UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport type { Definition, DefinitionOrBoolean } from 'typescript-json-schema';\nimport type { SectionTypeV2 } from '../../v2/types';\nimport type { PresentationVariantV4 } from '../../v4/types';\nimport {\n    DEFINITION_LINK_PREFIX,\n    createAnnotationPath,\n    prepareRef,\n    addSectionTitleAndDescription,\n    getDefinitionKey,\n    replaceNamespaces\n} from '..';\nimport type {\n    FacetConfig,\n    FacetSection,\n    SectionType,\n    SchemaDefinition,\n    SchemaDefinitionKey\n} from '@sap/ux-specification-types';\nimport { DefinitionName, SchemaTag, SchemaKeyName, UIVOCABULARY } from '@sap/ux-specification-types';\nimport { getStableIdPartFromValue } from '../../v4/utils/StableIdHelper';\n\ninterface PropertyInDefinition {\n    definition?: string;\n    property?: string;\n    schema?: Definition;\n}\n\ninterface EnumDefinitionParsingOptions {\n    excludeKey?: string;\n    resolveDefinition?: boolean;\n    // Read enum key from schema keys by passed key property\n    keyProperties?: SchemaKeyName[];\n    // If key property resolution fails, then use description/label as fallback solution for enum key\n    descriptionAsFallback?: boolean;\n}\n\n/**\n * Adds enum values to the app schema. Either as 'enum' -  if multiple entries exist,\n * or as 'const', if it is only a single value\n * @param enumEntries - array of strings for setting up the enum definition\n * @param currentDefinition - currentDefinition in the schema\n */\nexport function addEnumToSchema(enumEntries: string[], currentDefinition: Definition) {\n    if (!currentDefinition) {\n        return;\n    }\n    if (enumEntries.length > 0) {\n        if (enumEntries.length > 1) {\n            currentDefinition.enum = enumEntries;\n        } else {\n            currentDefinition.const = enumEntries[0];\n        }\n    }\n}\n\n/**\n * Adds an enum filled with existing UI annotations of the given list (validAnnotations)\n * @param {EntityType} entityType\n * @param {UIAnnotationTerms[]} validAnnotations\n * @param {Definition} annoPath - the annotation path property in the app schema where the enum shall be added\n */\nexport function addEnumForValidAnnotations(\n    entityType: EntityType,\n    validAnnotations: UIAnnotationTerms[],\n    annoPath: Definition\n): void {\n    const UiAnnotations = entityType?.annotations?.UI;\n    if (!UiAnnotations) {\n        return;\n    }\n    const enumEntries = [];\n    for (const key in UiAnnotations) {\n        const annotation = UiAnnotations[key];\n        if (validAnnotations.indexOf(annotation.term) > -1) {\n            const enumEntry = annotation.qualifier\n                ? `${annotation.term}#${annotation.qualifier}`\n                : `${annotation.term}`;\n            if (enumEntries.indexOf(enumEntry) === -1) {\n                enumEntries.push(enumEntry);\n            }\n        }\n    }\n    addEnumToSchema(enumEntries, annoPath);\n}\n\n/**\n * Adds an enum filled with existing UI annotations for single-tab variants of a table\n * @param {EntityType} entityType\n * @param {Definition} appSchema - app specific JSON schema\n * @param definitionName - name of the definition in the app schema\n */\nexport function addEnumForSingleTabVariant(\n    entityType: EntityType,\n    appSchema: Definition,\n    definitionName: string\n): void {\n    const annoPath = (appSchema.definitions[definitionName] as Definition).properties[SchemaTag.annotationPath];\n    const validAnnotations = [UIAnnotationTerms.SelectionVariant, UIAnnotationTerms.SelectionPresentationVariant];\n    addEnumForValidAnnotations(entityType, validAnnotations, annoPath as Definition);\n}\n\n/**\n * Adds an enum filled with existing UI annotations for multi-tab variants of a table\n * @param appSchema - app specific JSOn schema\n * @param definitionName - name of the definition in the app schema\n * @param {EntitySet} entitySet - current entity set of the page or view\n */\nexport function addEnumForMultiTabVariant(appSchema: Definition, definitionName: string, entitySet: EntitySet): void {\n    const annoPath = (appSchema.definitions[definitionName] as Definition)?.properties.annotationPath;\n    const validAnnotations = [UIAnnotationTerms.SelectionVariant, UIAnnotationTerms.SelectionPresentationVariant];\n    addEnumForValidAnnotations(entitySet.entityType, validAnnotations, annoPath as Definition);\n}\n\n/**\n * Adds the enum values for entitySet as part of the multiple view scenario\n * @param {ConvertedMetadata} oDataServiceAVT - combined service metadata, as returned by annotation vocabularies tools\n * @param appSchema - app specific JSOn schema\n * @param definitionName - name of the definition in the app schema\n */\nexport function addEnumForVariantEntitySet(\n    oDataServiceAVT: ConvertedMetadata,\n    appSchema: Definition,\n    definitionName: string\n): void {\n    const entitySet = (appSchema.definitions[definitionName] as Definition).properties.entitySet as Definition;\n    const enumEntries = [];\n\n    oDataServiceAVT.entitySets.forEach((es: EntitySet) => {\n        enumEntries.push(es.name);\n    });\n    addEnumToSchema(enumEntries, entitySet);\n}\n\n/**\n * Adds an enum filled with existing UI annotations for annotationPath property in FilterBar\n * @param {EntityType} entityType\n * @param appSchema - app specific JSOn schema\n * @param definitionName - name of the definition in the app schema\n */\nexport function addEnumForFilterBarAnnotationPath(\n    entityType: EntityType,\n    appSchema: Definition,\n    definitionName: string\n): void {\n    const annoPath = (appSchema.definitions[definitionName] as Definition).properties.annotationPath as Definition;\n    const validAnnotations = [UIAnnotationTerms.SelectionVariant];\n    addEnumForValidAnnotations(entityType, validAnnotations, annoPath);\n}\n\n/**\n * Adds an enum filled with existing UI FieldGroup annotations for annotationPath property in MultiEdit\n * @param {EntityType} entityType\n * @param appSchema - app specific JSOn schema\n * @param definitionName - name of the definition in the app schema\n */\nexport function addEnumFieldGroupAnnotationPath(\n    entityType: EntityType,\n    appSchema: Definition,\n    definitionName: string\n): void {\n    const annoPath = (appSchema.definitions[definitionName] as Definition).properties.annotationPath as Definition;\n    const validAnnotations = [UIAnnotationTerms.FieldGroup];\n    addEnumForValidAnnotations(entityType, validAnnotations, annoPath);\n}\n\n/**\n * Method adds definition for 'RelatedFacetKeys' as enum with description and adds references to 'RelatedFacetKeys' for custom section definitions.\n * @param {Definition} appSchema App specific schema that potentially gets enhanced\n * @param {string[]>} sectionDefinitions array of section definitions which should be updated with new reference to 'RelatedFacetKeys' enum.\n * @param {FacetSection[]} facetSections Array of facet section objects which is used to generate enum values.\n * @param {Array<keyof Omit<FacetSection, 'custom'>>} idProperties Array of property names which should be looked up in 'FacetSection' object.\n *  Please note that method depends on order and takes first non empty value associated to passed properties.\n */\nexport function addDefinitionForRelatedFacetKeys(\n    appSchema: Definition,\n    sectionDefinitions: string[],\n    facetSections: FacetSection[],\n    idProperties: Array<keyof Omit<FacetSection, 'custom'>>\n): void {\n    const oneOfSections = facetSections.map((section: FacetSection) => {\n        // Loop acceptable properties in received order and find first entry with value\n        const propertyName = idProperties.find((property) => !!section[property]);\n        const schemaIdForSection = section[propertyName];\n        const label = section.label || section.title;\n        return {\n            const: schemaIdForSection,\n            ...(label && { description: label }),\n            ...(section.custom && { custom: section.custom })\n        };\n    });\n    // Change 'relatedFacet' only when we have entries for sections - otherwise use generic.\n    if (oneOfSections.length) {\n        // Create new definition in schema as 'oneOf'.\n        // Simpler way would be to use 'enum', but then there no option to pass description.\n        appSchema.definitions[DefinitionName.RelatedFacetKeys] = {\n            type: 'string',\n            oneOf: oneOfSections\n        } as Definition;\n\n        // Add enum definition\n        for (const name of sectionDefinitions) {\n            const definition = appSchema.definitions[name] as Definition;\n            const property = definition.properties['relatedFacet'];\n            definition.properties['relatedFacet'] = {\n                anyOf: [\n                    {\n                        ...(typeof property === 'object' ? property : undefined),\n                        $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.RelatedFacetKeys}`\n                    },\n                    property\n                ]\n            };\n        }\n    }\n}\n\n/**\n * Receives a facet key and returns the key as used in schema\n * @param facetKey - key of the facet, as used in annotation\n * @returns facetKeyInSchema - key of the facet, as used in schema\n */\nexport function getFacetKeyInSchema(facetKey: string): string {\n    return facetKey.replace('#', '::');\n}\n\n/**\n * Returns the name of a facet and definition, as key in definition\n * @param definition name of definition, as used in schema\n * @param facetKey - key of the facet, as used in annotation\n * @returns definition key of facet, as used in definition\n */\nfunction getFacetDefinitionKey(definition: string, facetKey: string): string {\n    return `${definition}<${getFacetKeyInSchema(facetKey)}>`;\n}\n\n/**\n * Adds an existing schema definition to a new definition in the app schema\n * @param definition name of definition, as used in schema\n * @param facetKey - key of the facet, as used in annotation\n * @param {Definition} appSchema App schema in general\n * @param {boolean} useDefinitionAsKey If set to false, facet key will solely be used as key, else encapsulated within definition key `definition<facetKey>`\n * @param subDefinitionName - sub definition, if different from the definition (e.g. subsection vs. section)\n * @returns {Definition} part of app schema that has been added and filled\n */\nexport function parseSchemaDefinition(\n    definition: string,\n    facetKey: string,\n    appSchema: Definition,\n    useDefinitionAsKey = true,\n    subDefinitionName?: DefinitionName\n): Definition {\n    let facetDefinitionKey = facetKey;\n    if (useDefinitionAsKey) {\n        facetDefinitionKey = getFacetDefinitionKey(subDefinitionName ? subDefinitionName : definition, facetKey);\n    }\n    if (definition && definition !== facetDefinitionKey) {\n        const schemaDefinition = JSON.parse(JSON.stringify(appSchema.definitions[definition])) as Definition;\n        appSchema.definitions[facetDefinitionKey] = schemaDefinition;\n    }\n    return appSchema.definitions[facetDefinitionKey] as Definition;\n}\n\n/**\n * Method receives custom extension base definition name and detect if it should be combined with lineItemId.\n * @param appSchema - the app specific schema that shall get enhanced\n * @param lineItemId - line item ID, as comprise in stable ID\n * @param customColumnDefinitionName - (optional) definition name of custom extension.\n * @returns $ref path for definition.\n */\nexport function getCustomExtensionDefinitionName(\n    appSchema: Definition,\n    lineItemId: string,\n    customExtensionDefinitionName: string\n): string {\n    let definitionName: string;\n    if (\n        lineItemId === DefinitionName.LineItems ||\n        lineItemId === 'LineItemsOfSPV::LineItem' ||\n        lineItemId === `@${UIAnnotationTerms.LineItem}`\n    ) {\n        definitionName = `${DEFINITION_LINK_PREFIX}${customExtensionDefinitionName}`;\n    } else {\n        definitionName = `${DEFINITION_LINK_PREFIX}${customExtensionDefinitionName}<${lineItemId}>`;\n        parseSchemaDefinition(customExtensionDefinitionName, lineItemId, appSchema, true);\n    }\n    return definitionName;\n}\n\n/**\n * Functions used both by V2 and V4 to add the common definitions for a line item to the app schema\n * @param appSchema - the app specific schema that shall get enhanced\n * @param lineItemAnnotation - the UI.LineItem annotation, comprising all records\n * @param entityType - the entity type as part of the AVT ConvertedMetadata\n * @param lineItemId - line item ID, as comprise in stable ID\n * @param customColumnDefinitionName - (optional) definition name of custom column.\n *        Passed in the V4 case, then additional properties of this type will be allowed.\n * @returns the actions definition plus the annotation path to the given line item\n */\nexport function addCommonLineItemDefinitions(\n    appSchema: Definition,\n    lineItemAnnotation: AnnotationTerm<LineItem>,\n    entityType: EntityType,\n    lineItemId: string,\n    customColumnDefinitionName?: string,\n    customActionDefinitionName?: string\n): { actions: Definition; footerActions: Definition; lineItemPath: string } {\n    let lineItemPath: string;\n\n    appSchema.definitions[lineItemId] = {\n        type: 'object',\n        properties: {},\n        description: 'Columns'\n    };\n    appSchema.definitions[lineItemId][SchemaTag.isViewNode] = true;\n    (appSchema.definitions[lineItemId] as Definition).additionalProperties = false;\n    if (customColumnDefinitionName) {\n        const customColumnRef: string = getCustomExtensionDefinitionName(\n            appSchema,\n            lineItemId,\n            customColumnDefinitionName\n        );\n        (appSchema.definitions[lineItemId] as Definition).additionalProperties = { $ref: customColumnRef };\n    }\n    // Copy toolbar\n    const toolBar = lineItemId.startsWith(DefinitionName.LineItems)\n        ? DefinitionName.ToolBar\n        : DefinitionName.ObjectPageToolBar;\n    const schemaIdForToolBar = `${toolBar}<${lineItemId}>`;\n    appSchema.definitions[schemaIdForToolBar] = JSON.parse(JSON.stringify(appSchema.definitions[`${toolBar}`]));\n\n    const schemaIdForActions = `${DefinitionName.Actions}<${prepareRef(lineItemId)}>`;\n    (appSchema.definitions[schemaIdForToolBar] as Definition).properties.actions['$ref'] =\n        DEFINITION_LINK_PREFIX + schemaIdForActions;\n\n    const actionId = lineItemId.startsWith(DefinitionName.LineItems)\n        ? DefinitionName.Actions\n        : DefinitionName.ObjectPageToolBarActions;\n    const actions = (appSchema.definitions[schemaIdForActions] = JSON.parse(\n        JSON.stringify(appSchema.definitions[actionId])\n    ));\n    actions.properties = {};\n    // Handle actions additional properties - add custom action reference if it is supported\n    actions.additionalProperties = false;\n    if (customActionDefinitionName) {\n        const customActionRef = getCustomExtensionDefinitionName(appSchema, lineItemId, customActionDefinitionName);\n        actions.additionalProperties = { $ref: customActionRef };\n    }\n\n    // Copy LR footer\n    let footerActions, schemaIdForFooter;\n    if (lineItemId === DefinitionName.LineItems && appSchema.properties['footer']) {\n        schemaIdForFooter = `${DefinitionName.Footer}<${lineItemId}>`;\n        (appSchema.properties['footer'] as Definition).$ref = `${DEFINITION_LINK_PREFIX}${schemaIdForFooter}`;\n\n        appSchema.definitions[schemaIdForFooter] = JSON.parse(\n            JSON.stringify(appSchema.definitions[DefinitionName.GenericFooter])\n        );\n        const schemaIdForFooterActions = `${DefinitionName.FooterActions}<${prepareRef(lineItemId)}>`;\n        (appSchema.definitions[schemaIdForFooter] as Definition).properties.actions['$ref'] =\n            DEFINITION_LINK_PREFIX + schemaIdForFooterActions;\n\n        footerActions = appSchema.definitions[schemaIdForFooterActions] = JSON.parse(\n            JSON.stringify(appSchema.definitions[DefinitionName.Actions])\n        );\n        footerActions.properties = {};\n        footerActions.additionalProperties = false;\n    }\n    //Determine annotation path\n    if (lineItemAnnotation) {\n        lineItemPath = createAnnotationPath(\n            entityType?.fullyQualifiedName,\n            lineItemAnnotation.term,\n            lineItemAnnotation.qualifier\n        );\n        if (lineItemPath) {\n            appSchema.definitions[schemaIdForToolBar][SchemaTag.annotationPath] = lineItemPath;\n            if (footerActions) {\n                appSchema.definitions[schemaIdForFooter][SchemaTag.annotationPath] = lineItemPath;\n            }\n        }\n    }\n\n    return { actions, footerActions, lineItemPath };\n}\n\nexport enum DataType {\n    String = 'String',\n    Rating = 'Rating',\n    Progress = 'Progress',\n    DataPoint = 'DataPoint',\n    Contact = 'Contact',\n    Address = 'Address',\n    Chart = 'Chart',\n    FieldGroup = 'FieldGroup',\n    IntentBasedNavigation = 'IntentBasedNavigation'\n}\n\n/**\n * Common logic to build the dataType tag from an annotation type\n * @param {string} annotation - the annotation type\n * @returns the dataType as string\n */\nexport function getDataTypeFromAnnotation(annotation: string): string {\n    const dataType = annotation.substring(annotation.lastIndexOf('.') + 1);\n    return dataType.replace(/Type$/, '');\n}\n\n/**\n * Determines the dataType of the target that shall be added to a property in schema\n * @param target - the given target\n * @returns - the dataType as string\n */\nexport function determineDataTypeOfTarget(target: any): string | undefined {\n    let dataType: string;\n\n    if (target?.Value) {\n        if (target.Visualization === 'UI.VisualizationType/Rating') {\n            dataType = DataType.Rating;\n        } else if (target.Visualization === 'UI.VisualizationType/Progress') {\n            dataType = DataType.Progress;\n        } else if (target.$Type === 'com.sap.vocabularies.UI.v1.DataPointType') {\n            dataType = DataType.DataPoint;\n        } else {\n            dataType = target.Value?.$target?.type.replace('Edm.', '');\n        }\n    } else if (target?.$Type?.startsWith('com.sap.vocabularies.')) {\n        dataType = getDataTypeFromAnnotation(target.$Type);\n    }\n    return dataType;\n}\n\n/**\n * Determines the dataType that shall be added to a property in schema, for any kind of field like\n * - field of a field group\n * - line item record\n * - selection field\n * @param field - the given field\n * @returns - the dataType as string\n */\nexport function determineDataType(field: object): string | undefined {\n    let dataType: string;\n    try {\n        if (field['Value']) {\n            if (field['Value'].$target?.type) {\n                dataType = field['Value'].$target.type.replace('Edm.', '');\n            } else {\n                dataType = DataType.String;\n            }\n        } else if (field['Target']) {\n            dataType = determineDataTypeOfTarget(field['Target']?.$target);\n        } else if (field['$target']) {\n            dataType = field['$target'].type.replace('Edm.', '');\n        } else if (field['$Type']?.startsWith('com.sap.vocabularies.')) {\n            dataType = getDataTypeFromAnnotation(field['$Type']);\n        } else if (field['type']) {\n            dataType = field['type'];\n        }\n        return dataType;\n    } catch (error) {\n        return dataType;\n    }\n}\n\n/**\n * Adds the dataType to the given schema field definition, if the data type cane be determined\n * @param definition - given schema definition\n * @param field - given field definition = annotation property, at AVT\n */\nexport function addDataTypeToDefinition(definition: object, field: object): void {\n    const dataType = determineDataType(field);\n    if (dataType) {\n        definition[SchemaTag.dataType] = dataType;\n    }\n}\n\n/**\n * Creates a definition link for a facet and definition name\n * @param {DefinitionName} definition - name of definition, as used in schema\n * @param {string} facetKey - key of the facet, as used in annotation\n * @returns definition link of facet, as used in definition\n */\nexport function getFacetDefinitionLink(definition: DefinitionName | SectionTypeV2, facetKey: string): string {\n    return `${DEFINITION_LINK_PREFIX}${getFacetDefinitionKey(definition, facetKey)}`;\n}\n\n/**\n * Creates and adds a reference link to a definition\n * @param {Definition} schemaPart - part of schema to add $ref to\n * @param {string} schemaRef - reference to be added\n * @param {string} schemaKey - key to be encapsulated within reference as `schemaRef<schemaKey>`\n * @returns reference link of facet, as used in definition\n */\nexport function addDefinitionRef(schemaPart: Definition, schemaRef: string, schemaKey?: string): void {\n    const schemaLink = schemaKey ? `${schemaRef}<${schemaKey}>` : schemaRef;\n    schemaPart.$ref = `${DEFINITION_LINK_PREFIX}${schemaLink}`;\n}\n\n/**\n * Extracts annotationPath from facet or Chart/LineItem fullyQualifiedName\n * @param facet facet or Chart/LineItem\n * @returns {string} annotationPath\n */\nexport function getFacetAnnotationPath(facet: FacetConfig | PresentationVariantV4 | object): string | undefined {\n    let result;\n    if ((facet as FacetConfig).annotationPath) {\n        result = (facet as FacetConfig).annotationPath;\n    } else if ((facet as PresentationVariantV4).fullyQualifiedName) {\n        const [namespace, target] = (facet as PresentationVariantV4).fullyQualifiedName.split(`@${UIVOCABULARY}`);\n        result = `/${namespace}/@${UIVOCABULARY}${target}`;\n    }\n    return result;\n}\n\n/**\n * Adds definitions for Address and Contact items in object page sections to the app schema\n * @param {FacetConfig} facet - current facet.\n * @param {string} facetKey - facet key.\n * @param {object} sections - schema of current sections definition.\n * @param {object} appSchema - app specific schema that potentially gets enhanced.\n * @param {SectionType} sectionPrefix - prefix to distinguish Section and HeaderSection\n */\nexport function handleAddressContact(\n    facet: FacetConfig,\n    facetKey: string,\n    sections: Definition,\n    appSchema: Definition,\n    sectionPrefix: SectionType,\n    subSectionPrefix?: SectionType,\n    versionPostfix = ''\n) {\n    const definitionName = `ObjectPage${sectionPrefix}${facet.base}${versionPostfix}` as DefinitionName;\n    const subDefinitionName = `ObjectPage${subSectionPrefix}${facet.base}${versionPostfix}` as DefinitionName;\n    sections.properties[facetKey] = {\n        $ref: getFacetDefinitionLink(subSectionPrefix ? subDefinitionName : definitionName, facetKey)\n    };\n    const definition = parseSchemaDefinition(\n        subSectionPrefix ? subDefinitionName : definitionName,\n        facetKey,\n        appSchema,\n        true,\n        subSectionPrefix ? subDefinitionName : undefined\n    );\n    addSectionTitleAndDescription(facet, definition, facetKey);\n    definition[SchemaTag.annotationPath] = facet.annotationPath;\n    definition[SchemaTag.isViewNode] = true;\n}\n\n/**\n * Method updates schema definition's property.\n * @param {DefinitionOrBoolean} definition Definition object.\n * @param {string} key Property name.\n * @param {unknown} value New value.\n */\nfunction updateSchemaProperty(definition: DefinitionOrBoolean, key: string, value: unknown): void {\n    if (typeof definition === 'object') {\n        definition[key] = value;\n    }\n}\n\n/**\n * Add schema definitions for fields of createWithParameterDialog\n * @param {object} appSchema - Application-specific schema, to be enhanced\n * @param {EntityType} entityType - Given entity type for which entries shall get generated\n * @param {string=} suffix - floorplan specific suffix (optional)\n */\nexport function addFieldsType(appSchema: Definition, entityType: EntityType, suffix = prepareRef('')): void {\n    const itemsEnum = entityType.entityProperties.map((property) => property.name);\n    const fields4Dialog = appSchema.definitions[`${DefinitionName.Fields4Dialog}${suffix}`] as Definition;\n    updateSchemaProperty(fields4Dialog.properties.fields['items'], 'enum', itemsEnum);\n}\n\n/**\n * Method finds first schema definition key by passed key names.\n * @param keys Schema definitions keys to search in.\n * @param keyProperties Key properties to use as query.\n * @returns Found first schema definition key.\n */\nfunction findFirstSchemaDefinitionKey(\n    keys?: SchemaDefinitionKey[],\n    keyProperties?: SchemaKeyName[]\n): SchemaDefinitionKey | undefined {\n    if (!keyProperties || !keys) {\n        return;\n    }\n    for (const keyProperty of keyProperties) {\n        const schemaDefinitionKey = keys.find((innerKey: SchemaDefinitionKey) => innerKey.name === keyProperty);\n        if (schemaDefinitionKey) {\n            return schemaDefinitionKey;\n        }\n    }\n}\n\n/**\n * Method returns enum entry for passed schema definition.\n * @param {Definition} appSchema App specific JSON schema\n * @param {SchemaDefinition} definition Target definition to resolve description.\n * @param {string} key Default enum key.\n * @param {EnumDefinitionParsingOptions} [options] Additional parsing options.\n * @returns {string | undefined} Enum entry of passed definition.\n */\nexport function getEnumEntry(\n    appSchema: Definition,\n    definition: SchemaDefinition,\n    key: string,\n    options?: EnumDefinitionParsingOptions\n): { const: string; description: string | undefined; custom?: boolean } {\n    let description = definition.description;\n    let keys = definition.keys;\n    let custom = !definition.annotationPath;\n    if (definition.$ref) {\n        // Try to read description from reference\n        const definitionKey = getDefinitionKey(definition.$ref);\n        const refDefinition: SchemaDefinition | boolean = appSchema.definitions?.[definitionKey];\n        if (typeof refDefinition === 'object') {\n            custom = !refDefinition.annotationPath;\n            if (options?.resolveDefinition && !description) {\n                description = refDefinition.description;\n                keys = refDefinition.keys;\n            }\n        }\n    }\n    // Resolve enum key\n    let enumKey = key;\n    // Read key from schema keys by passed property\n    const schemaDefinitionKey: SchemaDefinitionKey | undefined = findFirstSchemaDefinitionKey(\n        keys,\n        options?.keyProperties\n    );\n    if (schemaDefinitionKey) {\n        enumKey = schemaDefinitionKey.value;\n    } else if (options?.descriptionAsFallback && description) {\n        // Fallback to use description/label as key. It is fallback solution for some extensions.\n        enumKey = description;\n    }\n\n    return {\n        const: enumKey,\n        ...(description && { description }),\n        ...(custom && { custom })\n    };\n}\n\n/**\n * Method adds enum with key and description to schema definition.\n * Description can be easily used by UI to describe enum value/key.\n * @param {Definition} appSchema App specific JSON schema\n * @param {DefinitionOrBoolean} origin Origin schema object containing key and description.\n * @param {PropertyInDefinition} target Target to update with enum.\n * @param {EnumDefinitionParsingOptions} [options] Additional parsing options.\n * @param {boolean} resolveDefinition Should logic use fallback to look into reference definition.\n */\nexport function addDescriptiveEnumDefinition(\n    appSchema: Definition,\n    origin: DefinitionOrBoolean,\n    target: PropertyInDefinition,\n    options?: EnumDefinitionParsingOptions\n): void {\n    if (typeof origin !== 'object') {\n        // Safe checks\n        return;\n    }\n    const oneOfEnum: Array<{ const: string; description?: string }> = [];\n    for (const key in origin.properties) {\n        if (options?.excludeKey === key) {\n            continue;\n        }\n        const property = origin.properties[key] as SchemaDefinition;\n        const entry = getEnumEntry(appSchema, property, key, options);\n\n        oneOfEnum.push(entry);\n    }\n    const definition = appSchema.definitions[target.definition] || target.schema;\n    if (typeof definition === 'object') {\n        if (target.property) {\n            const property = definition.properties?.[target.property];\n            updateSchemaProperty(property, 'oneOf', oneOfEnum);\n        } else {\n            updateSchemaProperty(definition, 'oneOf', oneOfEnum);\n        }\n    }\n}\n\n/**\n * Extracts the key of an action that shall be added to schema as SchemaTag.keys\n * @param action - full-blown action ID\n * @param isAction - indicates an action\n * @returns action ID stripped down to the last key part\n */\nexport function getActionKey(action: string, isAction: boolean): { key: string; ns: string } {\n    let actionKey = action;\n    let namespace;\n    if (actionKey.indexOf('(') > 0) {\n        actionKey = actionKey.substring(0, actionKey.indexOf('('));\n    }\n    if (isAction && actionKey.indexOf('.') > 0) {\n        const firstSlash = actionKey.indexOf('/');\n        const lastDot = actionKey.lastIndexOf('.');\n        namespace = firstSlash > 0 ? actionKey.substring(0, firstSlash) : actionKey.substring(0, lastDot);\n        actionKey = firstSlash > 0 ? actionKey.substring(firstSlash + 1) : actionKey.substring(lastDot + 1);\n    }\n    if (!namespace) {\n        namespace = action.substring(0, action.lastIndexOf('.'));\n    }\n    return { key: actionKey.replace(/@/g, ''), ns: namespace };\n}\n\n/**\n * Adds the schema tag key to a line item record or property in schema\n * @param lineItemRecord - the given line item record\n * @param properties - list of all properties in schema\n * @param schemaKey - key of the given property\n */\nexport function addKeyToDefinition(lineItemRecord: object, properties: object, schemaKey: string): void {\n    try {\n        if (lineItemRecord['Value']) {\n            properties[schemaKey][SchemaTag.keys] = [\n                { name: SchemaKeyName.value, value: getStableIdPartFromValue(lineItemRecord['Value']) }\n            ];\n        } else if (\n            lineItemRecord['$Type'] === UIAnnotationTypes.DataFieldWithAction ||\n            lineItemRecord['$Type'] === UIAnnotationTypes.DataFieldForAction\n        ) {\n            const { key, ns } = getActionKey(lineItemRecord['Action'], true);\n            properties[schemaKey][SchemaTag.keys] = [{ name: SchemaKeyName.action, value: key }];\n            if (ns) {\n                properties[schemaKey][SchemaTag.target] = ns;\n            }\n        } else if (lineItemRecord['$Type'] === UIAnnotationTypes.DataFieldForAnnotation) {\n            const { key } = getActionKey(lineItemRecord['Target'].value, false);\n            properties[schemaKey][SchemaTag.keys] = [{ name: SchemaKeyName.target, value: replaceNamespaces(key) }];\n            properties[schemaKey][SchemaTag.target] =\n                lineItemRecord['Target']?.$target?.fullyQualifiedName?.split('@')[0];\n        } else if (\n            lineItemRecord['$Type'] === UIAnnotationTypes.DataFieldForIntentBasedNavigation ||\n            lineItemRecord['$Type'] === UIAnnotationTypes.DataFieldWithIntentBasedNavigation\n        ) {\n            const actionId =\n                typeof lineItemRecord['Action'] === 'string' ? lineItemRecord['Action'] : lineItemRecord['Action'].path;\n            const { key, ns } = getActionKey(actionId, true);\n            properties[schemaKey][SchemaTag.keys] = [\n                { name: `SemanticObject`, value: lineItemRecord[SchemaKeyName.semanticObject] },\n                { name: `Action`, value: key }\n            ];\n            if (ns) {\n                properties[schemaKey][SchemaTag.target] = ns;\n            }\n        }\n    } catch (error) {\n        return;\n    }\n}\n", "import type { ExtensionLogger } from '@sap/ux-specification-types';\nimport { LogSeverity, MANIFESTPATH } from '@sap/ux-specification-types';\nimport { log } from '../../extensionLogger';\nimport i18next from 'i18next';\nimport * as distTagsJSON from './dist_tag.json';\nimport { version as packageJsonVersion } from '../../../package.json';\n\nexport class DistTagEvaluator {\n    static distTagsOfSpec: string[] = [];\n\n    constructor() {\n        if (DistTagEvaluator.distTagsOfSpec.length === 0) {\n            DistTagEvaluator.distTagsOfSpec = this.getDistTagsOfVersion();\n        }\n    }\n\n    /**\n     * Resets the buffered list of dist tags (used for unit tests)\n     */\n    static resetDistTagsOfSpec(): void {\n        DistTagEvaluator.distTagsOfSpec = [];\n    }\n\n    /**\n     * Retrieves the actual spec version from package.json\n     * @returns the version, if found in package.json\n     */\n    public getSpecVersion(): string | undefined {\n        return packageJsonVersion;\n    }\n\n    /**\n     * Determines the relevant list of dist tags for the current spec version.\n     * The dist tags are read from the dist_tag.json (copy from https://github.wdf.sap.corp/NPMJS/FIORI_ELEMENT_SPECIFICATION-1.0.0/blob/master/dist_tag.json).\n     * The spec vrsion is read from package.json.\n     * @returns an array of the dist tags\n     */\n    public getDistTagsOfVersion(): string[] {\n        let result: string[] = [];\n        const distTags = distTagsJSON.distTags;\n\n        let specVersion = this.getSpecVersion();\n        if (specVersion) {\n            if (specVersion.startsWith('9.9.9')) {\n                //master ==> take the newest version\n                result = distTags[0].distTag;\n            } else {\n                specVersion = specVersion.substring(0, specVersion.lastIndexOf('.'));\n                const tag = distTags.find((tag) => tag.version.startsWith(specVersion));\n                if (tag) {\n                    result = tag.distTag;\n                }\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Checks if the given minUI5Version and spec version fit together, based on the distTags stord in ./dist_tag.json\n     * @param {string} minUI5Version - minUI5Version from manifest\n     * @param {ExtensionLogger} logger - logger as passed from the API\n     */\n    public doesUi5VersionFitDistTags(minUI5Version: string, logger: ExtensionLogger): void {\n        //env variable is used by tests to disable the check, as test projects may not correspond to the given spec version\n        if (process.env.SPEC_NO_VERSION_CHECK === 'true') {\n            return;\n        }\n        if (!minUI5Version || minUI5Version.startsWith('$')) {\n            const message = i18next.t('UNKNOWNMINUI5VERSION', { minUI5Version });\n            log(logger, {\n                severity: LogSeverity.Info,\n                message,\n                location: {\n                    path: MANIFESTPATH\n                }\n            });\n            return;\n        }\n        const actualVersion =\n            minUI5Version === 'latest' ? 'latest' : minUI5Version.substring(0, minUI5Version.lastIndexOf('.'));\n        if (\n            DistTagEvaluator.distTagsOfSpec.findIndex((distTagVersion) => distTagVersion.endsWith(actualVersion)) === -1\n        ) {\n            const message = i18next.t('WRONGMINUI5VERSION', { minUI5Version });\n            log(logger, {\n                severity: LogSeverity.Warning,\n                message,\n                location: {\n                    path: MANIFESTPATH\n                }\n            });\n        }\n    }\n}\n", "{\n  \"schema-version\": \"1.0\",\n  \"externalRepository\": \"npmjs.org\",\n  \"org\": \"sap\",\n  \"project\": \"ux-specification\",\n  \"rootPpmsObjectId\": \"73555000100200012888\",\n  \"rootPpmsObject\": \"FIORI ELEMENT SPEC 1.0\",\n  \"distTags\": [\n    {\n      \"version\": \"1.120\",\n      \"distTag\": [\n        \"latest\",\n        \"UI5-1.120\",\n        \"UI5-1.121\",\n        \"UI5-1.122\",\n        \"UI5-1.123\",\n        \"UI5-1.124\"\n      ]\n    },\n    {\n      \"version\": \"1.108\",\n      \"distTag\": [\n        \"UI5-1.108\",\n        \"UI5-1.109\",\n        \"UI5-1.110\",\n        \"UI5-1.111\",\n        \"UI5-1.112\",\n        \"UI5-1.113\",\n        \"UI5-1.114\",\n        \"UI5-1.115\",\n        \"UI5-1.116\",\n        \"UI5-1.117\",\n        \"UI5-1.118\",\n        \"UI5-1.119\"\n      ]\n    },\n    {\n      \"version\": \"1.102\",\n      \"distTag\": [\n        \"UI5-1.100\",\n        \"UI5-1.101\",\n        \"UI5-1.102\",\n        \"UI5-1.103\",\n        \"UI5-1.104\",\n        \"UI5-1.105\",\n        \"UI5-1.106\",\n        \"UI5-1.107\"\n      ]\n    },\n    {\n      \"version\": \"1.96\",\n      \"distTag\": [\n        \"UI5-1.90\",\n        \"UI5-1.91\",\n        \"UI5-1.92\",\n        \"UI5-1.93\",\n        \"UI5-1.94\",\n        \"UI5-1.95\",\n        \"UI5-1.96\",\n        \"UI5-1.97\",\n        \"UI5-1.98\",\n        \"UI5-1.99\"\n      ]\n    },\n    {\n      \"version\": \"1.84\",\n      \"distTag\": [\n        \"UI5-1.78\",\n        \"UI5-1.79\",\n        \"UI5-1.80\",\n        \"UI5-1.81\",\n        \"UI5-1.82\",\n        \"UI5-1.83\",\n        \"UI5-1.84\",\n        \"UI5-1.85\",\n        \"UI5-1.86\",\n        \"UI5-1.87\",\n        \"UI5-1.88\",\n        \"UI5-1.89\"\n      ]\n    },\n    {\n      \"version\": \"1.71\",\n      \"distTag\": [\n        \"UI5-1.52\",\n        \"UI5-1.53\",\n        \"UI5-1.54\",\n        \"UI5-1.55\",\n        \"UI5-1.56\",\n        \"UI5-1.57\",\n        \"UI5-1.58\",\n        \"UI5-1.59\",\n        \"UI5-1.60\",\n        \"UI5-1.61\",\n        \"UI5-1.62\",\n        \"UI5-1.63\",\n        \"UI5-1.64\",\n        \"UI5-1.65\",\n        \"UI5-1.66\",\n        \"UI5-1.67\",\n        \"UI5-1.68\",\n        \"UI5-1.69\",\n        \"UI5-1.70\",\n        \"UI5-1.71\",\n        \"UI5-1.72\",\n        \"UI5-1.73\",\n        \"UI5-1.74\",\n        \"UI5-1.75\",\n        \"UI5-1.76\",\n        \"UI5-1.77\"\n      ]\n    }\n  ]\n}", "{\n  \"name\": \"@sap/ux-specification\",\n  \"version\": \"1.120.8\",\n  \"displayName\": \"SAP Fiori tools - Specification\",\n  \"description\": \"SAP Fiori tools - Specification\",\n  \"files\": [\n    \"dist\",\n    \"CHANGELOG.md\",\n    \"!dist/scripts\"\n  ],\n  \"main\": \"dist/index-min.js\",\n  \"engines\": {\n    \"node\": \">= 18.0.0 < 19.0.0 || >= 20.0.0 < 21.0.0 || >= 22.0.0\",\n    \"yarn\": \">=1.22.19 < 2\"\n  },\n  \"scripts\": {\n    \"clean:before\": \"rimraf ./dist ./types ./schemas\",\n    \"clean:doc\": \"rimraf ./dist/documentation\",\n    \"compile\": \"tsc --project ./tsconfig.build.json\",\n    \"compile:watch\": \"tsc --build ./tsconfig.build.json --pretty --watch\",\n    \"bundle\": \"node esbuild\",\n    \"bundle:dev\": \"node esbuild --minify=false\",\n    \"bundle:watch\": \"node esbuild --watch --stats --minify=false\",\n    \"build\": \"npm-run-all -l -s clean:before -s compile -p create-json-schemas macros copy-templates -p copy-json-schemas htmlV2 htmlV4 -s bundle\",\n    \"build:dev\": \"npm-run-all -l -s clean:before -s compile -p create-json-schemas copy-templates -s copy-json-schemas bundle:dev\",\n    \"build:doc\": \"npm-run-all -l -s clean:doc -s compile -p htmlV2 htmlV4 -s bundle\",\n    \"build:schemas\": \"npm-run-all -l -s create-json-schemas copy-json-schemas\",\n    \"build:snap\": \"yarn build:dev && yarn update-snapshots\",\n    \"create-json-schemas\": \"ts-node ./scripts/to-json-schema.ts \",\n    \"copy-json-schemas\": \"cpy ./schemas/** dist --parents\",\n    \"copy-templates\": \"cpy --flat src/sync/v2/export/templates/** dist/templates\",\n    \"deleteSnapshots\": \"rimraf **/_file_snapshots_\",\n    \"docuV2\": \"ts-node ./scripts/extractDocu.ts --version=v2 format=excel\",\n    \"docuV4\": \"ts-node ./scripts/extractDocu.ts --version=v4 format=excel\",\n    \"htmlV2\": \"ts-node ./scripts/extractDocu.ts --version=v2 --format=html\",\n    \"htmlV4\": \"ts-node ./scripts/extractDocu.ts --version=v4 --format=html\",\n    \"iXiaSoftV2\": \"ts-node ./scripts/extractDocu.ts --version=v2 --format=iXiaSoft\",\n    \"iXiaSoftV4\": \"ts-node ./scripts/extractDocu.ts --version=v4 --format=iXiaSoft\",\n    \"lint\": \"eslint . --ext .ts\",\n    \"lint:summary\": \"eslint . --ext .ts -f summary\",\n    \"lint:fix\": \"eslint . --ext .ts --fix\",\n    \"lint:report\": \"eslint . --ext .ts -f multiple\",\n    \"lint:report:jslint\": \"eslint . --ext .ts -o reports/lint/eslint.jslint.xml -f jslint-xml\",\n    \"macros\": \"ts-node ./scripts/macros/index.ts\",\n    \"test\": \"jest && node ../../scripts/scov.js reports/test/unit/coverage/lcov.info\",\n    \"test:ci\": \"jest --ci --forceExit --detectOpenHandles && node ../../scripts/scov.js reports/test/unit/coverage/lcov.info\",\n    \"update-snapshots\": \"jest --updateSnapshot\",\n    \"watch\": \"npm-run-all -l -s clean:before -p compile create-json-schemas macros copy-templates -p copy-json-schemas -s bundle:watch\",\n    \"watch:doc\": \"npm-run-all -l -s clean:doc -s compile -p htmlV2 htmlV4 -s bundle:watch\"\n  },\n  \"publisher\": \"SAPSE\",\n  \"license\": \"SEE LICENSE IN LICENSE\",\n  \"dependencies\": {\n    \"@sap-ux/fe-fpm-writer\": \"0.24.9\",\n    \"@sap-ux/vocabularies-types\": \"0.10.8\"\n  },\n  \"devDependencies\": {\n    \"@sap-ux/annotation-converter\": \"0.8.9\",\n    \"@sap-ux/edmx-parser\": \"0.7.1\",\n    \"@sap/ux-specification-types\": \"1.120.8\",\n    \"@sapui5/ts-types\": \"1.120.9\",\n    \"@types/d3\": \"7.4.3\",\n    \"@types/jquery\": \"3.5.29\",\n    \"@types/mem-fs-editor\": \"7.0.7\",\n    \"@ui5/flexibility-utils\": \"0.1.3\",\n    \"@xml-tools/ast\": \"5.0.5\",\n    \"@xml-tools/parser\": \"1.0.11\",\n    \"axios\": \"1.6.8\",\n    \"cpy-cli\": \"5.0.0\",\n    \"d3\": \"7.9.0\",\n    \"deepmerge\": \"4.3.1\",\n    \"ejs\": \"3.1.9\",\n    \"excel4node\": \"1.8.2\",\n    \"i18next\": \"23.10.1\",\n    \"jquery\": \"3.7.1\",\n    \"jsdom\": \"24.0.0\",\n    \"lodash.unset\": \"4.5.2\",\n    \"mem-fs-editor\": \"9.7.0\",\n    \"path\": \"0.12.7\",\n    \"reflect-metadata\": \"0.2.2\",\n    \"semver\": \"7.6.0\",\n    \"typescript-json-schema\": \"0.57.0\",\n    \"xml-js\": \"1.6.11\"\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lint-staged\"\n    }\n  },\n  \"lint-staged\": {},\n  \"jestSonar\": {\n    \"reportFile\": \"test-report.xml\",\n    \"reportPath\": \"reports/test/unit\"\n  },\n  \"eslint-formatter-multiple\": {\n    \"formatters\": [\n      {\n        \"name\": \"stylish\",\n        \"output\": \"console\"\n      },\n      {\n        \"name\": \"json\",\n        \"output\": \"file\",\n        \"path\": \"reports/lint/eslint.json\"\n      },\n      {\n        \"name\": \"checkstyle\",\n        \"output\": \"file\",\n        \"path\": \"reports/lint/eslint.checkstyle.xml\"\n      }\n    ]\n  }\n}\n", "import type { ConvertedMetadata, EntitySet, EntityType, ResolutionTarget } from '@sap-ux/vocabularies-types';\nimport type {\n    File,\n    ImportProjectParameters,\n    GenerateAppSchemaParameters,\n    ExtensionLogger,\n    ImportAllConfigsParameters,\n    Schemas\n} from '@sap/ux-specification-types';\nimport {\n    LogSeverity,\n    TemplateType,\n    v2,\n    v4,\n    DirName,\n    FileName,\n    UIVOCABULARY,\n    FioriElementsVersion,\n    ManifestSection,\n    SchemaType,\n    Features,\n    MANIFESTPATH\n} from '@sap/ux-specification-types';\nimport {\n    generateAnalyticalListReportSchemaV2,\n    generateListReportSchemaV2,\n    generateObjectPageSchemaV2,\n    generateOVPInterfaceV2\n} from '../v2/generate';\nimport { getPages as getPagesV2, V2AppProvider } from '../v2/import/app/appProvider';\nimport { V2OvpProvider } from '../v2/import/app/ovpProvider';\nimport { generateObjectPageSchemaV4, generateListReportSchemaV4, generateMacrosSchemaDefinition } from '../v4/generate';\nimport { getPageCustomViewFile } from '../v4/utils/utils';\nimport { getPages as getPagesV4, V4AppProvider } from '../v4/import/app';\nimport type { AppProvider } from './appProvider';\nimport {\n    findAlias,\n    getSchemaFilePath,\n    getTemplateTypeFromManifest,\n    getVersionFromManifest,\n    parseAndMergeAndConvert,\n    isFeatureSupported,\n    determineV4PageTemplateType\n} from './utils';\nimport i18next from 'i18next';\nimport { log } from '../../extensionLogger';\nimport { initI18n } from '../../i18n/i18n';\nimport { getGenericSchema } from '../../specification/schemaAccess';\nimport { DistTagEvaluator } from './distTagEvaluator';\n\ninterface UiEntityTypes {\n    Facets: string[];\n    LineItems: string[];\n}\n\n/**\n * Generates an object comprising all generic schemas\n * @param {TemplateType} templateType - Template type\n * @param {FioriElementsVersion} fioriElementsVersion - Fiori Elements version\n * @returns {Object} genericSchemas\n */\nasync function getGenericSchemas(\n    templateType: TemplateType,\n    fioriElementsVersion: FioriElementsVersion\n): Promise<Schemas> {\n    const genericSchemas: Schemas = {};\n    let schemaTypes = [];\n    schemaTypes = [SchemaType.Application];\n    switch (templateType) {\n        case TemplateType.ListReportObjectPageV4:\n        case TemplateType.AnalyticalListPageV4:\n            schemaTypes.push(SchemaType.ListReport, SchemaType.ObjectPage, SchemaType.FPMCustomPage);\n            break;\n        case TemplateType.FreestylePageV4:\n            schemaTypes.push(\n                SchemaType.ListReport,\n                SchemaType.ObjectPage,\n                SchemaType.FreestylePage,\n                SchemaType.FPMCustomPage\n            );\n            break;\n        case TemplateType.ListReportObjectPageV2:\n            schemaTypes.push(SchemaType.ListReport, SchemaType.ObjectPage);\n            break;\n        case TemplateType.AnalyticalListPageV2:\n            schemaTypes.push(SchemaType.AnalyticalListPage, SchemaType.ObjectPage);\n            break;\n        case TemplateType.OverviewPageV2:\n            schemaTypes.push(SchemaType.OverviewPage);\n            break;\n        default:\n            break;\n    }\n    for (const schemaType of schemaTypes) {\n        const schemaFile = getSchemaFilePath(schemaType);\n        genericSchemas[schemaFile.filename] = await getGenericSchema(fioriElementsVersion, schemaType);\n    }\n    return genericSchemas;\n}\n\n/**\n * Get the relevant UI.ListItem and UI.Facet entity sets\n * @param {ConvertedMetadata} oDataServiceAVT - Annotations as converted by AVT\n * @returns a fitered list of facet and line item annotations\n */\nfunction getAnnotationsForUi(oDataServiceAVT: ConvertedMetadata): UiEntityTypes {\n    const filteredEntityTypes: UiEntityTypes = {\n        Facets: [],\n        LineItems: []\n    };\n    const allEntityTypes = oDataServiceAVT?.entityTypes;\n    if (!allEntityTypes) {\n        return filteredEntityTypes;\n    }\n    const alias = findAlias(UIVOCABULARY, oDataServiceAVT);\n    for (const entity of allEntityTypes) {\n        if (!entity.annotations || !entity.annotations[alias]) {\n            continue;\n        }\n        const { LineItem, Facets } = entity.annotations[alias];\n        if (LineItem && !LineItem.qualifier) {\n            filteredEntityTypes.LineItems.push(entity.name);\n        }\n        if (Facets && !Facets.qualifier) {\n            filteredEntityTypes.Facets.push(entity.name);\n        }\n    }\n    return filteredEntityTypes;\n}\n\nexport function getEntitySetByEntitySetName(entitySetName: string, oDataServiceAVT: ConvertedMetadata): EntitySet {\n    return oDataServiceAVT?.entitySets && oDataServiceAVT.entitySets.find((es) => es.name === entitySetName);\n}\n\n/**\n * Determines the target entitySet and entityType of a contextPath that uses at least one NavigationProperty\n * @param {ResolutionTarget<any>} resolvedContextPath - contextPath, as resolved by AVT\n * @param {ConvertedMetadata} oDataServiceAVT - service AVT\n *\n * @returns { entityType: EntityType; entitySet: EntitySet } - target entityType and entitySet\n */\nfunction resolveNavigationProperty(\n    resolvedContextPath: ResolutionTarget<any>,\n    oDataServiceAVT: ConvertedMetadata\n): { entityType: EntityType; entitySet: EntitySet } {\n    const entityType = resolvedContextPath.target.targetType;\n    let entitySet = resolvedContextPath.objectPath[1] as EntitySet;\n    for (let index = 2; index < resolvedContextPath.objectPath.length; index++) {\n        const element = resolvedContextPath.objectPath[index];\n        if (entitySet && element['_type'] === 'NavigationProperty') {\n            //Consider containment relations\n            const bindingName = element['containsTarget']\n                ? `${element['name']}/${element['partner']}`\n                : element['name'];\n\n            const navPropertyBinding = entitySet.navigationPropertyBinding?.[bindingName];\n            entitySet = oDataServiceAVT.entitySets.find((set) => set.name === navPropertyBinding?.name);\n        }\n    }\n    return { entityType, entitySet };\n}\n\n/**\n * The function returns an EntityType, EntitySet based on the given contextPath or entitySet\n * @param {ConvertedMetadata} oDataServiceAVT service AVT\n * @param {string} contextPath contextPath of a page\n * @param {string} entitySetName entitySet of a page\n * @param {ExtensionLogger} [logger] - Logger class for logging messages\n *\n * @returns {EntityType} entityType of a page\n */\nexport function getEntityTypeEntitySetFromContextPath(\n    oDataServiceAVT: ConvertedMetadata,\n    contextPath?: string,\n    entitySetName?: string,\n    logger?: ExtensionLogger\n): { entityType: EntityType; entitySet: EntitySet } {\n    const resolvedContextPath: ResolutionTarget<any> = oDataServiceAVT?.resolvePath(contextPath || `/${entitySetName}`);\n    let entityType: EntityType, entitySet: EntitySet;\n\n    if (resolvedContextPath?.target?._type === 'EntitySet') {\n        entityType = (resolvedContextPath.target as EntitySet)?.entityType;\n        entitySet = resolvedContextPath?.target as EntitySet;\n    } else if (resolvedContextPath?.target?._type === 'NavigationProperty') {\n        ({ entityType, entitySet } = resolveNavigationProperty(resolvedContextPath, oDataServiceAVT));\n    } else {\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('CONTEXTPATHCOULDNOTBERESOLVED', { entitySet: entitySetName, contextPath }),\n            location: {\n                path: MANIFESTPATH\n            }\n        });\n    }\n    if (entitySetName && !entityType) {\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOENTITYTYPE4SET', { entitySetName: entitySetName })\n        });\n    }\n    return { entityType, entitySet };\n}\n\n/**\n * The function generates one app schema per entitySet that is linked with an object page in V2\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {Schema} genericSchemas - The generic schemas\n * @param {Schema} appSchemas - the list of app schemas that shall get extended\n */\nfunction generateObjectPageSchemasV2(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchemas: Schemas,\n    appSchemas: Schemas\n): void {\n    const allPages = getPagesV2(\n        generateParameters.manifest[ManifestSection.generic].pages as v2.SapUiAppPagesV2,\n        v2.FE_TEMPLATE_V2_OBJECT_PAGE,\n        generateParameters.logger\n    );\n    for (const page in allPages) {\n        const entitySetName = allPages[page].entitySet;\n        const entitySet = getEntitySetByEntitySetName(entitySetName, generateParameters.serviceAVT);\n        if (!entitySet) {\n            log(generateParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('ENTITYSETNOTFOUND', { entitySetName: entitySetName })\n            });\n        }\n        generateParameters.entitySet = entitySet;\n        const schemaFile = getSchemaFilePath(SchemaType.ObjectPage, entitySet?.name || entitySetName);\n        const genericSchemaFile = getSchemaFilePath(SchemaType.ObjectPage);\n        appSchemas[schemaFile.filename] = generateObjectPageSchemaV2(\n            generateParameters,\n            genericSchemas[genericSchemaFile.filename]\n        );\n    }\n}\n\n/**\n * The function generates one app schema per entitySet that is linked with a list report/alp page in V4\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {Schemas} genericSchemas - The generic schemas\n * @param {Schemas} appSchemas - the list of app schemas that shall get extended\n */\nfunction generateListReportSchemasV4(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchemas: Schemas,\n    appSchemas: Schemas\n) {\n    const lrPages = getPagesV4(generateParameters.manifest, v4.FE_TEMPLATE_V4_LIST_REPORT);\n    const alpPages = getPagesV4(generateParameters.manifest, v4.FE_TEMPLATE_V4_ALP);\n    const pages = { ...lrPages, ...alpPages };\n    const serviceAVT = generateParameters?.serviceAVT;\n    for (const pageId in pages) {\n        const entitySetName = pages[pageId].options.settings?.entitySet;\n        const contextPath = pages[pageId].options.settings?.contextPath as string;\n        const { entitySet, entityType } = getEntityTypeEntitySetFromContextPath(\n            serviceAVT,\n            contextPath,\n            entitySetName,\n            generateParameters.logger\n        );\n        generateParameters.entityType = entityType;\n        generateParameters.entitySet = entitySet;\n        const schemaFile = getSchemaFilePath(SchemaType.ListReport, pageId);\n        const genericSchemaFile = getSchemaFilePath(SchemaType.ListReport);\n        // Get ALP/LR template type for existing LR page in freestyle app\n        if (generateParameters.templateType === TemplateType.FreestylePageV4) {\n            generateParameters.templateType = determineV4PageTemplateType(pages[pageId]);\n        }\n        appSchemas[schemaFile.filename] = generateListReportSchemaV4(\n            generateParameters,\n            genericSchemas[genericSchemaFile.filename],\n            pages[pageId].name,\n            contextPath\n        );\n    }\n}\n/**\n * Looks for List Report(s) in a V2 manifest and triggers the schema generation\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {Schemas} genericSchemas - The generic schemas\n * @param {Schemas} appSchemas - the list of app schemas that shall get extended\n */\nfunction generateAppSchemaV2LR(\n    generateParameters: GenerateAppSchemaParameters,\n    appSchemas: Schemas,\n    genericSchemas: Schemas\n) {\n    const allPages = getPagesV2(\n        generateParameters.manifest[ManifestSection.generic].pages as v2.SapUiAppPagesV2,\n        v2.FE_TEMPLATE_V2_LIST_REPORT,\n        generateParameters.logger\n    );\n\n    for (const page in allPages) {\n        //Should only be one entry\n        const entitySetName = allPages[page].entitySet;\n        generateParameters.entitySet = getEntitySetByEntitySetName(entitySetName, generateParameters.serviceAVT);\n        const schemaFile = getSchemaFilePath(\n            SchemaType.ListReport,\n            generateParameters.entitySet?.name || entitySetName\n        );\n        const genericSchemaFile = getSchemaFilePath(SchemaType.ListReport);\n        appSchemas[schemaFile.filename] = generateListReportSchemaV2(\n            generateParameters,\n            genericSchemas[genericSchemaFile.filename]\n        );\n    }\n}\n\n/**\n * The function generates one app schema per entitySet that is linked with an object page in V4\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {Schemas} genericSchemas - The generic schemas\n * @param {Schemas} appSchemas - the list of app schemas that shall get extended\n */\nfunction generateObjectPageSchemasV4(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchemas: Schemas,\n    appSchemas: Schemas\n): void {\n    const pages = getPagesV4(generateParameters.manifest, v4.FE_TEMPLATE_V4_OBJECT_PAGE);\n    const serviceAVT = generateParameters.serviceAVT;\n    for (const page in pages) {\n        const entitySetName = pages[page].options.settings?.entitySet;\n        const contextPath = pages[page].options.settings?.contextPath as string;\n\n        const { entityType, entitySet } = getEntityTypeEntitySetFromContextPath(serviceAVT, contextPath, entitySetName);\n        generateParameters.entitySet = entitySet;\n        generateParameters.entityType = entityType;\n\n        const schemaFile = getSchemaFilePath(SchemaType.ObjectPage, page);\n        const genericSchemaFile = getSchemaFilePath(SchemaType.ObjectPage);\n        const genericMacroSchemaFile = getSchemaFilePath(SchemaType.FPMCustomPage);\n\n        appSchemas[schemaFile.filename] = generateObjectPageSchemaV4(\n            generateParameters,\n            genericSchemas[genericSchemaFile.filename],\n            contextPath,\n            genericSchemas[genericMacroSchemaFile.filename]\n        );\n    }\n}\n\n/**\n * Generates all app specific schemas for a Fiori Elements V2 application\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {Schemas} genericSchemas - The generic schemas\n * @param {UiEntityTypes} uiEntityTypes - list of all entity types, as comprised in oDataServiceAVT\n * @param {TemplateType} templateType - the given Fiori Elements' template type\n */\nfunction generateAppSchemasV2(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchemas: Schemas,\n    uiEntityTypes: UiEntityTypes,\n    templateType: TemplateType\n): Schemas {\n    const appSchemas: Schemas = {};\n    if (templateType === TemplateType.ListReportObjectPageV2 && uiEntityTypes) {\n        /*--- List Report ----*/\n        generateAppSchemaV2LR(generateParameters, appSchemas, genericSchemas);\n        /*--- Object Pages ----*/\n        generateObjectPageSchemasV2(generateParameters, genericSchemas, appSchemas);\n    } else if (templateType === TemplateType.AnalyticalListPageV2 && uiEntityTypes) {\n        /*--- Analytical List Page ----*/\n        const allPages = getPagesV2(\n            generateParameters.manifest[ManifestSection.generic].pages as v2.SapUiAppPagesV2,\n            v2.FE_TEMPLATE_V2_ALP,\n            generateParameters.logger\n        );\n        for (const page in allPages) {\n            const entitySetName = allPages[page].entitySet;\n            generateParameters.entitySet = getEntitySetByEntitySetName(entitySetName, generateParameters.serviceAVT);\n            const schemaFile = getSchemaFilePath(\n                SchemaType.AnalyticalListPage,\n                generateParameters.entitySet?.name || entitySetName\n            );\n            const genericSchemaFile = getSchemaFilePath(SchemaType.AnalyticalListPage);\n            appSchemas[schemaFile.filename] = generateAnalyticalListReportSchemaV2(\n                generateParameters,\n                genericSchemas[genericSchemaFile.filename]\n            );\n        }\n        /*--- Object Pages ----*/\n        generateObjectPageSchemasV2(generateParameters, genericSchemas, appSchemas);\n    } else if (templateType === TemplateType.OverviewPageV2) {\n        /*--- Overview Page ----*/\n        const schemaFile = getSchemaFilePath(SchemaType.OverviewPage);\n        const genericSchemaFile = getSchemaFilePath(SchemaType.OverviewPage);\n        appSchemas[schemaFile.filename] = generateOVPInterfaceV2(\n            genericSchemas[genericSchemaFile.filename],\n            generateParameters.manifest\n        );\n    }\n    return { ...genericSchemas, ...appSchemas };\n}\n\n/**\n * The function generates one app schema per custom page in V4.\n * @param {GenerateAppSchemaParameters} generateParameters List of API input parameters.\n * @param {Schemas} genericSchemas The generic schemas.\n * @param {Schemas} appSchemas The list of app schemas that shall get extended.\n */\nfunction generateCustomPageSchemasV4(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchemas: Schemas,\n    appSchemas: Schemas\n): void {\n    if (!isFeatureSupported(generateParameters.featureToggles, Features.BuildingBlocks)) {\n        return;\n    }\n    const pages = getPagesV4(generateParameters.manifest, v4.FE_TEMPLATE_V4_CUSTOM_PAGE);\n    for (const pageId in pages) {\n        const page = pages[pageId];\n        // Resolve view name and app id\n        const viewData = getPageCustomViewFile(\n            generateParameters.views || [],\n            pageId,\n            generateParameters.manifest,\n            generateParameters.logger\n        );\n        const viewId = page['viewId'] || page['id'] || pageId;\n        if (viewData) {\n            const schemaFile = getSchemaFilePath(SchemaType.FPMCustomPage, undefined, viewId);\n            const genericSchemaFile = getSchemaFilePath(SchemaType.FPMCustomPage);\n            appSchemas[schemaFile.filename] = generateMacrosSchemaDefinition(\n                genericSchemas[genericSchemaFile.filename],\n                viewData,\n                generateParameters.serviceAVT,\n                generateParameters.logger\n            );\n        }\n    }\n}\n\n/**\n * Generates all app specific schemas for a Fiori Elements V4 application\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {Schemas} genericSchemas - The generic schemas\n * @param {UiEntityTypes} uiEntityTypes - list of all entity types, as comprised in oDataServiceAVT\n * @param {TemplateType} templateType - the given Fiori Elements' template type\n */\nfunction generateAppSchemasV4(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchemas: Schemas,\n    uiEntityTypes: UiEntityTypes\n): Schemas {\n    const appSchemas: Schemas = {};\n\n    if (uiEntityTypes) {\n        generateListReportSchemasV4(generateParameters, genericSchemas, appSchemas);\n        generateObjectPageSchemasV4(generateParameters, genericSchemas, appSchemas);\n        generateCustomPageSchemasV4(generateParameters, genericSchemas, appSchemas);\n    }\n    return { ...genericSchemas, ...appSchemas };\n}\n\n/**\n * Generates app specific schemas by adding annotation information to copies of the generic schemas, thus replacing all generic definitions.\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {UiEntityTypes} uiEntityTypes - list of all entity types from the service metadata\n * @param templateType - type of the Fiori Elements' template\n */\nasync function generateAppSchemas(\n    generateParameters: GenerateAppSchemaParameters,\n    uiEntityTypes: UiEntityTypes,\n    templateType: TemplateType\n): Promise<Schemas> {\n    const genericSchemas = await getGenericSchemas(templateType, generateParameters.fioriElementsVersion);\n\n    if (generateParameters.fioriElementsVersion === FioriElementsVersion.v4) {\n        return generateAppSchemasV4(generateParameters, genericSchemas, uiEntityTypes);\n    } else {\n        return generateAppSchemasV2(generateParameters, genericSchemas, uiEntityTypes, templateType);\n    }\n}\n\n/**\n * Imports manifest and flex changes into configuration files with aid of the relevant app provider\n * @param {ImportAllConfigsParameters} importParameters - structure comprising all input parameters\n *\n * @returns {File[]} a list of all configuration files as generated by the function\n */\nfunction importConfigs(importParameters: ImportAllConfigsParameters): File[] {\n    let provider: AppProvider;\n    const files: File[] = [];\n\n    switch (importParameters.templateType) {\n        case TemplateType.ListReportObjectPageV2:\n        case TemplateType.AnalyticalListPageV2:\n            provider = new V2AppProvider(importParameters);\n            break;\n        case TemplateType.AnalyticalListPageV4:\n        case TemplateType.ListReportObjectPageV4:\n        case TemplateType.FreestylePageV4:\n            provider = new V4AppProvider(importParameters);\n            break;\n        case TemplateType.OverviewPageV2:\n            provider = new V2OvpProvider(importParameters);\n            break;\n        default:\n            break;\n    }\n    if (provider) {\n        const { appConfig, pageConfigs } = provider.createConfigFiles();\n        for (const app in appConfig) {\n            files.push({ dataSourceUri: app, fileContent: JSON.stringify(appConfig[app], null, 4) });\n        }\n        for (const config in pageConfigs) {\n            files.push({ dataSourceUri: config, fileContent: JSON.stringify(pageConfigs[config], null, 4) });\n        }\n    }\n    return files;\n}\n\nfunction getFileList(appSchemas: Schemas, configs?: File[]): File[] {\n    let files: File[] = [];\n    for (const schemaName of Object.keys(appSchemas).sort()) {\n        let dataSourceUri;\n        if (schemaName === SchemaType.Application) {\n            dataSourceUri = `${DirName.Schemas}/${FileName.App[0].toUpperCase()}${FileName.App.slice(1)}`;\n        } else {\n            dataSourceUri = `${DirName.Schemas}/${schemaName}.json`;\n        }\n        files.push({ dataSourceUri, fileContent: JSON.stringify(appSchemas[schemaName], null, 4) });\n    }\n    if (configs) {\n        files = files.concat(configs);\n    }\n    return files;\n}\n\n/**\n * Import the schema and config files for a given project\n * @param {ImportProjectParameters} importParameters - files of the project: manifest, flex changes, odata files\n */\nexport async function importProjectSchema(importProjectParameters: ImportProjectParameters): Promise<File[]> {\n    // Initialize i18next\n    initI18n();\n    const { manifest, annotations, logger, fragments, views, featureToggles } = importProjectParameters;\n    const versionChecker = new DistTagEvaluator();\n    versionChecker.doesUi5VersionFitDistTags(manifest['sap.ui5']?.dependencies?.minUI5Version, logger);\n    const fioriElementsVersion = getVersionFromManifest(manifest);\n    const oDataServiceAVT = parseAndMergeAndConvert(annotations, logger);\n    const uiEntityTypes = getAnnotationsForUi(oDataServiceAVT);\n    const templateType = getTemplateTypeFromManifest(manifest, fioriElementsVersion, logger);\n    const generateParameters: GenerateAppSchemaParameters = {\n        templateType,\n        manifest,\n        serviceAVT: oDataServiceAVT,\n        fragments,\n        views,\n        fioriElementsVersion,\n        logger,\n        featureToggles\n    };\n\n    const appSchemas = await generateAppSchemas(generateParameters, uiEntityTypes, templateType);\n    return getFileList(appSchemas);\n}\n\n/**\n * Import the schema and config files for a given project\n * @param {ImportProjectParameters} importParameters - files of the project: manifest, flex changes, odata files\n */\nexport async function importProjectSchemaAndConfig(importProjectParameters: ImportProjectParameters): Promise<File[]> {\n    // Initialize i18next\n    initI18n();\n    const { manifest, annotations, logger, fragments, views, flex, featureToggles } = importProjectParameters;\n    const versionChecker = new DistTagEvaluator();\n    versionChecker.doesUi5VersionFitDistTags(manifest['sap.ui5']?.dependencies?.minUI5Version, logger);\n    const fioriElementsVersion = getVersionFromManifest(manifest);\n    const oDataServiceAVT = parseAndMergeAndConvert(annotations, logger);\n    const templateType = getTemplateTypeFromManifest(manifest, fioriElementsVersion, logger);\n\n    //Generate Schemas\n    const generateParameters: GenerateAppSchemaParameters = {\n        templateType,\n        manifest,\n        serviceAVT: oDataServiceAVT,\n        fragments,\n        views,\n        fioriElementsVersion,\n        logger,\n        featureToggles\n    };\n    const uiEntityTypes = getAnnotationsForUi(oDataServiceAVT);\n    const appSchemas = await generateAppSchemas(generateParameters, uiEntityTypes, templateType);\n\n    //Import to configs\n    const importConfigsParameters: ImportAllConfigsParameters = {\n        manifest,\n        flexChanges: flex,\n        appSchemas,\n        templateType,\n        logger,\n        serviceAVT: oDataServiceAVT,\n        fragments,\n        views\n    };\n\n    const configFiles = importConfigs(importConfigsParameters);\n    return getFileList(appSchemas, configFiles);\n}\n", "import type {\n    FileData,\n    ExtensionLogger,\n    ImportListReportV2Parameters,\n    ImportALPV2Parameters,\n    ImportObjectPageV2Parameters,\n    ImportAllConfigsParameters\n} from '@sap/ux-specification-types';\nimport {\n    LogSeverity,\n    MANIFESTPATH,\n    FioriElementsVersion,\n    PageTypeV2,\n    ManifestSection,\n    v2,\n    SchemaType\n} from '@sap/ux-specification-types';\nimport { AppProvider } from '../../../common/appProvider';\nimport { transferSettingsOfObject } from '../common';\nimport { createListReportConfig } from '../pages/listReport';\nimport { createAnalyticalListPageConfig } from '../pages/analyticalListPage';\nimport { createObjectPageConfigV2 } from '../pages/objectPage';\nimport { AppSettings } from '../../application';\nimport { getSchemaFilePath, generatePageId, getPageTypeV2 } from '../../../common';\nimport i18next from 'i18next';\nimport { initI18n } from '../../../../i18n/i18n';\nimport { log } from '../../../../extensionLogger';\n\n/**\n * Method which generates id for passed page\n * @param page - Generic Page object.\n * @param pageName - Page name in manifest. Used if entitySet is empty\n * @returns {string} Generated page id\n */\nfunction generateId(page: v2.SapUiAppPageV2, pageName: string): string {\n    if (page.component?.name) {\n        return generatePageId(getPageTypeV2(page.component?.name), page.entitySet, undefined, pageName);\n    } else {\n        return pageName;\n    }\n}\n\nfunction getPageConfigsAndNavigations(\n    page: v2.Page,\n    v2Page: v2.SapUiAppPageV2,\n    flex: string[],\n    manifest: any,\n    schemas: any,\n    fragments: FileData[],\n    pages: { [key: string]: v2.Page }\n) {\n    page.navigation = {};\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const targets: { [key: string]: v2.Page } = getPagesAndConfigs(v2Page.pages, flex, manifest, schemas, fragments);\n    for (const pageId in targets) {\n        const target = targets[pageId];\n        pages[pageId] = target;\n    }\n    for (const v2ChildPageName in v2Page.pages) {\n        const id = generateId(v2Page.pages[v2ChildPageName], v2ChildPageName);\n        if (page.entitySet) {\n            page.navigation[id] = targets[id].navigationProperty\n                ? `${page.entitySet}.${targets[id].navigationProperty}`\n                : page.entitySet;\n        } else {\n            page.navigation[id] = targets[id].navigationProperty ? targets[id].navigationProperty : id;\n        }\n    }\n}\n\n/**\n * Sets up page definitions, including the configurations for them\n * @param {SapUiAppPagesV2} v2Pages - lisr of all pages\n * @param flex - list of flexibility changes\n * @param manifest - manifest.json of the app\n * @param schemas - list of all app-specific schemas\n * @param fragments - list of fragments\n * @param {ExtensionLogger} logger - logger for messages\n * @returns an index table of page definitions\n */\nfunction getPagesAndConfigs(\n    v2Pages: v2.SapUiAppPagesV2,\n    flex: string[],\n    manifest,\n    schemas,\n    fragments?: FileData[],\n    logger?: ExtensionLogger\n): { [key: string]: v2.Page } {\n    const pages: { [key: string]: v2.Page } = {};\n    for (const v2PageName in v2Pages) {\n        const v2Page = v2Pages[v2PageName];\n        const id = generateId(v2Page, v2PageName);\n        if (!id) {\n            continue;\n        }\n        const page: v2.Page = {\n            pageType: getPageTypeV2(v2Page.component?.name),\n            entitySet: v2Page.entitySet,\n            ...(v2Page.navigationProperty && { navigationProperty: v2Page.navigationProperty }),\n            ...(v2Page.defaultLayoutType && { defaultLayoutType: v2Page.defaultLayoutType })\n        };\n        pages[id] = page;\n\n        // Get the JSON schema for the page. If no page specific schema exists, fall back top the generic schema for the page type\n        const schemaKey: string =\n            Object.keys(schemas).find((element) => element.includes(id)) ||\n            Object.keys(schemas).find((element) => element.includes(id.slice(0, -1))) ||\n            Object.keys(schemas).find((element) => element.includes(page.pageType));\n\n        // convert settings to config\n        if (schemaKey) {\n            if (page.pageType === PageTypeV2.ListReport) {\n                const importParameters: ImportListReportV2Parameters = {\n                    manifest,\n                    flex,\n                    jsonSchema: schemas[schemaKey],\n                    fragments,\n                    logger\n                };\n                page.config = createListReportConfig(importParameters);\n            } else if (page.pageType === PageTypeV2.AnalyticalListPage) {\n                const importParameters: ImportALPV2Parameters = {\n                    manifest,\n                    flex,\n                    jsonSchema: schemas[schemaKey],\n                    fragments,\n                    logger\n                };\n                page.config = createAnalyticalListPageConfig(importParameters);\n            } else {\n                const importParameters: ImportObjectPageV2Parameters = {\n                    manifest,\n                    flex,\n                    jsonSchema: schemas[schemaKey],\n                    entitySet: page.entitySet,\n                    fragments,\n                    logger\n                };\n                page.config = createObjectPageConfigV2(importParameters);\n            }\n        }\n        if (v2Page.pages) {\n            getPageConfigsAndNavigations(page, v2Page, flex, manifest, schemas, fragments, pages);\n        }\n    }\n    return pages;\n}\n\n/**\n * The V2AppProvider collects all the app information for a Fiori Elements V2 app\n */\nexport class V2AppProvider extends AppProvider {\n    public constructor(importParameters: ImportAllConfigsParameters) {\n        initI18n();\n        let v2Pages: v2.SapUiAppPagesV2;\n        if (!importParameters.manifest[ManifestSection.generic]) {\n            log(importParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOFE'),\n                location: {\n                    path: MANIFESTPATH,\n                    range: [ManifestSection.generic]\n                }\n            });\n        } else {\n            v2Pages = importParameters.manifest[ManifestSection.generic].pages as v2.SapUiAppPagesV2;\n        }\n        if (!v2Pages) {\n            log(importParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOPAGES', { appId: importParameters.manifest['sap.app']['id'] }),\n                location: {\n                    path: MANIFESTPATH,\n                    range: [ManifestSection.generic]\n                }\n            });\n        }\n        const pageKey = v2Pages && Object.keys(v2Pages)[0];\n        const pageId = v2Pages && generateId(v2Pages[pageKey], pageKey);\n        // Import settings\n        const appSettings = new AppSettings();\n        const schemaFile = getSchemaFilePath(SchemaType.Application);\n        const appSchema = importParameters.appSchemas[schemaFile.filename];\n        transferSettingsOfObject(\n            appSettings,\n            importParameters.manifest,\n            appSchema['definitions']['AppSettings'],\n            undefined\n        );\n        // Call base\n        super(\n            importParameters.manifest,\n            importParameters.appSchemas,\n            pageId,\n            getPagesAndConfigs(\n                v2Pages,\n                importParameters.flexChanges,\n                importParameters.manifest,\n                importParameters.appSchemas,\n                importParameters.fragments,\n                importParameters.logger\n            ),\n            FioriElementsVersion.v2,\n            appSettings\n        );\n    }\n}\n\n/**\n * Collects all pages of a V2 app from the manifest, by traversing the V2 page hierarchy.\n * @param v2Pages - entry point = complex page definition in manifest\n * @param componentName - Component name\n * @returns index table of pages\n */\nexport function getPages(v2Pages: v2.SapUiAppPagesV2, componentName: string, logger?: ExtensionLogger): v2.Pages {\n    const pages: v2.Pages = {};\n    for (const v2PageName in v2Pages) {\n        const v2Page = v2Pages[v2PageName];\n        if (!v2Page.component?.name) {\n            log(logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('COMPONENTNOTDEFINED', { pageName: v2PageName }),\n                location: {\n                    path: MANIFESTPATH\n                }\n            });\n        }\n        if (v2Page.component?.name === componentName) {\n            const id = generateId(v2Page, v2PageName);\n            pages[id] = v2Page;\n        }\n        if (componentName === v2.FE_TEMPLATE_V2_OBJECT_PAGE && v2Page.pages) {\n            const subPages = getPages(v2Page.pages, componentName, logger);\n            for (const subPageId in subPages) {\n                pages[subPageId] = subPages[subPageId];\n            }\n        }\n    }\n    return pages;\n}\n", "import type {\n    ExtensionLogger,\n    Application,\n    CustomPageConfig,\n    Files,\n    Manifest,\n    PagesBase,\n    v2,\n    v4,\n    PageConfig\n} from '@sap/ux-specification-types';\nimport {\n    DirName,\n    FileName,\n    FioriElementsVersion,\n    OdataVersion,\n    ViewTypes,\n    PageTypeV4,\n    SchemaType\n} from '@sap/ux-specification-types';\nimport { getSchemaFilePath } from './utils';\n\n/**\n * Splits and returns the name of a custom page\n * @param {v4.Page|v2.Page} page - custom page\n * @returns {string} custom page name\n */\nfunction getCustomPageName(page: v2.Page | v4.Page): string {\n    const targetName = (page as v4.Page).view.name?.split('.');\n    return targetName[targetName.length - 1];\n}\n\n/**\n * Returns the view type of a custom page\n * @param {v4.Page|v2.Page} page - custom page\n * @param {Application} app - application\n * @returns {string} view type\n */\nfunction getViewType(page: v2.Page | v4.Page, app: Application): ViewTypes {\n    const viewType = (page as v4.Page)?.view?.viewType || (app.settings as v4.AppSettings)?.viewType;\n    return viewType || ViewTypes.XML;\n}\n\n/**\n * Returns file extension name for the page view type of a custom page\n * @param {v4.Page|v2.Page} page - custom page\n * @param {Application} app - application\n * @returns {string} File extension name of page view type\n */\nfunction getViewTypeExtension(page: v2.Page | v4.Page, app: Application): string {\n    return getViewType(page, app).toLowerCase();\n}\n\n/**\n * Returns the view path and file name of the custom page\n * @param {v4.Page|v2.Page} page - custom page\n * @param {Application} app - application\n * @param {string} viewName - name of view\n * @returns {string} view path\n */\nfunction getViewPath(\n    page: v4.Page | v2.Page,\n    app: Application,\n    viewPath: string[]\n): { viewPath: string[]; fileName: string } {\n    const splitViewPath = (splitPath: string): string[] => {\n        return splitPath.split(`${app.id}.`)[1]?.split('.');\n    };\n    const appSettings = app.settings as v4.AppSettings;\n    const appPath = (page as v4.Page).view?.path || appSettings?.path;\n    const pageName = (page as v4.Page).view?.name;\n    if (pageName?.includes(app.id)) {\n        viewPath = splitViewPath(pageName);\n    } else if (appPath?.includes(app.id)) {\n        viewPath = [...splitViewPath(appPath), ...pageName.split('.')];\n    }\n    const [pathParts, fileName] = [viewPath.slice(0, -1), ...viewPath.slice(-1)];\n    return { viewPath: pathParts, fileName };\n}\n\n/**\n * Returns the page name and path of a custom page\n * @param {v4.Page|v2.Page} page - custom page\n * @param {string} appId - Application id\n * @returns page name\n */\nfunction getCustomPagePath(page: v2.Page | v4.Page, app: Application): string {\n    const viewName = page.entitySet || getCustomPageName(page);\n    const { viewPath, fileName } = getViewPath(page, app, [viewName]);\n    const viewType = getViewTypeExtension(page, app);\n    // we always use '/' as separator so that snapshot tests generated from Windows do not fail on Jenkins\n    return [...viewPath, `${fileName}.view.${viewType}`].join('/');\n}\n\nexport interface Controllers {\n    [key: string]: string;\n}\n\nexport abstract class AppProvider {\n    public readonly app: Application;\n    public readonly logger: ExtensionLogger;\n    public readonly schemas: Files;\n    // Store controller names which should be handled lately\n    public unhandledControllers: Array<string> = [];\n\n    protected constructor(\n        manifest: Manifest,\n        schemas: Files,\n        home: string,\n        pages: PagesBase,\n        version: FioriElementsVersion,\n        settings?: v2.AppSettings | v4.AppSettings,\n        logger?: ExtensionLogger\n    ) {\n        const schemaFile = getSchemaFilePath(SchemaType.Application);\n        this.app = {\n            $schema: schemaFile.path,\n            id: manifest['sap.app'].id,\n            pages,\n            home,\n            target: {\n                fioriElements: version,\n                odata: version === FioriElementsVersion.v2 ? OdataVersion.v2 : OdataVersion.v4\n            },\n            ...(settings && { settings })\n        };\n        this.schemas = schemas;\n        this.logger = logger;\n    }\n\n    /**\n     * Create config files for app (app.json) and pages (pages/{name}.json).\n     * This is basically a copy of createFiles optimized to be used in FTFS:\n     * it always uses posix path notation with forward slash (/)\n     * @param {ConvertedMetadata} oDataServiceAVT - Complete service information, as returned by annotation vocabularies tool\n     * @returns app and page files as separate objects\n     */\n    public createConfigFiles(): { appConfig: Files; pageConfigs: Files } {\n        const pageConfigs: Files = {};\n        const appConfig: Files = {};\n        let page: v2.Page | v4.PageV4;\n        // add schema reference to all pages\n        for (const pageId in this.app.pages) {\n            page = this.app.pages[pageId];\n            const schemaSuffix = this.app.target.odata === OdataVersion.v4 ? pageId : page.entitySet;\n            const config = this.getPageConfigFile(page, schemaSuffix);\n            if (config) {\n                pageConfigs[`${DirName.Pages}/${pageId}.json`] = config;\n            }\n        }\n        // remove config before converting to JSON\n        const app: Application = JSON.parse(JSON.stringify(this.app));\n        for (const pageId in app.pages) {\n            delete app.pages[pageId].config;\n        }\n        appConfig[FileName.App] = app;\n\n        return { appConfig, pageConfigs };\n    }\n\n    /**\n     * Method returns page's config object to store in file for passed page.\n     * @param {v2.Page | v4.Page} page Page from 'app.json'.\n     * @param {PageConfig | undefined} config Page's config object.\n     * @param {pageId} id of the page or entityset in case of V2\n     */\n    private getPageConfigFile(page: v2.Page | v4.Page, pageId: string): PageConfig | undefined {\n        let config: PageConfig | undefined;\n        const isEditableXML = getViewType(page, this.app) === ViewTypes.XML && !!page.config;\n        if (page.pageType === PageTypeV4.CustomPage || (page.pageType === PageTypeV4.FPMCustomPage && !isEditableXML)) {\n            const { path: $schema } = getSchemaFilePath(page.pageType);\n            config = { $schema };\n        } else if (page.config) {\n            config = page.config;\n            const viewId = 'view' in page ? page.view?.id : undefined;\n            const schemaFile = getSchemaFilePath(page.pageType, pageId, viewId);\n            if (this.schemas[schemaFile.filename]) {\n                config.$schema = schemaFile.path;\n            } else {\n                const genericSchemaFile = getSchemaFilePath(page.pageType);\n                config.$schema = genericSchemaFile.path;\n            }\n        }\n        if ((config && page.pageType === PageTypeV4.CustomPage) || page.pageType === PageTypeV4.FPMCustomPage) {\n            this.applyCustomPageFilePath(page, config);\n        }\n        return config;\n    }\n\n    /**\n     * Method updates \"$filePath\" property for custom page's config object.\n     * @param {v4.Page} page Custom page from 'app.json'.\n     * @param {CustomPageConfig} config Custom page's config object.\n     */\n    private applyCustomPageFilePath(page: v4.Page, config: CustomPageConfig): void {\n        const $filePath = getCustomPagePath(page, this.app);\n        config.$filePath = $filePath;\n    }\n}\n", "import {\n    v2,\n    FRAGMENTNAMEPART,\n    PropertyName,\n    ControlType,\n    PageTypeV2,\n    PAGETYPE_VIEW_EXTENSION_TEMPLATE_MAP,\n    ViewTemplateType,\n    LogSeverity,\n    ManifestSection,\n    DefinitionName\n} from '@sap/ux-specification-types';\nimport type { FlexForTransfer } from '../controls/table';\nimport { addFlexForTable } from '../controls/table';\nimport type {\n    ChangeDefinition,\n    FileData,\n    ObjectPageSectionData,\n    Manifest,\n    ExtensionLogger\n} from '@sap/ux-specification-types';\nimport {\n    convertActionKeyToStableId,\n    checkDeprecatedProperties,\n    importProperty,\n    parseChangeString\n} from '../../../common';\nimport type { MetadataInstanceInterface } from '../../../common/decoration/factory';\nimport { getReflectMetadata } from '../../../common/decoration/decorators';\nimport { ensureManifestSectionByPathV2 } from '../../export/manifest';\nimport { log } from '../../../../extensionLogger';\nimport i18next from 'i18next';\nimport { xml2json } from 'xml-js';\nimport type { TableCustomColumn } from '../../export/controls';\nimport { FRAGMENT_DEFINITION, getRootCustomColumnFromFragmentJSON } from '../../export/controls';\nimport { ActionTypeV2 } from '../../types';\nimport type { Definition } from 'typescript-json-schema';\n\nexport type LROPConfigsType = v2.ListReportConfigV2 | v2.AnalyticalListPageConfigV2 | v2.ObjectPageConfigV2;\n\nexport function convertActionKey(actionProperty: string) {\n    return actionProperty.replace('/', '::');\n}\n\n/**\n * Unescapes the selector ID of a flex change\n * @param selectorId - escaped selector ID\n * @returns unescaped ID\n */\nexport function convertSelector(selectorId: string): string {\n    return selectorId.replace(/:2f/g, '/').replace(/:23/g, '#').replace(/:40/g, '@');\n}\n\n/**\n * Adds flex changes to Smart Filter Bar in config file\n * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled\n * @param {string} changePropertyKey - property key of current change\n * @param {ChangeDefinition} change - change definition\n * @param {object} jsonSchema - application specific schema\n */\nfunction addSmartFilterBarFlex(\n    config: v2.ListReportConfigV2 | v2.AnalyticalListPageConfigV2,\n    changePropertyKey: string,\n    change: ChangeDefinition,\n    jsonSchema: object\n) {\n    const schemaProperty =\n        jsonSchema['definitions']?.['ListReportFilterBar']?.properties[changePropertyKey] ||\n        jsonSchema['definitions']?.['AnalyticalListPageFilterBar']?.properties[changePropertyKey];\n    if (schemaProperty) {\n        config.filterBar[changePropertyKey] = change.content.newBinding\n            ? change.content.newBinding\n            : change.content.newValue;\n    }\n}\n\n/**\n * Creates a map to connect action types to the correct schema definition and config part\n * @param definitionType action type that will be filtered for\n * @param jsonSchema application specific schema\n * @returns {Map} actionMap - mapping of actionId, id for schema reference and id for config\n */\nfunction filterActions(definitionType: string, jsonSchema) {\n    const actions = Object.keys(jsonSchema['definitions']).filter(\n        (definition) => definition.startsWith(`${definitionType}`) && definition.includes('<')\n    );\n    const actionMap: Map<string, string> = new Map();\n    actions.forEach((definitionActionId) => {\n        const fullActionId = convertActionKeyToStableId(definitionActionId.split('<')[1]?.split('>')[0]);\n        const splitPoint = fullActionId.indexOf(':::');\n        if (fullActionId.startsWith('DataField') && splitPoint > -1) {\n            const actionIdParts = fullActionId.split(':::');\n            const sSemanticObject = actionIdParts.find((part) => part.startsWith('sSemanticObject'));\n            const sAction = actionIdParts.find((part) => part.startsWith('sAction'));\n            const shortAction = sAction.split('sAction::')[1].replace(':2f', '::');\n            if (sSemanticObject) {\n                const shortActionId = `${sSemanticObject.split('::')[1]}::${shortAction}`;\n                const shortDefinitionActionId = `${actionIdParts[0]}:::${sSemanticObject}:::${sAction}`;\n                actionMap.set(shortActionId, definitionActionId);\n                actionMap.set(definitionActionId, shortDefinitionActionId);\n            } else {\n                actionMap.set(shortAction, definitionActionId);\n                actionMap.set(definitionActionId, fullActionId);\n            }\n        } else {\n            actionMap.set(fullActionId.replace(':2f', '::'), definitionActionId);\n            actionMap.set(definitionActionId, fullActionId);\n        }\n    });\n    return actionMap;\n}\n\n/**\n * Adds a new action column to config\n * @param action - action part of config to be filled\n * @param config - the config of ALP/LR\n * @param configId - id of action to be used in config\n */\nfunction addColumnActionConfigPart(\n    action: { name: ActionTypeV2; configPart: v2.Actions | v2.GenericColumns | v2.HeaderActionsStandard; id: string },\n    config: v2.ListReportConfigV2 | v2.AnalyticalListPageConfigV2,\n    configId: string\n) {\n    if (!action.configPart) {\n        action.configPart = config.table.columns = {};\n    }\n    if (!action.configPart[`${configId}`]) {\n        action.configPart[`${configId}`] = {};\n    }\n}\n\n/**\n * Return action id of change\n * @param {ChangeDefinition} change - change definition\n * @returns {string} action id\n */\nfunction getActionId(change: ChangeDefinition): string | undefined {\n    if (change.controlId?.includes('--template::')) {\n        return change.controlId.split('--template::')[1];\n    }\n    return change.controlId?.split('--action::')[1];\n}\n\n/**\n * Adds flex changes to Actions in config file\n * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled\n * @param {string} changePropertyKey - property key of current change\n * @param {ChangeDefinition} change - change definition\n * @param {object} jsonSchema - application specific schema\n */\nfunction addActionFlex(\n    config: v2.ListReportConfigV2 | v2.AnalyticalListPageConfigV2,\n    changePropertyKey: string,\n    change: ChangeDefinition,\n    jsonSchema: Definition,\n    id: string\n) {\n    const actionTypes = [\n        { name: ActionTypeV2.HeaderStandard, configPart: config.header.actions, id },\n        { name: ActionTypeV2.OPHeaderStandard, configPart: config.header.actions, id },\n        {\n            name: ActionTypeV2.Footer,\n            configPart: config.footer.actions,\n            id: id && id.includes('Determining') && id.split('::Determining')[0]\n        },\n        { name: ActionTypeV2.OPFooterStandard, configPart: config.footer.actions, id },\n        { name: ActionTypeV2.ToolBar, configPart: config.table.toolBar.actions, id },\n        { name: ActionTypeV2.Column, configPart: config.table.columns, id }\n    ];\n    actionTypes.forEach((action) => {\n        const schemaActions = filterActions(action.name, jsonSchema);\n        if (schemaActions.has(action.id)) {\n            const referenceId = schemaActions.get(action.id);\n            const configId = referenceId.split('<')[1]?.split('>')[0];\n            if (action.name === ActionTypeV2.Column) {\n                addColumnActionConfigPart(action, config, configId);\n            }\n            const configPart = action.configPart[configId];\n            const schemaProperty = (jsonSchema.definitions[referenceId] as Definition)?.properties[changePropertyKey];\n            if (schemaProperty && configPart) {\n                configPart[changePropertyKey] = change.content.newBinding\n                    ? change.content.newBinding\n                    : change.content.newValue;\n            }\n        }\n    });\n}\n\n/**\n * Adds flex changes to Smart Chart in config file\n * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled\n * @param {string} changePropertyKey - property key of current change\n * @param {ChangeDefinition} change - change definition\n * @param {object} jsonSchema - application specific schema\n */\nfunction addSmartChartFlex(\n    config: v2.ListReportConfigV2 | v2.AnalyticalListPageConfigV2,\n    changePropertyKey: string,\n    change: ChangeDefinition,\n    jsonSchema: object\n) {\n    const schemaProperty = jsonSchema['definitions']['ChartSettings'].properties[changePropertyKey];\n    if (schemaProperty) {\n        const syncRule = getReflectMetadata(config[PropertyName.chart], changePropertyKey);\n        if (syncRule?.flex?.importFlexValue) {\n            syncRule.flex.importFlexValue(change, config[PropertyName.chart], changePropertyKey);\n        } else {\n            config[PropertyName.chart][changePropertyKey] = change.content.newBinding\n                ? change.content.newBinding\n                : change.content.newValue;\n        }\n    }\n}\n\n/**\n * Checks and adds further flex changes to in config file\n * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled\n * @param {ChangeDefinition} change - change definition\n * @param {object} jsonSchema - application specific schema\n */\nfunction addAdditionalFlexChanges(\n    config: v2.ListReportConfigV2 | v2.AnalyticalListPageConfigV2,\n    change: ChangeDefinition,\n    jsonSchema: object\n) {\n    const flexForTransfer: FlexForTransfer = {\n        controlId: change.controlId,\n        propertyId: change.content.property,\n        newValue: change.content.newBinding ? change.content.newBinding : change.content.newValue,\n        controlType: change.controlType,\n        creation: change.creation\n    };\n    let constructorName;\n    if (\n        (!config.table.type || config.table.type === v2.TableTypeV2.ResponsiveTable) &&\n        !flexForTransfer.controlId?.includes(PAGETYPE_VIEW_EXTENSION_TEMPLATE_MAP.get(PageTypeV2.AnalyticalListPage))\n    ) {\n        constructorName = 'ResponsiveTableWithMultiSelect';\n    } else {\n        constructorName = config.table.constructor.name;\n    }\n    const schemaProperty =\n        jsonSchema['definitions'][`${constructorName}<LineItems>`].properties[flexForTransfer.propertyId];\n    if (schemaProperty || flexForTransfer.controlType === ControlType.TableColumn) {\n        addFlexForTable(config.table, flexForTransfer, jsonSchema);\n    }\n}\n\n/**\n * Adds flex changes to config file\n * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled\n * @param {string} changeString - change file as string\n * @param {object} appSchema - application specific schema\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nexport function addFlex(\n    config: v2.ListReportConfigV2 | v2.AnalyticalListPageConfigV2,\n    changeString: string,\n    appSchema: object,\n    logger?: ExtensionLogger\n): void {\n    try {\n        const change = parseChangeString(changeString) as ChangeDefinition;\n        const changePropertyKey = change.content.property;\n        if (\n            change.controlId?.includes(PageTypeV2.ListReport) ||\n            change.controlId?.includes(PageTypeV2.AnalyticalListPage)\n        ) {\n            change.controlId = convertSelector(change.controlId);\n            switch (change.controlType) {\n                case ControlType.SmartFilterBar: {\n                    addSmartFilterBarFlex(config, changePropertyKey, change, appSchema);\n                    break;\n                }\n                case ControlType.DynamicPage: {\n                    const schemaProperty = appSchema['properties'][changePropertyKey];\n                    if (schemaProperty) {\n                        config[change.content.property] = change.content.newValue;\n                    }\n                    break;\n                }\n                case ControlType.Button: {\n                    const actionId = getActionId(change);\n                    actionId && addActionFlex(config, changePropertyKey, change, appSchema, actionId);\n                    break;\n                }\n                case ControlType.SmartChart: {\n                    addSmartChartFlex(config, changePropertyKey, change, appSchema);\n                    break;\n                }\n                default: {\n                    addAdditionalFlexChanges(config, change, appSchema);\n                    break;\n                }\n            }\n        }\n    } catch (error) {\n        log(\n            logger,\n            {\n                severity: LogSeverity.Error,\n                message: i18next.t('FLEXERROR')\n            },\n            ...error\n        );\n    }\n}\n\n/**\n * Special post-processing for quickVariantSelectionX during the import\n * @param propertyKey - key of the current schema property\n * @param configPart  - part of the configuration to be enhanced\n */\nfunction adjustQuickVariantSelectionX(propertyKey: string, configPart: { [key: string]: any }) {\n    if (propertyKey === 'quickVariantSelectionX' && configPart[propertyKey]) {\n        for (const variant in configPart[propertyKey]['variants']) {\n            const currentQuickVariantX = configPart[propertyKey]['variants'][variant];\n            if (currentQuickVariantX['tableSettings']) {\n                for (const key in currentQuickVariantX['tableSettings']) {\n                    currentQuickVariantX[key] = currentQuickVariantX['tableSettings'][key];\n                }\n                delete currentQuickVariantX['tableSettings'];\n            }\n        }\n    }\n}\n\n/**\n * Transfers settings from manifest to object page config\n * @param configPart - part of the configuration to be filled\n * @param manifest - manifest.json of the app\n * @param appSchema - app specific schema\n * @param pageID - ID of the given object page\n * @param sectionId (optional) - ID of the given section (optional)\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nexport function transferSettingsOfObject(\n    configPart: { [key: string]: any },\n    manifest: Manifest,\n    appSchema: object,\n    pageKey: string,\n    logger?: ExtensionLogger,\n    kpiKey?: string\n): void {\n    if (!appSchema) {\n        return;\n    }\n    let manifestSection = {};\n    const deprecatedProperties = configPart.getDeprecated ? configPart.getDeprecated() : undefined;\n\n    if (appSchema['properties']) {\n        for (const propertyKey in appSchema['properties']) {\n            const syncRule = getReflectMetadata(configPart, propertyKey);\n            if (syncRule?.manifest) {\n                const path = syncRule.manifest.path([pageKey], manifest, kpiKey);\n                manifestSection = ensureManifestSectionByPathV2(manifest, path);\n                importProperty(syncRule, manifestSection, propertyKey, configPart);\n                checkDeprecatedProperties(deprecatedProperties, manifestSection, path, logger);\n            }\n            // Adjustment of 'quickVariantSelectionX' - tableSettings\n            adjustQuickVariantSelectionX(propertyKey, configPart);\n        }\n    }\n}\n\n/**\n * Determines the table type for a given LR or ALP table, based on the component name and its table settings\n * This does not exactly reflect the run time behavior of Fiori elements but a best guess and expectation.\n * @param manifest - manifest.json file content of the app\n * @param pageKey - key of the page in the manifest\n */\nexport function determineTableType(manifest: Manifest, pageKey: string): v2.TableTypeV2 {\n    const page = manifest[ManifestSection.generic].pages[pageKey];\n    let tableType: v2.TableTypeV2 = v2.TableTypeV2.ResponsiveTable;\n    if (\n        manifest[ManifestSection.generic].pages[pageKey].component?.settings &&\n        (manifest[ManifestSection.generic].pages[pageKey].component.settings?.tableSettings?.['type'] ||\n            manifest[ManifestSection.generic].pages[pageKey].component.settings?.['tableType'])\n    ) {\n        tableType = page.component?.settings?.tableSettings?.['type'] || page.component?.settings['tableType'];\n    } else if (page.component?.name === 'sap.suite.ui.generic.template.AnalyticalListPage') {\n        tableType = v2.TableTypeV2.AnalyticalTable;\n    }\n    return tableType;\n}\n\nfunction evaluateFragmentColumn(\n    column: any,\n    viewExtensionsOfPage: any,\n    manifestKey: string,\n    keyPart3: string,\n    config: v2.ListReportConfigV2,\n    extensionType: v2.TableColumnExtensionTypeV2,\n    cellsFragmentName?: string\n): void {\n    if (column['customData'] || column['table:customData']) {\n        const p13nData = column['customData']\n            ? column['customData']['core:CustomData']._attributes.value\n            : column['table:customData']['core:CustomData']._attributes.value;\n        const columnParts = JSON.parse(p13nData.substr(1, p13nData.length));\n        let columnText = column['Text'] && column['Text']._attributes && column['Text']._attributes['text'];\n        if (!columnText) {\n            columnText = column['Label'] && column['Label']._attributes && column['Label']._attributes['text'];\n        }\n        const customElement: TableCustomColumn = {\n            id: column._attributes && column._attributes['id'],\n            text: columnText,\n            ...columnParts,\n            columnKey: columnParts['columnKey'],\n            columnIndex: columnParts['columnIndex'] !== undefined ? Number(columnParts['columnIndex']) : undefined,\n            leadingProperty: columnParts['leadingProperty'],\n            className: viewExtensionsOfPage[manifestKey].className,\n            fragmentName: viewExtensionsOfPage[manifestKey].fragmentName,\n            tabKey: keyPart3,\n            extensionType\n        };\n        if (cellsFragmentName) {\n            customElement.cellsFragmentName = cellsFragmentName;\n        }\n        if (!config.table['columns']['custom']) {\n            config.table['columns']['custom'] = [];\n        }\n        const customColumns = config.table['columns']['custom'] as v2.TableCustomColumns;\n        customColumns.push(customElement);\n    }\n}\n\nfunction determineCellsFragmentName(\n    extensionType: any,\n    viewExtensionsOfPage: any,\n    keyEntitySet: string,\n    referenceId: string\n) {\n    let cellsFragmentName;\n    if (extensionType === ViewTemplateType.ResponsiveTableColumnsExtension) {\n        for (const cellsKey of Object.keys(viewExtensionsOfPage)) {\n            const [cellsKeyType, cellsKeyEntitySet, cellsKeyTab] = cellsKey.split('|');\n            if (\n                cellsKeyType === ViewTemplateType.ResponsiveTableCellsExtension &&\n                cellsKeyEntitySet === keyEntitySet &&\n                cellsKeyTab === referenceId\n            ) {\n                cellsFragmentName = viewExtensionsOfPage[cellsKey].fragmentName;\n            }\n        }\n    }\n    return cellsFragmentName;\n}\n\nfunction analyzeFilteredFragments(\n    filteredFragments: FileData[],\n    config: LROPConfigsType,\n    viewExtensionsOfPage: any,\n    manifestKey: string,\n    keyTab: string,\n    extensionType: any,\n    cellsFragmentName: any\n) {\n    if (filteredFragments[0]) {\n        const fragmentJson = JSON.parse(xml2json(filteredFragments[0].fileContent, { compact: true }));\n        const fragmentDefintion = fragmentJson[FRAGMENT_DEFINITION];\n        const columnDefinition = getRootCustomColumnFromFragmentJSON(fragmentDefintion);\n        if (columnDefinition) {\n            if (!config[PropertyName.table]?.['columns']) {\n                config[PropertyName.table]['columns'] = {};\n            }\n            if (Array.isArray(columnDefinition)) {\n                for (const def of columnDefinition) {\n                    evaluateFragmentColumn(\n                        def,\n                        viewExtensionsOfPage,\n                        manifestKey,\n                        keyTab,\n                        config,\n                        extensionType,\n                        cellsFragmentName\n                    );\n                }\n            } else {\n                evaluateFragmentColumn(\n                    columnDefinition,\n                    viewExtensionsOfPage,\n                    manifestKey,\n                    keyTab,\n                    config,\n                    extensionType,\n                    cellsFragmentName\n                );\n            }\n        }\n    }\n}\n\nfunction processViewExtensions(\n    viewExtensionsOfPage: object,\n    targetKeyEntitySet: string,\n    objectPageSectionData: ObjectPageSectionData,\n    config: LROPConfigsType,\n    fragments?: FileData[]\n) {\n    for (const manifestKey of Object.keys(viewExtensionsOfPage)) {\n        const manifestKeyParts = manifestKey.split('|');\n        const [keyExtensionType, keyEntitySet] = manifestKeyParts;\n        // If Object Page section have key, then Ignore it as it is not from QuickVariantSelectionX\n        const referenceId = manifestKeyParts[2];\n        const keyTab = objectPageSectionData && referenceId === objectPageSectionData.key ? undefined : referenceId;\n        const extensionType = ViewTemplateType[keyExtensionType];\n        if (extensionType && '|' + keyEntitySet === targetKeyEntitySet) {\n            const fragmentType = viewExtensionsOfPage[manifestKey].type\n                ? viewExtensionsOfPage[manifestKey].type.toLowerCase()\n                : 'xml';\n            let fragmentName = viewExtensionsOfPage[manifestKey].fragmentName;\n            if (!fragmentName) {\n                continue;\n            }\n            // Responsive Table ==> check cells' fragment name\n            const cellsFragmentName = determineCellsFragmentName(\n                extensionType,\n                viewExtensionsOfPage,\n                keyEntitySet,\n                referenceId\n            );\n\n            // Retrieve information from fragment\n            const fragmentParts = fragmentName.split('.');\n            fragmentName = fragmentParts[fragmentParts.length - 1] + FRAGMENTNAMEPART + fragmentType;\n            const filteredFragments = fragments.filter((fragment) => fragment['dataSourceUri'].endsWith(fragmentName));\n            analyzeFilteredFragments(\n                filteredFragments,\n                config,\n                viewExtensionsOfPage,\n                manifestKey,\n                keyTab,\n                extensionType,\n                cellsFragmentName\n            );\n        }\n    }\n}\n\n/**\n * Adds custom column information from manifest and fragments to the configuration\n * @param config - configuration, to be enhanced\n * @param manifest - actual manifest.json\n * @param v2Page - actual page in the manifest\n * @param pageType - type of the page\n * @param fragments - list of all fragments\n * @param objectPageSectionData - optional information, for object page\n */\nexport function addFragments(\n    config: LROPConfigsType,\n    manifest: object,\n    v2Page: v2.SapUiAppPageV2,\n    pageType: PageTypeV2,\n    fragments?: FileData[],\n    objectPageSectionData?: ObjectPageSectionData\n): void {\n    if (!fragments) {\n        return;\n    }\n    const targetKeyEntitySet =\n        '|' + (objectPageSectionData && objectPageSectionData.target ? objectPageSectionData.target : v2Page.entitySet);\n\n    if (\n        manifest[ManifestSection.ui5] &&\n        manifest[ManifestSection.ui5]['extends'] &&\n        manifest[ManifestSection.ui5]['extends']['extensions'] &&\n        manifest[ManifestSection.ui5]['extends']['extensions']['sap.ui.viewExtensions']\n    ) {\n        const viewExtension = PAGETYPE_VIEW_EXTENSION_TEMPLATE_MAP.get(pageType);\n        const viewExtensionsOfPage =\n            manifest[ManifestSection.ui5]['extends']['extensions']['sap.ui.viewExtensions'][viewExtension];\n        if (!viewExtensionsOfPage) {\n            return;\n        }\n        processViewExtensions(viewExtensionsOfPage, targetKeyEntitySet, objectPageSectionData, config, fragments);\n    }\n}\n\n/**\n * Prepares header standard actions information for LR/ALP config\n * @param {ListReportConfig} listReportConfig - LR config, to be filled\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {Definition} schemaDefinitions - app schema definitions\n */\nexport function importHeaderActions(\n    listReportConfig: v2.ListReportConfigV2,\n    factory: MetadataInstanceInterface,\n    schemaDefinitions: Definition\n) {\n    listReportConfig.header = { actions: {} };\n    if (schemaDefinitions[DefinitionName.HeaderActionsStandard]) {\n        const headerActions = schemaDefinitions[DefinitionName.HeaderActionsStandard].properties;\n        for (const actionKey in headerActions) {\n            listReportConfig.header.actions[actionKey] = factory.createInstance(PageTypeV2.ListReport, actionKey, {});\n        }\n    }\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { ControlType, DefinitionName, VOCWITHCOLONS } from '@sap/ux-specification-types';\nimport type { Definition } from 'typescript-json-schema';\n\nexport type FlexForTransfer = {\n    controlId: string;\n    controlType: string;\n    propertyId: string;\n    facetId?: string;\n    newValue: any;\n    creation: string;\n};\n\nexport interface FlexChangesForTransfer {\n    [controlId: string]: FlexForTransfer;\n}\n\nexport type ConfigTableType = v2.ResponsiveTable | v2.TreeTable | v2.AnalyticalTable | v2.GridTable | v2.TableALP;\n\nexport function addFlexForTable(config: ConfigTableType, change: FlexForTransfer, jsonSchema: Definition): void {\n    if (change.controlType.endsWith(DefinitionName.Table)) {\n        config[change.propertyId] = change.newValue;\n    } else if (change.controlType === ControlType.TableColumn) {\n        const schemaProperty = (jsonSchema?.definitions[DefinitionName.TableColumn] as Definition).properties[\n            change.propertyId\n        ];\n        if (!schemaProperty) {\n            return;\n        }\n        const idParts = change.controlId.split('-');\n        const lastIdPart = idParts[idParts.length - 1];\n        // As the last stable Id part is still too long in some cases, strip off the fixed parts.\n        // It must the be added again by the export!\n        const annotationPart = lastIdPart.split('template:::TableColumn:::');\n        const colId = annotationPart[annotationPart.length - 1]\n            .replace(/sSmartTableId.+?:::/, '')\n            .replace('::com.sap.vocabularies', VOCWITHCOLONS)\n            .replace('/', ':2f');\n        if (!config.columns) {\n            config.columns = {};\n        }\n        if (!config.columns[colId]) {\n            config.columns[colId] = {};\n        }\n        config.columns[colId][change.propertyId] = change.newValue;\n    }\n}\n", "import type { PageTypeV4 } from '@sap/ux-specification-types';\nimport { v2, PageTypeV2 } from '@sap/ux-specification-types';\n\n/**\n * Method searches in manifest object by passed path and returns found value.\n * If value was not found in manifest object,\n *   then method created empty object in manifest object within passed path.\n * @param manifest - target manifest object\n * @param path - path to lookup in manifest\n * @returns Found or created value\n */\nexport const ensureManifestSectionByPathV2 = (manifest: object, path: string): object => {\n    let manifestSection = manifest;\n    path.split('/').forEach(function (element) {\n        if (!manifestSection[element]) {\n            manifestSection[element] = {};\n        }\n        manifestSection = manifestSection && manifestSection[element];\n    });\n    return manifestSection ? manifestSection : {};\n};\n\n/**\n * Method searches in manifest object by passed path and returns found value.\n * If value was not found in manifest object, then 'undefined' is returned.\n * @param manifest - target manifest file\n * @param path - path to lookup in manifest\n * @returns Found value\n */\nexport const getManifestSectionByPathV2 = (manifest: object, path: string): object | undefined => {\n    let manifestSection = manifest;\n    const elements = path.split('/');\n    for (const element of elements) {\n        if (!manifestSection[element]) {\n            return undefined;\n        }\n        manifestSection = manifestSection && manifestSection[element];\n    }\n    return manifestSection ? manifestSection : {};\n};\n\nexport const deleteManifestSectionByPathV2 = (manifest: object, path: string): void => {\n    let manifestSection = manifest;\n    for (let index = 0; index < path.split('/').length; index++) {\n        const element = path.split('/')[index];\n        if (index === path.split('/').length - 1) {\n            delete manifestSection[element];\n        } else {\n            manifestSection = manifestSection && manifestSection[element];\n        }\n    }\n};\n\nfunction getNewPageTemplate(pageType: PageTypeV2 | PageTypeV4): object {\n    return {\n        component: {\n            name: 'sap.suite.ui.generic.template.' + pageType\n        }\n    };\n}\n\n/**\n * Method finds matching pages by 'entitySet' and 'navigationProperty' in passed pages object.\n * @param {SapUiAppPagesV2} pages Object with pages.\n * @param {string} [entitySet] Entity set.\n * @param {string} [navigationProperty] Navigation property.\n * @returns {SapUiAppPageV2 | undefined} Matching page object.\n */\nfunction findPageInManifest(\n    pages: v2.SapUiAppPagesV2,\n    entitySet?: string,\n    navigationProperty?: string\n): v2.SapUiAppPageV2 | undefined {\n    if (!pages) {\n        return;\n    }\n    for (const pageId in pages) {\n        const page = pages[pageId];\n        if (page.entitySet === entitySet && page.navigationProperty === navigationProperty) {\n            return page;\n        }\n    }\n}\n\nfunction transformPageFromAssociation(configPages: v2.Pages, association: string, manifestPage: object) {\n    //Handling partial deletion of a page\n    if (!configPages[association]) {\n        return;\n    }\n    if (manifestPage['pages'] && !Object.values(manifestPage['pages'])[0]) {\n        manifestPage['pages'][`${configPages[association].pageType}|${configPages[association].entitySet}`] =\n            getNewPageTemplate(configPages[association].pageType);\n    }\n    if (!manifestPage['pages']) {\n        manifestPage['pages'] = {\n            [`${configPages[association].pageType}|${configPages[association].entitySet}`]: getNewPageTemplate(\n                configPages[association].pageType\n            )\n        };\n    }\n    if (!Array.isArray(manifestPage['pages'])) {\n        let associatedManifestPage = findPageInManifest(\n            manifestPage['pages'],\n            configPages[association].entitySet,\n            configPages[association].navigationProperty\n        );\n\n        if (!associatedManifestPage) {\n            manifestPage['pages'][`${configPages[association].pageType}|${configPages[association].entitySet}`] =\n                associatedManifestPage = getNewPageTemplate(configPages[association].pageType);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        transformPageToNewManifestV2(association, configPages, associatedManifestPage);\n    }\n}\n\nfunction deletePage(manifestPage: object, configPages: v2.Pages, configPage: v2.Page) {\n    if (manifestPage['pages']) {\n        Object.keys(manifestPage['pages']).forEach((key) => {\n            const currentPage = manifestPage['pages'][key];\n            if (currentPage.component?.name === v2.FE_TEMPLATE_V2_OBJECT_PAGE) {\n                const configKey = `ObjectPage_${currentPage.entitySet}`;\n                if (!configPages[configKey]) {\n                    delete manifestPage['pages'][key];\n                }\n            }\n        });\n    }\n    if (\n        (configPage.pageType === PageTypeV2.ListReport || configPage.pageType === PageTypeV2.AnalyticalListPage) &&\n        Object.keys(configPage.navigation).length === 0\n    ) {\n        delete manifestPage['pages'];\n    }\n}\n\n/**\n * Transfers pages and routings from manifest to the config pages\n * @param pageId - page ID\n * @param configPages - config definitions of each page\n * @param manifestPage - top page definition in manifest\n */\nexport function transformPageToNewManifestV2(pageId: string, configPages: v2.Pages, manifestPage: object): void {\n    const configPage = configPages[pageId];\n    if (!configPage) {\n        return;\n    }\n    if (configPage.entitySet) {\n        manifestPage['entitySet'] = configPage.entitySet;\n    }\n    if (configPage.pageType === PageTypeV2.ListReport) {\n        manifestPage['component']['list'] = true;\n    }\n    if (configPage.navigationProperty) {\n        manifestPage['navigationProperty'] = configPage.navigationProperty;\n    }\n    if (configPage.defaultLayoutType) {\n        manifestPage['defaultLayoutType'] = configPage.defaultLayoutType;\n    } else if ('defaultLayoutType' in manifestPage) {\n        delete manifestPage['defaultLayoutType'];\n    }\n    if (configPage.navigation) {\n        for (const association in configPage.navigation) {\n            transformPageFromAssociation(configPages, association, manifestPage);\n        }\n        // Delete page\n        if (!Array.isArray(manifestPage['pages'])) {\n            deletePage(manifestPage, configPages, configPage);\n        }\n    }\n}\n", "export * from './Card';\nexport * from './Field';\nexport * from './FilterBar';\nexport * from './FormAction';\nexport * from './Fragment';\nexport * from './Table';\nexport * from './TableColumn';\nexport * from './ToolBar';\nexport * from './Action';\nexport * from './AnalyticalListPageChart';\nexport * from './AnalyticalListPageKPI';\nexport * from './ObjectPageHeader';\nexport * from './ObjectPageHeaderAction';\nexport * from './ObjectPageHeaderSection';\nexport * from './ObjectPageFooterAction';\nexport * from './ObjectPageLayout';\nexport * from './ObjectPageCustomSection';\nexport * from './ObjectPageSectionsV2';\nexport * from './ObjectPageChart';\nexport * from './ObjectPageTable';\nexport * from './ObjectPageToolBarAction';\n", "import { syncRule, childId, validity } from '../common/decoration';\nimport type {\n    TableColumnVerticalAlignment,\n    StatePreservationMode,\n    DraftDiscardConfirmationSettings,\n    Target,\n    Application,\n    FlexibleColumnLayout,\n    Manifest\n} from '@sap/ux-specification-types';\nimport { v2, ManifestSection, GENERICAPPSETTINGS, VOCWITHCOLONS } from '@sap/ux-specification-types';\n\nexport const getAppSettingPathV2 = (pageKeys: string[]): string => {\n    return `${ManifestSection.generic}/pages/${pageKeys[0]}/component/settings`;\n};\n\nexport const getTableSettingPathV2 = (pageKeys: string[]): string => {\n    return getAppSettingPathV2(pageKeys) + '/tableSettings';\n};\n\nexport const getChartSettingPathV2 = (pageKeys: string[]): string => {\n    return getAppSettingPathV2(pageKeys) + '/chartSettings';\n};\n\nexport const getDataLoadSettingPathV2 = (pageKeys: string[]): string => {\n    return getAppSettingPathV2(pageKeys) + '/dataLoadSettings';\n};\n\nexport const getCreationFieldsPathV2 = (pageKeys: string[], key: string): string => {\n    return `${getTableSettingPathV2(pageKeys)}/createWithParameterDialog/fields/${key}`;\n};\n\nexport const getOVPsettingPath = (): string => {\n    return ManifestSection.ovp;\n};\n\nexport const getCardSettingsPath = (cardKeys: string[]): string => {\n    const pathParts: string[] = [ManifestSection.ovp + '/cards'];\n    cardKeys.forEach((block) => {\n        if (block in v2.CardSettingsType) {\n            pathParts.push('settings');\n        } else {\n            pathParts.push(block);\n        }\n    });\n    pathParts.pop();\n    return pathParts.join('/');\n};\n\nexport const getGlobalSettingsPath = (cardKey: string[]): string => {\n    const pathParts: string[] = [ManifestSection.ovp];\n    cardKey.forEach((block) => {\n        pathParts.push(block);\n    });\n    pathParts.pop();\n    return pathParts.join('/');\n};\n\n// This corresponds to ALP KPI settings\nexport const getKPISettingsPath = (pageKeys: string[], kpiKey: string): string => {\n    return `${ManifestSection.generic}/pages/${pageKeys[0]}/component/settings/keyPerformanceIndicators/${kpiKey}`;\n};\n\n// This corresponds to List Report and Object page global settings\nexport const getAppRootSettingOBJPath = (pageKeys: string[]): string => {\n    const pathParts: string[] = [ManifestSection.generic];\n    pageKeys.forEach((pageKey) => {\n        pathParts.push('pages/' + pageKey);\n    });\n    return pathParts.join('/');\n};\n\n// This corresponds to global object page settings\nexport const getAppSettingOBJPathV2 = (pageKeys: string[]): string => {\n    const pathParts: string[] = [];\n    pathParts.push(getAppRootSettingOBJPath(pageKeys));\n    pathParts.push('component/settings');\n    return pathParts.join('/');\n};\n\nexport const getGlobalTableSettingsPathV2 = (pageKeys: string[]): string => {\n    const path = getAppSettingOBJPathV2(pageKeys);\n    return path + '/tableSettings';\n};\n\nexport const getAppSettingOBJsectionPathV2 = (pageKeys: string[], _manifest: Manifest, sectionId: string): string => {\n    const pathParts: string[] = [];\n    pathParts.push(getAppRootSettingOBJPath(pageKeys));\n    const manifestSectionId = sectionId.replace(VOCWITHCOLONS, '::com.sap.vocabularies');\n    pathParts.push('component/settings/sections/' + manifestSectionId);\n    return pathParts.join('/');\n};\n\nexport const getTableSettingsOBJsectionPathV2 = (\n    pageKeys: string[],\n    _manifest: Manifest,\n    sectionId: string\n): string => {\n    const path = getAppSettingOBJsectionPathV2(pageKeys, {} as Manifest, sectionId);\n    return path + '/tableSettings';\n};\n\nexport const getChartSettingsOBJsectionPathV2 = (\n    pageKeys: string[],\n    _manifest: Manifest,\n    sectionId: string\n): string => {\n    const path = getAppSettingOBJsectionPathV2(pageKeys, {} as Manifest, sectionId);\n    return path + '/chartSettings';\n};\n\nexport const getViewExtensionsPath = (): string => {\n    return `sap.ui5/extends/extensions/${v2.SAPUI5_VIEW_EXTENSION}/${v2.SAPUI5_VIEW_EXTENSION_OBJECT_PAGE}`;\n};\n\nexport const getObjectPageCustomSectionPath = (\n    pageName: string[],\n    _manifest: Manifest,\n    sectionId: string,\n    ...pathParts: string[]\n): string => {\n    const separator = '|';\n    const sectionIdParts = sectionId.split(separator);\n    const pageNameParts = pageName[pageName.length - 1].split(separator);\n    let idLastPart = '';\n    if (sectionIdParts.length === 4) {\n        // Four parts ==> the last one is incremented to avoid getting the same path\n        // We need to merge 3 and 4\n        idLastPart = [sectionIdParts[2], sectionIdParts[3]].join(separator);\n    } else if (sectionIdParts.length === 3) {\n        idLastPart = sectionIdParts[2];\n    }\n    const customSectionId = [sectionIdParts[0], pageNameParts[pageNameParts.length - 1], idLastPart].join(separator);\n    // Sub-path parts are passed\n    pathParts.unshift(customSectionId);\n\n    return `${getViewExtensionsPath()}/${pathParts.join('/')}`;\n};\n\nexport class ApplicationV2 implements Application {\n    id?: string;\n    pages?: v2.Pages;\n    home?: string;\n    target?: Target;\n    @childId('settings')\n    settings?: AppSettings;\n}\n\nexport class AppSettings implements v2.AppSettings {\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.app'\n        }\n    })\n    title?: string;\n\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.app'\n        }\n    })\n    description?: string;\n\n    @syncRule({\n        manifest: {\n            path: (): string => GENERICAPPSETTINGS\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    flexibleColumnLayout?: FlexibleColumnLayout;\n\n    @syncRule({\n        manifest: {\n            path: (): string => GENERICAPPSETTINGS\n        }\n    })\n    @validity({\n        since: '1.46.0'\n    })\n    forceGlobalRefresh?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => GENERICAPPSETTINGS\n        }\n    })\n    @validity({\n        since: '1.74.0'\n    })\n    tableColumnVerticalAlignment?: TableColumnVerticalAlignment;\n\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.ui5'\n        }\n    })\n    @validity({\n        since: '1.56.0'\n    })\n    flexEnabled?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => GENERICAPPSETTINGS\n        }\n    })\n    @validity({\n        since: '1.96.0'\n    })\n    draftDiscardConfirmationSettings?: DraftDiscardConfirmationSettings;\n\n    @syncRule({\n        manifest: {\n            path: (): string => GENERICAPPSETTINGS\n        }\n    })\n    @validity({\n        since: '1.96.0'\n    })\n    statePreservationMode?: StatePreservationMode;\n}\n", "import type {\n    v2,\n    ColorPaletteType,\n    SapOvpTabSetting,\n    SapOvpPlotAreaDef,\n    SapOvpTimeAxisDef\n} from '@sap/ux-specification-types';\nimport { syncRule } from '../../../common/decoration/decorators';\nimport { getCardSettingsPath, getOVPsettingPath } from '../../application';\nimport { ColorPaletteDefinitionType } from '@sap/ux-specification-types';\n\nfunction importColorPalette(manifestSection: object): ColorPaletteType | any[] {\n    const colorPalette = manifestSection['colorPalette'];\n    let configPart: ColorPaletteType | any[];\n    if (Array.isArray(colorPalette)) {\n        //deprecated array syntax\n        throw new Error(`The array syntax for colorPalette is deprecated and not supported`);\n    } else if (colorPalette['0'] && typeof colorPalette['0'] === 'object') {\n        configPart = colorPalette as ColorPaletteType;\n        configPart.colorPaletteType = ColorPaletteDefinitionType.SemanticColoring;\n    } else if (colorPalette['dimensionSettings']) {\n        configPart = colorPalette as ColorPaletteType;\n        configPart.colorPaletteType = ColorPaletteDefinitionType.MapDimensionValues;\n    } else {\n        configPart = {\n            colorPaletteType: ColorPaletteDefinitionType.StableColoring,\n            dimensionValueToColor: colorPalette\n        };\n    }\n    return configPart;\n}\n\nexport function exportColorPalette(manifestSection: unknown, configPart: object, key: string): void {\n    const value = JSON.parse(JSON.stringify(configPart[key]));\n    delete value.colorPaletteType;\n    if (configPart[key].colorPaletteType === ColorPaletteDefinitionType.StableColoring) {\n        manifestSection[key] = value.dimensionValueToColor;\n    } else if (configPart[key].colorPaletteType) {\n        manifestSection[key] = value;\n    }\n}\n\nexport function exportDefaultSpan(manifestSection: unknown, configPart: object, key: string): void {\n    const value = configPart[key];\n    if (value === 'auto') {\n        manifestSection[key] = value;\n    } // else = object properties, handled by own sync rules\n}\n\nexport class ChartSettingsType implements v2.ChartSettingsType {\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath() + '/chartSettings'\n        }\n    })\n    showDataLabel?: boolean;\n}\n\nexport class DefaultSpanObject implements v2.DefaultSpanObject {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    cols: number;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    rows: number;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    showOnlyHeader?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    minimumTitleRow?: number;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    minimumSubTitleRow?: number;\n}\n\nexport class CommonCardSettings implements v2.CommonCardSettings {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    entitySet?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    title: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    subTitle?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    annotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    dataPointAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    selectionPresentationAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    kpiAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    category?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    dynamicSubtitleAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    valueSelectionInfo?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    showFilterInHeader?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    sortBy?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    sortOrder?: 'ascending' | 'descending';\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    identificationAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    selectionAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    presentationAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    enableLocaleCurrencyFormatting?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys),\n            export: exportDefaultSpan\n        }\n    })\n    defaultSpan?: v2.DefaultSpanObject | 'auto';\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    requireAppAuthorization?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    showSortingInHeader?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    tabs?: SapOvpTabSetting[];\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    addODataSelect?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    showRefresh?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    customParams?: string;\n}\nexport class CustomCard implements v2.CustomCard {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    model: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    template: v2.CardTemplateType;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    settings?: v2.CustomCardSettings;\n}\n\nexport class ListCardSettings extends CommonCardSettings implements v2.ListCardSettings {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    showLineItemDetail?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    imageSupported?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    enableAddToInsights?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    listFlavor?: v2.ListFlavorType;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    listType?: v2.ListTypeType;\n}\n\nexport class ListCard implements v2.ListCard {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    model: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    template: v2.CardTemplateType.list | v2.CardTemplateType.listv4;\n\n    settings: ListCardSettings;\n}\n\nexport class AnalyticalCardSettings extends CommonCardSettings implements v2.AnalyticalCardSettings {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    chartAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    ignoreSapText?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    enableAddToInsights?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    navigation?: 'dataPointNav' | 'chartNav' | 'headerNav' | 'noHeaderNav';\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    valueSelectionInfo?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    chartProperties?: {\n        plotArea?: SapOvpPlotAreaDef;\n        timeAxis?: SapOvpTimeAxisDef;\n    };\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys),\n            import: importColorPalette,\n            export: exportColorPalette\n        }\n    })\n    colorPalette?: ColorPaletteType;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    bEnableStableColors?: boolean;\n}\n\nexport class AnalyticalCardSettingsv4 extends AnalyticalCardSettings implements v2.AnalyticalCardSettingsv4 {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    measureAggregate?: v2.MeasureAggregateSettings;\n}\n\nexport class AnalyticalCard implements v2.AnalyticalCard {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    model: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    template: v2.CardTemplateType.analytical | v2.CardTemplateType.analyticalv4;\n\n    settings: AnalyticalCardSettings | AnalyticalCardSettingsv4;\n}\n\nexport class StackCardSettings extends CommonCardSettings implements v2.StackCardSettings {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    itemText?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    objectStreamCardsNavigationProperty?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    objectStreamCardsSettings?: {\n        showFirstActionInFooter?: boolean;\n        annotationPath?: string;\n    };\n}\n\nexport class StackCard implements v2.StackCard {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    model: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    template: v2.CardTemplateType.stack;\n\n    settings: StackCardSettings;\n}\n\nexport class LinkListCardSettings extends CommonCardSettings implements v2.LinkListCardSettings {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    listFlavor?: v2.LinkListFlavorType;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    headerAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    staticContent?: v2.StaticContent[];\n}\n\nexport class LinklistCard implements v2.LinklistCard {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    model: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    template: v2.CardTemplateType.linklist | v2.CardTemplateType.linklistv4;\n\n    settings: LinkListCardSettings;\n}\n\nexport class TableCardSettings extends CommonCardSettings implements v2.TableCardSettings {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    showLineItemDetail?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    enableAddToInsights?: boolean;\n}\n\nexport class TableCard implements v2.TableCard {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    model: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    template: v2.CardTemplateType.table | v2.CardTemplateType.tablev4;\n\n    settings: TableCardSettings;\n}\n", "import type { v2, ControlTypeFunction } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, exportToFlexChange, buildControlIdFromParent } from '../../../common/decoration';\nimport { addPatternForBindingChangeOfEnumOP, convertSectionId } from '../../../common';\n\n/**\n * Create stable ID for Object Page Form Field\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @param {ControlTypeFunction} controlType\n * @param {string} facetID title from the app schema (comprising for instance the facet ID)\n * @returns {string} stable ID of Object Page Form Action button\n */\nconst getSmartFieldControlId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    facetId: string\n): string => {\n    const convertedId = convertSectionId(breadcrumbs[1], facetId);\n    const fieldCrumb = breadcrumbs.slice(-1)[0];\n    const breadcrumbsTrail = [convertedId, fieldCrumb, 'GroupElement'];\n    return buildControlIdFromParent(baseId, breadcrumbsTrail);\n};\n\nexport class Field implements v2.Field {\n    @syncRule({\n        flex: {\n            controlId: getSmartFieldControlId,\n            controlType: (): ControlType => ControlType.GroupElement,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n", "import { syncRule, validity } from '../../../common/decoration/decorators';\nimport { buildControlIdFromParent, exportToFlexChange } from '../../../common/decoration';\nimport { getAppSettingPathV2 } from '../../application';\nimport { convertEnumToCSV } from '../../../common';\nimport { ControlType, DATESETTINGSPATH, v2 } from '@sap/ux-specification-types';\n\nexport function importDateSettings(manifestSection: object): DateRange {\n    if (!manifestSection || !manifestSection['dateSettings']) {\n        return undefined;\n    }\n    const configPart: DateRange = JSON.parse(JSON.stringify(manifestSection['dateSettings']));\n    // converted CSV format to array of strings\n    if (typeof manifestSection['dateSettings']['selectedValues'] === 'string') {\n        configPart.selectedValues = manifestSection['dateSettings']['selectedValues'].split(',') as v2.DateRangeType[];\n    }\n    delete configPart['fields'];\n    return configPart;\n}\n\nfunction importDateSettingsField(manifestSection: string | Array<object>, _sectionId: string, propertyKey: string) {\n    const configPart = manifestSection?.[propertyKey]\n        ? JSON.parse(JSON.stringify(manifestSection?.[propertyKey]))\n        : undefined;\n    let selectionField;\n    if (propertyKey === 'selectedValues' && typeof configPart === 'string') {\n        selectionField = configPart.split(',') as v2.DateRangeType[];\n    }\n    if (propertyKey === 'filter' && typeof configPart === 'object') {\n        selectionField = [];\n        configPart.forEach((section, index) => {\n            selectionField[index] = section;\n            if (section['equals'] && typeof section['equals'] === 'string') {\n                selectionField[index].equals = section['equals'].split(',') as v2.DateRangeType[];\n            }\n        });\n    }\n    return selectionField;\n}\n\nexport function exportDateSettingsField(manifestSection: unknown, configPart: DateRange, key: string): void {\n    manifestSection[key] = JSON.parse(JSON.stringify(configPart[key]));\n    const field = configPart[key];\n    if (key === 'selectedValues') {\n        manifestSection[key] = field.join();\n    }\n    if (key === 'filter') {\n        for (const filterKey in field) {\n            const filterValue = field[filterKey];\n            manifestSection[key][filterKey] = filterValue;\n            if (filterValue.equals && Array.isArray(filterValue.equals)) {\n                manifestSection[key][filterKey].equals = filterValue.equals.join();\n            }\n        }\n    }\n}\n\nexport class DateRange implements v2.DateRange {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => {\n                return getAppSettingPathV2(pageKeys) + DATESETTINGSPATH;\n            }\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    useDateRange?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + DATESETTINGSPATH,\n            import: importDateSettings,\n            export: convertEnumToCSV\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    selectedValues?: v2.DateRangeType[];\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + DATESETTINGSPATH\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    exclude?: boolean;\n}\n\nconst flexRuleForSmartFilterBar = {\n    controlId: buildControlIdFromParent,\n    controlType: (): ControlType => ControlType.SmartFilterBar,\n    createFlexChange: exportToFlexChange\n};\n\nconst manifestRuleForSelectionField = {\n    path: (pageKeys, _manifest, breadcrumbs): string =>\n        `${getAppSettingPathV2(pageKeys)}${DATESETTINGSPATH}/fields/${breadcrumbs}`\n};\n\nconst manifestRuleForSelectionFieldWithArrays = {\n    ...manifestRuleForSelectionField,\n    import: importDateSettingsField,\n    export: exportDateSettingsField\n};\n\nexport class DefaultDateRange implements v2.DefaultDateRange {\n    @syncRule({\n        manifest: manifestRuleForSelectionField\n    })\n    @validity({\n        since: '1.90.0'\n    })\n    operation: v2.DefaultDateRangeValueType;\n}\n\nexport class SelectionFieldDateSettings implements v2.SelectionFieldDateSettings {\n    @syncRule({\n        manifest: manifestRuleForSelectionFieldWithArrays\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    selectedValues?: v2.DateRangeType[];\n\n    @syncRule({\n        manifest: manifestRuleForSelectionField\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    exclude?: boolean;\n\n    @syncRule({\n        manifest: manifestRuleForSelectionField\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    customDateRangeImplementation?: string;\n\n    @syncRule({\n        manifest: manifestRuleForSelectionFieldWithArrays\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    filter?: v2.FilterType[];\n\n    @syncRule({\n        manifest: manifestRuleForSelectionField\n    })\n    @validity({\n        since: '1.90.0'\n    })\n    defaultValue?: DefaultDateRange;\n}\n\nexport class SelectionFields implements v2.SelectionFields {\n    [key: string]: v2.SelectionField | v2.SelectionFieldDateSettings;\n}\n\nexport class CommonFilterBar implements v2.CommonFilterBar {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.38.0'\n    })\n    smartVariantManagement?: boolean;\n\n    @syncRule({\n        flex: flexRuleForSmartFilterBar\n    })\n    @validity({\n        since: '1.40.0'\n    })\n    liveMode?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    variantManagementHidden: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.52.0' // Available in 1.52 so exact validity information is not required\n    })\n    subTitleIfVariantMgmtHidden?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + '/filterSettings',\n            import: importDateSettings\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    dateSettings?: DateRange;\n\n    selectionFields?: SelectionFields;\n\n    @syncRule({\n        flex: flexRuleForSmartFilterBar\n    })\n    @validity({\n        since: '1.28.0'\n    })\n    showClearOnFB?: boolean;\n\n    @syncRule({\n        flex: flexRuleForSmartFilterBar\n    })\n    @validity({\n        since: '1.38.0'\n    })\n    showFilterConfiguration?: boolean;\n\n    @syncRule({\n        flex: flexRuleForSmartFilterBar\n    })\n    @validity({\n        since: '1.28.0'\n    })\n    showRestoreOnFB?: boolean;\n}\n\nexport class AnalyticalListPageFilterBar extends CommonFilterBar implements v2.AnalyticalListPageFilterBar {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    showGoButtonOnFilterBar?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.60.0'\n    })\n    filterDefaultsFromSelectionVariant?: boolean;\n}\n\nexport class ListReportFilterBar extends CommonFilterBar implements v2.ListReportFilterBar {\n    // This is replaced by an enum containing list of SelectionVariant annotations during generate\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    annotationPath?: string;\n}\n", "import type { v2, ControlTypeFunction } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport {\n    syncRule,\n    exportToFlexChange,\n    buildControlIdFromParent,\n    validity,\n    convertSectionId\n} from '../../../common/decoration';\nimport { addPatternForBindingChangeOfEnumOP } from '../../../common';\nimport type { ButtonType } from 'sap/m/library';\nimport type { URI } from 'sap/ui/core/library';\n\n/**\n * Create stable ID for Object Page Form Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @param {ControlTypeFunction} controlType\n * @param {string} facetID title from the app schema (comprising for instance the facet ID)\n * @returns {string} stable ID of Object Page Form Action button\n */\nconst getFormActionButtonId = (\n    baseId: string,\n    idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    controlType: ControlTypeFunction,\n    facetID: string\n): string => {\n    if (controlType() === ControlType.Button) {\n        const entity = breadcrumbs[breadcrumbs.length - 1];\n        const section = convertSectionId(breadcrumbs[1], facetID);\n        return `${baseId}action::${entity}::${section}::FormAction`;\n    }\n    return buildControlIdFromParent(baseId, idBreadcrumbs);\n};\n\nconst flexRuleForFormAction = {\n    controlId: getFormActionButtonId,\n    controlType: (): ControlType => ControlType.Button,\n    createFlexChange: exportToFlexChange\n};\n\nexport class FormAction implements v2.FormAction {\n    @syncRule({\n        flex: flexRuleForFormAction,\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible: boolean;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    type?: ButtonType;\n}\n\nexport class FieldForAction implements v2.FormAction {\n    @syncRule({\n        flex: flexRuleForFormAction,\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible: boolean;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    @validity({\n        since: '1.73.0'\n    })\n    type?: ButtonType;\n}\n", "import { v2, FRAGMENTNAMEPART, ViewTemplateType, LogSeverity, ChangeIndicator } from '@sap/ux-specification-types';\nimport type { ExportResults, FileData, ExtensionLogger, FileDataResult } from '@sap/ux-specification-types';\nimport { xml2json, json2xml } from 'xml-js';\nimport {\n    getSingleColumnContent,\n    getColumnFragmentContent,\n    getResponsiveTableCellsFragment\n} from '../view-controller-generator';\nimport i18next from 'i18next';\nimport { log } from '../../../../extensionLogger';\nimport { deleteManifestSectionByPathV2, ensureManifestSectionByPathV2 } from '../manifest';\nimport { sep } from 'path';\n\nexport const FRAGMENT_DEFINITION = 'core:FragmentDefinition';\nexport const SAP_UI_TABLE = 'sap.ui.table';\n\nconst VIEW_TEMPLATE_TAGTYPE_MAP: Map<ViewTemplateType, { namespace: string; name: string }> = new Map([\n    [ViewTemplateType.ResponsiveTableColumnsExtension, { namespace: 'sap.m', name: 'Column' }],\n    [ViewTemplateType.TreeTableColumnsExtension, { namespace: SAP_UI_TABLE, name: 'Column' }],\n    [ViewTemplateType.GridTableColumnsExtension, { namespace: SAP_UI_TABLE, name: 'Column' }],\n    [ViewTemplateType.AnalyticalTableColumnsExtension, { namespace: SAP_UI_TABLE, name: 'AnalyticalColumn' }]\n]);\n\nconst FE_TEMPLATE_VIEW_EXTENSION_MAP: Map<string, string> = new Map([\n    [v2.FE_TEMPLATE_V2_LIST_REPORT, v2.SAPUI5_VIEW_EXTENSION_LIST_REPORT],\n    [v2.FE_TEMPLATE_V2_ALP, v2.SAPUI5_VIEW_EXTENSION_ANALYTICAL_LIST_PAGE],\n    [v2.FE_TEMPLATE_V2_OBJECT_PAGE, v2.SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]\n]);\n\nconst dummyEntry = {\n    type: 'element',\n    name: 'Text',\n    attributes: { text: 'Placeholder' }\n};\nconst dummyEntryAsString = JSON.stringify(dummyEntry);\n\n/**\n * Lists namespaces available in fragment to consider\n * @param fragment - fragment content\n * @param isCoreFragmentDefinition - If set to true, only the namespaces in core definition will be considered\n * @returns {Map<string, string[]> | undefined} - If available, namespaces will be returned as Map (key: alias, values: name[])\n */\nfunction getFragmentNamespaces(fragment, isCoreFragmentDefinition: boolean): Map<string, string[]> | undefined {\n    const fragmentAttributes = isCoreFragmentDefinition\n        ? fragment[FRAGMENT_DEFINITION]['_attributes']\n        : fragment['_attributes'];\n    if (fragmentAttributes) {\n        const allFragmentNamespaces = new Map<string, string[]>();\n        Object.keys(fragmentAttributes)\n            .filter((attribute) => attribute.startsWith('xmlns'))\n            .forEach((xmlns) => {\n                const existingNamespaces = allFragmentNamespaces.get(fragmentAttributes[xmlns]);\n                allFragmentNamespaces.set(\n                    fragmentAttributes[xmlns],\n                    existingNamespaces\n                        ? [...existingNamespaces, xmlns.split(':')[1] || xmlns]\n                        : [xmlns.split(':')[1] || xmlns]\n                );\n            });\n        return allFragmentNamespaces;\n    }\n}\n\n/**\n * Considers namespace of fragment and returns combined tag name\n * @param tag - tag name and namespace\n * @param {string[]} fragmentNamespace namespaces of fragment\n * @returns {string} tag name consisting of namespace and name\n */\nfunction getTagName(tag: { namespace: string; name: string }, fragmentNamespaces: string[]): string {\n    if (!fragmentNamespaces) {\n        return `${tag.namespace}:${tag.name}`;\n    } else if (fragmentNamespaces.includes('xmlns')) {\n        return tag.name;\n    } else {\n        return `${fragmentNamespaces}:${tag.name}`;\n    }\n}\n\n/**\n * Maps the column template type to the fragment namespace and returns the tag name with namespace of root column definition.\n * @param definition - fragment or content definition\n * @param viewTemplateType - name of the view template that shall be applied\n * @param fragment - fragment definition\n * @returns {unknown | undefined} Root column tag name.\n */\nfunction getTagNameFromFragmentJSON(\n    definition: unknown,\n    viewTemplateType?: ViewTemplateType,\n    fragment: unknown = definition\n): string | undefined {\n    const namespaces = getFragmentNamespaces(fragment, viewTemplateType || fragment !== definition ? true : false);\n    if (viewTemplateType) {\n        const tag = VIEW_TEMPLATE_TAGTYPE_MAP.get(viewTemplateType);\n        return getTagName(tag, namespaces.get(tag.namespace));\n    } else {\n        const keys = VIEW_TEMPLATE_TAGTYPE_MAP.keys();\n        for (const key of keys) {\n            const tag = VIEW_TEMPLATE_TAGTYPE_MAP.get(key);\n            const tagName = namespaces ? getTagName(tag, namespaces.get(tag.namespace)) : tag.name;\n            if (definition[tagName]) {\n                return tagName;\n            }\n        }\n    }\n    return undefined;\n}\n\n/**\n * Method which receives fragment definition node and reads root column definition.\n * @param {unknown} definition - Application or Page Config object.\n * @param {unknown} fragment - fragment definition\n * @returns {unknown | undefined} Root column read from definition.\n */\nexport function getRootCustomColumnFromFragmentJSON(\n    definition: unknown,\n    fragment = definition\n): string | unknown | undefined {\n    const name = getTagNameFromFragmentJSON(definition, undefined, fragment);\n    return definition[name];\n}\n\n/**\n * Internal function adding content to config column\n * @param configColumns - list of all columns in the config\n * @param columnIndex - index of column\n * @returns - filled personalization data\n */\nfunction addP13nData(configColumns: v2.TableCustomColumns, columnIndex: number): string {\n    const columnProperties = [\n        'id',\n        'text',\n        'className',\n        'fragmentName',\n        'tabKey',\n        'extensionType',\n        'cellsFragmentName'\n    ];\n    let p13nData = `\\\\{`;\n    for (const key in configColumns[columnIndex]) {\n        const value = configColumns[columnIndex][key];\n        if (!columnProperties.includes(key) && value !== undefined && value.length !== 0) {\n            if (p13nData !== '\\\\{') {\n                p13nData += `, `;\n            }\n            p13nData += `\"${key}\": \"${value.toString()}\"`;\n        }\n    }\n    p13nData += '}';\n    return p13nData;\n}\n\n/**\n * Internal function handling a single fragment column if detected in the fragment\n * @param columnsInFragment - list of all columns in fragment\n * @param configColumns - list of all columns in the config\n */\nfunction handleFragmentColumn(columnsInFragment: object, configColumns: v2.TableCustomColumns): boolean {\n    let foundInConfig = false;\n    const customData = columnsInFragment['customData'] || columnsInFragment['table:customData'];\n    if (!customData) {\n        return false;\n    }\n\n    let p13nData = customData['core:CustomData']._attributes.value;\n    const columnParts = JSON.parse(p13nData.substr(1, p13nData.length));\n    const columnIndex = configColumns.findIndex((column) => {\n        return column.columnKey === columnParts.columnKey;\n    });\n    if (columnIndex < 0) {\n        return false;\n    }\n\n    //Found ==> update scenario\n    foundInConfig = true;\n    p13nData = addP13nData(configColumns, columnIndex);\n    customData['core:CustomData']._attributes.value = p13nData;\n    if (!columnsInFragment['Text'] && !columnsInFragment['Label'] && configColumns[columnIndex]?.text) {\n        columnsInFragment['Text'] = {\n            _attributes: {}\n        };\n    }\n    if (columnsInFragment['Text'] && columnsInFragment['Text']['_attributes']) {\n        columnsInFragment['Text']._attributes['text'] = configColumns[columnIndex]?.text;\n    } else if (columnsInFragment['Label'] && columnsInFragment['Label']['_attributes']) {\n        columnsInFragment['Label']._attributes['text'] = configColumns[columnIndex]?.text;\n    }\n    if (!columnsInFragment['_attributes']) {\n        columnsInFragment['_attributes'] = {};\n    }\n    columnsInFragment['_attributes']['id'] = configColumns[columnIndex].id;\n    configColumns.splice(columnIndex, 1);\n    return foundInConfig;\n}\n\n/**\n * Deletes obsolete custom columns from the relevant fragment(s)\n * @param manifestSection - Section in manifest.json comprising the extensions\n * @param fragments - list of all fragments\n * @param pattern - Search string to identify the extension in manifest\n * @param appId - application ID\n */\nfunction deleteColumnsFromFragment(\n    manifestSection: object,\n    fragments: FileData[],\n    pattern: string,\n    appId: string\n): void {\n    const fragmentId = manifestSection[pattern].fragmentName.substr(appId.length + 1);\n    const fragmentType = manifestSection['type'] ? manifestSection['type'].toLowerCase() : 'xml';\n    const fragmentParts = fragmentId.split('.');\n    const fragmentName = fragmentParts[fragmentParts.length - 1] + FRAGMENTNAMEPART + fragmentType;\n    for (const fragment of fragments) {\n        const fragmentPathArray = fragment['dataSourceUri'].split(sep);\n        if (fragmentPathArray[fragmentPathArray.length - 1] === fragmentName) {\n            const fragmentJson = JSON.parse(xml2json(fragment.fileContent, { compact: true }));\n            const tagName = getTagNameFromFragmentJSON(fragmentJson[FRAGMENT_DEFINITION]);\n            if (tagName) {\n                delete fragmentJson[FRAGMENT_DEFINITION][tagName];\n                fragment.fileContent = json2xml(JSON.stringify(fragmentJson), { compact: true, spaces: 4 });\n            }\n            break;\n        }\n    }\n}\n\n/**\n * Deletes a given number of (dummy) cells from a fragment\n * @param fragmentCells - list of all cells in the parsed fragment\n * @param noOfEntriesToBeDeleted - number of entries to be deleted\n */\nfunction deleteNumberOfCells(fragmentCells: any, noOfEntriesToBeDeleted: number): void {\n    //only dummy entry will be deleted automatically!\n    for (let index = 0; index < Object.keys(fragmentCells).length; index++) {\n        if (JSON.stringify(fragmentCells[index]) === dummyEntryAsString) {\n            fragmentCells.splice(index, 1);\n            noOfEntriesToBeDeleted -= 1;\n            if (noOfEntriesToBeDeleted === 0) {\n                break;\n            }\n        }\n    }\n}\n\n/**\n * Deletes cells from the relevant fragment\n * @param cellManifestSection - section in mnifest referring the cells'fragment\n * @param fragments - list of all fragments\n * @param appId - application ID\n */\nfunction deleteCellsFromFragment(cellManifestSection: object, fragments: FileData[], appId: string): void {\n    const fragmentType = cellManifestSection['type'] ? cellManifestSection['type'].toLowerCase() : 'xml';\n    const fragmentParts = cellManifestSection['fragmentName'].substr(appId.length + 1).split('.');\n    const fragmentName = fragmentParts[fragmentParts.length - 1] + FRAGMENTNAMEPART + fragmentType;\n    for (const fragment of fragments) {\n        if (fragment['dataSourceUri'].endsWith(fragmentName)) {\n            const fragmentJson = JSON.parse(xml2json(fragment.fileContent));\n            const fragmentCells =\n                fragmentJson.elements[0].elements &&\n                fragmentJson.elements[0].elements.filter((element) => {\n                    return element.type === 'element';\n                });\n            if (fragmentCells) {\n                deleteNumberOfCells(fragmentJson.elements[0].elements, fragmentCells.length);\n            }\n            fragment.fileContent = json2xml(JSON.stringify(fragmentJson), { spaces: 4 });\n            break;\n        }\n    }\n}\n\n/**\n * Identifies the right extensions based on a pattern, then deletes all corresponding columns and cells\n * @param manifestSection - Section in manifest.json comprising the extensions\n * @param pattern - Search string to identify the extension in manifest\n * @param appId - application ID\n * @param fragments - list of all fragments\n */\nexport function deleteColumnFromFragment(\n    manifestSection: object,\n    pattern: string,\n    appId: string,\n    fragments: FileData[]\n): void {\n    if (fragments) {\n        //delete columns\n        deleteColumnsFromFragment(manifestSection, fragments, pattern, appId);\n        //delete cells\n        const cellsPath = pattern.replace(\n            ViewTemplateType.ResponsiveTableColumnsExtension,\n            ViewTemplateType.ResponsiveTableCellsExtension\n        );\n        const cellManifestSection = manifestSection[cellsPath];\n        if (cellManifestSection) {\n            deleteCellsFromFragment(cellManifestSection, fragments, appId);\n        }\n    }\n}\n\n/**\n * Adds new (dummy) columns to a given fragment, as many as we have entries in the config\n * @param fragmentCells - list of all cells in fragment\n * @param fragmentJson - complete fragment, parsed as JSON\n * @param config - actual config.json\n */\nfunction addNewColumnsInFragment(fragmentCells: any, fragmentJson: any, config: v2.TableCustomColumns): void {\n    const startIndex = fragmentCells ? Object.keys(fragmentCells).length : 0;\n    if (!fragmentJson.elements[0].elements) {\n        fragmentJson.elements[0].elements = [];\n    }\n    for (let index = startIndex; index < Object.keys(config).length; index++) {\n        fragmentJson.elements[0].elements.push(dummyEntry);\n    }\n}\n\n/**\n * Updates non-empty cells in a given fragment, from the config information\n * @param fragment - identified cells' fragment\n * @param config - config.json that lists the new cells' information\n */\nfunction updateNonEmptyCellsFragment(fragment: FileData, config: v2.TableCustomColumns): void {\n    const fragmentJson = JSON.parse(xml2json(fragment.fileContent));\n    const fragmentCells =\n        fragmentJson.elements[0].elements &&\n        fragmentJson.elements[0].elements.filter((element) => {\n            return element.type === 'element';\n        });\n    if (!fragmentCells || Object.keys(fragmentCells).length !== Object.keys(config).length) {\n        if (!fragmentCells || Object.keys(fragmentCells).length < Object.keys(config).length) {\n            addNewColumnsInFragment(fragmentCells, fragmentJson, config);\n        } else if (Object.keys(fragmentCells).length > Object.keys(config).length) {\n            const noOfEntriesToBeDeleted = Object.keys(fragmentCells).length - Object.keys(config).length;\n            const fragmentElements = fragmentJson.elements[0].elements;\n            deleteNumberOfCells(fragmentElements, noOfEntriesToBeDeleted);\n        }\n        fragment.fileContent = json2xml(JSON.stringify(fragmentJson), { spaces: 4 });\n    }\n}\n\n/**\n * Updates the content of a cell fragment file\n * @param fragments - list of existing fragments, to be enhanced\n * @param cellFragmentFileName - file name of the given cell fragment, as calculated from the config entry\n * @param config - current config JSON\n * @returns a boolean value to indicate if the cell fragment could be found n the given list of fragments\n */\nfunction updateCellsFragment(\n    fragments: FileDataResult[],\n    cellFragmentFileName: string,\n    config: v2.TableCustomColumns\n): boolean {\n    let cellsFragmentFound = false;\n    for (const fragment of fragments) {\n        const fragmentPathArray = fragment['dataSourceUri'].split(sep);\n        if (fragmentPathArray[fragmentPathArray.length - 1] === cellFragmentFileName) {\n            cellsFragmentFound = true;\n            fragment.changeIndicator = ChangeIndicator.Updated;\n            if (!fragment.fileContent || Object.keys(fragment.fileContent).length === 0) {\n                // Empty fragment - use template\n                fragment.fileContent = getResponsiveTableCellsFragment(config);\n            } else {\n                updateNonEmptyCellsFragment(fragment, config);\n            }\n            break;\n        }\n    }\n    return cellsFragmentFound;\n}\n\n/**\n * Adapt manifest from the given custom columns' definition in manifest\n * @param manifestPath - path to the current section of the manifest that describes the extension\n * @param {ExportResults} exportResults - export result comprising fragments and manifest\n * @param config - current config part, describing the new image of the extension\n * @param appId - application ID\n * @param {ExtensionLogger} logger - logger instance for exceptions\n * @returns everything that is needed for further processing the fragment\n */\nfunction exportCustomColumnsToManifest(\n    manifestPath: string,\n    exportResults: ExportResults,\n    config: v2.TableCustomColumns,\n    appId: string,\n    logger?: ExtensionLogger\n): { manifestSection: object; lsFilePath: string; cellsFragmentName: string; fragmentType: string } {\n    let lsFilePath: string;\n    let cellsFragmentName: string;\n    const manifest = exportResults.manifest;\n    const manifestSection = ensureManifestSectionByPathV2(manifest, manifestPath);\n    const fragmentType = manifestSection['type'] ? manifestSection['type'].toLowerCase() : 'xml';\n    manifestSection['type'] = fragmentType.toUpperCase();\n\n    for (const configElement of config) {\n        //last one wins -as there can only be one reference in the manifest\n        if (!configElement.fragmentName) {\n            log(logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOFRAGMENT', { columnKey: configElement.columnKey })\n            });\n            continue;\n        }\n        exportResults.manifestChangeIndicator = ChangeIndicator.Updated;\n        manifestSection['fragmentName'] = configElement.fragmentName;\n        manifestSection['className'] = configElement.className;\n        lsFilePath =\n            configElement.fragmentName?.replace(appId, '<root>/webapp').replace(/[.]/g, sep) +\n            FRAGMENTNAMEPART +\n            fragmentType;\n    }\n    if (manifestPath.indexOf(ViewTemplateType.ResponsiveTableColumnsExtension) > -1) {\n        exportResults.manifestChangeIndicator = ChangeIndicator.Updated;\n        const cellsPath = manifestPath.replace(\n            ViewTemplateType.ResponsiveTableColumnsExtension,\n            ViewTemplateType.ResponsiveTableCellsExtension\n        );\n        const cellManifestSection = ensureManifestSectionByPathV2(manifest, cellsPath);\n        const cellsFragmentColumn = config.reduce((previousColumn, column) => {\n            return column.cellsFragmentName ? column : previousColumn;\n        });\n        if (cellsFragmentColumn && cellsFragmentColumn.cellsFragmentName) {\n            cellManifestSection['fragmentName'] = cellsFragmentName = cellsFragmentColumn.cellsFragmentName;\n            cellManifestSection['className'] = config[0].className;\n            cellManifestSection['type'] = fragmentType.toUpperCase();\n        } else {\n            deleteManifestSectionByPathV2(manifest, cellsPath);\n        }\n    }\n    return { manifestSection, lsFilePath, cellsFragmentName, fragmentType };\n}\n\n/**\n * Method inserts new custom column into array of existing columns in same place as it appears in column configs.\n * @param {TableCustomColumn} column - Custom column config object.\n * @param {ViewTemplateType} viewTemplateType - template type\n * @param {Object} columnsInFragmentDefinition - Existing columns definition\n * @param {unknown} fragment - fragment definition\n * @param {number} colPos - column position from config\n * @returns {object} Columns object.\n */\nfunction insertNewColumnInFragment(\n    column: v2.TableCustomColumn,\n    viewTemplateType: ViewTemplateType,\n    columnsInFragmentDefinition: {},\n    fragment: unknown,\n    colPos: number\n): object {\n    const newColumnFragment = getSingleColumnContent(column, viewTemplateType);\n    if (newColumnFragment) {\n        const newColumnDefinition = JSON.parse(xml2json(newColumnFragment, { compact: true }));\n        const newColumn = getRootCustomColumnFromFragmentJSON(newColumnDefinition, fragment);\n        if (Array.isArray(columnsInFragmentDefinition)) {\n            // avoid having same columns\n            const columnExists = columnsInFragmentDefinition.some(\n                (col) => JSON.stringify(col) === JSON.stringify(newColumn)\n            );\n            if (!columnExists) {\n                columnsInFragmentDefinition.push(newColumn);\n            }\n        } else {\n            if (columnsInFragmentDefinition) {\n                // insert new column in array at specific position\n                const newColumnsInFragmentDefinition = [columnsInFragmentDefinition];\n                newColumnsInFragmentDefinition.splice(colPos, 0, newColumn);\n                columnsInFragmentDefinition = newColumnsInFragmentDefinition;\n            } else {\n                columnsInFragmentDefinition = [newColumn];\n            }\n        }\n    }\n    return columnsInFragmentDefinition;\n}\n\nfunction processCustomColumnInArray(columnsInFragmentDefinition: any[], configColumns: v2.TableCustomColumns) {\n    // store indexes of columns not appearing in config for later deletion\n    const unexistingColumnIndicesInConfig = [];\n    for (let j = 0; j < columnsInFragmentDefinition.length; j++) {\n        const columnFoundInConfig = handleFragmentColumn(columnsInFragmentDefinition[j], configColumns);\n        if (!columnFoundInConfig) {\n            unexistingColumnIndicesInConfig.push(j);\n        }\n    }\n    for (let i = unexistingColumnIndicesInConfig.length - 1; i >= 0; i--) {\n        columnsInFragmentDefinition.splice(unexistingColumnIndicesInConfig[i], 1);\n    }\n}\n\nfunction maintainExistingColumnInFragment(\n    columnsInFragmentDefinition: {},\n    configColumns: v2.TableCustomColumns,\n    fragmentJson: any\n) {\n    if (columnsInFragmentDefinition) {\n        //find the right column in the identified fragment file\n        if (Array.isArray(columnsInFragmentDefinition)) {\n            processCustomColumnInArray(columnsInFragmentDefinition, configColumns);\n        } else {\n            const columnFoundInConfig = handleFragmentColumn(columnsInFragmentDefinition, configColumns);\n            if (!columnFoundInConfig) {\n                const coreTagName = getTagNameFromFragmentJSON(fragmentJson[FRAGMENT_DEFINITION]);\n                if (coreTagName) {\n                    delete fragmentJson[FRAGMENT_DEFINITION][coreTagName];\n                    columnsInFragmentDefinition = undefined;\n                }\n            }\n        }\n    }\n    return columnsInFragmentDefinition;\n}\n\n/**\n * Method inserts new custom columns into existing columns.\n * @param {v2.TableCustomColumns} configColumns - Custom columns config object.\n * @param {string} fragmentId - fragment file name\n * @param {Object} columnsInFragmentDefinition - Existing columns definition\n * @param {ViewTemplateType} viewTemplateType - template type\n * @param {unknown} fragment - fragment definition\n * @returns {object} Columns object.\n */\nfunction insertNewColumnsInFragment(\n    configColumns: v2.TableCustomColumns,\n    fragmentId: string,\n    columnsInFragmentDefinition: {},\n    viewTemplateType: ViewTemplateType,\n    fragment: unknown\n) {\n    for (const column of configColumns) {\n        if (column.fragmentName.endsWith(fragmentId)) {\n            const colPos = configColumns.indexOf(column);\n            columnsInFragmentDefinition = insertNewColumnInFragment(\n                column,\n                viewTemplateType,\n                columnsInFragmentDefinition,\n                fragment,\n                colPos\n            );\n        }\n    }\n    return columnsInFragmentDefinition;\n}\n\n/**\n * Actualizes the column information in a fragment\n * @param fragments - list of all fragments\n * @param fragmentName - name of the relevant fragment, as maintained in manifest\n * @param fragmentId - ID = substring of the fragment name without the app ID\n * @param configColumns - list of all custom columns in the config\n * @param viewTemplateType - enum value that determines the view template\n * @returns a boolean value indicating if the fragment was found\n */\nfunction updateColumnsInFragment(\n    fragments: FileDataResult[],\n    fragmentName: string,\n    fragmentId: string,\n    configColumns: v2.TableCustomColumns,\n    viewTemplateType: ViewTemplateType\n): boolean {\n    let fragmentFound = false;\n\n    if (!fragments) {\n        return fragmentFound;\n    }\n\n    //find and update the columns' fragment file\n    for (const fragment of fragments) {\n        if (fragment['dataSourceUri'].endsWith(fragmentName)) {\n            let columnsInFragmentDefinition = {};\n            fragmentFound = true;\n            fragment.changeIndicator = ChangeIndicator.Updated;\n            if (!fragment.fileContent || fragment.fileContent.length === 0) {\n                // Empty fragment - use template\n                fragment.fileContent = getColumnFragmentContent(configColumns, viewTemplateType);\n            } else {\n                const fragmentJson = JSON.parse(xml2json(fragment.fileContent, { compact: true }));\n                const originalFragmentJson = JSON.stringify(fragmentJson);\n                //find the right column in the fragment file\n                columnsInFragmentDefinition = getRootCustomColumnFromFragmentJSON(fragmentJson[FRAGMENT_DEFINITION]);\n                columnsInFragmentDefinition = maintainExistingColumnInFragment(\n                    columnsInFragmentDefinition,\n                    configColumns,\n                    fragmentJson\n                );\n                //Insert scenario for the remaining entries\n                columnsInFragmentDefinition = insertNewColumnsInFragment(\n                    configColumns,\n                    fragmentId,\n                    columnsInFragmentDefinition,\n                    viewTemplateType,\n                    fragmentJson\n                );\n                const tagName = getTagNameFromFragmentJSON(fragmentJson, viewTemplateType);\n                fragmentJson[FRAGMENT_DEFINITION][tagName] = columnsInFragmentDefinition;\n                const fragmentContent = JSON.stringify(fragmentJson);\n                if (fragmentContent !== originalFragmentJson) {\n                    fragment.fileContent = json2xml(fragmentContent, { compact: true, spaces: 4 });\n                }\n            }\n            break;\n        }\n    }\n    return fragmentFound;\n}\n\n/**\n * The function transfers ALL properties of one or more custom columns to a given fragment, or creates a new one if necesary.\n * @param {ExportResults} exportResults - export result comprising fragments and manifest\n * @param manifestPath - path to the current section of the manifest that describes the extension\n * @param config - current config part, describing the new image of the extension\n * @param appId - application ID\n * @param viewTemplateType - name of the view template that shall be applied\n * @param {ExtensionLogger} logger - logger instance for exceptions\n */\nexport function exportCustomColumnsToFragment(\n    exportResults: ExportResults,\n    manifestPath: string,\n    config: v2.TableCustomColumns,\n    appId: string,\n    viewTemplateType: ViewTemplateType,\n    logger?: ExtensionLogger\n): void {\n    const fragments: FileDataResult[] = exportResults.fragments;\n\n    //Find and adapt manifest\n    const { manifestSection, lsFilePath, cellsFragmentName, fragmentType } = exportCustomColumnsToManifest(\n        manifestPath,\n        exportResults,\n        config,\n        appId,\n        logger\n    );\n\n    //Find and adapt fragment\n    const configColumns = JSON.parse(JSON.stringify(config));\n    let fragmentName = manifestSection['fragmentName'];\n    const fragmentId = fragmentName.substr(appId.length + 1);\n    const fragmentParts = fragmentId.split('.');\n    const templateType = fragmentParts[fragmentParts.length - 1];\n    fragmentName = templateType + FRAGMENTNAMEPART + fragmentType;\n    const cellFragmentParts = cellsFragmentName?.split('.');\n    const cellTemplateType = cellFragmentParts ? cellFragmentParts[cellFragmentParts.length - 1] : null;\n    const cellFragmentFileName = cellTemplateType ? cellTemplateType + FRAGMENTNAMEPART + fragmentType : null;\n\n    // update columns in fragment\n    const fragmentFound = updateColumnsInFragment(fragments, fragmentName, fragmentId, configColumns, viewTemplateType);\n\n    let cellsFragmentFound = false;\n    if (cellsFragmentName) {\n        //find an update the cells' fragment file\n        cellsFragmentFound = updateCellsFragment(fragments, cellFragmentFileName, config);\n    } else {\n        cellsFragmentFound = true; //not relevant\n    }\n    if (!fragmentFound) {\n        const fragment: FileDataResult = {\n            fileContent: getColumnFragmentContent(configColumns, viewTemplateType),\n            dataSourceUri: lsFilePath,\n            changeIndicator: ChangeIndicator.Deleted\n        };\n        exportResults.fragments.push(fragment);\n    }\n    if (!cellsFragmentFound) {\n        const fragment: FileDataResult = {\n            fileContent: getResponsiveTableCellsFragment(config),\n            dataSourceUri: lsFilePath.replace(fragmentName, cellFragmentFileName),\n            changeIndicator: ChangeIndicator.Deleted\n        };\n        exportResults.fragments.push(fragment);\n    }\n}\n\n/**\n * Determines the manifest path of a column extension.\n * @param {string[]} page Page object from manifest.\n * @param {string} entitySet Table's entity set.\n * @param {string} [additionalKey] Key provided when defining the FacetID or QuickVariantSelectionX.\n * @param {string} [tableColumnExtensionType] Column extension type.\n */\nexport const getCustomColumnPath = (\n    page: v2.SapUiAppPageV2,\n    entitySet: string,\n    additionalKey?: string,\n    tableColumnExtensionType?: string\n): { path: string; viewTemplateType: ViewTemplateType } => {\n    if (!page) {\n        return;\n    }\n    const extension: string = FE_TEMPLATE_VIEW_EXTENSION_MAP.get(page.component?.name);\n    if (!tableColumnExtensionType) {\n        let tableType = page.component?.settings?.tableSettings?.['type'];\n        if (!tableType) {\n            tableType = 'ResponsiveTable';\n        }\n        if (extension === 'sap.suite.ui.generic.template.AnalyticalListPage.view.AnalyticalListPage') {\n            tableType = 'AnalyticalTable';\n        }\n        tableColumnExtensionType = tableType + 'ColumnsExtension';\n    }\n    const viewTemplateType = tableColumnExtensionType as ViewTemplateType;\n    let extensionKey = `${tableColumnExtensionType}|${entitySet}`;\n    if (additionalKey) {\n        extensionKey += '|' + additionalKey;\n    }\n    const path = 'sap.ui5/extends/extensions/sap.ui.viewExtensions/' + extension + '/' + extensionKey;\n\n    return { path, viewTemplateType };\n};\n", "import { join } from 'path';\nimport type { v2, ViewTemplateType } from '@sap/ux-specification-types';\nimport { DirName } from '@sap/ux-specification-types';\n\nimport { render } from 'ejs';\nimport { readFileSync } from 'fs';\n\nconst templatesPath = join(__dirname, 'templates');\n\nexport enum ViewTypes {\n    XML = 'xml',\n    HTML = 'html',\n    JSON = 'json'\n}\n\n/**\n * Method which reads passed template and renders it using passed template object.\n * @param {string} templatePath - Path to template.\n * @param {{ [key: string]: string }} templateData - Template data object.\n * @return {string} the rendered template's string\n */\nexport const renderTemplate = (templatePath: string, templateData: { [key: string]: string | boolean }): string => {\n    const template = readFileSync(templatePath, 'utf8');\n    return render(template, templateData);\n};\n\n/**\n * Method escapes view name.\n * @param {string} name - View's name.\n * @return {string} Escaped view name.\n */\nconst escapeViewName = (name: string): string => {\n    // Remove all special characters\n    return name.replace(/[^\\w\\s-]/gi, '');\n};\n\n/**\n * Method which reads passed template and renders it using passed template object.\n * @param {string} name - View's name.\n * @param {string} namespace - Application namespace.\n * @return {string} the rendered template's string\n */\nexport const getControllerContent = (\n    name: string,\n    namespace: string,\n    fcl = false,\n    newControllerRouting = false\n): string => {\n    const templateData = {\n        name: namespace + '.' + escapeViewName(name),\n        newControllerRouting\n    };\n    return renderTemplate(join(templatesPath, fcl ? 'controllerFcl.js' : 'controller.js'), templateData);\n};\n\n/**\n * Method which reads passed template and renders it using passed template object.\n * @param {string} name - View's name.\n * @param {string} namespace - Application namespace.\n * @param {ViewTypes} sourceType - View's source type like XML, HTML, JSON or JS.\n * @param {boolean} [controller=false] - Generate controller.\n * @param {boolean} [page=false] - Is view should contains page structure or not - page structure uses 'sap.m.App' in view template.\n * @return {string} the rendered template's string\n */\nexport const getViewContent = (\n    name: string,\n    namespace: string,\n    sourceType: ViewTypes,\n    controller = false,\n    page = true\n): string => {\n    const escapedName = escapeViewName(name);\n    const templateData: { [key: string]: string | boolean } = {\n        name: escapedName,\n        controllerName: '',\n        page\n    };\n    if (controller) {\n        templateData.controllerName = namespace + '.controller.' + escapedName;\n    }\n    return renderTemplate(join(templatesPath, 'view.' + sourceType), templateData);\n};\n\n/**\n * Method which reads template for fragment and returns rendered result of fragment.\n * @param {string} name - View's name.\n * @param {string} namespace - Application namespace.\n * @param {ViewTypes} sourceType - View's source type like XML, HTML, JSON or JS.\n * @param {boolean} handler - JS handler.\n * @return {string} the rendered template's string\n */\nexport const getFragmentContent = (name: string, namespace: string, sourceType: ViewTypes, handler = false): string => {\n    const escapedName = escapeViewName(name);\n    const templateData: { [key: string]: string } = {\n        name: escapedName,\n        handler: ''\n    };\n    if (handler) {\n        templateData.handler = `${namespace.replace(/\\./g, '/')}/${DirName.Fragment}/${escapedName}`;\n    }\n    return renderTemplate(join(templatesPath, 'fragment.' + sourceType), templateData);\n};\n\n/**\n * Method which reads passed template and renders it using passed template object.\n * @param {string} name - View's name.\n * @param {string} namespace - Application namespace.\n * @return {string} the rendered template's string\n */\nexport const getFragmentJsContent = (): string => {\n    return renderTemplate(join(templatesPath, 'fragment.js'), {});\n};\n\n/**\n * Method which reads the template for a single column extension that shall be added to a fragment\n * @param {TableCustomColumn} column - data (from config) to be inserted in the template\n * @return {string} the rendered template's string\n */\nexport const getSingleColumnContent = (column: v2.TableCustomColumn, template: ViewTemplateType): string => {\n    const templateData: { [key: string]: string } = {\n        id: column.id,\n        text: column.text,\n        columnKey: column.columnKey,\n        columnIndex: column.columnIndex !== undefined ? column.columnIndex.toString() : undefined,\n        leadingProperty: column.leadingProperty\n    };\n    return renderTemplate(join(templatesPath, template + '.xml'), templateData);\n};\n\n/**\n * Method which reads the template for a column extension fragment and returns rendered result of fragment.\n * @param {TableCustomColumns} customColumns - array of all column extensions' data\n * @return {string} the rendered template's string\n */\nexport const getColumnFragmentContent = (\n    customColumns: v2.TableCustomColumns,\n    templateType: ViewTemplateType\n): string => {\n    let fragment = '';\n    fragment = '<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:table=\"sap.ui.table\" xmlns=\"sap.m\">';\n    if (customColumns) {\n        for (const column of customColumns) {\n            const newContent = getSingleColumnContent(column, templateType);\n            fragment = fragment + '\\n' + newContent;\n        }\n    }\n    return fragment + '\\n' + '</core:FragmentDefinition>';\n};\n\n/**\n * Creates the content for a ResponsiveTableCellsExtesnion fragment\n * @param customColumns - list of custom columns; for each of them a dummy entry gets created in the view content.\n * @returns {string} the rendered template's string\n */\nexport const getResponsiveTableCellsFragment = (customColumns: v2.TableCustomColumns): string => {\n    let fragment = '<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\">';\n    if (customColumns) {\n        customColumns.forEach(() => {\n            fragment = fragment + '\\n<Text text=\"Placeholder\"></Text>';\n        });\n    }\n    return fragment + '\\n' + '</core:FragmentDefinition>';\n};\n", "import type { v2, ControlTypeFunction, DeprecatedProperties } from '@sap/ux-specification-types';\nimport { ControlType, PropertyName, QUICKVARPATH, QUICKVARPATHX } from '@sap/ux-specification-types';\nimport { addPatternForBindingChangeOfEnumLR, convertEnumToCSV } from '../../../common';\nimport { buildControlIdFromParent, exportToFlexChange, childId, syncRule, validity } from '../../../common/decoration';\nimport { getAppSettingPathV2, getDataLoadSettingPathV2, getTableSettingPathV2 } from '../../application';\nimport type { PopinLayout } from 'sap/m/library';\nimport type { smarttable } from 'sap/ui/comp/library';\n\nconst MULTIEDITPATH = '/multiEdit';\n\nexport const getSmartTableControlId = (\n    baseId: string,\n    idBreadcrumbs: string[],\n    _breadcrumbs: string[],\n    controlType: ControlTypeFunction\n): string => {\n    if (controlType() === 'sap.m.Table') {\n        return baseId + 'responsiveTable';\n    } else if (controlType() === 'sap.ui.comp.smarttable.SmartTable' && baseId?.includes('AnalyticalListPage')) {\n        return baseId + PropertyName.table;\n    }\n    return buildControlIdFromParent(baseId, idBreadcrumbs);\n};\n\n// import createWithParameterDialog (only) fields to Array: { field: { path: field } } => fields[]\nexport function importCreateParameters(manifestSection: object): object {\n    if (!manifestSection['createWithParameterDialog']?.fields) {\n        return undefined;\n    }\n    const manifestDialogFields = JSON.parse(JSON.stringify(manifestSection['createWithParameterDialog'].fields));\n    const configPart = { fields: [] } as Fields4Dialog;\n    for (const manifestField in manifestDialogFields) {\n        configPart.fields.push(manifestField);\n    }\n    return configPart;\n}\n\nexport function exportCreateParametersFields(manifestSection: unknown, configPart: Fields4Dialog, key: string): void {\n    const fields: string[] = configPart[key];\n    if (fields.length === 0) {\n        delete manifestSection[key];\n        return;\n    }\n    const manifestFields = {};\n    if (!manifestSection[key]) {\n        manifestSection[key] = {};\n    }\n    fields.forEach((entry) => (manifestFields[entry] = manifestSection[key][entry] || { path: entry }));\n    manifestSection[key] = manifestFields;\n}\n\nfunction exportVariants(manifestSection: object, configObject: object): void {\n    for (const variant in configObject['variants']) {\n        const variantConfig = configObject['variants'][variant];\n        const tablesettings: string[] = ['type', 'multiSelect', 'selectAll', 'selectionLimit', 'inlineDelete'];\n        for (const key in variantConfig) {\n            if (tablesettings.indexOf(key) !== -1) {\n                if (!variantConfig['tableSettings']) {\n                    variantConfig['tableSettings'] = {};\n                }\n                variantConfig['tableSettings'][key] = variantConfig[key];\n                delete variantConfig[key];\n            }\n        }\n        if (manifestSection['variants']) {\n            manifestSection['variants'][variant] = variantConfig;\n        } else {\n            manifestSection['variants'] = {\n                [variant]: variantConfig\n            };\n        }\n    }\n}\n\nfunction exportQuickVariantSelectionX(manifestSection: object, configObject: object): void {\n    if (!configObject['variants']) {\n        return;\n    }\n    if (Object.keys(configObject['variants']).length > 0) {\n        exportVariants(manifestSection, configObject);\n    } else {\n        delete manifestSection['variants'];\n    }\n}\n\nfunction importMultiEdit(manifestSection) {\n    if (!manifestSection || !manifestSection['multiEdit']) {\n        return undefined;\n    }\n    const configPart: v2.MultiEdit = JSON.parse(JSON.stringify(manifestSection['multiEdit']));\n\n    // convert CSV format to array of strings\n    configPart.ignoredFields = manifestSection['multiEdit']?.['ignoredFields']?.split(',');\n\n    return configPart;\n}\n\nexport class CreateWithFilters {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + '/createWithFilters'\n        }\n    })\n    strategy: v2.Strategy;\n}\n\nexport class MultiEdit implements v2.MultiEdit {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys) + MULTIEDITPATH\n        }\n    })\n    enabled?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys) + MULTIEDITPATH\n        }\n    })\n    annotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys) + MULTIEDITPATH,\n            export: convertEnumToCSV\n        }\n    })\n    ignoredFields?: v2.IgnoredFieldsType[];\n}\n\n//import table type\nfunction importType(manifestSection: object): string {\n    if (manifestSection?.['tableSettings']?.['type']) {\n        return manifestSection['tableSettings']['type'];\n    } else if (manifestSection?.['tableType']) {\n        return manifestSection['tableType'];\n    }\n}\n\n//export table type\nexport function exportType(manifestSection: unknown, configPart: object): void {\n    if (configPart?.['type']) {\n        if (!manifestSection['tableSettings']) {\n            manifestSection['tableSettings'] = {};\n        }\n        manifestSection['tableSettings']['type'] = configPart['type'];\n        if (manifestSection?.['tableType']) {\n            //old format\n            delete manifestSection['tableType'];\n        }\n    }\n}\n\nexport function deleteType(manifestSection: unknown): void {\n    if (manifestSection?.['tableSettings']?.['type']) {\n        delete manifestSection['tableSettings']['type'];\n    }\n    if (manifestSection?.['tableType']) {\n        //old format\n        delete manifestSection['tableType'];\n    }\n}\n\nexport class DataLoadSettings {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getDataLoadSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.75.2'\n    })\n    loadDataOnAppLaunch: v2.LoadDataOnAppLaunchSettings;\n}\n\nexport class Fields4Dialog implements v2.Fields4Dialog {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys) + '/createWithParameterDialog',\n            export: exportCreateParametersFields\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    fields: string[];\n}\n\nexport class QuickVariantSelection {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + QUICKVARPATH\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    showCounts?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + QUICKVARPATH\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    variants: {\n        [key: number]: v2.QuickVariant;\n    };\n}\n\nexport class QuickVariantSelectionX implements v2.QuickVariantSelectionX {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + QUICKVARPATHX\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    showCounts?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + QUICKVARPATHX\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    enableAutoBinding?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + QUICKVARPATHX,\n            export: exportQuickVariantSelectionX\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    variants: {\n        [key: number]: v2.QuickVariantX;\n    };\n}\n\nexport class CommonTableSettings<COLS = v2.GenericColumns> implements v2.CommonTableSettings<COLS> {\n    getDeprecated = (): DeprecatedProperties => {\n        return {\n            tableType: {\n                since: '1.50.0',\n                deprecated: {\n                    since: '1.70.0',\n                    text: 'Use tableSettings.type instead'\n                }\n            },\n            enableAutoBinding: {\n                since: '1.40.0',\n                deprecated: {\n                    since: '1.75.2',\n                    text: 'Use tableSettings.loadDataOnAppLaunch instead'\n                }\n            }\n        };\n    };\n\n    @syncRule({\n        manifest: {\n            key: 'createWithParameterDialog',\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys),\n            import: importCreateParameters\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    createWithParameterDialog?: Fields4Dialog;\n\n    @syncRule({\n        flex: {\n            controlId: buildControlIdFromParent,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.38.0'\n    })\n    showTablePersonalisation?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.26.0'\n    })\n    useExportToExcel?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    exportType?: smarttable.ExportType;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    fitContainer?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    quickVariantSelection?: QuickVariantSelection;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    quickVariantSelectionX?: QuickVariantSelectionX;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.38.0'\n    })\n    multiSelect?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.120.0'\n    })\n    copy?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.70.0'\n    })\n    selectAll?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.70.0'\n    })\n    selectionLimit?: number;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.75.2'\n    })\n    dataLoadSettings?: DataLoadSettings;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.42.0'\n    })\n    condensedTableLayout?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.56.0'\n    })\n    enableTableFilterInPageVariant?: boolean;\n\n    @childId('toolBar')\n    toolBar?: v2.ToolBar;\n}\nexport class ResponsiveTable extends CommonTableSettings implements v2.ResponsiveTable {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys),\n            import: importType,\n            export: exportType,\n            delete: deleteType\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    type?: v2.TableTypeV2.ResponsiveTable;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.54.0'\n    })\n    createWithFilters?: CreateWithFilters;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.Table,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    popinLayout?: PopinLayout;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.Table,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    includeItemInSelection?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    inlineDelete?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.Table,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.16.0'\n    })\n    growingThreshold?: number;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys),\n            import: importMultiEdit\n        }\n    })\n    @validity({\n        since: '1.98.0'\n    })\n    multiEdit?: MultiEdit;\n}\n\nexport class TreeTable extends CommonTableSettings implements v2.TreeTable {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys),\n            import: importType,\n            export: exportType,\n            delete: deleteType\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    type?: v2.TableTypeV2.TreeTable;\n}\n\nexport class AnalyticalTable extends CommonTableSettings implements v2.AnalyticalTable {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys),\n            import: importType,\n            export: exportType,\n            delete: deleteType\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    type?: v2.TableTypeV2.AnalyticalTable;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    qualifier?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.38.0'\n    })\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    defaultContentView?: v2.DefaultContentView;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    defaultFilterMode?: v2.DefaultFilterMode;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.60.0'\n    })\n    contentTitle?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    autoHide?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.78.0'\n    })\n    allFiltersAsInParameters?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.54.0'\n    })\n    createWithFilters?: CreateWithFilters;\n}\n\nexport class TableALP extends CommonTableSettings implements v2.TableALP {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys),\n            import: importType,\n            export: exportType,\n            delete: deleteType\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    type?: v2.TableTypeV2.AnalyticalTable & v2.TableTypeV2.ResponsiveTable & v2.TableTypeV2.GridTable;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    qualifier?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.38.0'\n    })\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    defaultContentView?: v2.DefaultContentView;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    defaultFilterMode?: v2.DefaultFilterMode;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.60.0'\n    })\n    contentTitle?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    autoHide?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.78.0'\n    })\n    allFiltersAsInParameters?: boolean;\n}\n\nexport class ALPResponsiveTable extends TableALP {\n    /*No sync rule needed for type as it is already part of TableALP. This also caused sync issues with flexChanges in release 1.60 as tabletype is not explicity set to ResponsiveTable in 1.60\n    During import, Table type is used in function \"addFlex\" to refer to correct definition in schema.\n    */\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.Table,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.16.0'\n    })\n    growingThreshold?: number;\n}\n\nexport class ALPGridTable extends TableALP {}\n\nexport class ALPAnalyticalTable extends TableALP {}\n\nexport class GridTable extends CommonTableSettings implements v2.GridTable {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys),\n            import: importType,\n            export: exportType,\n            delete: deleteType\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    type?: v2.TableTypeV2.GridTable;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.54.0'\n    })\n    createWithFilters?: CreateWithFilters;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, exportToFlexChange, addPatternForBindingChangeOfEnumOP } from '../../../common/decoration';\nimport { getActionBreadcrumbParts, convertActionKeyToStableId } from '../../../common';\nimport type { ButtonType } from 'sap/m/library';\nimport type { URI } from 'sap/ui/core/library';\nimport { OP_STANDARD_FOOTER_ACTION_PREFIX } from '../../types';\n\n/**\n * Create stable ID for Simple Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @returns {string} stable ID of Action button\n */\nconst getActionButtonId = (baseId: string, _idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    const { actionId } = getActionBreadcrumbParts(breadcrumbs);\n    return `${baseId}action::${convertActionKeyToStableId(actionId).replace(':2f', '::')}`;\n};\n\n/**\n * Create stable ID for Standard Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @returns {string} stable ID of Action button\n */\nconst getStandardActionButtonId = (baseId: string, _idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    const { actionId } = getActionBreadcrumbParts(breadcrumbs);\n    return `${baseId}template::${actionId}`;\n};\n\n/**\n * Create stable ID for Standard Action button on Object Page Footer\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @returns {string} stable ID of Action button\n */\nconst getStandardFooterActionOPButtonId = (baseId: string, _idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    const { actionId } = getActionBreadcrumbParts(breadcrumbs);\n    return `${baseId}${OP_STANDARD_FOOTER_ACTION_PREFIX}${actionId}`;\n};\n\n/**\n * Create stable ID for Intent Based Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @returns {string} stable ID of Intent Based Action button\n */\nexport const buildIntentBasedActionId = (baseId: string, _idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    const { semanticObjectId, actionId } = getActionBreadcrumbParts(breadcrumbs);\n    return `${baseId}action::${semanticObjectId}::${convertActionKeyToStableId(actionId)}`;\n};\n\n/**\n * Create stable ID for (Intent Based) Footer Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @returns {string} stable ID of Footer Action button\n */\nconst getFooterActionButtonId = (baseId: string, _idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    const { actionId } = getActionBreadcrumbParts(breadcrumbs);\n    return `${baseId}action::${convertActionKeyToStableId(actionId).replace(':2f', '::')}::Determining`;\n};\n\nconst flexRuleForAction = {\n    controlId: getActionButtonId,\n    controlType: (): ControlType => ControlType.Button,\n    createFlexChange: exportToFlexChange\n};\n\nconst flexRuleForStandardAction = {\n    controlId: getStandardActionButtonId,\n    controlType: (): ControlType => ControlType.Button,\n    createFlexChange: exportToFlexChange\n};\n\nconst flexRuleForStandardFooterActionOP = {\n    controlId: getStandardFooterActionOPButtonId,\n    controlType: (): ControlType => ControlType.Button,\n    createFlexChange: exportToFlexChange\n};\n\nconst flexRuleForFooterAction = {\n    controlId: getFooterActionButtonId,\n    controlType: (): ControlType => ControlType.Button,\n    createFlexChange: exportToFlexChange\n};\n\nexport class Action implements v2.Action {\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    type?: ButtonType;\n}\n\nexport class ToolBarAction implements v2.Action {\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    type?: ButtonType;\n}\n\nexport class FooterAction implements v2.Action {\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    type?: ButtonType;\n}\n\nexport class Share implements v2.Share {\n    @syncRule({\n        flex: flexRuleForStandardAction\n    })\n    visible?: boolean;\n}\n\nexport class ShareOP implements v2.ShareOP {\n    @syncRule({\n        flex: flexRuleForStandardAction\n    })\n    visible?: boolean;\n}\n\nexport class UpAndDownNavigationOP implements v2.UpAndDownNavigationOP {\n    @syncRule({\n        flex: flexRuleForStandardAction\n    })\n    visible?: boolean;\n}\n\nexport class SaveAndEditOP implements v2.SaveAndEditOP {\n    @syncRule({\n        flex: flexRuleForStandardFooterActionOP,\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class HeaderActionStandard implements v2.HeaderActionStandard {\n    @syncRule({\n        flex: flexRuleForStandardAction\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageHeaderActionStandard implements v2.ObjectPageHeaderActionStandard {\n    @syncRule({\n        flex: flexRuleForStandardAction\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageFooterActionStandard implements v2.ObjectPageFooterActionStandard {\n    @syncRule({\n        flex: flexRuleForStandardFooterActionOP\n    })\n    visible?: boolean;\n}\n", "import { buildIntentBasedActionId } from './Action';\nimport type { v2, SAPUI5_FRAGMENT_CLASS } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, exportToFlexChange, buildColumnControlId } from '../../../common/decoration';\nimport { addPatternForBindingChangeOfEnumLR, getActionBreadcrumbParts } from '../../../common';\nimport type { TextAlign, URI } from 'sap/ui/core/library';\nimport type { ButtonType } from 'sap/m/library';\n\n/**\n * Create stable ID for Action Column\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @returns {string} stable ID of Action Column\n */\nconst buildColumnActionId = (baseId: string, idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    const columnTemplate = 'template:::TableColumn';\n    const { actionType, actionId } = getActionBreadcrumbParts(breadcrumbs);\n    const smartTableId = `sSmartTableId::${idBreadcrumbs[0]}`;\n    return `${baseId}${columnTemplate}:::${actionType}:::${smartTableId}:::sAction::${actionId}`;\n};\n/**\n * Create stable ID for Intent Based Action Column\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @returns {string} stable ID of Action Column\n */\nconst buildColumnIntentBasedId = (baseId: string, idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    const columnTemplate = 'template:::TableColumn';\n    const { actionType, actionId, semanticObjectId } = getActionBreadcrumbParts(breadcrumbs);\n    const smartTableId = `sSmartTableId::${idBreadcrumbs[0]}`;\n    return `${baseId}${columnTemplate}:::${actionType}:::${smartTableId}:::sSemanticObject::${semanticObjectId}:::sAction::${actionId}`;\n};\n\n/**\n * Create stable ID for Column Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @returns {string} stable ID of Column Action button\n */\nconst buildColumnActionButtonId = (baseId: string, _idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    const { actionId } = getActionBreadcrumbParts(breadcrumbs);\n    return `${baseId}action::${actionId.replace(':2f', '::')}`;\n};\n\n// TableColumnAction column properties\nconst flexRuleForColumn = {\n    controlId: buildColumnActionId,\n    controlType: (): ControlType => ControlType.TableColumn,\n    createFlexChange: exportToFlexChange\n};\n\n// TableColumnAction action properties\nconst flexRuleForColumnAction = {\n    controlId: buildColumnActionButtonId,\n    controlType: (): ControlType => ControlType.Button,\n    createFlexChange: exportToFlexChange\n};\n\n// TableColumnActionIntentBased main properties\nconst flexRuleForColumnIntentBased = {\n    ...flexRuleForColumn,\n    controlId: buildColumnIntentBasedId\n};\n\n// TableColumnActionIntentBased action properties\nconst flexRuleForColumnIntentBasedAction = {\n    ...flexRuleForColumnAction,\n    controlId: buildIntentBasedActionId\n};\n\nexport class TableColumn implements v2.TableColumn {\n    @syncRule({\n        flex: {\n            controlId: buildColumnControlId,\n            controlType: (): ControlType => ControlType.TableColumn,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    width?: string;\n    @syncRule({\n        flex: {\n            controlId: buildColumnControlId,\n            controlType: (): ControlType => ControlType.TableColumn,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    hAlign?: TextAlign;\n}\n\nexport class TableColumnAction implements v2.TableColumnAction {\n    @syncRule({\n        flex: flexRuleForColumn\n    })\n    width?: string;\n\n    @syncRule({\n        flex: flexRuleForColumn,\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    hAlign?: TextAlign;\n\n    @syncRule({\n        flex: flexRuleForColumnAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForColumnAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForColumnAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForColumnAction\n    })\n    type?: ButtonType;\n}\n\nexport class TableColumnActionIntentBased extends TableColumnAction {\n    @syncRule({\n        flex: flexRuleForColumnIntentBased\n    })\n    width?: string;\n\n    @syncRule({\n        flex: flexRuleForColumnIntentBased,\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    hAlign?: TextAlign;\n\n    @syncRule({\n        flex: flexRuleForColumnIntentBasedAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForColumnIntentBasedAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForColumnIntentBasedAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForColumnIntentBasedAction\n    })\n    type?: ButtonType;\n}\n\n/**\n * No sync rules are defined for table custom columns, as they are transferred altogether.\n * This approach is needed to support inserts as well as deletions of manifest extensions and fragments\n */\nexport class TableCustomColumn implements v2.TableCustomColumn {\n    id?: string;\n    text?: string;\n    columnKey: string;\n    columnIndex?: number;\n    leadingProperty?: string;\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    fragmentName: string;\n    cellsFragmentName?: string;\n    tabKey?: string;\n    extensionType: v2.TableColumnExtensionTypeV2;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\n\nexport class ToolBar implements v2.ToolBar {\n    actions: v2.Actions;\n}\n", "import type { v2, ChangeDefinitionInCreation } from '@sap/ux-specification-types';\nimport { ControlType, PropertyName } from '@sap/ux-specification-types';\nimport { exportToFlexChange } from '../../../common/decoration';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getChartSettingPathV2 } from '../../application';\n\nexport const getSmartChartControlId = (baseId: string): string => {\n    return baseId + PropertyName.chart;\n};\n\nexport class ChartSettings implements v2.ChartSettings {\n    @syncRule({\n        flex: {\n            controlId: getSmartChartControlId,\n            controlType: (): ControlType => ControlType.SmartChart,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    showLegendButton?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartChartControlId,\n            controlType: (): ControlType => ControlType.SmartChart,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    showDownloadButton?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartChartControlId,\n            controlType: (): ControlType => ControlType.SmartChart,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    showChartTypeSelectionButton?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartChartControlId,\n            controlType: (): ControlType => ControlType.SmartChart,\n            exportFlexValue: (flexChange: ChangeDefinitionInCreation, configObject: object, key: string): void => {\n                flexChange.content.newValue = configObject[key].join();\n            },\n            importFlexValue: (flexChange: ChangeDefinitionInCreation, configObject: object, key: string): void => {\n                flexChange.content['newValue'] = flexChange.content['newValue'] as string;\n                configObject[key] = flexChange.content['newValue'].split(',') as v2.ChartType[];\n            },\n            createFlexChange: exportToFlexChange\n        }\n    })\n    ignoredChartTypes?: v2.ChartType[];\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getChartSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.81.0'\n    })\n    showDataLabel: boolean;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { syncRule } from '../../../common/decoration/decorators';\nimport { getKPISettingsPath } from '../../application';\n\nexport class KPISettings implements v2.KPISettings {\n    @syncRule({\n        manifest: {\n            path: (pageKeys, _manifest, KPIKey): string => getKPISettingsPath(pageKeys, KPIKey)\n        }\n    })\n    model: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys, _manifest, KPIKey): string => getKPISettingsPath(pageKeys, KPIKey)\n        }\n    })\n    entitySet?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys, _manifest, KPIKey): string => getKPISettingsPath(pageKeys, KPIKey)\n        }\n    })\n    qualifier?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys, _manifest, KPIKey): string => getKPISettingsPath(pageKeys, KPIKey)\n        }\n    })\n    filterable?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys, _manifest, KPIKey): string => getKPISettingsPath(pageKeys, KPIKey)\n        }\n    })\n    detailNavigation?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys, _manifest, KPIKey): string => getKPISettingsPath(pageKeys, KPIKey)\n        }\n    })\n    groupId?: string;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, validity, buildControlIdFromParent, exportToFlexChange } from '../../../common/decoration';\nimport { getAppSettingOBJPathV2 } from '../../application';\nimport { addPatternForBindingChangeOfEnumOP } from '../../../common';\nimport type AvatarShape from 'sap/m/AvatarShape';\n\nconst getAvatarControlId = (baseId: string, idBreadcrumbs: string[]): string => {\n    const idBreadcrumbsCopy = idBreadcrumbs.slice(0);\n    idBreadcrumbsCopy[idBreadcrumbs.length - 1] = 'objectImage';\n    return buildControlIdFromParent(baseId, idBreadcrumbsCopy);\n};\n\nexport class ObjectPageHeader implements v2.ObjectPageHeader {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingOBJPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.46.0'\n    })\n    showRelatedApps?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingOBJPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.46.0'\n    })\n    editableHeaderContent?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingOBJPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    simpleHeaderFacets?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingOBJPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    showHeaderAsCarouselOnDesktop?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getAvatarControlId,\n            controlType: (): ControlType => ControlType.Avatar,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    displayShape?: AvatarShape;\n\n    actions?: v2.ObjectPageHeaderActions;\n}\n", "import type { v2, ControlTypeFunction } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, exportToFlexChange, buildControlIdFromParent } from '../../../common/decoration';\nimport { addPatternForBindingChangeOfEnumOP, convertActionKeyToStableId } from '../../../common';\nimport type { ButtonType } from 'sap/m/library';\nimport type { URI } from 'sap/ui/core/library';\n\n/**\n * Create stable ID for Object Page Header Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @param {ControlTypeFunction} controlType\n * @returns {string} stable ID of Object Page Header Action button\n */\nconst getActionButtonId = (\n    baseId: string,\n    idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    controlType: ControlTypeFunction\n): string => {\n    if (controlType() === ControlType.Button || controlType() === ControlType.HeaderAction) {\n        const actionId = breadcrumbs[2];\n        return `${baseId}action::${convertActionKeyToStableId(actionId)}`;\n    }\n    return buildControlIdFromParent(baseId, idBreadcrumbs);\n};\n\nconst flexRuleForHeaderAction = {\n    controlId: getActionButtonId,\n    controlType: (): ControlType => ControlType.HeaderAction,\n    createFlexChange: exportToFlexChange\n};\n\nexport class ObjectPageHeaderAction implements v2.ObjectPageHeaderAction {\n    @syncRule({\n        flex: flexRuleForHeaderAction,\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible: boolean;\n\n    @syncRule({\n        flex: flexRuleForHeaderAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForHeaderAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForHeaderAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForHeaderAction\n    })\n    type?: ButtonType;\n}\n", "import type { v2, ControlTypeFunction } from '@sap/ux-specification-types';\nimport { ControlType, FacetTitlePrefix } from '@sap/ux-specification-types';\nimport { syncRule, exportToFlexChange, addPatternForBindingChangeOfEnumOP } from '../../../common';\n\nconst PrefixHeaderEditable = 'header::headerEditable::';\n\n/**\n * Create stable ID for Object Page DataPoint Header Section\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} _breadcrumbs\n * @param {ControlTypeFunction} _controlType\n * @returns {string} stable ID of Object Page Header Action button\n */\nconst getDataPointHeaderSectionId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    _breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    title: string\n): string => {\n    return `${baseId}${PrefixHeaderEditable}${title}`;\n};\n\n/**\n * Create stable ID for Object Page Address Header Section\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} _breadcrumbs\n * @param {ControlTypeFunction} _controlType\n * @returns {string} stable ID of Object Page Header Action button\n */\nconst getAddressHeaderSectionId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    _breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    title: string\n): string => {\n    return `${baseId}${PrefixHeaderEditable}${title}::ContactAddress`;\n};\n\n/**\n * Create stable ID for Object Page Chart Header Section\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} _breadcrumbs\n * @param {ControlTypeFunction} _controlType\n * @returns {string} stable ID of Object Page Header Action button\n */\nconst getChartHeaderSectionId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    _breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    title: string\n): string => {\n    return `${baseId}${PrefixHeaderEditable}${title}::SmartMicroChartVBox`;\n};\n\n/**\n * Create stable ID for Object Page Form Header Section\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @param {ControlTypeFunction} _controlType\n * @returns {string} stable ID of Object Page Header Action button\n */\nconst getFormHeaderSectionId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    title: string\n): string => {\n    const sectionName = breadcrumbs[breadcrumbs.length - 1].replace(/@com.sap/g, 'com.sap');\n    const facetId = title?.includes(FacetTitlePrefix) ? title.split(FacetTitlePrefix)[1] : sectionName;\n    return `${baseId}${PrefixHeaderEditable}${facetId}::Form`;\n};\n\nconst flexRuleForHeaderSection = {\n    controlType: (): ControlType => ControlType.ObjectPageHeaderSection,\n    createFlexChange: exportToFlexChange\n};\n\nexport class CommonHeaderFacetSettings implements v2.CommonHeaderFacetSettings {\n    @syncRule({\n        flex: {\n            ...flexRuleForHeaderSection,\n            // Placeholder for stable ID, will be replaced by the specific section\n            controlId: getFormHeaderSectionId\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageHeaderSectionForm extends CommonHeaderFacetSettings implements v2.ObjectPageHeaderSectionForm {\n    @syncRule({\n        flex: {\n            ...flexRuleForHeaderSection,\n            controlId: getFormHeaderSectionId\n        }\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageHeaderSectionChart extends CommonHeaderFacetSettings implements v2.ObjectPageHeaderSectionChart {\n    @syncRule({\n        flex: {\n            ...flexRuleForHeaderSection,\n            controlId: getChartHeaderSectionId\n        }\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageHeaderSectionDataPoint\n    extends CommonHeaderFacetSettings\n    implements v2.ObjectPageHeaderSectionDataPoint\n{\n    @syncRule({\n        flex: {\n            ...flexRuleForHeaderSection,\n            controlId: getDataPointHeaderSectionId\n        }\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageHeaderSectionAddress\n    extends CommonHeaderFacetSettings\n    implements v2.ObjectPageHeaderSectionAddress\n{\n    @syncRule({\n        flex: {\n            ...flexRuleForHeaderSection,\n            controlId: getAddressHeaderSectionId\n        }\n    })\n    visible?: boolean;\n}\n\nexport class HeaderSections implements v2.HeaderSections {\n    [key: string]:\n        | ObjectPageHeaderSectionAddress\n        | ObjectPageHeaderSectionChart\n        | ObjectPageHeaderSectionDataPoint\n        | ObjectPageHeaderSectionForm;\n}\n", "import type { v2, ControlTypeFunction } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, exportToFlexChange, buildControlIdFromParent } from '../../../common/decoration';\nimport {\n    addPatternForBindingChangeOfEnumOP,\n    getActionBreadcrumbParts,\n    convertActionKeyToStableId\n} from '../../../common';\nimport type { ButtonType } from 'sap/m/library';\nimport type { URI } from 'sap/ui/core/library';\n\n/**\n * Create stable ID for Object Page Footer Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @param {ControlTypeFunction} controlType\n * @returns {string} stable ID of Object Page Footer Action button\n */\nconst getFooterActionButtonId = (\n    baseId: string,\n    idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    controlType: ControlTypeFunction\n): string => {\n    if (controlType() === ControlType.Button) {\n        const { actionId } = getActionBreadcrumbParts(breadcrumbs);\n        return `${baseId}action::${convertActionKeyToStableId(actionId)}::Determining`;\n    }\n    return buildControlIdFromParent(baseId, idBreadcrumbs);\n};\n\nconst flexRuleForFooterAction = {\n    controlId: getFooterActionButtonId,\n    controlType: (): ControlType => ControlType.Button,\n    createFlexChange: exportToFlexChange\n};\n\nexport class ObjectPageFooterAction implements v2.ObjectPageFooterAction {\n    @syncRule({\n        flex: flexRuleForFooterAction,\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible: boolean;\n\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    type?: ButtonType;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport {\n    addPatternForBindingChangeOfEnumOP,\n    buildControlIdFromParent,\n    exportToFlexChange\n} from '../../../common/decoration';\n\nconst getControlId = (baseId: string, idBreadcrumbs: string[]): string => {\n    const idBreadcrumbsCopy = idBreadcrumbs.slice(0);\n    idBreadcrumbsCopy[idBreadcrumbs.length - 1] = 'objectPage';\n    return buildControlIdFromParent(baseId, idBreadcrumbsCopy);\n};\n\nexport class ObjectPageLayout implements v2.ObjectPageLayout {\n    @syncRule({\n        flex: {\n            controlId: getControlId,\n            controlType: (): ControlType => ControlType.ObjectPageLayout,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    showHeaderContent?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getControlId,\n            controlType: (): ControlType => ControlType.ObjectPageLayout,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    showAnchorBar?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getControlId,\n            controlType: (): ControlType => ControlType.ObjectPageLayout,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    useIconTabBar?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getControlId,\n            controlType: (): ControlType => ControlType.ObjectPageLayout,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.34.0'\n    })\n    alwaysShowContentHeader?: boolean;\n}\n", "import { ManifestSection } from '@sap/ux-specification-types';\nimport type { SAPUI5_FRAGMENT_CLASS, SAPUI5_VIEW_CLASS, Manifest, ViewTypes, v2 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getObjectPageCustomSectionPath } from '../../application';\n\nexport class BaseCustomSection implements v2.ObjectPageCustomSectionBase {\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomSectionPath,\n            export: false,\n            import: (\n                _manifest: v2.SapUi5ViewExtensionView | v2.SapUi5ViewExtensionFragment,\n                sectionId: string\n            ): string => {\n                const sectionParts = sectionId.split('|');\n                return sectionParts[2];\n            }\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    relatedFacet: string;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomSectionPath,\n            export: false,\n            import: (\n                _manifest: v2.SapUi5ViewExtensionView | v2.SapUi5ViewExtensionFragment,\n                sectionId: string\n            ): string => {\n                return sectionId.split('|')[0];\n            }\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    relativePosition: v2.SectionPosition;\n\n    @syncRule({\n        manifest: {\n            path: (entitySet: string[], _manifest: Manifest, sectionId: string): string =>\n                getObjectPageCustomSectionPath(entitySet, {} as Manifest, sectionId, ManifestSection.generic)\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    title: string;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomSectionPath\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    className: string;\n}\n\nexport class ObjectPageCustomSectionFragment extends BaseCustomSection implements v2.ObjectPageCustomSectionFragment {\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomSectionPath\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    fragmentName: string;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomSectionPath\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    type: v2.ExtensionFragmentTypes;\n}\n\nexport class ObjectPageCustomSectionView extends BaseCustomSection implements v2.ObjectPageCustomSectionView {\n    className: typeof SAPUI5_VIEW_CLASS;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomSectionPath\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    viewName: string;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomSectionPath\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    type: ViewTypes;\n}\n", "import type { v2, ControlTypeFunction } from '@sap/ux-specification-types';\nimport { ControlType, DefinitionName } from '@sap/ux-specification-types';\nimport { syncRule } from '../../../common/decoration/decorators';\nimport {\n    addPatternForBindingChangeOfEnumOP,\n    buildControlIdFromParent,\n    exportToFlexChange,\n    convertSectionId\n} from '../../../common';\n\nexport const getTableSectionControlId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    facetId: string\n): string => {\n    const convertedId = convertSectionId(breadcrumbs[1], facetId);\n    const breadcrumbsTrail = [convertedId, DefinitionName.Table];\n    return buildControlIdFromParent(baseId, breadcrumbsTrail);\n};\nexport const getFormSectionControlId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    facetId: string\n): string => {\n    const convertedId = convertSectionId(breadcrumbs[1], facetId);\n    const breadcrumbsTrail = [convertedId, 'FormGroup'];\n    return buildControlIdFromParent(baseId, breadcrumbsTrail);\n};\n\nexport const getChartSectionControlId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    facetID: string\n): string => {\n    const convertedId = convertSectionId(breadcrumbs[1], facetID);\n    const breadcrumbsTrail = [convertedId, 'Chart'];\n    return buildControlIdFromParent(baseId, breadcrumbsTrail);\n};\n\nexport const getSectionControlId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    facetId: string\n): string => {\n    const convertedId = convertSectionId(breadcrumbs[1], facetId);\n    const breadcrumbsTrail = [convertedId, 'Section'];\n    return buildControlIdFromParent(baseId, breadcrumbsTrail);\n};\n\nexport const getSubSectionControlId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    facetId: string\n): string => {\n    const convertedId = convertSectionId(breadcrumbs[1], facetId);\n    const breadcrumbsTrail = [convertedId, 'SubSection'];\n    return buildControlIdFromParent(baseId, breadcrumbsTrail);\n};\n\nexport const getContactSubSectionControlId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    facetId: string\n): string => {\n    const convertedId = convertSectionId(breadcrumbs[1], facetId);\n    const breadcrumbsTrail = [convertedId, 'ContactsList'];\n    return buildControlIdFromParent(baseId, breadcrumbsTrail);\n};\nexport class ObjectPageSectionV2 implements v2.ObjectPageSectionV2 {\n    @syncRule({\n        flex: {\n            controlId: getSectionControlId,\n            controlType: (): ControlType => ControlType.Section,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSectionFormV2 implements v2.ObjectPageSectionFormV2 {\n    @syncRule({\n        flex: {\n            controlId: getSectionControlId,\n            controlType: (): ControlType => ControlType.Section,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSectionChartV2 implements v2.ObjectPageSectionChartV2 {\n    @syncRule({\n        flex: {\n            controlId: getSectionControlId,\n            controlType: (): ControlType => ControlType.Section,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSectionTableV2 implements v2.ObjectPageSectionTableV2 {\n    @syncRule({\n        flex: {\n            controlId: getSectionControlId,\n            controlType: (): ControlType => ControlType.Section,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSectionAddressV2 implements v2.ObjectPageSectionAddressV2 {\n    @syncRule({\n        flex: {\n            controlId: getSectionControlId,\n            controlType: (): ControlType => ControlType.Section,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSectionContactV2 implements v2.ObjectPageSectionContactV2 {\n    @syncRule({\n        flex: {\n            controlId: getSectionControlId,\n            controlType: (): ControlType => ControlType.Section,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSubSectionV2 implements v2.ObjectPageSubSectionV2 {\n    @syncRule({\n        flex: {\n            controlId: getSubSectionControlId,\n            controlType: (): ControlType => ControlType.SubSection,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSubSectionFormV2 implements v2.ObjectPageSubSectionV2 {\n    @syncRule({\n        flex: {\n            controlId: getFormSectionControlId,\n            controlType: (): ControlType => ControlType.Group,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSubSectionChartV2 implements v2.ObjectPageSubSectionV2 {\n    @syncRule({\n        flex: {\n            controlId: getChartSectionControlId,\n            controlType: (): ControlType => ControlType.SmartChart,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSubSectionContactV2 implements v2.ObjectPageSubSectionContactV2 {\n    @syncRule({\n        flex: {\n            controlId: getContactSubSectionControlId,\n            controlType: (): ControlType => ControlType.SubSection,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSubSectionTableV2 implements v2.ObjectPageSubSectionV2 {\n    @syncRule({\n        flex: {\n            controlId: getTableSectionControlId,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { getAppSettingOBJPathV2, getChartSettingsOBJsectionPathV2 } from '../../application';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\n\nexport class ObjectPageChart implements v2.ObjectPageChart {\n    @syncRule({\n        manifest: {\n            path: getChartSettingsOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.78.0'\n    })\n    variantManagement?: boolean;\n}\n\nexport class GlobalChartSettings implements v2.GlobalChartSettings {\n    @syncRule({\n        manifest: {\n            path: (pageKeys: string[]): string => getAppSettingOBJPathV2(pageKeys) + '/chartSettings'\n        }\n    })\n    @validity({\n        since: '1.78.0'\n    })\n    variantManagement?: boolean;\n}\n", "import type { v2, DeprecatedProperties, ControlTypeFunction } from '@sap/ux-specification-types';\nimport { ControlType, DefinitionName, QUICKVARPATH } from '@sap/ux-specification-types';\nimport {\n    syncRule,\n    validity,\n    buildControlIdFromParent,\n    exportToFlexChange,\n    convertSectionId,\n    childId\n} from '../../../common/decoration';\nimport {\n    getAppSettingOBJsectionPathV2,\n    getGlobalTableSettingsPathV2,\n    getTableSettingsOBJsectionPathV2\n} from '../../application';\nimport { addPatternForBindingChangeOfEnumOP } from '../../../common';\nimport { importCreateParameters, exportCreateParametersFields } from './Table';\nimport type { PopinLayout } from 'sap/m/library';\nimport type { smarttable } from 'sap/ui/comp/library';\n\nconst getSmartTableControlId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    controlType: ControlTypeFunction,\n    title: string\n): string => {\n    const breadCrumbsCopy = breadcrumbs.slice(1, 2);\n    let suffixId: string;\n\n    if (controlType() === 'sap.ui.comp.smarttable.SmartTable') {\n        suffixId = DefinitionName.Table;\n    } else if (controlType() === 'sap.m.Table') {\n        suffixId = 'responsiveTable';\n    }\n    breadCrumbsCopy.push(suffixId);\n    breadCrumbsCopy[0] = convertSectionId(breadCrumbsCopy[0], title);\n    return buildControlIdFromParent(baseId, breadCrumbsCopy);\n};\n\nexport class QuickVariantSelectionOP {\n    @syncRule({\n        manifest: {\n            path: (pageKeys, manifest, sectionId): string =>\n                getAppSettingOBJsectionPathV2(pageKeys, manifest, sectionId) + QUICKVARPATH\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    showCounts?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys, manifest, sectionId): string =>\n                getAppSettingOBJsectionPathV2(pageKeys, manifest, sectionId) + QUICKVARPATH\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    variants: {\n        [key: number]: v2.QuickVariant;\n    };\n}\n\nexport class Fields4DialogOP implements v2.Fields4DialogOP {\n    @syncRule({\n        manifest: {\n            path: (pageKeys, manifest, sectionId): string =>\n                getTableSettingsOBJsectionPathV2(pageKeys, manifest, sectionId) + '/createWithParameterDialog',\n            export: exportCreateParametersFields\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    fields: string[];\n}\n\nexport class CommonTableSettingsForSections<COLS = v2.GenericColumns>\n    implements v2.CommonTableSettingsForSections<COLS>\n{\n    getDeprecated = (): DeprecatedProperties => {\n        return {\n            tableType: {\n                since: '1.50.0',\n                deprecated: {\n                    since: '1.70.0',\n                    text: 'Use tableSettings.type instead'\n                }\n            }\n        };\n    };\n\n    @syncRule({\n        manifest: {\n            key: 'createWithParameterDialog',\n            path: getTableSettingsOBJsectionPathV2,\n            import: importCreateParameters\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    createWithParameterDialog?: Fields4DialogOP;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.28.0'\n    })\n    editable?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.54.0'\n    })\n    multiSelect?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.70.0'\n    })\n    selectAll?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.70.0'\n    })\n    selectionLimit?: number;\n\n    @syncRule({\n        manifest: {\n            path: getAppSettingOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.63.0'\n    })\n    quickVariantSelection?: QuickVariantSelectionOP;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.26.0'\n    })\n    useExportToExcel?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    exportType?: smarttable.ExportType;\n\n    @syncRule({\n        manifest: {\n            path: getAppSettingOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.48.5'\n    })\n    createMode?: v2.CreateMode;\n\n    @syncRule({\n        manifest: {\n            path: getAppSettingOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.61.0'\n    })\n    disableDefaultInlineCreateSort?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.78.0'\n    })\n    variantManagement?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.120.0'\n    })\n    copy?: boolean;\n\n    @childId('toolBar')\n    toolBar?: v2.ObjectPageToolBar;\n}\n\nexport class ObjectPageResponsiveTable extends CommonTableSettingsForSections implements v2.ObjectPageResponsiveTable {\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    type?: v2.TableTypeV2.ResponsiveTable;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.Table,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    includeItemInSelection?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.Table,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    popinLayout?: PopinLayout;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    inlineDelete?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.Table,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.16.0'\n    })\n    growingThreshold?: number;\n}\n\nexport class ObjectPageAnalyticalTable extends CommonTableSettingsForSections implements v2.ObjectPageAnalyticalTable {\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    type?: v2.TableTypeV2.AnalyticalTable;\n\n    @syncRule({\n        manifest: {\n            path: getAppSettingOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.67.0'\n    })\n    condensedTableLayout?: boolean;\n}\n\nexport class ObjectPageGridTable extends CommonTableSettingsForSections implements v2.ObjectPageGridTable {\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    type?: v2.TableTypeV2.GridTable;\n\n    @syncRule({\n        manifest: {\n            path: getAppSettingOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.67.0'\n    })\n    condensedTableLayout?: boolean;\n}\n\nexport class ObjectPageTreeTable extends CommonTableSettingsForSections implements v2.ObjectPageTreeTable {\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    type?: v2.TableTypeV2.TreeTable;\n\n    @syncRule({\n        manifest: {\n            path: getAppSettingOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.67.0'\n    })\n    condensedTableLayout?: boolean;\n}\n\nexport class GlobalTableSettings implements v2.GlobalTableSettings {\n    @syncRule({\n        manifest: {\n            path: getGlobalTableSettingsPathV2\n        }\n    })\n    @validity({\n        since: '1.70.0'\n    })\n    selectAll?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getGlobalTableSettingsPathV2\n        }\n    })\n    @validity({\n        since: '1.70.0'\n    })\n    selectionLimit?: number;\n\n    @syncRule({\n        manifest: {\n            path: getGlobalTableSettingsPathV2\n        }\n    })\n    @validity({\n        since: '1.48.5'\n    })\n    createMode?: v2.CreateMode;\n\n    @syncRule({\n        manifest: {\n            path: getGlobalTableSettingsPathV2\n        }\n    })\n    @validity({\n        since: '1.61.0'\n    })\n    disableDefaultInlineCreateSort?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getGlobalTableSettingsPathV2\n        }\n    })\n    @validity({\n        since: '1.78.0'\n    })\n    variantManagement?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getGlobalTableSettingsPathV2\n        }\n    })\n    @validity({\n        since: '1.120.0'\n    })\n    copy?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getGlobalTableSettingsPathV2\n        }\n    })\n    type?: v2.TableTypeV2;\n\n    @syncRule({\n        manifest: {\n            path: getGlobalTableSettingsPathV2\n        }\n    })\n    @validity({\n        since: '1.54.0'\n    })\n    multiSelect?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getGlobalTableSettingsPathV2\n        }\n    })\n    @validity({\n        since: '1.67.0'\n    })\n    condensedTableLayout?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getGlobalTableSettingsPathV2\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    inlineDelete?: boolean;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, exportToFlexChange } from '../../../common/decoration';\nimport {\n    addPatternForBindingChangeOfEnumOP,\n    convertSectionId,\n    getActionBreadcrumbParts,\n    convertActionKeyToStableId\n} from '../../../common';\nimport type { ButtonType } from 'sap/m/library';\nimport type { URI } from 'sap/ui/core/library';\n\n/**\n * Create stable ID for Object Page Toolbar Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @param {ControlTypeFunction} controlType\n * @param {string} facetID title from the app schema (comprising for instance the facet ID)\n * @returns {string} stable ID of Object Page Toolbar Action button\n */\nconst getActionButtonId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType,\n    facetID: string\n): string => {\n    const { actionId } = getActionBreadcrumbParts(breadcrumbs);\n    const section = convertSectionId(breadcrumbs[1], facetID);\n    return `${baseId}${section}::action::${convertActionKeyToStableId(actionId).replace(':2f', '::')}`;\n};\n\nconst flexRuleForToolBarActionOP = {\n    controlId: getActionButtonId,\n    controlType: (): ControlType => ControlType.Button,\n    createFlexChange: exportToFlexChange\n};\n\nexport class ObjectPageToolBarAction implements v2.ObjectPageToolBarAction {\n    @syncRule({\n        flex: flexRuleForToolBarActionOP,\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible: boolean;\n\n    @syncRule({\n        flex: flexRuleForToolBarActionOP\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForToolBarActionOP\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForToolBarActionOP\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForToolBarActionOP\n    })\n    type?: ButtonType;\n}\n", "import {\n    determineTableType,\n    transferSettingsOfObject,\n    addFlex,\n    addFragments,\n    convertActionKey,\n    importHeaderActions\n} from '../common/index';\nimport type { v2, ImportListReportV2Parameters } from '@sap/ux-specification-types';\nimport { LogSeverity, DefinitionName, ManifestSection, PageTypeV2 } from '@sap/ux-specification-types';\nimport { parseChangeString } from '../../../common';\nimport { log } from '../../../../extensionLogger';\nimport i18next from 'i18next';\nimport { initI18n } from '../../../../i18n/i18n';\nimport { checkV2Page, findListReportPageV2, getV2Pages, removeEmptySettings } from '../../import/utils';\nimport { MetadataInstanceFactoryV2 as Factory } from '../../export/factory';\nimport type { MetadataInstanceInterface } from '../../../common/decoration/factory';\nimport { INLINEDELETETABLE, MULTISELECTTABLE } from '../../types';\nimport type { Definition } from 'typescript-json-schema';\n\n/**\n * Imports filterbar information into the LR config\n * @param {ListReportConfig} listReportConfig - LR config, to be filled\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {ImportListReportV2Parameters} importParameters  - object comprising all input data\n * @param {Definition} schemaDefinitions - app schema definitions\n * @param {string} pageKey - key of the page in manifest\n */\nfunction importFilterBar(\n    listReportConfig: v2.ListReportConfigV2,\n    factory: MetadataInstanceInterface,\n    importParameters: ImportListReportV2Parameters,\n    schemaDefinitions: Definition,\n    pageKey: string\n) {\n    listReportConfig.filterBar = factory.createInstance(\n        PageTypeV2.ListReport,\n        DefinitionName.ListReportFilterBar,\n        listReportConfig.filterBar\n    );\n    transferSettingsOfObject(\n        listReportConfig.filterBar,\n        importParameters.manifest,\n        schemaDefinitions[DefinitionName.ListReportFilterBar],\n        pageKey,\n        importParameters.logger\n    );\n    if (schemaDefinitions['SelectionFields']) {\n        listReportConfig.filterBar.selectionFields = factory.createInstance(\n            PageTypeV2.ListReport,\n            DefinitionName.ListReportFilterBar,\n            listReportConfig.filterBar.selectionFields\n        );\n        const schemaSelectionFields = schemaDefinitions['SelectionFields'].properties;\n        for (const selectionProperty in schemaSelectionFields) {\n            const selectionKey = selectionProperty;\n            listReportConfig.filterBar.selectionFields[selectionKey] = factory.createInstance(\n                PageTypeV2.ListReport,\n                'SelectionFieldDateSettings'\n            );\n            transferSettingsOfObject(\n                listReportConfig.filterBar.selectionFields[selectionKey],\n                importParameters.manifest,\n                schemaDefinitions['SelectionFieldDateSettings'],\n                pageKey,\n                importParameters.logger,\n                selectionKey\n            );\n        }\n    }\n}\n\n/**\n * Imports table information into the LR config\n * @param {TableTypeV2} tableType - table type\n * @param {Definition} schemaDefinitions - app schema definitions\n * @param {ListReportConfig} listReportConfig - LR config, to be filled\n * @param {ImportListReportV2Parameters} importParameters  - object comprising all input data\n * @param {string} pageKey - key of the page in manifest\n */\nfunction importTable(\n    tableType: v2.TableTypeV2,\n    schemaDefinitions: Definition,\n    listReportConfig: v2.ListReportConfigV2,\n    importParameters: ImportListReportV2Parameters,\n    pageKey: string\n) {\n    let localJsonSchema: Definition;\n\n    if (tableType === 'TreeTable' || tableType === 'AnalyticalTable' || tableType === 'GridTable') {\n        localJsonSchema = schemaDefinitions[tableType + '<LineItems>'];\n    } else {\n        if (schemaDefinitions[MULTISELECTTABLE] && schemaDefinitions[INLINEDELETETABLE]) {\n            localJsonSchema = JSON.parse(JSON.stringify(schemaDefinitions[MULTISELECTTABLE])) as Definition;\n            localJsonSchema.properties = {\n                ...localJsonSchema.properties,\n                ...(schemaDefinitions[INLINEDELETETABLE] as Definition).properties\n            };\n        }\n    }\n\n    transferSettingsOfObject(\n        listReportConfig.table,\n        importParameters.manifest,\n        localJsonSchema,\n        pageKey,\n        importParameters.logger\n    );\n\n    if (\n        (!schemaDefinitions['LineItems']?.properties ||\n            Object.keys(schemaDefinitions['LineItems'].properties).filter((item) => item !== 'custom').length < 1) &&\n        !listReportConfig.table.quickVariantSelection &&\n        !listReportConfig.table.quickVariantSelectionX\n    ) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOLINEITEMS')\n        });\n    }\n}\n\n/**\n * Adds manifest settings to the config.json of List Report V2\n * @param {ImportListReportV2Parameters} importParameters  - object comprising all input data\n * @param {ListReportConfig} listReportConfig - the configuration to be filled\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {string} pageKey - key of the page in manifest\n */\nfunction addSettings(\n    importParameters: ImportListReportV2Parameters,\n    listReportConfig: v2.ListReportConfigV2,\n    factory: MetadataInstanceInterface,\n    pageKey: string\n): void {\n    const schemaDefinitions = (importParameters.jsonSchema as Definition).definitions as Definition;\n    const tableType = determineTableType(importParameters.manifest, pageKey);\n    listReportConfig.table = factory.createInstance(PageTypeV2.ListReport, tableType, listReportConfig.table);\n\n    // Import standard header actions:\n    importHeaderActions(listReportConfig, factory, schemaDefinitions);\n\n    //Import table:\n    importTable(tableType, schemaDefinitions, listReportConfig, importParameters, pageKey);\n\n    //Import ToolBar:\n    listReportConfig.table.toolBar = factory.createInstance(PageTypeV2.ListReport, DefinitionName.ToolBar, {\n        actions: {}\n    });\n    transferSettingsOfObject(\n        listReportConfig.table.toolBar,\n        importParameters.manifest,\n        schemaDefinitions[DefinitionName.ToolBarLR],\n        pageKey,\n        importParameters.logger\n    );\n    if (schemaDefinitions[DefinitionName.ActionsLR]) {\n        for (const actionProperty in schemaDefinitions[DefinitionName.ActionsLR].properties) {\n            const actionKey = convertActionKey(actionProperty);\n            listReportConfig.table.toolBar.actions[actionKey] = factory.createInstance(\n                PageTypeV2.ListReport,\n                DefinitionName.Action\n            );\n            transferSettingsOfObject(\n                listReportConfig.table.toolBar.actions[actionKey],\n                importParameters.manifest,\n                schemaDefinitions[DefinitionName.Action],\n                pageKey,\n                importParameters.logger\n            );\n        }\n    }\n\n    //Import FilterBar:\n    importFilterBar(listReportConfig, factory, importParameters, schemaDefinitions, pageKey);\n\n    //Import Footer:\n    listReportConfig.footer = { actions: {} };\n    const footerAction = schemaDefinitions[DefinitionName.FooterActionsLR];\n    if (footerAction) {\n        for (const actionProperty in footerAction.properties) {\n            const actionKey = convertActionKey(actionProperty);\n            listReportConfig.footer.actions[actionKey] = factory.createInstance(\n                PageTypeV2.ListReport,\n                DefinitionName.FooterAction\n            );\n            transferSettingsOfObject(\n                listReportConfig.footer.actions[actionKey],\n                importParameters.manifest,\n                schemaDefinitions[DefinitionName.Action],\n                pageKey,\n                importParameters.logger\n            );\n        }\n    }\n}\n\n/**\n * Creates the configuration file content for a list report V2\n * @param {ImportListReportV2Parameters} importParameters  - object comprising all input data\n *\n * @returns {ListReportConfig} - the configuration (JSON) for the list report\n */\nexport function createListReportConfig(\n    importParameters: ImportListReportV2Parameters\n): v2.ListReportConfigV2 | undefined {\n    // Initialize i18next\n    initI18n();\n\n    const v2Pages = getV2Pages(importParameters);\n    if (!v2Pages) {\n        return;\n    }\n    const factory = new Factory();\n    //Instantiate Page\n    const config = factory.createPageInstance(PageTypeV2.ListReport);\n\n    const pageKeys: string[] = [];\n    const v2Page = findListReportPageV2(\n        importParameters.manifest[ManifestSection.generic].pages as v2.SapUiAppPagesV2,\n        pageKeys\n    );\n    checkV2Page(v2Page, importParameters.logger, v2Page?.entitySet);\n    if (!v2Page) {\n        return;\n    }\n\n    //Add manifest settings to config\n    addSettings(importParameters, config, factory, pageKeys[0]);\n\n    // Add flex changes to config\n    importParameters.flex.forEach((change) => {\n        if (parseChangeString(change)) {\n            addFlex(config, change, importParameters.jsonSchema, importParameters.logger);\n        }\n    });\n    addFragments(config, importParameters.manifest, v2Page, PageTypeV2.ListReport, importParameters.fragments);\n    removeEmptySettings(config);\n    return config;\n}\n", "import i18next from 'i18next';\nimport i18nEn from '@sap/ux-specification-types';\nimport { initI18n as initSyncI18n } from '../sync/i18n';\n\nexport function initI18n(language = 'en'): void {\n    // Initialize i18next of ide-extension\n    i18next.init({\n        resources: {\n            en: {\n                translation: i18nEn\n            }\n        },\n        lng: language,\n        fallbackLng: 'en',\n        joinArrays: '\\n\\n'\n    });\n\n    // Initialize i18next of core module\n    initSyncI18n(i18next);\n}\n", "{\n  \"WRONGMINUI5VERSION\": \"The minUI5Version {{- minUI5Version}} from manifest.json does not fit to the given version of @sap/ux-specification, update the specification version in package.json\",\n  \"UNKNOWNMINUI5VERSION\": \"The minUI5Version can not be determined from the pattern '{{- minUI5Version}}'\",\n  \"NOBASEPATH\": \"No base path was passed in the API call for creating a custom call, app id = '{{- appId}}'\",\n  \"NOPAGES\": \"No pages found in manifest for app with id '{{- appId}}'\",\n  \"NOFE\": \"The manifest passed is not correct for Fiori Elements V2: section sap.ui.generic.app is missing\",\n  \"NOGENERICSCHEMA\": \"No generic schema found while generating page schema for {{- pageType}}\",\n  \"NOPAGEFORENTITYSET\": \"No page found in manifest for entitySet '{{- entitySet}}'\",\n  \"NOENTITYSET\": \"No entitySet defined for page '{{- pageName}}'\",\n  \"NOENTITYTYPE4SET\": \"No entityType could be found for the given entity set '{{- entitySetName}}'\",\n  \"NOPRESENTATIONVARIANT\": \"No PresentationVariant defined for '{{- key}}'\",\n  \"ENTITYSETNOTFOUND\": \"Entity set '{{- entitySetName}}' was specified in manifest, but this entity set could not be found in metadata\",\n  \"CONTEXTPATHCOULDNOTBERESOLVED\": \"The contextPath '{{- contextPath}}' was specified in manifest, but could not be resolved, following the metadata definitions\",\n  \"NOLR\": \"No page found in manifest for list report\",\n  \"NOALP\": \"No page found in manifest for analytical list page\",\n  \"NOTEMPLATE\": \"No Fiori Elements template could be determined, as section '{{- section}}' is not defined in manifest\",\n  \"ANNOERR\": \"Error while parsing annotation files\",\n  \"ANNOTATIONFILE\": \"Annotation file: '{{- file}}'\",\n  \"COMPONENTNOTDEFINED\": \"Component name is not defined for page '{{- pageName}}'\",\n  \"NOROUTING\": \"Incomplete manifest definition: no routing defined\",\n  \"NOLINEITEMS\": \"UI.LineItem annotation has not been defined\",\n  \"NOVISUALIZATIONS\": \"Empty Collection for Visualizations\",\n  \"NOTARGETS\": \"Incomplete manifest definition: no targets defined\",\n  \"NOTARGET\": \"Invalid reference: annotation target '{{- target}}' not found\",\n  \"NOROUTINGID\": \"No page found in manifest for routingId '{{- routingId}}'\",\n  \"FLEXERROR\": \"Error while parsing flex change\",\n  \"INVALIDANCHOR\": \"Custom column with ID '{{- id}}' has an invalid anchor '{{- anchor}}'\",\n  \"NOFRAGMENT\": \"fragmentName is undefined for columnKey '{{- columnKey}}'\",\n  \"INVALIDTARGETDEFINITION\": \"Invalid routing target definition in manifest: '{{- target}}'\",\n  \"NOID4SECTION\": \"No ID has been defined for collection facet '{{- facet}}'. As a consequence, no stable ID can be calculated.\",\n  \"XMLPARSEFAILURE\": \"Parsing of XML file failed with error - {{- error}}\",\n  \"MACROS_ANNOTATION_ERROR\": \"Error during resolving annotation for '{{- control}}'\"\n}\n", "import type { i18n } from 'i18next';\nimport * as i18nSyncEn from './common/i18n.json';\n\nexport function initI18n(i18nInstance: i18n): void {\n    i18nInstance.addResourceBundle(i18nInstance.language, 'translation', i18nSyncEn);\n}\n", "import type { CommonImportParameters } from '@sap/ux-specification-types';\nimport { v2, ManifestSection, PageTypeV2, MANIFESTPATH, LogSeverity } from '@sap/ux-specification-types';\nimport { ensureManifestSectionByPathV2 } from '../export/manifest';\nimport { getPageTypeV2 } from '../../common';\nimport i18next from 'i18next';\nimport type { ExtensionLogger } from '../../..';\nimport { log } from '../../../extensionLogger';\n\n/**\n * Determines a V2 object page in the manifest, based on the given entity set\n * @param v2Pages - manifest['sap.ui.generic.app'].pages\n * @param entitySet - current entityset\n * @param pageKeys - list of page keys, to be filled\n * @returns v2Page - page as specified in the manifest\n */\nexport function findObjectPageV2(\n    v2Pages: v2.SapUiAppPagesV2,\n    entitySet: string,\n    pageKeys: string[]\n): v2.SapUiAppPageV2 | undefined {\n    let foundPage;\n    for (const key in v2Pages) {\n        const v2Page = v2Pages[key];\n        if (getPageTypeV2(v2Page.component?.name) === PageTypeV2.ObjectPage && v2Page.entitySet === entitySet) {\n            pageKeys.unshift(key);\n            return v2Page;\n        } else if (v2Page.pages) {\n            foundPage = findObjectPageV2(v2Page.pages, entitySet, pageKeys);\n            if (foundPage) {\n                pageKeys.unshift(key);\n                return foundPage;\n            }\n        }\n    }\n}\n\n/**\n * Determines a V2 list report page in the manifest\n * @param v2Pages - manifest['sap.ui.generic.app'].pages\n * @param pageKeys - list of page keys, to be filled\n * @returns v2Page - page as specified in the manifest\n */\nexport function findListReportPageV2(v2Pages: v2.SapUiAppPagesV2, pageKeys: string[]): v2.SapUiAppPageV2 | undefined {\n    for (const key in v2Pages) {\n        const v2Page = v2Pages[key];\n        if (getPageTypeV2(v2Page.component?.name) === PageTypeV2.ListReport) {\n            pageKeys.push(key);\n            return v2Page;\n        }\n    }\n}\n\n/**\n * Validate the given page definition from manifest\n * @param {ImportListReportV2Parameters} importParameters  - object comprising all API input data\n * @returns {v2.SapUiAppPagesV2 | undefined} Pages definition in manifest if found\n */\nexport function getV2Pages(importParameters: CommonImportParameters): v2.SapUiAppPagesV2 | undefined {\n    if (!importParameters.manifest[ManifestSection.generic]) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOFE'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n        return;\n    }\n    const v2Pages = importParameters.manifest[ManifestSection.generic].pages as v2.SapUiAppPagesV2;\n    if (!v2Pages) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOPAGES', { appId: importParameters.manifest['sap.app']['id'] }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n        return;\n    }\n    return v2Pages;\n}\n\n/**\n * Validate the given page definition from manifest\n * @param v2Page - manifest page\n * @param logger - logger for writing the check results\n * @param entitySet - the given entiset from the API call\n */\nexport function checkV2Page(v2Page: v2.SapUiAppPageV2, logger: ExtensionLogger, entitySet: string): void {\n    if (!v2Page) {\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOPAGEFORENTITYSET', { entitySet }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n        return;\n    }\n    if (!v2Page.entitySet) {\n        const pageName = v2Page.component?.name;\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOENTITYSET', { pageName }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n    }\n}\n\n/**\n * Determines a V2 analytical list page in the manifest\n * @param v2Pages - manifest['sap.ui.generic.app'].pages\n * @param pageKeys - list of page keys, to be filled\n * @returns v2Page - page as specified in the manifest\n */\nexport function findAnalyticalListPage(\n    v2Pages: v2.SapUiAppPagesV2,\n    pageKeys: string[],\n    logger?: ExtensionLogger\n): v2.SapUiAppPageV2 | undefined {\n    for (const key in v2Pages) {\n        const v2Page = v2Pages[key];\n        pageKeys.push(key);\n        if (getPageTypeV2(v2Page.component?.name) === PageTypeV2.AnalyticalListPage) {\n            return v2Page;\n        }\n    }\n    //Not found ==> log\n    log(logger, {\n        severity: LogSeverity.Error,\n        message: i18next.t('NOALP'),\n        location: {\n            path: MANIFESTPATH,\n            range: [ManifestSection.generic]\n        }\n    });\n}\n\n/**\n * Method checks if passed extension key is associated to custom section with passed entity.\n * @param {string} extensionKey - Extension key.\n * @param {string} entity - Entity to check in extension.\n * @returns {boolean} Is extension key relates to custom section and associated to passed entity.\n */\nexport function isAssociatedCustomSection(extensionKey: string, entity: string): boolean {\n    const keyParts = extensionKey.split('|');\n    return v2.SectionPosition[keyParts[0]] && keyParts[1] === entity;\n}\n\n/**\n * Method which finds custom section extensions in manifest for passed entitySet\n * @param manifest - manifest.\n * @param entitySet - Entity set to lookup while searching custom section extensions.\n * @returns {object} Found object with custom sections\n */\nexport function findCustomSectionExtensions(manifest: object, entitySet: string): object {\n    const customSectionViews = ensureManifestSectionByPathV2(\n        manifest,\n        `sap.ui5/extends/extensions/${v2.SAPUI5_VIEW_EXTENSION}/${v2.SAPUI5_VIEW_EXTENSION_OBJECT_PAGE}`\n    );\n    const pageCustomSections = {};\n    for (const key in customSectionViews) {\n        if (isAssociatedCustomSection(key, entitySet)) {\n            pageCustomSections[key] = customSectionViews[key];\n        }\n    }\n    return pageCustomSections;\n}\n\n/**\n * Removes empty properties of Footer\n * @param {AnalyticalListPageConfig | ListReportConfig} config - the configuration to be checked\n */\nfunction removeEmptySettingsOfFooter(config: v2.AnalyticalListPageConfigV2 | v2.ListReportConfigV2) {\n    if (config.footer?.actions) {\n        for (const actionKey in config.footer.actions) {\n            if (Object.keys(config.footer.actions[actionKey]).length === 0) {\n                delete config.footer.actions[actionKey];\n            }\n        }\n        if (Object.keys(config.footer.actions).length === 0) {\n            delete config.footer.actions;\n        }\n        if (Object.keys(config.footer).length === 0) {\n            delete config.footer;\n        }\n    }\n}\n\n/**\n * Removes empty properties of FilterBar\n * @param {AnalyticalListPageConfig | ListReportConfig} config - the configuration to be checked\n */\nfunction removeEmptySettingsOfFilterBar(config: v2.AnalyticalListPageConfigV2 | v2.ListReportConfigV2) {\n    if (config.filterBar?.selectionFields) {\n        for (const fieldKey in config.filterBar.selectionFields) {\n            if (Object.keys(config.filterBar.selectionFields[fieldKey]).length === 0) {\n                delete config.filterBar.selectionFields[fieldKey];\n            }\n        }\n        if (Object.keys(config.filterBar?.selectionFields)?.length === 0) {\n            delete config.filterBar.selectionFields;\n        }\n    }\n}\n\n/**\n * Removes empty properties of ToolBar\n * @param {AnalyticalListPageConfig | ListReportConfig} config - the configuration to be checked\n */\nfunction removeEmptySettingsOfToolBar(config: v2.AnalyticalListPageConfigV2 | v2.ListReportConfigV2) {\n    if (config.table?.toolBar) {\n        for (const actionKey in config.table.toolBar.actions) {\n            if (Object.keys(config.table.toolBar.actions[actionKey]).length === 0) {\n                delete config.table.toolBar.actions[actionKey];\n            }\n        }\n        if (Object.keys(config.table.toolBar.actions).length === 0) {\n            delete config.table.toolBar.actions;\n        }\n        if (Object.keys(config.table.toolBar).length === 0) {\n            delete config.table.toolBar;\n        }\n    }\n}\n\n/**\n * Removes empty properties in the config.json of Analytical List Page V2 | ListReport Page V2\n * @param {AnalyticalListPageConfig | ListReportConfig} config - the configuration to be checked\n */\nexport function removeEmptySettings(config: v2.AnalyticalListPageConfigV2 | v2.ListReportConfigV2): void {\n    // Check ToolBar\n    removeEmptySettingsOfToolBar(config);\n    // Check FilterBar\n    removeEmptySettingsOfFilterBar(config);\n    // Check Footer\n    removeEmptySettingsOfFooter(config);\n}\n", "export * from './AnalyticalListPage';\nexport * from './ListReport';\nexport * from './ObjectPage';\nexport * from './OverviewPage';\n", "import { ControlType, v2 } from '@sap/ux-specification-types';\nimport type { AnalyticalTable } from '../controls/Table';\nimport { pageLayoutInformation, childId, syncRule } from '../../../common/decoration/decorators';\nimport { buildControlIdForPage, exportToFlexChange } from '../../../common/decoration';\n\n@pageLayoutInformation({\n    id: 'sap.suite.ui.generic.template.AnalyticalListPage.view.AnalyticalListPage',\n    pageId: v2.FE_TEMPLATE_V2_ALP\n})\nexport class AnalyticalListPage implements v2.AnalyticalListPageConfigV2 {\n    @syncRule({\n        flex: {\n            controlId: buildControlIdForPage,\n            controlType: (): ControlType => ControlType.DynamicPage,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    fitContent?: boolean;\n\n    @childId('table')\n    table?: AnalyticalTable;\n\n    @childId('template::SmartFilterBar')\n    filterBar?: v2.AnalyticalListPageFilterBar;\n\n    @childId('analyticalListPageChart')\n    chart?: v2.ChartSettings;\n\n    @childId('analyticalListFooter')\n    footer?: v2.GenericFooter;\n\n    keyPerformanceIndicators: {\n        [k: string]: v2.KPISettings;\n    };\n}\n", "import { ControlType, v2 } from '@sap/ux-specification-types';\nimport type { ResponsiveTable, TreeTable, AnalyticalTable, GridTable } from '../controls/Table';\nimport { pageLayoutInformation, childId, syncRule } from '../../../common/decoration/decorators';\nimport { buildControlIdForPage, exportToFlexChange } from '../../../common/decoration';\n\ntype TableClassType = ResponsiveTable | TreeTable | AnalyticalTable | GridTable;\n\n@pageLayoutInformation({\n    id: v2.SAPUI5_VIEW_EXTENSION_LIST_REPORT,\n    pageId: v2.FE_TEMPLATE_V2_LIST_REPORT\n})\nexport class ListReport implements v2.ListReportConfigV2 {\n    @syncRule({\n        flex: {\n            controlId: buildControlIdForPage,\n            controlType: (): ControlType => ControlType.DynamicPage,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    fitContent?: boolean;\n\n    @childId('listReportFilter')\n    filterBar?: v2.ListReportFilterBar;\n\n    @childId('listReport')\n    table?: TableClassType;\n\n    @childId('listReportFooter')\n    footer?: v2.GenericFooter;\n}\n", "/**\n * The module is mapped to specification/v2/pages/ObjectPageConfig.ts\n * This comment is maintained as this module is named as ObjectPage.ts and the corresponding module is named as ObjectPageConfig.ts\n */\n\nimport { v2 } from '@sap/ux-specification-types';\nimport { pageLayoutInformation, childId, syncRule, validity } from '../../../common/decoration/decorators';\nimport { getAppSettingOBJPathV2, getAppRootSettingOBJPath } from '../../application';\nimport type { FlexibleColumnLayoutType } from '@sap/ux-specification-types';\nimport { doNotDelete } from '../../../common';\n\n@pageLayoutInformation({\n    id: v2.SAPUI5_VIEW_EXTENSION_OBJECT_PAGE,\n    pageId: v2.FE_TEMPLATE_V2_OBJECT_PAGE\n})\nexport class ObjectPage implements v2.ObjectPageConfigV2 {\n    @syncRule({\n        manifest: {\n            path: (pageKeys: string[]): string => getAppSettingOBJPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    showConfirmationOnDraftActivate?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys: string[]): string => getAppSettingOBJPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.52.1'\n    })\n    hideChevronForUnauthorizedExtNav?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys: string[]): string => getAppSettingOBJPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    allowDeepLinking?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys: string[]): string => getAppSettingOBJPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    navToListOnSave?: boolean;\n\n    @childId('header')\n    header?: v2.ObjectPageHeader;\n\n    @childId('sections')\n    sections?: v2.CustomSections | v2.GenericSections;\n\n    @childId('layout')\n    layout?: v2.ObjectPageLayout;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys: string[]): string => getAppRootSettingOBJPath(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    defaultLayoutTypeIfExternalNavigation?: FlexibleColumnLayoutType.MidColumnFullScreen;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys: string[]): string => getAppSettingOBJPathV2(pageKeys),\n            import: (value: object): object | undefined => {\n                if ('chartSettings' in value) {\n                    return value['chartSettings'] as object | undefined;\n                }\n            },\n            key: 'chartSettings'\n        }\n    })\n    @validity({\n        since: '1.78.0'\n    })\n    globalChartSettings?: v2.GlobalChartSettings;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys: string[]): string => getAppSettingOBJPathV2(pageKeys),\n            import: (value: object): object | undefined => {\n                if ('tableSettings' in value) {\n                    return value['tableSettings'] as object | undefined;\n                }\n            },\n            key: 'tableSettings',\n            delete: doNotDelete\n        }\n    })\n    @validity({\n        since: '1.71.0'\n    })\n    globalTableSettings?: v2.GlobalTableSettings;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { pageLayoutInformation, syncRule, validity } from '../../../common/decoration/decorators';\nimport { getOVPsettingPath } from '../../application';\nimport type { ListCard, AnalyticalCard, StackCard, LinklistCard, TableCard, CustomCard } from '../controls/Card';\nimport type { RefreshStrategiesPropDef, ResizableLayoutVariant } from '@ui5/manifest/types/manifest';\n\nfunction importDateSettingsFieldsOVP(manifestSection: object, configPart) {\n    for (const propertyKey in manifestSection['dateSettings']['fields']) {\n        configPart.fields[propertyKey] = manifestSection['dateSettings']['fields'][propertyKey];\n        const selectedValues = manifestSection['dateSettings']['fields'][propertyKey].selectedValues;\n        if (typeof selectedValues === 'string') {\n            configPart.fields[propertyKey].selectedValues = selectedValues.split(',') as v2.DateRangeType[];\n        }\n        for (const filterKey in manifestSection['dateSettings']['fields'][propertyKey].filter) {\n            const filterValue = manifestSection['dateSettings']['fields'][propertyKey].filter[filterKey];\n            configPart.fields[propertyKey].filter[filterKey] = filterValue;\n            if (filterValue.equals && typeof filterValue.equals === 'string') {\n                configPart.fields[propertyKey].filter[filterKey].equals = filterValue.equals.split(\n                    ','\n                ) as v2.DateRangeType[];\n            }\n        }\n    }\n}\n\nexport function importDateSettingsOVP(manifestSection: object): v2.DateRange {\n    if (!manifestSection || !manifestSection['dateSettings']) {\n        return undefined;\n    }\n    const configPart: v2.DateRange = JSON.parse(JSON.stringify(manifestSection['dateSettings']));\n    // converted CSV format to array of strings\n    if (typeof manifestSection['dateSettings']['selectedValues'] === 'string') {\n        configPart.selectedValues = manifestSection['dateSettings']['selectedValues'].split(',') as v2.DateRangeType[];\n    }\n    if (manifestSection['dateSettings']['fields']) {\n        importDateSettingsFieldsOVP(manifestSection, configPart);\n    }\n    return configPart;\n}\n\nexport function importFilterSettings(manifestSection: object): object {\n    const configPart = {};\n    configPart['dateSettings'] = importDateSettingsOVP(manifestSection['filterSettings']);\n    return configPart;\n}\n\nfunction exportFilterFields(configPart: v2.FilterSettingsType, key: string, manifestSection: unknown) {\n    for (const fieldName in configPart['filterSettings'][key]['fields']) {\n        const field = configPart['filterSettings'][key]['fields'][fieldName];\n        if (field.selectedValues) {\n            manifestSection['filterSettings'][key]['fields'][fieldName].selectedValues = field.selectedValues.join();\n        }\n        if (field.filter) {\n            for (const filterKey in field.filter) {\n                const filterValue = field.filter[filterKey];\n                if (filterValue.equals && Array.isArray(filterValue.equals)) {\n                    manifestSection['filterSettings'][key]['fields'][fieldName].filter[filterKey].equals =\n                        filterValue.equals.join();\n                }\n            }\n        }\n    }\n}\n\nexport function exportFilterSettings(manifestSection: object, configPart: v2.FilterSettingsType): void {\n    if (!manifestSection['filterSettings']) {\n        manifestSection['filterSettings'] = {};\n    }\n    const key = 'dateSettings';\n    if (configPart['filterSettings'][key] === undefined) {\n        delete manifestSection['filterSettings'][key];\n    } else {\n        manifestSection['filterSettings'][key] = JSON.parse(JSON.stringify(configPart['filterSettings'][key]));\n        //now convert enum array to joined string\n        if (configPart['filterSettings'][key]['selectedValues']) {\n            manifestSection['filterSettings'][key]['selectedValues'] =\n                configPart['filterSettings'][key]['selectedValues'].join();\n        }\n        if (configPart['filterSettings'][key]['fields']) {\n            exportFilterFields(configPart, key, manifestSection);\n        }\n    }\n}\n\ntype CardClassType = ListCard | AnalyticalCard | StackCard | LinklistCard | TableCard | CustomCard;\n\n@pageLayoutInformation({\n    id: 'sap.suite.ui.generic.template.OverviewPage.view.Details',\n    pageId: 'sap.suite.ui.generic.template.OverviewPage'\n})\nexport class OverviewPage implements v2.OverviewPageConfigV2 {\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    globalFilterModel?: string;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    globalFilterEntityType?: string;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    globalFilterEntitySet?: string;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    showBasicSearch?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    disableErrorPage?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    smartVariantRequired?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    bHeaderExpanded?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    containerLayout?: v2.ContainerLayoutType;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    showDateInRelativeFormat?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    disableTableCardFlexibility?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    enableLiveFilter?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    enableLazyRendering?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    refreshStrategyOnAppRestore?: RefreshStrategiesPropDef;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    considerAnalyticalParameters?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    refreshIntervalInMinutes?: number;\n\n    @syncRule({\n        manifest: { path: (): string => getOVPsettingPath() }\n    })\n    useDateRangeType?: boolean;\n\n    chartSettings?: v2.ChartSettingsType;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath(),\n            import: importFilterSettings,\n            export: exportFilterSettings\n        }\n    })\n    @validity({\n        since: '1.80.0'\n    })\n    filterSettings?: v2.FilterSettingsType;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    dataLoadSettings?: v2.DataLoadSettingsType;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    resizableLayout?: {\n        [k: string]: ResizableLayoutVariant;\n    };\n\n    cards: {\n        [k: string]: CardClassType;\n    };\n}\n", "import type { PageTypeV2, PageTypeV4 } from '@sap/ux-specification-types';\nimport type { V2Controls, V2Pages } from '../../v2/types';\nimport type { V4Controls, V4Pages } from '../../v4/types';\n\n/**\n * Common interface that is used for all instantiations of (reflect) metadata classes\n */\nexport interface MetadataInstanceInterface {\n    createInstance(\n        pageType: PageTypeV2 | PageTypeV4,\n        schemaPropertyName: string,\n        data?: object,\n        controlPropertyValue?: string\n    ): any;\n    createPageInstance(pageType: PageTypeV2 | PageTypeV4, data?: object): object;\n}\n\nexport abstract class MetadataFactory implements MetadataInstanceInterface {\n    private readonly controls: V2Controls | V4Controls;\n    private readonly pages: V2Pages | V4Pages;\n    private readonly pageTypes: object;\n\n    /**\n     * Sub-classes for V2 and V4 have to pass their specific (reflect) metadata classes:\n     * @param controls - list of imported metadata classes for controls\n     * @param pages - list of imported metadata classes for pages\n     * @param pageTypes - list of supported pages, entry point to further definitions\n     */\n    protected constructor(controls: V2Controls | V4Controls, pages: V2Pages | V4Pages, pageTypes: object) {\n        this.controls = controls;\n        this.pages = pages;\n        this.pageTypes = pageTypes;\n    }\n\n    /**\n     * Creates an instance of a metadata class for a given (complex) property of a JSON schema\n     * @param {PageTypeV2} pageType - page type of a Fiori Element\n     * @param schemaPropertyName - name of the complex property in the JSON schema of the page.\n     *                             Used as fallback if no metadataclass can be found by evaluating controlPropertyValue.\n     * @param data - data object from which the values shall be taken over, representing a part of the config\n     * @param controlPropertyValue - value of a controling property that categorizes the complex property, e.g. table type or card template\n     * @returns a class instance comprising the reflect metadata for import or export.\n     *          If no metadata class could be identified, assumption is that no dedicated handler class exists; thus the original data object is returned as is.\n     */\n    createInstance(\n        pageType: PageTypeV2 | PageTypeV4,\n        schemaPropertyName: string,\n        data?: object,\n        controlPropertyValue?: string\n    ): any {\n        let metadataClass = this.controls[controlPropertyValue]\n            ? this.controls[controlPropertyValue]\n            : this.controls[schemaPropertyName];\n        if (!metadataClass) {\n            metadataClass = this.pageTypes[pageType][controlPropertyValue]\n                ? this.pageTypes[pageType][controlPropertyValue]\n                : this.pageTypes[pageType][schemaPropertyName];\n        }\n        return metadataClass ? Object.assign(new metadataClass(), data) : data;\n    }\n    /**\n     * Creates an instance of a metadata class for a given page\n     * @param {PageTypeV2} pageType - page type of a Fiori Element\n     * @param data - data to be taken over (from the config)\n     * @returns a class instance comprising the reflect metadata for import or export\n     */\n    createPageInstance(pageType: PageTypeV2 | PageTypeV4, data?: object): object {\n        const metadataClass = this.pages[pageType];\n        return Object.assign(new metadataClass(), data);\n    }\n}\n", "import * as controls from './controls';\nimport * as pages from './pages';\nimport type { MetadataInstanceInterface } from '../../common/decoration/factory';\nimport { MetadataFactory } from '../../common/decoration/factory';\nimport { v2, PageTypeV2, SAPUI5_FRAGMENT_CLASS, SAPUI5_VIEW_CLASS } from '@sap/ux-specification-types';\n\n/**\n * Note: If the key of the elements corresponds to the name of the definition in schema, you do not have to list it explicitly here.\n * The following tables only comprise entries for elements that do not follow the official pattern (yet)\n */\nconst ALPElements = {\n    //no deviations\n};\n\nconst LRElements = {\n    Table: controls.ResponsiveTable,\n    ResponsiveTableWithMultiSelect: controls.ResponsiveTable,\n    ResponsiveTableWithInlineDelete: controls.ResponsiveTable\n};\n\nconst OVPElements = {\n    [v2.CardSettingsType.listCardSettings]: controls.ListCard,\n    [v2.CardSettingsType.listCardSettingsv4]: controls.ListCard,\n    [v2.CardSettingsType.analyticalCardSettings]: controls.AnalyticalCard,\n    [v2.CardSettingsType.analyticalCardSettingsv4]: controls.AnalyticalCard,\n    [v2.CardSettingsType.stackCardSettings]: controls.StackCard,\n    [v2.CardSettingsType.linkListCardSettings]: controls.LinklistCard,\n    [v2.CardSettingsType.tableCardSettings]: controls.TableCard,\n    [v2.CardSettingsType.tableCardSettingsv4]: controls.TableCard\n};\n\nconst OPElements = {\n    [SAPUI5_VIEW_CLASS]: controls.ObjectPageCustomSectionView,\n    [SAPUI5_FRAGMENT_CLASS]: controls.ObjectPageCustomSectionFragment,\n    Table: controls.ObjectPageResponsiveTable, //default\n    ObjectPageResponsiveTableWithMultiSelect: controls.ObjectPageResponsiveTable,\n    ObjectPageResponsiveTableWithInlineDelete: controls.ObjectPageResponsiveTable\n};\n\nconst pageTypes = {\n    [PageTypeV2.AnalyticalListPage]: ALPElements,\n    [PageTypeV2.ListReport]: LRElements,\n    [PageTypeV2.ObjectPage]: OPElements,\n    [PageTypeV2.OverviewPage]: OVPElements\n};\n\n/**\n * V2 specific factory class for creating instances of (reflect) metadata classes\n */\nexport class MetadataInstanceFactoryV2 extends MetadataFactory implements MetadataInstanceInterface {\n    constructor() {\n        super(controls, pages, pageTypes);\n    }\n}\n", "import {\n    transferSettingsOfObject,\n    addFlex,\n    determineTableType,\n    addFragments,\n    convertActionKey,\n    importHeaderActions\n} from '../common/index';\nimport type { v2, ImportALPV2Parameters } from '@sap/ux-specification-types';\nimport { DefinitionName, ManifestSection, PageTypeV2 } from '@sap/ux-specification-types';\nimport { initI18n } from '../../../../i18n/i18n';\nimport { parseChangeString } from '../../../common';\nimport { checkV2Page, findAnalyticalListPage, getV2Pages, removeEmptySettings } from '../../import/utils';\nimport { MetadataInstanceFactoryV2 as Factory } from '../../export/factory';\nimport type { MetadataInstanceInterface } from '../../../common/decoration/factory';\nimport type { Definition } from 'typescript-json-schema';\n\n/**\n * Adds manifest settings to the config.json\n * @param {AnalyticalListPageConfig} analyticalListPageConfig - the configuration to be filled\n * @param {Manifest} manifest - manifest.json of the app\n * @param {object} jsonSchema - the app-specific schema\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {string} pageKey - key of the page in manifest\n * @param {ExtensionLogger} logger - instance for logging exceptions\n */\nfunction addSettings(\n    importParameters: ImportALPV2Parameters,\n    analyticalListPageConfig: v2.AnalyticalListPageConfigV2,\n    factory: MetadataInstanceInterface,\n    pageKey: string\n): void {\n    const tableType = determineTableType(importParameters.manifest, pageKey);\n    const schemaDefinitions = (importParameters.jsonSchema as Definition).definitions as Definition;\n\n    // Import standard header actions:\n    importHeaderActions(analyticalListPageConfig, factory, schemaDefinitions);\n\n    analyticalListPageConfig.table = factory.createInstance(\n        PageTypeV2.AnalyticalListPage,\n        `ALP${tableType}`,\n        analyticalListPageConfig.table\n    );\n    transferSettingsOfObject(\n        analyticalListPageConfig.table,\n        importParameters.manifest,\n        schemaDefinitions[`ALP${tableType}<LineItems>`],\n        pageKey,\n        importParameters.logger\n    );\n    // ToolBar:\n    analyticalListPageConfig.table.toolBar = factory.createInstance(\n        PageTypeV2.AnalyticalListPage,\n        DefinitionName.ToolBar,\n        {\n            actions: {}\n        }\n    );\n    transferSettingsOfObject(\n        analyticalListPageConfig.table.toolBar,\n        importParameters.manifest,\n        schemaDefinitions[DefinitionName.ToolBar],\n        pageKey,\n        importParameters.logger\n    );\n    if (schemaDefinitions[DefinitionName.ActionsLR]) {\n        for (const actionProperty in schemaDefinitions[DefinitionName.ActionsLR].properties) {\n            const actionKey = convertActionKey(actionProperty);\n            analyticalListPageConfig.table.toolBar.actions[actionKey] = factory.createInstance(\n                PageTypeV2.AnalyticalListPage,\n                DefinitionName.Action\n            );\n            transferSettingsOfObject(\n                analyticalListPageConfig.table.toolBar.actions[actionKey],\n                importParameters.manifest,\n                schemaDefinitions[DefinitionName.Action],\n                pageKey,\n                importParameters.logger\n            );\n        }\n    }\n    //FilterBar:\n    analyticalListPageConfig.filterBar = factory.createInstance(\n        PageTypeV2.AnalyticalListPage,\n        DefinitionName.AnalyticalListPageFilterBar,\n        analyticalListPageConfig.filterBar\n    );\n    transferSettingsOfObject(\n        analyticalListPageConfig.filterBar,\n        importParameters.manifest,\n        schemaDefinitions[DefinitionName.AnalyticalListPageFilterBar],\n        pageKey,\n        importParameters.logger\n    );\n    if (schemaDefinitions[DefinitionName.SelectionFields]) {\n        analyticalListPageConfig.filterBar.selectionFields = factory.createInstance(\n            PageTypeV2.AnalyticalListPage,\n            DefinitionName.AnalyticalListPageFilterBar,\n            analyticalListPageConfig.filterBar.selectionFields\n        );\n        const schemaSelectionFields = schemaDefinitions[DefinitionName.SelectionFields].properties;\n        for (const selectionProperty in schemaSelectionFields) {\n            const selectionKey = selectionProperty;\n            analyticalListPageConfig.filterBar.selectionFields[selectionKey] = factory.createInstance(\n                PageTypeV2.AnalyticalListPage,\n                'SelectionFieldDateSettings'\n            );\n            transferSettingsOfObject(\n                analyticalListPageConfig.filterBar.selectionFields[selectionKey],\n                importParameters.manifest,\n                schemaDefinitions['SelectionFieldDateSettings'],\n                pageKey,\n                importParameters.logger,\n                selectionKey\n            );\n        }\n    }\n\n    //Chart settings:\n    analyticalListPageConfig.chart = factory.createInstance(\n        PageTypeV2.AnalyticalListPage,\n        'ChartSettings',\n        analyticalListPageConfig.chart\n    );\n    transferSettingsOfObject(\n        analyticalListPageConfig.chart,\n        importParameters.manifest,\n        schemaDefinitions['ChartSettings'],\n        pageKey,\n        importParameters.logger\n    );\n    //Footer:\n    analyticalListPageConfig.footer = { actions: {} };\n    const footerAction = schemaDefinitions[DefinitionName.FooterActionsLR];\n    if (footerAction) {\n        for (const actionProperty in footerAction.properties) {\n            const actionKey = convertActionKey(actionProperty);\n            analyticalListPageConfig.footer.actions[actionKey] = factory.createInstance(\n                PageTypeV2.AnalyticalListPage,\n                DefinitionName.FooterAction\n            );\n            transferSettingsOfObject(\n                analyticalListPageConfig.footer.actions[actionKey],\n                importParameters.manifest,\n                schemaDefinitions[DefinitionName.Action],\n                pageKey,\n                importParameters.logger\n            );\n        }\n    }\n\n    //KPI's:\n    analyticalListPageConfig.keyPerformanceIndicators = {};\n    const kpiCards =\n        importParameters.manifest[ManifestSection.generic]['pages'][pageKey].component?.settings\n            ?.keyPerformanceIndicators;\n    if (kpiCards) {\n        Object.keys(kpiCards).forEach((kpiKey) => {\n            analyticalListPageConfig.keyPerformanceIndicators[kpiKey] = factory.createInstance(\n                PageTypeV2.AnalyticalListPage,\n                'KPISettings'\n            );\n            analyticalListPageConfig.keyPerformanceIndicators = factory.createInstance(\n                PageTypeV2.AnalyticalListPage,\n                'KPISettings',\n                analyticalListPageConfig.keyPerformanceIndicators\n            );\n            transferSettingsOfObject(\n                analyticalListPageConfig.keyPerformanceIndicators[kpiKey],\n                importParameters.manifest,\n                schemaDefinitions['KPISettings'],\n                pageKey,\n                importParameters.logger,\n                kpiKey\n            );\n        });\n    }\n}\n\n/**\n * Creates the configuration file content for an analytical list page V2\n * @param {ImportALPV2Parameters} importParameters  - object comprising all input data\n *\n * @returns {AnalyticalListPageConfig} - the configuration (JSON)\n */\nexport function createAnalyticalListPageConfig(\n    importParameters: ImportALPV2Parameters\n): v2.AnalyticalListPageConfigV2 | undefined {\n    // Initialize i18next\n    initI18n();\n\n    const v2Pages = getV2Pages(importParameters);\n    if (!v2Pages) {\n        return;\n    }\n    const factory = new Factory();\n    //Instantiate Page\n    const config = factory.createPageInstance(PageTypeV2.AnalyticalListPage);\n\n    const pageKeys: string[] = [];\n    const v2Page = findAnalyticalListPage(\n        importParameters.manifest[ManifestSection.generic].pages as v2.SapUiAppPagesV2,\n        pageKeys,\n        importParameters.logger\n    );\n    checkV2Page(v2Page, importParameters.logger, v2Page?.entitySet);\n    if (!v2Page) {\n        return;\n    }\n\n    addSettings(importParameters, config, factory, pageKeys[0]);\n    importParameters.flex.forEach((change) => {\n        if (parseChangeString(change)) {\n            addFlex(config, change, importParameters.jsonSchema);\n        }\n    });\n    addFragments(config, importParameters.manifest, v2Page, PageTypeV2.AnalyticalListPage, importParameters.fragments);\n    removeEmptySettings(config);\n    return config;\n}\n", "import type {\n    SapUiGenericAppPageSettings as Settings,\n    ChangeDefinition,\n    DeprecatedProperties,\n    ExtensionLogger,\n    ImportObjectPageV2Parameters,\n    ObjectPageSectionData,\n    SyncRule,\n    Manifest\n} from '@sap/ux-specification-types';\nimport {\n    ControlType,\n    LogSeverity,\n    v2,\n    ActionTitlePrefix,\n    PageTypeV2,\n    DefinitionName,\n    PropertyName,\n    SchemaTag,\n    UIVOCABULARYALPHADOT,\n    VOCWITHSLASH\n} from '@sap/ux-specification-types';\nimport type { FlexChangesForTransfer, FlexForTransfer } from '../controls/table';\nimport { addFlexForTable } from '../controls/table';\nimport { log } from '../../../../extensionLogger';\nimport { findObjectPageV2, findCustomSectionExtensions, checkV2Page, getV2Pages } from '../utils';\nimport type {} from '../../../common';\nimport {\n    DEFINITION_LINK_PREFIX,\n    convertActionKeyToStableId,\n    getTargetFromCustomColumnRef,\n    getReflectMetadata,\n    getSectionTitle,\n    getTextForDeprecated,\n    parseChangeString\n} from '../../../common';\nimport { ensureManifestSectionByPathV2 } from '../../export/manifest';\nimport i18next from 'i18next';\nimport { initI18n } from '../../../../i18n/i18n';\nimport { MetadataInstanceFactoryV2 as Factory } from '../../export/factory';\nimport type { ObjectPageV2ConfigParameters, SectionPartProperties } from '../../types';\nimport {\n    ActionTypeV2,\n    SectionTypeV2,\n    OP_STANDARD_FOOTER_ACTION_PREFIX,\n    OP_STANDARD_HEADER_ACTION_PREFIX\n} from '../../types';\nimport { UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { convertSelector, addFragments, convertActionKey } from '../common';\nimport type { Definition, DefinitionOrBoolean } from 'typescript-json-schema';\n\n// Comprises list of flexChanges that do not require a facet id\nconst SupportedFlexChangesWithoutFacetId = [ControlType.Avatar, ControlType.ObjectPageLayout, ControlType.DynamicPage];\n\n/**\n * Determines Facet ID from single string selector Id\n * @param {string} selectorId Selector ID\n * @returns {string} FacetID\n */\nfunction getSingleSelectorIdPart(selectorIdParts: string[], facetID: string) {\n    const lastIdParts = selectorIdParts[0].split('-');\n    const id = lastIdParts[lastIdParts.length - 1];\n    if (selectorIdParts[0].indexOf('::action::') >= 0 || selectorIdParts[0].startsWith('action::')) {\n        // Object Page ToolBar Actions\n        facetID =\n            lastIdParts[0].split('::action::')[0] ||\n            lastIdParts[0].split(`${UIAnnotationTerms.LineItem}::`)[1].split('::')[0];\n        facetID = `${ActionTitlePrefix}${facetID}`;\n    } else if (\n        selectorIdParts[0].indexOf(UIAnnotationTerms.LineItem) >= 0 ||\n        selectorIdParts[0].indexOf('UI.LineItem') >= 0 ||\n        selectorIdParts[0].indexOf('::Table') >= 0\n    ) {\n        facetID = lastIdParts[0].split('::Table')[0].split('::responsiveTable')[0];\n    } else {\n        const idParts = id.split('::');\n        if (idParts.length > 1) {\n            facetID = idParts[0];\n        } else if (lastIdParts[0].indexOf('::') > -1) {\n            facetID = lastIdParts[0].split('::')[0];\n        }\n    }\n    return facetID;\n}\n\n/**\n * Determines Facet ID of flex change\n * @param {string} selectorId Control ID of flex change\n * @returns {string} FacetID\n */\nfunction getFacetID(selectorId: string): string {\n    let facetID: string;\n    const selectorIdParts: string[] = selectorId.split(':::');\n    if (selectorIdParts.length === 1) {\n        facetID = getSingleSelectorIdPart(selectorIdParts, facetID);\n    } else if (selectorId.indexOf('sSmartTableId') >= 0) {\n        for (const element of selectorIdParts) {\n            if (element.startsWith('sSmartTableId')) {\n                facetID = element\n                    .split('sSmartTableId::')[1]\n                    .split('::Table')[0]\n                    .split('/responsiveTable')[0]\n                    .replace(`::${UIAnnotationTerms.LineItem}`, `/@${UIAnnotationTerms.LineItem}`);\n                break;\n            }\n        }\n    } else {\n        facetID = selectorIdParts[0];\n    }\n    return facetID;\n}\n\n/**\n * Prepares the list of flex changes\n * @param change - the flex change (UI Adaptation)\n * @returns {FlexChangesForTransfer} - list of prepared flex changes\n */\nfunction prepareFlexChanges(changes: string[], entitySet: string, logger?: ExtensionLogger): FlexChangesForTransfer {\n    const result: FlexChangesForTransfer = {};\n    const complexIdMatch = /.+DataField.+:::sSmartTableId::.+/;\n    changes.forEach((changeString) => {\n        try {\n            const change = parseChangeString(changeString) as ChangeDefinition;\n            const changeId = (change && change.controlId?.split('--')) || [];\n            if (change && changeId[0]?.includes(v2.FE_TEMPLATE_V2_OBJECT_PAGE) && changeId[0]?.endsWith(entitySet)) {\n                let selectorId = changeId[1].replace(/:3a:3a/g, '::');\n                if (complexIdMatch.exec(selectorId) !== null) {\n                    selectorId = selectorId.split('template:::TableColumn:::')[1];\n                }\n                const facetID: string = getFacetID(selectorId);\n                selectorId = convertSelector(selectorId)\n                    .replace(/:3a:3a/g, '::')\n                    .replace(/\\/@com.sap.vocabularies/g, '::com.sap.vocabularies');\n                result[`${selectorId}::${change.content.property}`] = {\n                    controlId: selectorId,\n                    propertyId: change.content.property,\n                    facetId: facetID,\n                    newValue:\n                        change.content.newBinding !== undefined ? change.content.newBinding : change.content.newValue,\n                    controlType: change.controlType,\n                    creation: change.creation\n                };\n            }\n        } catch (error) {\n            log(\n                logger,\n                {\n                    severity: LogSeverity.Error,\n                    message: i18next.t('FLEXERROR')\n                },\n                ...error\n            );\n        }\n    });\n    const sortedList = Object.entries(result).sort(\n        (a: [string, any], b: [string, any]) => a[1].creation - b[1].creation\n    );\n    return sortedList.reduce((accum, [k, v]) => {\n        accum[k] = v;\n        return accum;\n    }, {});\n}\n\n/**\n * Returns the type of a given section\n * @param schemaSection - current section\n * @returns {SectionTypeV2} - type of section, differentiated by level (Sub/Section)\n */\nconst getSectionType = (schemaSection: object): SectionTypeV2 => {\n    let reference;\n    if (schemaSection['$ref']) {\n        reference = schemaSection['$ref'].includes('<') ? schemaSection['$ref'].split('<')[0] : schemaSection['$ref'];\n        return reference.replace(DEFINITION_LINK_PREFIX, '');\n    } else if (schemaSection['properties']?.['subsections']?.['$ref']) {\n        reference = schemaSection['properties']['subsections']['$ref'];\n        reference = reference.includes('<') ? reference.split('<')[0] : reference;\n        return reference.replace(DEFINITION_LINK_PREFIX, '');\n    } else if (schemaSection['properties']?.['subsections']) {\n        return SectionTypeV2.SubSection;\n    }\n};\n\n/**\n * Import of flex changes of a table to the config JSON of OP\n * @param flexChanges - list of flex changes (pre-processed by prepareFlexChanges)\n * @param propertyKey - key of the current property in the app schema\n * @param configPart - part of the configuration to be filled\n * @param {ImportObjectPageV2Parameters} importParameters  - object comprising all input data\n * @param sectionTitle - title of the section (optional)\n * @param sectionId - ID of the given section (optional)\n */\nfunction importFlexChangesOfTable(\n    flexChanges: FlexChangesForTransfer,\n    propertyKey: string,\n    configPart: { [key: string]: any },\n    importParameters: ImportObjectPageV2Parameters,\n    sectionTitle: string,\n    sectionId: string\n) {\n    let facetIds;\n    if (sectionTitle) {\n        facetIds = [sectionTitle.replace(/@/g, '')];\n    } else {\n        facetIds = [sectionId.replace(/@/g, ''), sectionId?.replace(/::@com.sap.vocabularies/g, VOCWITHSLASH)];\n    }\n\n    for (const selector in flexChanges) {\n        const flexChange = flexChanges[selector];\n        const propertyIdMatch = flexChange.propertyId === propertyKey;\n        const isTableColumn = propertyKey === 'columns' && flexChange.controlType === ControlType.TableColumn;\n        if ((propertyIdMatch || isTableColumn) && facetIds.indexOf(flexChange?.facetId) > -1) {\n            addFlexForTable(configPart, flexChange, importParameters.jsonSchema);\n        }\n    }\n}\n\n/**\n * Helper function to evaluate if flex change is for standard action\n * @param flexChange - flex change\n * @param controlIdMatch - if ID of the control matches RegEx\n * @returns {boolean} is standard action flex change\n */\nfunction isStandardActionFlexChange(flexChange: FlexForTransfer, controlIdMatch: boolean) {\n    return flexChange.facetId === 'template' && controlIdMatch;\n}\n\n/**\n * Helper function to check if Flex change Id and config/schema Id match\n * @param changeId Control Id of flex change to compare against\n * @param targetId Schema/Section Id\n * @param checkTitle flag if check consists of schema title\n * @returns {boolean} if flex change id and config/schema Id match\n */\nconst idElementChecker = (changeId: string[], targetId: string[], checkTitle = false): boolean => {\n    if (!checkTitle) {\n        return targetId.every((v) => changeId.includes(v));\n    }\n    // Check that qualifier matches too\n    const startIndex = changeId.indexOf(targetId[0]);\n    const endIndex = changeId.length - startIndex > targetId.length ? changeId.length - 1 : undefined;\n    const arrayToCheck = changeId.slice(startIndex, endIndex);\n    return arrayToCheck.length === targetId.length && targetId.every((v) => arrayToCheck.includes(v));\n};\n\n/**\n * RegEx check of the control Id and/or the section Id against the selector of a flex change\n * @param schemaDefinition - current section of the app specific schema\n * @param flexChange - flex change\n * @param controlIdChecker - RegEx for the controlId\n * @param selectionIdChecker - RegEx for the selectionId\n * @param sectionId - title of the section (optional)\n * @param controlId - ID of the given control, for e.g. GroupElement, Action (optional)\n * @returns the result of all checks\n */\nfunction matchSelector(\n    schemaDefinition: Definition,\n    flexChange: FlexForTransfer,\n    controlIdChecker: RegExp,\n    selectionIdChecker: RegExp,\n    sectionId?: string,\n    controlId?: string\n): boolean {\n    let idMatch = false,\n        controlIdMatch = false;\n\n    if (controlId) {\n        idMatch = controlIdMatch = controlIdChecker.test(flexChange.controlId);\n        if (sectionId) {\n            idMatch = controlIdMatch && selectionIdChecker.test(flexChange.controlId);\n        }\n    } else if (sectionId) {\n        idMatch = selectionIdChecker.test(flexChange.controlId);\n    }\n    const controlIdParts = flexChange.controlId.split('::');\n\n    const isGroupId = flexChange.controlType === ControlType.GroupElement && controlIdMatch;\n    const isActionId = flexChange.facetId?.includes(ActionTitlePrefix) && !sectionId && idMatch;\n    const isSectionId = sectionId && idElementChecker(controlIdParts, sectionId.split('::')) && idMatch;\n    const isSchemaTitle =\n        schemaDefinition.title && idElementChecker(controlIdParts, schemaDefinition.title.split('::'), true);\n    const isSupportedWithoutFacetId =\n        !flexChange.facetId && SupportedFlexChangesWithoutFacetId.includes(flexChange.controlType as ControlType);\n    const isStandardAction = isStandardActionFlexChange(flexChange, controlIdMatch);\n    return isGroupId || isActionId || isSectionId || isSchemaTitle || isSupportedWithoutFacetId || isStandardAction;\n}\n\n/**\n * Import of (regular) flex changes to the config JSON of OP\n * @param schemaDefinition - current section of the app specific schema\n * @param configPart - part of the configuration to be filled\n * @param flexChanges - list of flex changes (pre-processed by prepareFlexChanges)\n * @param propertyKey - key of the current property in the app schema\n * @param sectionId - title of the section (optional)\n * @param elementId - stable ID part of the given element, for e.g. GroupElement, Action (optional)\n */\nfunction importFlexChanges(\n    schemaDefinition: Definition,\n    configPart: { [key: string]: any },\n    flexChanges: FlexChangesForTransfer,\n    propertyKey: string,\n    sectionId?: string,\n    elementId?: string\n) {\n    const controlIdChecker = new RegExp(`.*${elementId}`);\n    const selectionIdChecker = new RegExp(`.*${sectionId}`);\n\n    for (const selector in flexChanges) {\n        const flexChange = flexChanges[selector];\n        //Property match?\n        if (flexChange.propertyId !== propertyKey) {\n            continue;\n        }\n        //Control type match?\n        if (flexChange.controlType !== schemaDefinition.properties[flexChange.propertyId]?.[SchemaTag.controlType]) {\n            continue;\n        }\n        const match = matchSelector(\n            schemaDefinition,\n            flexChange,\n            controlIdChecker,\n            selectionIdChecker,\n            sectionId,\n            elementId\n        );\n        if (match) {\n            configPart[propertyKey] = flexChange.newValue;\n        }\n    }\n}\n\n/**\n * Checks for deprecated properties and writes them to the log\n * @param manifestSection - given section in the manifest\n * @param deprecatedProperties - list of deperecated properties\n * @param {ImportObjectPageV2Parameters} importParameters  - object comprising all input data\n * @param manifestPath - manifest path, as calcualted by the sync rule\n */\nfunction checkDeprecatedProperties(\n    manifestSection: object,\n    deprecatedProperties: DeprecatedProperties,\n    importParameters: ImportObjectPageV2Parameters,\n    manifestPath: string\n) {\n    if (manifestSection && deprecatedProperties) {\n        for (const key in manifestSection) {\n            const deprecated = deprecatedProperties[key];\n            if (deprecated) {\n                log(importParameters.logger, {\n                    severity: LogSeverity.Warning,\n                    message: getTextForDeprecated(key, deprecated),\n                    location: {\n                        path: 'webapp/manifest.json/',\n                        range: manifestPath.split('/')\n                    }\n                });\n                delete deprecatedProperties[key];\n            }\n        }\n    }\n}\n\n/**\n * Imports manifest settings to the object page config\n * @param syncRule - sync rule for accessing the reflect-metadata\n * @param pageKeys - list of page keys (comprises the one entry describing the given page)\n * @param {ImportObjectPageV2Parameters} importParameters  - object comprising all input data\n * @param configPart - part of the configuration to be filled\n * @param propertyKey  - key of the current property of the schema definition\n * @param deprecatedProperties - list od deperecated properties\n * @param sectionId - ID of the given section (optional)\n * @param sectionTitle - title of the section (optional)\n */\nfunction importManifestSetting(\n    syncRule: SyncRule,\n    pageKeys: string[],\n    importParameters: ImportObjectPageV2Parameters,\n    configPart: { [key: string]: any },\n    propertyKey: string,\n    deprecatedProperties: DeprecatedProperties,\n    sectionPart?: SectionPartProperties\n) {\n    const sectionIdInManifest = sectionPart?.id\n        ? sectionPart.id.replace(/\\/@/g, '::').replace(/@com.sap/g, 'com.sap')\n        : undefined;\n    let manifestPath: string;\n    let manifestSection: object;\n    if (sectionPart?.title) {\n        manifestPath = syncRule.manifest.path(pageKeys, {} as Manifest, sectionPart.title);\n        manifestSection = ensureManifestSectionByPathV2(importParameters.manifest, manifestPath);\n        if (Object.values(manifestSection).length === 0) {\n            manifestPath = syncRule.manifest.path(pageKeys, {} as Manifest, sectionIdInManifest);\n            manifestSection = ensureManifestSectionByPathV2(importParameters.manifest, manifestPath);\n        }\n    } else {\n        manifestPath = syncRule.manifest.path(pageKeys, {} as Manifest, sectionIdInManifest);\n        manifestSection = ensureManifestSectionByPathV2(importParameters.manifest, manifestPath);\n    }\n    const importHandler = syncRule.manifest.import;\n    if (importHandler && typeof importHandler === 'function') {\n        const value = importHandler(manifestSection, sectionPart?.id);\n        if (value !== undefined) {\n            configPart[propertyKey] = value;\n        }\n    } else {\n        const manifestKey = syncRule.manifest.key || propertyKey;\n        if (manifestKey in manifestSection) {\n            configPart[propertyKey] = manifestSection[manifestKey];\n        }\n    }\n    // Check for deprecated properties.\n    checkDeprecatedProperties(manifestSection, deprecatedProperties, importParameters, manifestPath);\n    return manifestSection;\n}\n\n/**\n * Transfers settings from manifest and flexChanges to object page config\n * @param {ImportObjectPageV2Parameters} importParameters  - object comprising all input data\n * @param configPart - part of the configuration to be filled\n * @param schemaDefinition - current section of the app specific schema\n * @param configParameters - comprises page keys and flex changes\n * @param sectionPart - structure comprising the section information\n * @param elementId - stable ID part of the given element (action, column, ...) (optional)\n */\nfunction transferSettingsAndFlexChanges(\n    importParameters: ImportObjectPageV2Parameters,\n    configPart: { [key: string]: any },\n    schemaDefinition: Definition,\n    configParameters: ObjectPageV2ConfigParameters,\n    sectionPart?: SectionPartProperties,\n    elementId?: string\n): void {\n    if (!schemaDefinition) {\n        return;\n    }\n    const deprecatedProperties: DeprecatedProperties = configPart?.getDeprecated ? configPart.getDeprecated() : {};\n    for (const propertyKey in schemaDefinition.properties || schemaDefinition) {\n        const syncRule = getReflectMetadata(configPart, propertyKey);\n        if (propertyKey === 'columns' || syncRule?.flex) {\n            if (\n                sectionPart?.type?.startsWith('ObjectPageSectionTableV2') ||\n                sectionPart?.type?.startsWith('ObjectPageSubSectionTableV2')\n            ) {\n                importFlexChangesOfTable(\n                    configParameters.flexChanges,\n                    propertyKey,\n                    configPart,\n                    importParameters,\n                    sectionPart.title,\n                    sectionPart.id\n                );\n            } else {\n                const facetId = sectionPart?.title || sectionPart?.id;\n                importFlexChanges(\n                    schemaDefinition,\n                    configPart,\n                    configParameters.flexChanges,\n                    propertyKey,\n                    facetId,\n                    elementId\n                );\n            }\n        } else if (syncRule?.manifest) {\n            importManifestSetting(\n                syncRule,\n                configParameters.pageKeys,\n                importParameters,\n                configPart,\n                propertyKey,\n                deprecatedProperties,\n                sectionPart\n            );\n        }\n    }\n}\n\n/**\n *\n * @param actionType - type of action\n * @param configActionId - id of action in config\n * @param {ActionTypeV2|string} importTypeId - type of action that was be initiated\n * @returns {string} actionId - to be used for import of flex changes\n */\nfunction getActionId(actionType: string, configActionId: string, importTypeId: string, facetId: string): string {\n    let actionId = convertActionKeyToStableId(configActionId);\n    switch (actionType) {\n        case ActionTypeV2.Form: {\n            actionId = `action::${actionId}::${facetId}::${importTypeId}`;\n            break;\n        }\n        case ActionTypeV2.OPFooter: {\n            actionId = `action::${actionId}::Determining`;\n            break;\n        }\n        case ActionTypeV2.OPToolBar: {\n            actionId = actionId.includes('sAction::')\n                ? `action::${actionId.split('sAction::')[1]}`\n                : `action::${actionId.replace(':2f', '::')}`;\n            break;\n        }\n        case ActionTypeV2.OPHeaderStandard: {\n            actionId = `${OP_STANDARD_HEADER_ACTION_PREFIX}${actionId}`;\n            break;\n        }\n        case ActionTypeV2.OPFooterStandard: {\n            actionId = `${OP_STANDARD_FOOTER_ACTION_PREFIX}${actionId}`;\n            break;\n        }\n    }\n    return actionId.replace(/@/g, '');\n}\n\n/**\n * Adds standard actions to the corresponding header/footer config\n * @param config actions config\n * @param actions existing actions definition\n */\nfunction fillStandardActions(\n    config,\n    actions: Definition,\n    importParameters: ImportObjectPageV2Parameters,\n    configParameters: ObjectPageV2ConfigParameters\n) {\n    for (const action in actions) {\n        const actionType = actions[action].$ref.split(DEFINITION_LINK_PREFIX)[1].split('<')[0];\n        if ([ActionTypeV2.OPHeaderStandard, ActionTypeV2.OPFooterStandard].includes(actionType)) {\n            const actionRef = actions[action].$ref.split('<')?.[1].split('>')[0];\n            const actionId = getActionId(actionType, action, '', '');\n            config.actions[action] = configParameters.factory.createInstance(PageTypeV2.ObjectPage, actionRef, {});\n            transferSettingsAndFlexChanges(\n                importParameters,\n                config[PropertyName.actions][action],\n                (importParameters.jsonSchema as Definition).definitions[actionRef] as Definition,\n                configParameters,\n                {},\n                actionId\n            );\n        }\n    }\n}\n\n/**\n *  Fills the action of the configuration\n * @param {ImportObjectPageV2Parameters} importParameters - object comprising all input data\n * @param {object} actionProperties - current properties' list (of action)\n * @param {object} configPart - the given part of the object page config\n * @param {ObjectPageV2ConfigParameters} configParameters - container for factory, pageKeys, flexChanges, v2Page, ObjectPageConfig\n * @param {ActionTypeV2|string} importTypeId - type of action that should be initiated\n */\nfunction fillActions(\n    importParameters: ImportObjectPageV2Parameters,\n    actionProperties: object,\n    configPart: object,\n    configParameters: ObjectPageV2ConfigParameters,\n    importTypeId: ActionTypeV2 | string,\n    facetId?: string\n): void {\n    configPart[PropertyName.actions] = {};\n    const actionType = importTypeId.split('::').pop();\n    if (configParameters.flexChanges && Object.keys(configParameters.flexChanges).length > 0) {\n        const sectionPart: SectionPartProperties = {};\n        if (facetId) {\n            sectionPart.id = facetId;\n        }\n        for (const actionProperty in actionProperties) {\n            const configActionId = convertActionKey(actionProperty);\n            const actionId = getActionId(actionType, configActionId, importTypeId, facetId);\n            if (actionId) {\n                configPart[PropertyName.actions][configActionId] = configParameters.factory.createInstance(\n                    PageTypeV2.ObjectPage,\n                    actionType\n                );\n                transferSettingsAndFlexChanges(\n                    importParameters,\n                    configPart[PropertyName.actions][configActionId],\n                    (importParameters.jsonSchema as Definition).definitions[actionType] as Definition,\n                    configParameters,\n                    sectionPart,\n                    actionId\n                );\n            }\n            if (\n                configPart[PropertyName.actions]?.[configActionId] &&\n                Object.keys(configPart[PropertyName.actions][configActionId]).length === 0\n            ) {\n                delete configPart[PropertyName.actions][configActionId];\n            }\n        }\n    }\n    fillStandardActions(configPart, actionProperties, importParameters, configParameters);\n    if (Object.keys(configPart[PropertyName.actions]).length === 0) {\n        delete configPart[PropertyName.actions];\n    }\n}\n\n/**\n *  Fills the fields of an object page form\n * @param {ImportObjectPageV2Parameters} importParameters - object comprising all input data\n * @param {sectionPartProperties} sectionPart - current properties' list of form section\n * @param fieldProperties - current properties' list (of fields)\n * @param configPart - the given part of the object page config\n * @param {ObjectPageV2ConfigParameters} configParameters - container for factory, pageKeys, flexChanges, v2Page, ObjectPageConfig\n */\nfunction fillFields(\n    importParameters: ImportObjectPageV2Parameters,\n    sectionPart: SectionPartProperties,\n    fieldProperties: object,\n    configPart: object,\n    configParameters: ObjectPageV2ConfigParameters\n): void {\n    let fieldId: string;\n    configPart[sectionPart.id]['form']['fields'] = {};\n    for (const fieldProperty in fieldProperties) {\n        fieldId = `${fieldProperty}::GroupElement`;\n        configPart[sectionPart.id]['form']['fields'][fieldProperty] = configParameters.factory.createInstance(\n            PageTypeV2.ObjectPage,\n            'Field'\n        );\n        const elementId = sectionPart.title?.includes(UIVOCABULARYALPHADOT)\n            ? `${sectionPart.id.replace(/@/g, '')}::${fieldId}`\n            : `${sectionPart.title}::${fieldId}`;\n        transferSettingsAndFlexChanges(\n            importParameters,\n            configPart[sectionPart.id]['form']['fields'][fieldProperty],\n            (importParameters.jsonSchema as Definition).definitions[DefinitionName.Field] as Definition,\n            configParameters,\n            {},\n            elementId\n        );\n        if (Object.keys(configPart[sectionPart.id]['form']['fields'][fieldProperty]).length === 0) {\n            delete configPart[sectionPart.id]['form']['fields'][fieldProperty];\n        }\n    }\n    if (Object.keys(configPart[sectionPart.id]['form']['fields']).length === 0) {\n        delete configPart[sectionPart.id]['form']['fields'];\n    }\n}\n\n/**\n * Adjusts the app schema by choosing the right table definition, depending on the table type\n * @param tableType - the type of the given table\n * @param {SectionPartProperties} sectionPart - current properties' list\n * @param schemaDefinitions - definitions' section of the app schema\n * @returns the right schema definition for the given table\n */\nfunction prepareTableSchema(\n    tableType: string,\n    sectionPart: SectionPartProperties,\n    schemaDefinitions: Definition\n): Definition {\n    let tableSchema: object;\n    if (tableType === 'TreeTable' || tableType === 'AnalyticalTable' || tableType === 'GridTable') {\n        tableSchema = schemaDefinitions[`ObjectPage${tableType}<${sectionPart.id}>`] as Definition;\n    } else if (\n        schemaDefinitions[`ObjectPageResponsiveTableWithMultiSelect<${sectionPart.id}>`] &&\n        schemaDefinitions[`ObjectPageResponsiveTableWithInlineDelete<${sectionPart.id}>`]\n    ) {\n        tableSchema = JSON.parse(\n            JSON.stringify(schemaDefinitions[`ObjectPageResponsiveTableWithMultiSelect<${sectionPart.id}>`])\n        );\n        tableSchema['properties'] = {\n            ...tableSchema['properties'],\n            ...schemaDefinitions[`ObjectPageResponsiveTableWithInlineDelete<${sectionPart.id}>`]['properties']\n        };\n    }\n    return tableSchema;\n}\n\n/**\n *  Fills the table section of the object page config\n * @param {ImportObjectPageV2Parameters} importParameters - object comprising all input data\n * @param {SectionPartProperties} sectionPart - current properties' list\n * @param {Settings} manifestSettings - object page settings section of the manifest\n * @param {object} configPart - the given part of the object page config\n * @param {ObjectPageV2ConfigParameters} configParameters - container for factory, pageKeys, flexChanges, v2Page, ObjectPageConfig\n */\nfunction fillTableInConfig(\n    importParameters: ImportObjectPageV2Parameters,\n    sectionPart: SectionPartProperties,\n    manifestSettings: Settings,\n    configPart: object,\n    configParameters: ObjectPageV2ConfigParameters\n): void {\n    const manifestKey = sectionPart.title || sectionPart.id.replace('@com.sap', 'com.sap');\n    const manifestSection = manifestSettings && manifestSettings.sections && manifestSettings.sections[manifestKey];\n\n    if (manifestSection || configParameters.flexChanges) {\n        const tableType: string = manifestSection?.tableSettings?.type || 'ResponsiveTable';\n\n        //Instantiate metadata\n        const OPtable = configParameters.factory.createInstance(PageTypeV2.ObjectPage, `ObjectPage${tableType}`, {\n            toolBar: {}\n        });\n        configPart[sectionPart.id] = configParameters.factory.createInstance(PageTypeV2.ObjectPage, sectionPart.type, {\n            table: {}\n        });\n        configPart[sectionPart.id][PropertyName.table] = OPtable;\n\n        const schemaDefinitions = (importParameters.jsonSchema as Definition).definitions;\n\n        const tableSchema = prepareTableSchema(tableType, sectionPart, schemaDefinitions);\n        //Transfer settings of (sub)section\n        transferSettingsAndFlexChanges(\n            importParameters,\n            configPart[sectionPart.id],\n            sectionPart.schema,\n            configParameters,\n            { title: sectionPart.title }\n        );\n        //Transfer settings of table\n        transferSettingsAndFlexChanges(\n            importParameters,\n            configPart[sectionPart.id][PropertyName.table],\n            tableSchema,\n            configParameters,\n            sectionPart\n        );\n        //Transfer settings of table toolbar actions\n        const toolBarActions = JSON.parse(JSON.stringify(schemaDefinitions))[\n            `Actions<${sectionPart.id}>`\n        ] as Definition;\n        if (toolBarActions?.properties) {\n            const facetId = sectionPart?.title\n                ? sectionPart.title.replace(/@/g, '::').replace(/::com/g, 'com')\n                : sectionPart?.id?.replace(/@/g, '::').replace(/::com/g, 'com');\n            fillActions(\n                importParameters,\n                toolBarActions.properties,\n                configPart[sectionPart.id][PropertyName.table]['toolBar'],\n                configParameters,\n                ActionTypeV2.OPToolBar,\n                facetId\n            );\n        }\n        if (Object.keys(configPart[sectionPart.id][PropertyName.table]['toolBar']).length === 0) {\n            delete configPart[sectionPart.id][PropertyName.table]['toolBar'];\n        }\n    }\n}\n\n/**\n * Fills custom columns in a V2 object page config JSON\n * @param {ImportObjectPageV2Parameters} importParameters - object comprising all input data\n * @param {string} escapedSectionId - escaped version of the section ID\n * @param {string} sectionTitle - title of current section, if available\n * @param {object} configPart - the given part of the object page config\n * @param {SapUiAppPageV2} v2Page - v2 page from manifest.\n */\nfunction fillCustomColumnsInConfig(\n    importParameters: ImportObjectPageV2Parameters,\n    escapedSectionId: string,\n    configPart: object,\n    v2Page: v2.SapUiAppPageV2\n) {\n    const customColumnSchemaProp = (\n        (importParameters.jsonSchema as Definition).definitions[escapedSectionId] as Definition\n    ).properties.custom as Definition;\n    const customColumnTarget = customColumnSchemaProp\n        ? getTargetFromCustomColumnRef(customColumnSchemaProp.$ref)\n        : undefined;\n    if (customColumnTarget) {\n        const objectPageSectionData: ObjectPageSectionData = {\n            key: escapedSectionId.replace('@', ''),\n            target: customColumnTarget\n        };\n        addFragments(\n            configPart[escapedSectionId],\n            importParameters.manifest,\n            v2Page,\n            PageTypeV2.ObjectPage,\n            importParameters.fragments,\n            objectPageSectionData\n        );\n    }\n}\n\n/**\n *  Fills the sections and subsections of the object page config (recursive function)\n * @param {ImportObjectPageV2Parameters} importParameters  - object comprising all input data\n * @param {sectionPartProperties} sectionPart - current properties' list of chart section\n * @param {Settings} manifestSettings - object page settings section of the manifest\n * @param {object} configPart - the given part of the object page config\n * @param {ObjectPageV2ConfigParameters} configParameters - container for factory, pageKeys, flexChanges, v2Page, ObjectPageConfig\n */\nfunction fillChartSection(\n    importParameters: ImportObjectPageV2Parameters,\n    sectionPart: SectionPartProperties,\n    manifestSettings: Settings,\n    configPart: object,\n    configParameters: ObjectPageV2ConfigParameters\n) {\n    const manifestKey = sectionPart.id.replace('@com.sap', 'com.sap');\n    const manifestSection = manifestSettings && manifestSettings.sections && manifestSettings.sections[manifestKey];\n    configPart[sectionPart.id] = configParameters.factory.createInstance(PageTypeV2.ObjectPage, sectionPart.type, {\n        chart: {}\n    });\n    configPart[sectionPart.id][PropertyName.chart] = configParameters.factory.createInstance(\n        PageTypeV2.ObjectPage,\n        'ObjectPageChart'\n    );\n    if (manifestSection || configParameters.flexChanges) {\n        transferSettingsAndFlexChanges(\n            importParameters,\n            configPart[sectionPart.id],\n            sectionPart.schema,\n            configParameters,\n            { title: sectionPart.title }\n        );\n        transferSettingsAndFlexChanges(\n            importParameters,\n            configPart[sectionPart.id][PropertyName.chart],\n            (importParameters.jsonSchema as Definition).definitions[DefinitionName.ObjectPageChart] as Definition,\n            configParameters,\n            sectionPart\n        );\n    }\n}\n\n/**\n * Fills the header section of the object page config\n * @param {ImportObjectPageV2Parameters} importParameters - object comprising all input data\n * @param {sectionPartProperties} sectionPart - current properties' list of form section\n * @param {object} configPart - the given part of the object page config\n * @param {ObjectPageV2ConfigParameters} configParameters - container for factory, pageKeys, flexChanges, v2Page, ObjectPageConfig\n */\nfunction fillHeaderSection(\n    importParameters: ImportObjectPageV2Parameters,\n    sectionPart: SectionPartProperties,\n    configPart: object,\n    configParameters: ObjectPageV2ConfigParameters\n) {\n    configPart[sectionPart.id] = configParameters.factory.createInstance(PageTypeV2.ObjectPage, sectionPart.type, {});\n    if (configParameters.flexChanges) {\n        transferSettingsAndFlexChanges(\n            importParameters,\n            configPart[sectionPart.id],\n            sectionPart.schema,\n            configParameters,\n            { title: sectionPart.title }\n        );\n    }\n    if (Object.keys(configPart[sectionPart.id]).length === 0) {\n        delete configPart[sectionPart.id];\n    }\n}\n/**\n * Fills the form section of the object page config\n * @param {ImportObjectPageV2Parameters} importParameters - object comprising all input data\n * @param {sectionPartProperties} sectionPart - current properties' list of form section\n * @param {object} configPart - the given part of the object page config\n * @param {ObjectPageV2ConfigParameters} configParameters - container for factory, pageKeys, flexChanges, v2Page, ObjectPageConfig\n */\nfunction fillFormSection(\n    importParameters: ImportObjectPageV2Parameters,\n    sectionPart: SectionPartProperties,\n    configPart: object,\n    configParameters: ObjectPageV2ConfigParameters\n) {\n    const formId = sectionPart.schema['properties']['form']['$ref'].split('SectionForm')[1];\n    configPart[sectionPart.id] = configParameters.factory.createInstance(PageTypeV2.ObjectPage, sectionPart.type, {\n        form: {}\n    });\n    if (configParameters.flexChanges) {\n        transferSettingsAndFlexChanges(\n            importParameters,\n            configPart[sectionPart.id],\n            sectionPart.schema,\n            configParameters,\n            { title: sectionPart.title }\n        );\n    }\n    const formActions = (importParameters.jsonSchema as Definition).definitions[\n        `SectionActions${formId}`\n    ] as Definition;\n    const facetId = sectionPart?.title\n        ? sectionPart.title.replace(/@/g, '::').replace(/::com/g, 'com')\n        : sectionPart?.id?.replace(/@/g, '::').replace(/::com/g, 'com');\n    if (formActions?.properties) {\n        fillActions(\n            importParameters,\n            formActions.properties,\n            configPart[sectionPart.id]['form'],\n            configParameters,\n            ActionTypeV2.Form,\n            facetId\n        );\n    }\n    const formFields = (importParameters.jsonSchema as Definition).definitions[`SectionFields${formId}`] as Definition;\n    if (formFields?.properties) {\n        fillFields(importParameters, sectionPart, formFields.properties, configPart, configParameters);\n    }\n    if (Object.keys(configPart[sectionPart.id]['form']).length === 0) {\n        delete configPart[sectionPart.id]['form'];\n    }\n    if (Object.keys(configPart[sectionPart.id]).length === 0) {\n        delete configPart[sectionPart.id];\n    }\n}\n\n/**\n *  Fills the subsection of the object page config\n * @param {ImportObjectPageV2Parameters} importParameters - object comprising all input data\n * @param {sectionPartProperties} sectionPart - current properties' list of subsection\n * @param {Settings} manifestSettings - object page settings section of the manifest\n * @param {object} configPart - the given part of the object page config\n * @param {ObjectPageV2ConfigParameters} configParameters - container for factory, pageKeys, flexChanges, v2Page, ObjectPageConfig\n */\nfunction fillSubSection(\n    importParameters: ImportObjectPageV2Parameters,\n    sectionPart: SectionPartProperties,\n    manifestSettings: Settings,\n    configPart: object,\n    configParameters: ObjectPageV2ConfigParameters\n) {\n    configPart[sectionPart.id] = configParameters.factory.createInstance(PageTypeV2.ObjectPage, sectionPart.type, {\n        subsections: {}\n    });\n    if (configParameters.flexChanges) {\n        transferSettingsAndFlexChanges(\n            importParameters,\n            configPart[sectionPart.id],\n            sectionPart.schema,\n            configParameters,\n            sectionPart\n        );\n    }\n    let currentSchemaSection;\n    const schemaProperties = sectionPart.schema.properties;\n    if ((schemaProperties?.subsections as Definition)?.properties) {\n        currentSchemaSection = (schemaProperties.subsections as Definition).properties;\n    } else {\n        currentSchemaSection = schemaProperties;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    fillSectionsInConfig(\n        importParameters,\n        currentSchemaSection,\n        manifestSettings,\n        configPart[sectionPart.id]['subsections'],\n        configParameters\n    );\n    if (Object.keys(configPart[sectionPart.id]['subsections']).length < 1) {\n        delete configPart[sectionPart.id]['subsections'];\n    }\n}\n\n/**\n * Fills the sections and subsections of the object page config (recursive function)\n * @param {ImportObjectPageV2Parameters} importParameters - object comprising all input data\n * @param {object} sectionProperties - current properties' list (of sections or subsections)\n * @param {Settings} manifestSettings - object page settings section of the manifest\n * @param {object} configPart - the given part of the object page config\n * @param {ObjectPageV2ConfigParameters} configParameters - container for factory, pageKeys, flexChanges, v2Page, ObjectPageConfig.\n */\nfunction fillSectionsInConfig(\n    importParameters: ImportObjectPageV2Parameters,\n    sectionProperties: object,\n    manifestSettings: Settings,\n    configPart: object,\n    configParameters: ObjectPageV2ConfigParameters\n): void {\n    const appSchemaDefinitions = (importParameters.jsonSchema as Definition).definitions;\n    for (const sectionId in sectionProperties) {\n        const escapedSectionId = sectionId.replace(/\\/@/g, '::');\n        const sectionPart: SectionPartProperties = {\n            id: escapedSectionId,\n            type: getSectionType(sectionProperties[sectionId]),\n            schema: sectionProperties[sectionId],\n            title: getSectionTitle(sectionProperties[sectionId], importParameters.jsonSchema)\n        };\n        if (sectionPart.schema['$ref'] && sectionPart.type) {\n            switch (sectionPart.type) {\n                case SectionTypeV2.SectionTable:\n                case SectionTypeV2.SubSectionTable: {\n                    sectionPart.schema = appSchemaDefinitions[`${sectionPart.type}<${sectionId}>`] as Definition;\n                    fillTableInConfig(importParameters, sectionPart, manifestSettings, configPart, configParameters);\n                    // Custom column ref\n                    fillCustomColumnsInConfig(importParameters, escapedSectionId, configPart, configParameters.v2Page);\n                    break;\n                }\n                case SectionTypeV2.SectionChart:\n                case SectionTypeV2.SubSectionChart: {\n                    // Section without subsections\n                    sectionPart.schema = appSchemaDefinitions[`${sectionPart.type}<${sectionId}>`] as Definition;\n                    fillChartSection(importParameters, sectionPart, manifestSettings, configPart, configParameters);\n                    break;\n                }\n                case SectionTypeV2.SectionForm:\n                case SectionTypeV2.SubSectionForm: {\n                    sectionPart.schema = appSchemaDefinitions[`${sectionPart.type}<${sectionId}>`] as Definition;\n                    fillFormSection(importParameters, sectionPart, configPart, configParameters);\n                    break;\n                }\n                case SectionTypeV2.Section:\n                case SectionTypeV2.SectionAddress:\n                case SectionTypeV2.SubSectionAddress:\n                case SectionTypeV2.SectionContact:\n                case SectionTypeV2.SubSectionContact:\n                case SectionTypeV2.SubSection:\n                case SectionTypeV2.HeaderSection: {\n                    // Section with subsections\n                    sectionPart.schema = appSchemaDefinitions[`${sectionPart.type}<${sectionId}>`] as Definition;\n                    fillSubSection(importParameters, sectionPart, manifestSettings, configPart, configParameters);\n                    break;\n                }\n                case SectionTypeV2.HeaderSectionAddress:\n                case SectionTypeV2.HeaderSectionChart:\n                case SectionTypeV2.HeaderSectionDataPoint:\n                case SectionTypeV2.HeaderSectionForm: {\n                    // Header Section\n                    sectionPart.schema = appSchemaDefinitions[`${sectionPart.type}<${sectionId}>`] as Definition;\n                    fillHeaderSection(importParameters, sectionPart, configPart, configParameters);\n                    break;\n                }\n            }\n        } else if (sectionPart.schema.properties?.['subsections']) {\n            sectionPart.schema = appSchemaDefinitions[`${sectionPart.type}<${sectionId}>`] as Definition;\n            fillSubSection(importParameters, sectionPart, manifestSettings, configPart, configParameters);\n        }\n    }\n}\n\n/**\n * Fills the custom sections in the v2 object page config\n * @param {object} customSections - list of custom sections, as defined in manifest\n * @param {ObjectPageConfig} objectPageConfig - the object page configuration (JSON)\n * @param {ObjectPageV2ConfigParameters} configParameters - object comprising input for filling the config\n * @param schemaDefinitions - definitions in the object page schema\n * @param {ImportObjectPageV2Parameters} importParameters  - object comprising API input data\n */\nfunction fillCustomSectionsInConfig(\n    customSections: object,\n    objectPageConfig: v2.ObjectPageConfigV2,\n    configParameters: ObjectPageV2ConfigParameters,\n    schemaDefinitions: {\n        [key: string]: DefinitionOrBoolean;\n    },\n    importParameters: ImportObjectPageV2Parameters\n): void {\n    if (Object.keys(customSections).length > 0) {\n        objectPageConfig.sections.custom = [];\n        for (const sectionId in customSections) {\n            const customSection =\n                'fragmentName' in customSections[sectionId]\n                    ? configParameters.factory.createInstance(PageTypeV2.ObjectPage, 'ObjectPageCustomSectionFragment')\n                    : configParameters.factory.createInstance(PageTypeV2.ObjectPage, 'ObjectPageCustomSectionView');\n            const customSectionDefinition =\n                schemaDefinitions[\n                    'fragmentName' in customSections[sectionId]\n                        ? 'ObjectPageCustomSectionFragment'\n                        : 'ObjectPageCustomSectionView'\n                ];\n            transferSettingsAndFlexChanges(\n                importParameters,\n                customSection,\n                customSectionDefinition as Definition,\n                configParameters,\n                { id: sectionId }\n            );\n            objectPageConfig.sections.custom.push(customSection);\n        }\n    }\n}\n\n/**\n * Fill properties of object page confg based on manifest settings\n * @param {ImportObjectPageV2Parameters} importParameters  - object comprising API input data\n * @param {ObjectPageV2ConfigParameters} configParameters - object comprising input for filling the config\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @returns {ObjectPageConfig} - the object page configuration (JSON)\n */\nfunction fillConfig(\n    importParameters: ImportObjectPageV2Parameters,\n    configParameters: ObjectPageV2ConfigParameters\n): v2.ObjectPageConfigV2 {\n    const objectPageConfig: v2.ObjectPageConfigV2 = configParameters.factory.createPageInstance(PageTypeV2.ObjectPage);\n\n    // Transfer page information\n    transferSettingsAndFlexChanges(\n        importParameters,\n        objectPageConfig,\n        importParameters.jsonSchema['properties'],\n        configParameters\n    );\n    // Transfer global table settings\n    objectPageConfig.globalTableSettings = configParameters.factory.createInstance(\n        PageTypeV2.ObjectPage,\n        DefinitionName.GlobalTableSettings\n    );\n    const definitions = (importParameters.jsonSchema as Definition).definitions;\n    transferSettingsAndFlexChanges(\n        importParameters,\n        objectPageConfig.globalTableSettings,\n        definitions[DefinitionName.GlobalTableSettings] as Definition,\n        configParameters\n    );\n    if (Object.keys(objectPageConfig.globalTableSettings).length === 0) {\n        delete objectPageConfig.globalTableSettings;\n    }\n\n    // Transfer header information\n    objectPageConfig.header = configParameters.factory.createInstance(\n        PageTypeV2.ObjectPage,\n        DefinitionName.ObjectPageHeader\n    );\n    const schemaDefinition = definitions[DefinitionName.ObjectPageHeader]\n        ? definitions[DefinitionName.ObjectPageHeader]\n        : definitions['ObjectPageHeader<GenericActions>'];\n    transferSettingsAndFlexChanges(\n        importParameters,\n        objectPageConfig.header,\n        schemaDefinition as Definition,\n        configParameters\n    );\n    const headerAction = definitions[DefinitionName.ObjectPageHeaderActions] as Definition;\n    if (headerAction) {\n        fillActions(\n            importParameters,\n            headerAction.properties,\n            objectPageConfig.header,\n            configParameters,\n            ActionTypeV2.OPHeader\n        );\n    }\n    objectPageConfig.footer = {};\n    const footerAction = definitions[DefinitionName.FooterActions] as Definition;\n    if (footerAction) {\n        fillActions(\n            importParameters,\n            footerAction.properties,\n            objectPageConfig.footer,\n            configParameters,\n            ActionTypeV2.OPFooter\n        );\n    }\n\n    // Transfer Layout information\n    objectPageConfig.layout = configParameters.factory.createInstance(PageTypeV2.ObjectPage, 'ObjectPageLayout');\n    transferSettingsAndFlexChanges(\n        importParameters,\n        objectPageConfig.layout,\n        definitions[DefinitionName.ObjectPageLayout] as Definition,\n        configParameters\n    );\n    if (Object.keys(objectPageConfig.layout).length === 0) {\n        delete objectPageConfig.layout;\n    }\n\n    // Fill header sections and subsections\n    objectPageConfig.header.sections = {};\n    const headerSections = definitions[DefinitionName.HeaderSections] as Definition;\n    if (headerSections) {\n        const manifestSettings = configParameters.v2Page.component?.settings;\n        fillSectionsInConfig(\n            importParameters,\n            headerSections.properties,\n            manifestSettings,\n            objectPageConfig.header.sections,\n            configParameters\n        );\n    }\n    if (Object.keys(objectPageConfig.header.sections).length === 0) {\n        delete objectPageConfig.header.sections;\n    }\n    // Fill sections and subsections\n    objectPageConfig.sections = {};\n    const sections = definitions[DefinitionName.Sections] as Definition;\n    if (sections) {\n        const manifestSettings = configParameters.v2Page.component?.settings;\n        fillSectionsInConfig(\n            importParameters,\n            sections.properties,\n            manifestSettings,\n            objectPageConfig.sections,\n            configParameters\n        );\n    }\n\n    // Find custom sections\n    const customSections = findCustomSectionExtensions(importParameters.manifest, importParameters.entitySet);\n    fillCustomSectionsInConfig(customSections, objectPageConfig, configParameters, definitions, importParameters);\n\n    return objectPageConfig;\n}\n\n/**\n * Creates the configuration (file content) for a V2 object page\n * @param {ImportObjectPageV2Parameters} importParameters  - object comprising all input data\n *\n * @returns {ObjectPageConfig} - the object page configuration (JSON)\n */\nexport function createObjectPageConfigV2(\n    importParameters: ImportObjectPageV2Parameters\n): v2.ObjectPageConfigV2 | undefined {\n    // Initialize i18next\n    initI18n();\n\n    const v2Pages = getV2Pages(importParameters);\n    if (!v2Pages) {\n        return;\n    }\n    const entitySet = importParameters.entitySet;\n    const pageKeys: string[] = [];\n    const v2Page: v2.SapUiAppPageV2 = findObjectPageV2(v2Pages, importParameters.entitySet, pageKeys);\n    checkV2Page(v2Page, importParameters.logger, entitySet);\n    if (!v2Page) {\n        return;\n    }\n    const flexChangesForTransfer = prepareFlexChanges(importParameters.flex, entitySet);\n\n    const factory = new Factory();\n\n    //Fill config.json with manifest settings and flex changes\n    return fillConfig(importParameters, { pageKeys, flexChanges: flexChangesForTransfer, v2Page, factory });\n}\n", "import type { v2, ImportAllConfigsParameters, ImportOverviewPageV2Parameters } from '@sap/ux-specification-types';\nimport { FioriElementsVersion, PageTypeV2, ManifestSection, SchemaType } from '@sap/ux-specification-types';\nimport { AppProvider } from '../../../common/appProvider';\nimport { transferSettingsOfObject } from '../common';\nimport { createOverviewPageConfig } from '../pages/overviewPage';\nimport { AppSettings } from '../../application';\nimport { getSchemaFilePath, generatePageId } from '../../../common';\n\nexport class V2OvpProvider extends AppProvider {\n    public constructor(importParameters: ImportAllConfigsParameters) {\n        const pages: v2.Pages = {};\n        const sapOvp = importParameters.manifest[ManifestSection.ovp];\n        const appSettings = new AppSettings();\n        const schemaFile = getSchemaFilePath(SchemaType.Application);\n        transferSettingsOfObject(\n            appSettings,\n            importParameters.manifest,\n            importParameters.appSchemas[schemaFile.filename]['definitions']['AppSettings'],\n            undefined\n        );\n        const jsonSchema: string = Object.keys(importParameters.appSchemas).find((element) =>\n            element.includes(PageTypeV2.OverviewPage)\n        );\n        const parameters: ImportOverviewPageV2Parameters = {\n            manifest: importParameters.manifest,\n            jsonSchema: importParameters.appSchemas[jsonSchema],\n            logger: importParameters.logger\n        };\n        const page: v2.Page = {\n            pageType: PageTypeV2.OverviewPage,\n            config: createOverviewPageConfig(parameters),\n            entitySet: sapOvp.globalFilterEntitySet\n        };\n        const id = generatePageId(page.pageType, page.entitySet);\n        pages[id] = page;\n        super(\n            importParameters.manifest,\n            importParameters.appSchemas,\n            id,\n            pages,\n            FioriElementsVersion.v2,\n            appSettings,\n            importParameters.logger\n        );\n    }\n}\n", "import { v2, ManifestSection, PageTypeV2, LogSeverity } from '@sap/ux-specification-types';\nimport { getReflectMetadata } from '../../../common/decoration/decorators';\nimport { ensureManifestSectionByPathV2 } from '../../export/manifest';\nimport { MetadataInstanceFactoryV2 as Factory } from '../../export/factory';\nimport type { MetadataInstanceInterface } from '../../../common/decoration/factory';\nimport { assignReflectMetadataRules } from '../../export/export';\nimport { DEFINITION_LINK_PREFIX, getErrorMessage, importProperty } from '../../../common';\nimport { log, type ImportOverviewPageV2Parameters } from '../../../..';\nimport type { Definition } from 'typescript-json-schema';\nimport i18next from 'i18next';\n\nfunction transferSettingsOfRef(\n    importParameters: ImportOverviewPageV2Parameters,\n    definitionArray: any,\n    configPart: { [key: string]: any },\n    key: string,\n    factory: MetadataInstanceInterface,\n    pathHierarchy: string[]\n) {\n    const targetDefinitionType = definitionArray[definitionArray.length - 1];\n    const nextTargetDefinition = (importParameters.jsonSchema as Definition).definitions[targetDefinitionType];\n    configPart[key] = assignReflectMetadataRules(factory, key, configPart[key], targetDefinitionType);\n    //transfer settings:\n    pathHierarchy.push(key);\n    processOvpProperties(\n        factory,\n        configPart[key],\n        importParameters,\n        (nextTargetDefinition as Definition).properties,\n        pathHierarchy\n    );\n}\n\n/**\n * Resolves the reference of an object-type property and starts the transfer of the properties to the config.\n * @param {{ [key: string]: any }} configPart - current part of the config JSON\n * @param {string} key - property key of parent\n * @param {Definition} schemaProperties - current properties' list of a definition from app schema\n * @param {ImportOverviewPageV2Parameters} importParameters  - structure of import parameters\n * @param {MetadataInstanceInterface} factory - Metadata factory\n * @param {string[]} pathHierarchy - Parts of the path or breadcrumbs\n */\nfunction processPropertiesOfObject(\n    configPart: { [key: string]: any },\n    key: string,\n    schemaProperties: Definition,\n    importParameters: ImportOverviewPageV2Parameters,\n    factory: MetadataInstanceInterface,\n    pathHierarchy: string[]\n) {\n    if (schemaProperties[key].$ref) {\n        configPart[key] = {};\n        const definitionArray = schemaProperties[key].$ref.split(DEFINITION_LINK_PREFIX);\n        transferSettingsOfRef(importParameters, definitionArray, configPart, key, factory, pathHierarchy);\n    } else if (key === 'settings' && schemaProperties[key].anyOf) {\n        configPart[key] = {};\n        const ref = `${DEFINITION_LINK_PREFIX}${v2.cardTemplateSettingsMap[configPart.template]}`;\n        const definitionArray = ref.split(DEFINITION_LINK_PREFIX);\n        transferSettingsOfRef(importParameters, definitionArray, configPart, key, factory, pathHierarchy);\n    }\n}\n\n/**\n * Imports a single sap.ovp property into the config\n * @param { [key: string]: object } configPart - part of the config JSON, to be updated\n * @param {string} key - key of the property\n * @param {string[]} pathHierarchy - Parts of the path or breadcrumbs\n * @param {ImportOverviewPageV2Parameters} importParameters  - structure of import parameters\n * @param {Definition} schemaProperties - current properties' list of a definition from app schema\n * @param {MetadataInstanceInterface} factory - Metadata factory\n */\nfunction processOvpProperty(\n    configPart: { [key: string]: object },\n    key: string,\n    pathHierarchy: string[],\n    importParameters: ImportOverviewPageV2Parameters,\n    schemaProperties: Definition,\n    factory: MetadataInstanceInterface\n): void {\n    const syncRule = getReflectMetadata(configPart, key);\n    if (syncRule?.manifest) {\n        const path = syncRule.manifest.path([...pathHierarchy, key]);\n        const manifestSection = ensureManifestSectionByPathV2(importParameters.manifest, path);\n        if (Object.prototype.hasOwnProperty.call(manifestSection, key)) {\n            try {\n                importProperty(syncRule, manifestSection, key, configPart);\n            } catch (error) {\n                log(importParameters.logger, {\n                    severity: LogSeverity.Error,\n                    message: i18next.t('XMLPARSEFAILURE', { error: getErrorMessage(error) }),\n                    location: {\n                        path\n                    }\n                });\n            }\n        }\n    } else if (key !== 'cards' && key !== '$schema' && typeof schemaProperties[key] === 'object') {\n        processPropertiesOfObject(configPart, key, schemaProperties, importParameters, factory, pathHierarchy);\n    }\n}\n\n/**\n * Handles a list of properties of a given part of the schema, transfers the relevant property values or settings from manifest to config.\n * @param {MetadataInstanceInterface} factory - Metadata factory\n * @param {{ [key: string]: any }} configPart - current part of the config JSON\n * @param {ImportOverviewPageV2Parameters} importParameters  - structure of import parameters\n * @param {Definition} schemaProperties - current properties' list of a definition from app schema\n * @param {string[]} pathHierarchy - Parts of the path or breadcrumbs\n */\nfunction processOvpProperties(\n    factory: MetadataInstanceInterface,\n    configPart: { [key: string]: any },\n    importParameters: ImportOverviewPageV2Parameters,\n    schemaProperties: Definition,\n    pathHierarchy?: string[]\n): void {\n    for (const key in schemaProperties) {\n        processOvpProperty(configPart, key, pathHierarchy, importParameters, schemaProperties, factory);\n    }\n}\n\n/**\n * OVP: Transfers all settings from manifest to config\n * @param {OverviewPageConfigV2} pageConfig - the OVP configuration (JSON)\n * @param {ImportOverviewPageV2Parameters} importParameters  - structure of import parameters\n * @param {MetadataInstanceInterface} factory - Metadata factory\n */\nfunction addSettings(\n    pageConfig: v2.OverviewPageConfigV2,\n    importParameters: ImportOverviewPageV2Parameters,\n    factory: MetadataInstanceInterface\n): void {\n    processOvpProperties(\n        factory,\n        pageConfig,\n        importParameters,\n        (importParameters.jsonSchema as Definition).properties,\n        []\n    );\n\n    pageConfig.cards = {};\n\n    Object.keys(importParameters.manifest[ManifestSection.ovp].cards).forEach((cardId) => {\n        const cardTemplate = importParameters.manifest[ManifestSection.ovp]['cards'][cardId].template;\n        const cardType = v2.cardTemplateTypeMap[cardTemplate] ?? 'CustomCard';\n\n        //instantiate Card:\n        pageConfig.cards[cardId] = assignReflectMetadataRules(factory, cardType, {}, 'CustomCard') as v2.CardType;\n\n        pageConfig.cards = assignReflectMetadataRules(factory, cardType, pageConfig.cards, 'CustomCard') as {\n            [k: string]: v2.CardType;\n        };\n\n        //transfer settings:\n        processOvpProperties(\n            factory,\n            pageConfig.cards[cardId],\n            importParameters,\n            ((importParameters.jsonSchema as Definition).definitions[cardType] as Definition).properties,\n            [cardId]\n        );\n    });\n}\n\n/**\n * Creates the configuration (file content) for an overview page\n * @param {ImportOverviewPageV2Parameters} importParameters  - structure of import parameters\n * @returns {object} - the OVP configuration (JSON)\n */\nexport function createOverviewPageConfig(importParameters: ImportOverviewPageV2Parameters): object {\n    const factory = new Factory();\n    //Instantiate Page\n    const config = factory.createPageInstance(PageTypeV2.OverviewPage);\n\n    if (importParameters.jsonSchema) {\n        addSettings(config, importParameters, factory);\n    }\n    return config;\n}\n", "// Note: the main functions or entry points reside in ./exportPage.ts\nimport merge from 'deepmerge';\nimport type { ObjectPageCustomSectionFragment, ObjectPageCustomSectionView } from './controls';\nimport { exportCustomColumnsToFragment, getCustomColumnPath, deleteColumnFromFragment } from './controls';\nimport type { NextDefinition } from '../../common';\nimport {\n    getReflectMetadata,\n    getChildId,\n    convertSectionId,\n    getNextTargetDefinition,\n    DEFINITION_LINK_PREFIX,\n    arrayCombineMerge,\n    deleteEmptyStructure,\n    fillFlexChangeContent,\n    getTargetFromCustomColumnRef,\n    arrayIncludes\n} from '../../common';\nimport { getViewExtensionsPath } from '../application';\nimport { ensureManifestSectionByPathV2, getManifestSectionByPathV2 } from './manifest';\nimport { isAssociatedCustomSection } from '../import/utils';\nimport type { MetadataInstanceInterface } from '../../common/decoration/factory';\nimport type { TransferParameterTypeV2 } from '../types';\nimport type { Definition } from 'typescript-json-schema';\nimport type {\n    ExportHandlerFunction,\n    ExportResults,\n    Manifest,\n    ObjectPageSectionData,\n    SapOvp,\n    SyncRule\n} from '@sap/ux-specification-types';\nimport {\n    ChangeIndicator,\n    FacetTitlePrefix,\n    PropertyName,\n    ManifestSection,\n    PageTypeV2,\n    v2,\n    ViewTemplateType\n} from '@sap/ux-specification-types';\n\nconst exceptionList = ['colorPalette', 'tabs'];\n\n/**\n * Create missing card from the manifest\n * @param key - card name\n * @param ovp - OVP section of manifest, to be updated\n */\nfunction createCard(key: string, ovp: SapOvp): void {\n    if (!ovp.cards) {\n        ovp.cards = {};\n    }\n    if (!(key in ovp.cards)) {\n        ovp.cards[key] = {\n            template: ''\n        };\n    }\n}\n\n/**\n * Recursive function that searches for next avaialble id by increasing number by 1.\n * @param {boolean} sectionIds All ids in use.\n * @param {string} candidateId Candidate id to check if it is available.\n * @return {string} Id string.\n */\nfunction findAvailableId(sectionIds: string[], candidateId: string): string {\n    if (sectionIds.includes(candidateId)) {\n        const idParts = candidateId.split('|');\n        idParts.push('1');\n        return findAvailableId(sectionIds, idParts.join('|'));\n    }\n    return candidateId;\n}\n\n/**\n * Private recursive function that traverses the content of the current object. It reads decorators and fills manifest entries and flex changes\n * @param configObject - current object to traverse\n * @param exportResults - object with all collected manifest entries and flex changes\n * @param jsonSchema - application specific schema\n * @param targetDefinition - the current entry point or definition in the app schema\n * @param {MetadataInstanceInterface} factory - factory for creating metadata instances\n * @param pathHierarchy -  elements of the path indicating the hierarchical level\n * @param {string[]} entityPathArray (optional) - array of elements, describing a path to a subsection of the config.\n *                                                If specified, only elements from this subsection are processed\n */\nexport function transferManifestEntriesOVP(\n    configObject: { [key: string]: any },\n    exportResults: ExportResults,\n    jsonSchema: Definition,\n    targetDefinition: Definition,\n    factory: MetadataInstanceInterface,\n    pathHierarchy?: string[],\n    entityPathArray?: string[]\n): void {\n    if (targetDefinition?.properties) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        processProperties(\n            configObject,\n            exportResults,\n            jsonSchema,\n            targetDefinition.properties,\n            factory,\n            pathHierarchy,\n            entityPathArray\n        );\n    }\n}\n\n/**\n * Assign sync rules to {currentObject}\n * @param {MetadataInstanceInterface} factory - factory for metadata\n * @param {string} structureName - name of the complex structure in schema\n * @param {object} currentObject - the given part of the configuration\n * @param {string} defaultTypeName - name of the default type that shall be taken if no class is registered for structureName\n */\nexport function assignReflectMetadataRules(\n    factory: MetadataInstanceInterface,\n    structureName: string,\n    currentObject: object,\n    defaultTypeName: string\n): object {\n    return factory.createInstance(PageTypeV2.OverviewPage, defaultTypeName, currentObject, structureName);\n}\n\ntype ProcessDefinitionParams = {\n    pathHierarchy: string[];\n    propertyList: object;\n    appSchema: Definition;\n    currentObject: object;\n    configObject: { [key: string]: any };\n    factory: MetadataInstanceInterface;\n    exportResults: ExportResults;\n};\n\n/**\n * Processes anyOf definitions of the schema while exporting an OVP config\n * @param {ProcessDefinitionParams} params - sructure comprising all information needed for processing\n * @returns the params.currentObject, with the reflect-metadata assigned\n */\nfunction processAnyOfDefinitionsOfOVP(params: ProcessDefinitionParams): object {\n    params.pathHierarchy.pop();\n    let newConfigObject = params.currentObject;\n    for (const anyOfKey in params.propertyList['anyOf']) {\n        if (params.propertyList['anyOf'][anyOfKey].$ref) {\n            const definitionArray = params.propertyList['anyOf'][anyOfKey].$ref.split(DEFINITION_LINK_PREFIX);\n            const nextTargetDefinition = params.appSchema['definitions'][definitionArray[1]];\n            newConfigObject = assignReflectMetadataRules(\n                params.factory,\n                definitionArray[1],\n                newConfigObject,\n                'CustomCard'\n            );\n            transferManifestEntriesOVP(\n                newConfigObject,\n                params.exportResults,\n                params.appSchema,\n                nextTargetDefinition as Definition,\n                params.factory,\n                [...params.pathHierarchy]\n            );\n        }\n    }\n    return newConfigObject;\n}\n\nfunction checkSyncRuleForExport(\n    exportHandler: boolean | ExportHandlerFunction,\n    manifestSection: object,\n    configObject: { [key: string]: any },\n    key: string,\n    currentObject: object\n) {\n    if (exportHandler && typeof exportHandler === 'function') {\n        exportHandler(manifestSection, configObject, key);\n    } else if (typeof currentObject === 'object' && !exceptionList.includes(key)) {\n        // colorPalette is an exception as it can contain anything as per our schema, so just replace the object\n        manifestSection[key] = merge(manifestSection[key] || {}, currentObject || {}, {\n            arrayMerge: arrayCombineMerge\n        });\n    } else {\n        manifestSection[key] = currentObject;\n    }\n}\n\n/**\n * Transfer manifest settings from config to manifest\n * @param syncRule - metadata rule used for import and export\n * @param pathHierarchy -  elements of the path indicating the hierarchical level\n * @param key\n * @param exportResults - overall result list, to be updated\n * @param currentObject\n * @param configObject\n */\nfunction transferToManifest(\n    syncRule: SyncRule,\n    pathHierarchy: string[],\n    key: string,\n    exportResults: ExportResults,\n    currentObject: object,\n    configObject: { [key: string]: any }\n) {\n    const path = syncRule.manifest.path([...pathHierarchy, key]);\n    const manifestSection = ensureManifestSectionByPathV2(exportResults.manifest, path);\n    if (key in v2.CardSettingsType || key === 'settings') {\n        manifestSection['settings'] = merge(manifestSection['settings'] || {}, currentObject || {}, {\n            arrayMerge: arrayCombineMerge\n        });\n    } else if (currentObject !== undefined) {\n        const exportHandler = syncRule.manifest.export;\n        checkSyncRuleForExport(exportHandler, manifestSection, configObject, key, currentObject);\n    } else if (manifestSection[key] !== undefined) {\n        delete manifestSection[key];\n    }\n}\n\nfunction transferCards(\n    currentObject: object,\n    appSchema: Definition,\n    factory: MetadataInstanceInterface,\n    exportResults: ExportResults\n) {\n    Object.keys(currentObject).forEach((cardKey) => {\n        const cardType = currentObject[cardKey].template;\n        //Determine target defintion\n        let targetDefinition;\n        if (!Object.values(v2.CardTemplateType).includes(cardType)) {\n            targetDefinition = ['CustomCard'];\n        } else {\n            targetDefinition = Object.keys(appSchema.definitions).filter((definition) => {\n                const template = (appSchema.definitions[definition] as Definition).properties?.template as Definition;\n                if (template?.enum) {\n                    return template.enum.indexOf(currentObject[cardKey].template) > -1;\n                } else if (template?.const) {\n                    return template.const === currentObject[cardKey].template;\n                }\n            });\n        }\n        //Get metadata\n        currentObject[cardKey] = assignReflectMetadataRules(\n            factory,\n            targetDefinition[0],\n            currentObject[cardKey],\n            'CustomCard'\n        );\n        createCard(cardKey, exportResults['manifest'][ManifestSection.ovp]);\n        transferManifestEntriesOVP(\n            currentObject[cardKey],\n            exportResults,\n            appSchema,\n            appSchema.definitions[targetDefinition[0]] as Definition,\n            factory,\n            [cardKey]\n        );\n    });\n    //check for deletions:\n    Object.keys(exportResults.manifest[ManifestSection.ovp].cards).forEach((manifestCard) => {\n        if (!currentObject[manifestCard]) {\n            delete exportResults.manifest[ManifestSection.ovp].cards[manifestCard];\n        }\n    });\n}\n\nfunction exportOfObject(params: ProcessDefinitionParams, key: string, factory: MetadataInstanceInterface): void {\n    if (key === 'cards') {\n        //inserts and updates:\n        transferCards(params.currentObject, params.appSchema, factory, params.exportResults);\n    } else {\n        const nextTargetDefinition = getNextTargetDefinition(\n            params.appSchema,\n            '',\n            params.currentObject,\n            params.propertyList[key],\n            key,\n            factory,\n            PageTypeV2.OverviewPage\n        );\n        if (params.propertyList[key].$ref) {\n            const definitionArray = params.propertyList[key].$ref.split(DEFINITION_LINK_PREFIX);\n\n            params.currentObject = assignReflectMetadataRules(\n                params.factory,\n                key,\n                params.currentObject,\n                definitionArray[1]\n            );\n            params.pathHierarchy = [...params.pathHierarchy, key];\n            transferManifestEntriesOVP(\n                params.currentObject,\n                params.exportResults,\n                params.appSchema,\n                nextTargetDefinition.targetDefinition,\n                factory,\n                params.pathHierarchy\n            );\n        } else if (params.propertyList[key].anyOf) {\n            params.pathHierarchy = [...params.pathHierarchy, key, 'anyOf'];\n            processProperties(\n                params.configObject,\n                params.exportResults,\n                params.appSchema,\n                params.propertyList[key],\n                factory,\n                params.pathHierarchy\n            );\n        } else if (params.propertyList[key]['properties'] !== undefined) {\n            params.pathHierarchy = [...params.pathHierarchy, key];\n            processProperties(\n                params.configObject[key],\n                params.exportResults,\n                params.appSchema,\n                params.propertyList[key].properties,\n                params.factory,\n                params.pathHierarchy\n            );\n        }\n    }\n}\n\n/**\n * Recursive function that transfers the content of a list of properties of a configuration to the overall exportResults\n * @param configObject - the given part of the configuration\n * @param exportResults - overall result list, to be updated\n * @param appSchema - app-specific JSON schema\n * @param propertyList - current property list of the config (properties or additional properties)\n * @param {MetadataInstanceInterface} factory - factory for creating metadata instances\n * @param pathHierarchy -  elements of the path indicating the hierarchical level\n * @param {string[]} entityPathArray (optional) - array of elements, describing a path to a subsection of the config.\n *                                                If specified, only elements from this subsection are processed*/\nfunction processProperties(\n    configObject: { [key: string]: any },\n    exportResults: ExportResults,\n    appSchema: Definition,\n    propertyList: object,\n    factory: MetadataInstanceInterface,\n    pathHierarchy?: string[],\n    entityPathArray?: string[]\n): void {\n    for (const propertyKey in propertyList) {\n        if (propertyKey === 'description') {\n            continue;\n        }\n        if (entityPathArray) {\n            if (\n                pathHierarchy &&\n                entityPathArray[pathHierarchy.length] !== propertyKey &&\n                !arrayIncludes(pathHierarchy, entityPathArray)\n            ) {\n                continue;\n            }\n        }\n        let currentObject = configObject[propertyKey];\n        const syncRule = getReflectMetadata(configObject, propertyKey);\n\n        const processDefinitionParams: ProcessDefinitionParams = {\n            pathHierarchy,\n            propertyList,\n            appSchema,\n            currentObject,\n            configObject,\n            factory,\n            exportResults\n        };\n        if (pathHierarchy[pathHierarchy.length - 1] === 'anyOf') {\n            processDefinitionParams.currentObject = configObject[pathHierarchy[pathHierarchy.length - 2]];\n            currentObject = processAnyOfDefinitionsOfOVP(processDefinitionParams);\n        } else if (currentObject && typeof currentObject === 'object' && propertyList[propertyKey]) {\n            exportOfObject(processDefinitionParams, propertyKey, factory);\n        }\n        if (syncRule?.manifest) {\n            transferToManifest(syncRule, pathHierarchy, propertyKey, exportResults, currentObject, configObject);\n        }\n    }\n}\n\n/**\n * Evaluates an export rule for a property, transfers to flex change\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param breadcrumbs - list of breadcrumbs, i.e. ID parts for building the stable ID\n * @param syncRule - export rule from the object classes decorator\n * @param configObject - current (sub)object of the configuration file\n * @param ids - list of parent & child ids\n * @param title - title from the app schema (comprising for instance the facet ID)\n * @param key - key of the given property\n */\nfunction evaluateFlexRule(\n    transferParameters: TransferParameterTypeV2,\n    breadcrumbs: string[],\n    syncRule: SyncRule,\n    ids: string[],\n    title: string,\n    configObject: object,\n    key: string\n): void {\n    let localBreadcrumbs: string[];\n\n    if (breadcrumbs.length === 0) {\n        //only added on top = page level, do not forward\n        localBreadcrumbs = ['page'];\n    } else {\n        localBreadcrumbs = breadcrumbs;\n    }\n    const controlId = syncRule.flex.controlId(\n        transferParameters.baseId,\n        ids,\n        localBreadcrumbs,\n        syncRule.flex.controlType,\n        title\n    );\n    const flexChange = fillFlexChangeContent(configObject, syncRule, transferParameters.ui5Version, key, controlId);\n    const localManifest = JSON.parse(JSON.stringify(transferParameters.exportResults.manifest)) as Manifest;\n    localManifest['sap.app'].id = transferParameters.appId;\n    const completeFlexChange = syncRule.flex.createFlexChange(flexChange, localManifest);\n    const flexChangeExists = transferParameters.exportResults.flexChanges.find((change) => {\n        let result = false,\n            oldChange: object = JSON.parse(change);\n        oldChange = {\n            content: oldChange['content'],\n            selector: oldChange['selector']\n        };\n        let newChange: object = JSON.parse(completeFlexChange);\n        newChange = {\n            content: newChange['content'],\n            selector: newChange['selector']\n        };\n        if (JSON.stringify(oldChange) === JSON.stringify(newChange)) {\n            result = true;\n        }\n        return result;\n    });\n    if (!flexChangeExists) {\n        transferParameters.exportResults.flexChanges.push(completeFlexChange);\n    }\n}\n\n/**\n * Exports a given config property value to manifest\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param syncRule - export rule from the object classes decorator\n * @param manifestSection - current section in manifest.json\n * @param configObject - current (sub)object of the configuration file\n * @param key - key of the given property in the config\n * @param manifestKey - key of the given property in manifest\n */\nfunction exportConfigValueToManifest(\n    transferParameters: TransferParameterTypeV2,\n    syncRule: SyncRule,\n    manifestSection: object,\n    configObject: object,\n    key: string,\n    manifestKey: string\n) {\n    if (\n        // In case of arrays we take over complete array\n        !(\n            transferParameters.propertyDefinition['type'] !== 'array' &&\n            transferParameters.nextDefinition &&\n            transferParameters.nextDefinition['targetDefinition'].type === 'object' &&\n            transferParameters.nextDefinition['targetDefinition'].properties\n        )\n    ) {\n        const exportHandler = syncRule.manifest.export;\n        if (exportHandler && typeof exportHandler === 'function') {\n            exportHandler(manifestSection, configObject, key, manifestKey);\n        } else if (exportHandler !== false) {\n            manifestSection[manifestKey] = configObject[key];\n        }\n        transferParameters.exportResults.manifestChangeIndicator = ChangeIndicator.Updated;\n    } else if (\n        transferParameters.propertyDefinition['type'] !== 'array' &&\n        manifestSection[manifestKey] === undefined\n    ) {\n        manifestSection[manifestKey] = {};\n        transferParameters.exportResults.manifestChangeIndicator = ChangeIndicator.Updated;\n    }\n}\n\n/**\n * Evaluates an export rule for a property, transfers to manifest setting\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param syncRule - export rule from the object classes decorator\n * @param configObject - current (sub)object of the configuration file\n * @param ids - list of parent & child ids\n * @param title - title from the app schema (comprising for instance the facet ID)\n * @param key - key of the given property\n */\nfunction evaluateManifestRule(\n    transferParameters: TransferParameterTypeV2,\n    path: string,\n    syncRule: SyncRule,\n    key: string,\n    configObject: object\n) {\n    const manifestSection = ensureManifestSectionByPathV2(transferParameters.exportResults.manifest, path);\n    const manifestKey = syncRule.manifest.key || key;\n    if (configObject[key] !== undefined) {\n        exportConfigValueToManifest(transferParameters, syncRule, manifestSection, configObject, key, manifestKey);\n    } else {\n        //delete value\n        const deleteHandler = syncRule.manifest.delete;\n        if (deleteHandler && typeof deleteHandler === 'function') {\n            deleteHandler(manifestSection, configObject, key, manifestKey);\n        } else if (Object.prototype.hasOwnProperty.call(manifestSection, manifestKey)) {\n            delete manifestSection[manifestKey];\n        }\n        transferParameters.exportResults.manifestChangeIndicator = ChangeIndicator.Updated;\n        deleteEmptyStructure(\n            transferParameters.exportResults.manifest,\n            path,\n            transferParameters.deletionRequest,\n            transferParameters.entityPathArray\n        );\n    }\n}\n\nfunction getManifestPathOfSections(\n    breadcrumbs: string[],\n    path: string,\n    syncRule: SyncRule,\n    transferParameters: TransferParameterTypeV2,\n    title: string\n) {\n    if (breadcrumbs[1] === 'custom') {\n        path = syncRule.manifest.path(transferParameters.pageKeys, {} as Manifest, breadcrumbs[2]);\n    } else {\n        path = syncRule.manifest.path(\n            transferParameters.pageKeys,\n            {} as Manifest,\n            title?.startsWith(FacetTitlePrefix) ? title.split(FacetTitlePrefix)[1] : breadcrumbs[1],\n            breadcrumbs[breadcrumbs.length - 1]\n        );\n        path = path.replace('/@', '::').replace(/VOCWITHCOLONS/g, '::com.sap.vocabularies');\n    }\n    return path;\n}\n\nfunction getManifestPathOfTable(\n    breadcrumbs: string[],\n    path: string,\n    syncRule: SyncRule,\n    transferParameters: TransferParameterTypeV2,\n    configObject: object\n) {\n    if (breadcrumbs[1] === 'columns' && breadcrumbs[2] === 'custom') {\n        path = syncRule.manifest.path(\n            transferParameters.pageKeys,\n            transferParameters.exportResults.manifest,\n            configObject['tabKey']\n        );\n    } else {\n        path = syncRule.manifest.path(transferParameters.pageKeys, {} as Manifest, breadcrumbs[breadcrumbs.length - 1]);\n    }\n    return path;\n}\n\n/**\n * Determines the path to a manifest setting, based on the syncRule\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param breadcrumbs - list of breadcrumbs, i.e. ID parts for building the stable ID\n * @param {SyncRule} syncRule - export rule from the object classes decorator\n * @param configObject - current (sub)object of the configuration file\n * @param title - title from the app schema (comprising for instance the facet ID)\n * @returns the path to the manifest setting\n */\nfunction getManifestPath(\n    transferParameters: TransferParameterTypeV2,\n    breadcrumbs: string[],\n    syncRule: SyncRule,\n    configObject: object,\n    title: string\n): string {\n    let path: string;\n    if (breadcrumbs[0] === PropertyName.sections) {\n        path = getManifestPathOfSections(breadcrumbs, path, syncRule, transferParameters, title);\n    } else if (breadcrumbs[0] === PropertyName.table) {\n        path = getManifestPathOfTable(breadcrumbs, path, syncRule, transferParameters, configObject);\n    } else if (breadcrumbs[0] === 'keyPerformanceIndicators') {\n        path = syncRule.manifest.path(transferParameters.pageKeys, transferParameters.exportResults.manifest, title);\n    } else if (breadcrumbs[0] === 'filterBar' && breadcrumbs[1] === 'selectionFields') {\n        path = syncRule.manifest.path(\n            transferParameters.pageKeys,\n            transferParameters.exportResults.manifest,\n            breadcrumbs.slice(2).join('/')\n        );\n    } else {\n        path = syncRule.manifest.path(transferParameters.pageKeys);\n    }\n    return path;\n}\n\n/**\n * Evaluates an export rule for a property or object, transfers to flex change or manifest setting\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param {SyncRule} syncRule - export rule from the object classes decorator\n * @param configObject - current (sub)object of the configuration file\n * @param breadcrumbs - list of breadcrumbs, i.e. ID parts for building the stable ID\n * @param ids - list of parent & child ids\n * @param title - title from the app schema (comprising for instance the facet ID)\n * @param key - key of the given property\n */\nfunction evaluateExportRule(\n    transferParameters: TransferParameterTypeV2,\n    syncRule: SyncRule,\n    configObject: object,\n    breadcrumbs: string[],\n    ids: string[],\n    title: string,\n    key: string\n): void {\n    if (!syncRule) {\n        return;\n    }\n    //eliminate subsections' hierarchy\n    let index = breadcrumbs.indexOf('subsections');\n    while (index > -1) {\n        breadcrumbs.splice(index - 1, 2);\n        index = breadcrumbs.indexOf('subsections');\n    }\n\n    if (syncRule.flex) {\n        evaluateFlexRule(transferParameters, breadcrumbs, syncRule, ids, title, configObject, key);\n    } else if (syncRule.manifest) {\n        const path = getManifestPath(transferParameters, breadcrumbs, syncRule, configObject, title);\n        evaluateManifestRule(transferParameters, path, syncRule, key, configObject);\n    }\n}\n\ntype ColumnParams = {\n    path: string;\n    exportResults: ExportResults;\n    entitySet: string;\n    config: v2.TableCustomColumns;\n    sectionKey: string;\n    extensionType: string;\n    appId: string;\n};\n\n/**\n * Deletes an obsolete custom column from manifest\n */\nfunction deleteObsoleteColumn(key: string, columnParams: ColumnParams, manifestSection: object) {\n    const keyParts = key.split('|');\n    const keyEntitySet = keyParts[1];\n    const keyTab = keyParts[2];\n    if (keyEntitySet === columnParams.entitySet) {\n        //relevant extension. still present in config?\n        const existingConfigEntries = columnParams.config?.filter(\n            (column) =>\n                (column.tabKey === keyTab ||\n                    (keyTab === undefined && column.tabKey === '') ||\n                    (keyTab && columnParams.sectionKey === keyTab)) &&\n                column.extensionType === columnParams.extensionType\n        );\n        if (!existingConfigEntries || existingConfigEntries.length === 0) {\n            deleteColumnFromFragment(manifestSection, key, columnParams.appId, columnParams.exportResults.fragments);\n            // delete from manifest\n            delete manifestSection[key];\n            // delete cells entry\n            if (key.startsWith(ViewTemplateType.ResponsiveTableColumnsExtension)) {\n                const cellsPattern = key.replace(\n                    ViewTemplateType.ResponsiveTableColumnsExtension,\n                    ViewTemplateType.ResponsiveTableCellsExtension\n                );\n                deleteColumnFromFragment(\n                    manifestSection,\n                    cellsPattern,\n                    columnParams.appId,\n                    columnParams.exportResults.fragments\n                );\n                // delete from manifest\n                delete manifestSection[cellsPattern];\n            }\n        }\n    }\n}\n\n/**\n * Walks through the extensions registered in manifest and compares the columns of the fragment with the ones present in config.\n * If not present anymore, the extension column gets deleted from fragment.\n * @param path - path to extesnions section in manifest\n * @param exportResults - result structure, including the fragments that may get updated\n * @param entitySet - current entity set\n * @param config - current config JSON\n * @param sectionKey - section key\n * @param extensionType - extensionType\n * @param appId - application ID\n */\nfunction deleteObsoleteColumnsFromFragment(columnParams: ColumnParams) {\n    const folderPath = columnParams.path.substring(0, columnParams.path.lastIndexOf('/'));\n    const manifestSection = getManifestSectionByPathV2(columnParams.exportResults.manifest, folderPath);\n    const extensionPattern = columnParams.path.substring(columnParams.path.lastIndexOf('/') + 1);\n    for (const key in manifestSection) {\n        if (key.startsWith(extensionPattern)) {\n            columnParams.exportResults.manifestChangeIndicator = ChangeIndicator.Updated;\n            deleteObsoleteColumn(key, columnParams, manifestSection);\n        }\n    }\n}\n\n/**\n * Clusters the custom columns if a config by the extension's path in manifest\n * @param customColumnsInConfig - list of all custom columns in config\n * @param schemaDefinition - schema definition of the table custom column\n * @param v2Page - current page in manifest\n * @param entitySet - current entity set\n * @param sectionKey key of the section (in case of OP)\n * @returns the custom columns, clustered by the manifest path\n */\nfunction clusterConfigColumnsByPath(\n    customColumnsInConfig: v2.TableCustomColumns,\n    schemaDefinition: object,\n    v2Page: v2.SapUiAppPageV2,\n    entitySet: string,\n    sectionKey: string\n): object {\n    const cluster = {};\n    for (const customColumn of customColumnsInConfig) {\n        //verify that mandatory parameters are filled\n        if (\n            !customColumn['className'] ||\n            !customColumn['fragmentName'] ||\n            !customColumn['columnKey'] ||\n            !customColumn['extensionType']\n        ) {\n            continue;\n        }\n        //check fragment name\n        if (schemaDefinition['properties']['fragmentName']['pattern']) {\n            const namePattern = new RegExp(schemaDefinition['properties']['fragmentName']['pattern']);\n            if (namePattern.test(customColumn['fragmentName']) === false) {\n                continue;\n            }\n        }\n        const { path, viewTemplateType } = getCustomColumnPath(\n            v2Page,\n            entitySet,\n            customColumn.tabKey || sectionKey,\n            customColumn['extensionType']\n        );\n\n        if (!cluster[path]) {\n            cluster[path] = {\n                viewTemplateType: viewTemplateType,\n                columns: []\n            };\n        }\n        cluster[path].columns.push(customColumn);\n    }\n    return cluster;\n}\n\n/**\n * Transfers column extensions to manifest and fragment files\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param {TableCustomColumns} customColumnsInConfig - config part comprising the table custom columns\n * @param {object} schemaDefinition - Column schema definition\n * @param {ObjectPageSectionData} [objectPageSectionData] - Object Page section's data containing target and key options.\n */\nfunction transferColumnExtensions(\n    transferParameters: TransferParameterTypeV2,\n    customColumnsInConfig: v2.TableCustomColumns,\n    schemaDefinition: object,\n    objectPageSectionData?: ObjectPageSectionData\n): void {\n    if (!transferParameters.v2Page) {\n        return;\n    }\n    const sectionKey = objectPageSectionData ? objectPageSectionData.key : undefined;\n    const sectionTarget = objectPageSectionData ? objectPageSectionData.target : undefined;\n    const entitySet = sectionTarget || transferParameters.v2Page.entitySet;\n    for (const extensionType in v2.TableColumnExtensionTypeV2) {\n        const { path } = getCustomColumnPath(transferParameters.v2Page, entitySet, sectionKey, extensionType);\n        if (!path) {\n            continue;\n        }\n        const columParams = {\n            path,\n            exportResults: transferParameters.exportResults,\n            entitySet,\n            config: customColumnsInConfig,\n            sectionKey,\n            extensionType,\n            appId: transferParameters.appId\n        };\n        deleteObsoleteColumnsFromFragment(columParams);\n    }\n    if (customColumnsInConfig) {\n        //cluster existing custom columns by manifest path (or tab key)\n        const cluster = clusterConfigColumnsByPath(\n            customColumnsInConfig,\n            schemaDefinition,\n            transferParameters.v2Page,\n            entitySet,\n            sectionKey\n        );\n        //Export to fragment\n        for (const path in cluster) {\n            exportCustomColumnsToFragment(\n                transferParameters.exportResults,\n                path,\n                cluster[path].columns,\n                transferParameters.appId,\n                cluster[path].viewTemplateType,\n                transferParameters.logger\n            );\n        }\n    }\n}\n\n/**\n * Recursive function that traverses the content of the current object. It reads decorators and fills manifest entries and flex changes\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param configSections - sections from configuration object\n * @param pageKey  - page key\n * @param parentIds - array of collected parent ids\n * @param breadcrumbs - array of properties that we are currently processing. Required for instance for table column name\n * @param targetDefinition - the current entry point or definition in the app schema\n */\nfunction transferManifestExtensions(\n    transferParameters: TransferParameterTypeV2,\n    configSections: (ObjectPageCustomSectionFragment | ObjectPageCustomSectionView)[],\n    pageKey: string,\n    parentIds: string[],\n    breadcrumbs: string[],\n    targetDefinition: object\n): void {\n    const sectionIds: string[] = [];\n    const entity = pageKey.split('|')[1];\n    if (!configSections) {\n        return;\n    }\n    for (const section of configSections) {\n        const id = findAvailableId(sectionIds, [section.relativePosition, entity, section.relatedFacet].join('|'));\n        sectionIds.push(id);\n    }\n    for (let index = 0; index < sectionIds.length; index++) {\n        const definition = targetDefinition['anyOf'].find((element) =>\n            element.$ref?.includes(configSections[index].constructor.name)\n        );\n        const definitionArray = definition.$ref.split(DEFINITION_LINK_PREFIX);\n        const nextTargetDefinition =\n            transferParameters.appSchema['definitions'][definitionArray[definitionArray.length - 1]];\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        transferManifestEntriesAndFlexChange(\n            transferParameters,\n            configSections[index],\n            parentIds,\n            [...breadcrumbs, sectionIds[index]],\n            nextTargetDefinition\n        );\n    }\n    // Delete removed manifest entries\n    const manifestSections = ensureManifestSectionByPathV2(\n        transferParameters.exportResults.manifest,\n        getViewExtensionsPath()\n    );\n    for (const key in manifestSections) {\n        if (isAssociatedCustomSection(key, entity) && !sectionIds.includes(key)) {\n            delete manifestSections[key];\n        }\n    }\n}\n\n/**\n * Method returns converted section id by resolving passed section id and title from schema.\n * @param {string[]} breadcrumbs Array of properties that we are currently processing. Required for instance for table column name.\n * @param {string} title Title from JSON schema, comprising the facet ID\n * @returns {string | undefined} Resolved section id.\n */\nfunction getSectionId(breadcrumbs: string[], title: string): string | undefined {\n    let sectionId = undefined;\n    for (let i = breadcrumbs.length - 1; i >= 0; i--) {\n        if (breadcrumbs[i] === PropertyName.table) {\n            sectionId = breadcrumbs[i - 1];\n            break;\n        }\n    }\n    return convertSectionId(sectionId, title);\n}\n\n/**\n * Processes index tables in schema\n */\nfunction transferIndexTable(\n    currentConfigObject: object,\n    transferParameters: TransferParameterTypeV2,\n    title: string,\n    key: string,\n    ids: string[],\n    breadcrumbs: string[]\n) {\n    const propertyDefinition = transferParameters.propertyDefinition as Definition;\n    if (!currentConfigObject || !propertyDefinition?.additionalProperties) {\n        return;\n    }\n    Object.keys(currentConfigObject).forEach((newKey) => {\n        const nextDefinition = getNextTargetDefinition(\n            transferParameters.appSchema,\n            title,\n            currentConfigObject[newKey],\n            propertyDefinition.additionalProperties as Definition,\n            key,\n            transferParameters.factory,\n            transferParameters.pageType\n        );\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        transferManifestEntriesAndFlexChange(\n            transferParameters,\n            nextDefinition.configObject,\n            ids,\n            [...breadcrumbs, key],\n            nextDefinition.targetDefinition,\n            newKey\n        );\n    });\n}\n\n/**\n * Transfers custom columns of schema\n */\nfunction transferCustomColumns(\n    propertyDefinition: any,\n    breadcrumbs: string[],\n    title: string,\n    transferParameters: TransferParameterTypeV2,\n    configObject: { [key: string]: any },\n    nextDefinition: NextDefinition\n) {\n    let objectPageSectionData: ObjectPageSectionData | undefined;\n    const target = getTargetFromCustomColumnRef(propertyDefinition.$ref);\n    if (target) {\n        objectPageSectionData = {\n            target,\n            key: getSectionId(breadcrumbs, title)\n        };\n    }\n    transferColumnExtensions(\n        transferParameters,\n        configObject?.custom as v2.TableCustomColumns,\n        nextDefinition.targetDefinition,\n        objectPageSectionData\n    );\n}\n\n/**\n * Processes anyOf definitions of schema\n */\nfunction handleAnyOfDefinitions(\n    propertyDefinition: any,\n    transferParameters: TransferParameterTypeV2,\n    title: string,\n    currentConfigObject: object,\n    key: string,\n    ids: string[],\n    breadcrumbs: string[]\n) {\n    propertyDefinition['anyOf'].forEach((element) => {\n        const nextDefinition = getNextTargetDefinition(\n            transferParameters.appSchema,\n            title,\n            currentConfigObject,\n            element,\n            key,\n            transferParameters.factory,\n            transferParameters.pageType\n        );\n        if (nextDefinition) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            transferManifestEntriesAndFlexChange(\n                transferParameters,\n                nextDefinition.configObject,\n                ids,\n                [...breadcrumbs, key],\n                nextDefinition.targetDefinition,\n                nextDefinition.title\n            );\n        }\n    });\n}\n\n/**\n * Processes complex definitions of schema\n */\nfunction transferComplexProperty(\n    transferParameters: TransferParameterTypeV2,\n    breadcrumbs: string[],\n    configObject: { [key: string]: any },\n    ids: string[],\n    propertyKey: string,\n    nextDefinition: NextDefinition,\n    title?: string\n): void {\n    const propertyDefinition = transferParameters.propertyDefinition as Definition;\n    if (\n        propertyDefinition?.type === 'array' &&\n        (breadcrumbs[0] === 'sections' || breadcrumbs[0] === 'subsections') &&\n        propertyKey === 'custom'\n    ) {\n        transferManifestExtensions(\n            transferParameters,\n            configObject[propertyKey],\n            transferParameters.pageKeys[transferParameters.pageKeys.length - 1],\n            ids,\n            [...breadcrumbs, propertyKey],\n            propertyDefinition?.items as Definition\n        );\n    } else if (nextDefinition && propertyKey === 'custom') {\n        transferCustomColumns(propertyDefinition, breadcrumbs, title, transferParameters, configObject, nextDefinition);\n        return;\n    } else if (nextDefinition) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        transferManifestEntriesAndFlexChange(\n            transferParameters,\n            nextDefinition.configObject,\n            ids,\n            [...breadcrumbs, propertyKey],\n            nextDefinition.targetDefinition,\n            nextDefinition.title\n        );\n    } else if (propertyDefinition['anyOf']) {\n        handleAnyOfDefinitions(\n            propertyDefinition,\n            transferParameters,\n            title,\n            configObject?.[propertyKey],\n            propertyKey,\n            ids,\n            breadcrumbs\n        );\n    }\n}\n\n/**\n * Function that traverses the content of the current object. It reads decorators and fills manifest entries and flex changes\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param configObject - current (sub)object of the configuration file\n * @param parentIds - array of collected parent ids\n * @param breadcrumbs - array of properties that we are currently processing. Required for instance for table column name\n * @param schemaDefinition - the current entry point or definition in the app schema\n * @param title - title from the app schema (comprising for instance the facet ID)\n */\nexport function transferManifestEntriesAndFlexChange(\n    transferParameters: TransferParameterTypeV2,\n    configObject: { [key: string]: any },\n    parentIds: string[],\n    breadcrumbs: string[],\n    schemaDefinition: Definition,\n    title?: string\n): void {\n    let currentConfigObject: object;\n\n    if (!schemaDefinition?.properties) {\n        return;\n    }\n    for (const propertyKey in schemaDefinition.properties) {\n        if (transferParameters.entityPathArray) {\n            if (\n                transferParameters.entityPathArray[breadcrumbs.length] !== propertyKey &&\n                !arrayIncludes(breadcrumbs, transferParameters.entityPathArray)\n            ) {\n                continue;\n            }\n        }\n        currentConfigObject = configObject?.[propertyKey];\n        const childId = configObject && getChildId(configObject, propertyKey);\n        const ids = childId ? [...parentIds, childId] : parentIds;\n        const syncRule = getReflectMetadata(configObject, propertyKey);\n        const propertyDefinition = (transferParameters.propertyDefinition = schemaDefinition.properties[\n            propertyKey\n        ] as Definition);\n        const nextDefinition = (transferParameters.nextDefinition = getNextTargetDefinition(\n            transferParameters.appSchema,\n            title,\n            currentConfigObject,\n            propertyDefinition,\n            propertyKey,\n            transferParameters.factory,\n            transferParameters.pageType\n        ));\n        //Evaluate sync rule for the export\n        evaluateExportRule(transferParameters, syncRule, configObject, [...breadcrumbs], ids, title, propertyKey);\n        //index table\n        transferIndexTable(currentConfigObject, transferParameters, title, propertyKey, ids, breadcrumbs);\n\n        if (currentConfigObject === undefined || typeof currentConfigObject === 'object') {\n            transferComplexProperty(\n                transferParameters,\n                breadcrumbs,\n                configObject,\n                ids,\n                propertyKey,\n                nextDefinition,\n                title\n            );\n        } else if (propertyDefinition?.$ref === DEFINITION_LINK_PREFIX + 'TableCustomColumns') {\n            //empty config ==> delete all given extensions\n            transferColumnExtensions(\n                transferParameters,\n                [],\n                transferParameters.appSchema['definitions']['TableCustomColumn']\n            );\n            continue;\n        }\n    }\n}\n", "import type {\n    LineItem,\n    DataFieldForActionAbstractTypes,\n    DataFieldAbstractTypes\n} from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport type { AnnotationTerm, ConvertedMetadata, EntitySet, EntityType } from '@sap-ux/vocabularies-types';\nimport { getDataFieldDescription, findAlias, DEFINITION_LINK_PREFIX, getJSONPropertyByPath } from '../../common/utils';\nimport { getStableIdPartFromDataField, replaceSpecialChars } from './StableIdHelper';\nimport { UIAnnotationTypes, UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport {\n    addCommonLineItemDefinitions,\n    getFacetDefinitionLink,\n    parseSchemaDefinition,\n    prepareRef,\n    addDescriptiveEnumDefinition,\n    getActionKey,\n    addKeyToDefinition,\n    determineDataType,\n    getEnumEntry,\n    addEnumToSchema\n} from '../../common';\nimport i18next from 'i18next';\nimport { log, LogSeverity } from '../../..';\nimport type { Definition, DefinitionOrBoolean } from 'typescript-json-schema';\nimport type {\n    ExtensionLogger,\n    GenerateAppSchemaParameters,\n    FileData,\n    Manifest,\n    SchemaDefinition\n} from '@sap/ux-specification-types';\nimport {\n    v4,\n    ActionType,\n    ManifestSection,\n    SchemaTag,\n    MANIFESTPATH,\n    SchemaKeyName,\n    DefinitionName,\n    UIVOCABULARY,\n    PropertyName,\n    TemplateType\n} from '@sap/ux-specification-types';\nimport { join } from 'path';\nimport type { ExtensionFileData } from '../types';\n\nexport type CustomExtension =\n    | v4.TableCustomColumn\n    | v4.CustomAction\n    | v4.SapUi5RoutingTargetContentSection\n    | v4.SapUiGenericAppPageCustomFilterField;\n\nexport interface CustomExtensions {\n    [key: string]: CustomExtension;\n}\n\nfunction sortByPropertyIndex(): (a: [string, unknown], b: [string, unknown]) => number {\n    return ([_key1, value1], [_key2, value2]) => value1[SchemaTag.propertyIndex] - value2[SchemaTag.propertyIndex];\n}\n\n/**\n * Sort function for properties in schema definitions.\n * @param definition - definition which contains list of properties, unsorted\n * @returns - list of properties, sorted by property index\n */\nfunction sortPropertiesRecords(definition: DefinitionOrBoolean): [string, DefinitionOrBoolean][] {\n    definition = typeof definition === 'object' ? definition : {};\n    const unsortedObjArr = [...Object.entries(definition.properties)];\n    if (!definition.properties || Object.keys(definition.properties).length === 0) {\n        return unsortedObjArr;\n    }\n    return unsortedObjArr.sort(sortByPropertyIndex());\n}\n\n/**\n * Method receives extension object and returns title/text.\n * @param extension - custom extension object from manifest.\n * @returns Title/text of custom extension.\n */\nfunction getExtensionText(extension: CustomExtension): string | undefined {\n    let text: string;\n    if ('header' in extension) {\n        text = extension.header;\n    } else if ('text' in extension) {\n        text = extension.text;\n    } else if ('title' in extension) {\n        text = extension.title;\n    } else if ('label' in extension) {\n        text = extension.label;\n    }\n    return text;\n}\n\n/**\n * Adds a custom extension to the right position of a sorted array\n * @param extension - custom extension\n * @param sortedExtensionsArray - array of all entries(annotation entries and extensions), to be enhanced\n * @param targetIndex - index of the anchor entry\n * @param extId - ID of the new custom extension\n * @param newExtensionReference - schema reference of the new extension\n */\nfunction addExtensionToSortedArray(\n    extension: CustomExtension,\n    sortedExtensionsArray: [string, unknown][],\n    targetIndex: number,\n    extId: string,\n    newExtensionReference: { $ref: string; description: string }\n): void {\n    const placement = extension.position?.placement || v4.Placement.After;\n    if (placement === v4.Placement.Before) {\n        sortedExtensionsArray.splice(targetIndex, 0, [extId, newExtensionReference]);\n    } else {\n        sortedExtensionsArray.splice(targetIndex + 1, 0, [extId, newExtensionReference]);\n    }\n}\n\n/**\n * Adds remaining custom extensions that might self-reference and were not added in previous steps\n * @param {CustomExtensions} remainingExtensions - list of custom extensions that are left for post-processing\n * @param {string} extId - current id of remaining extensions\n * @param {CustomExtension} extension - current extension of remaining custom extensions\n * @param {[string, unknown]} sortedExtArray - sorted array of annotation-based extensions, to be updated\n * @param { $ref, description, key } newCustomExt - description based on extension in manifest\n */\nfunction addRemainingTargetByBefore(\n    remainingExtensions: CustomExtensions,\n    extId: string,\n    extension: CustomExtension,\n    sortedExtArray: [string, unknown][],\n    newCustomExt: { $ref: string; description: string; keys: Array<object> }\n) {\n    const targetRemainingIndex = Object.entries(remainingExtensions)\n        .filter(([key]) => key !== extId)\n        .findIndex(\n            ([_key, entry]) =>\n                entry.position?.placement === 'Before' && entry.position?.anchor === extension.position?.anchor\n        );\n    if (targetRemainingIndex === -1) {\n        sortedExtArray.splice(sortedExtArray.length, 0, [extId, newCustomExt]);\n        delete remainingExtensions[extId];\n    }\n}\n\n/**\n * Post-processing of custom extensions that are left after the first loop of adding extensions, i.e. custom extensions referring to other custom extensions\n * @param remainingExtensions - list of custom extensions that are left for post-processing\n * @param extensionDefinitionName - custom extension definition name, different in LR and OP\n * @param sortedExtArray - sorted array of annotation-based extensions, to be updated\n * @param logger - logger for error messages\n * @param {boolean} forceAdd - add self-referencing custom extensions after other additions\n */\nfunction adjustCustomExtReferringToCustomExt(\n    remainingExtensions: CustomExtensions,\n    extensionDefinitionName: string,\n    sortedExtArray: [string, unknown][],\n    logger: ExtensionLogger,\n    forceAdd = false\n): void {\n    const initialRemaining = Object.entries(remainingExtensions).length;\n    const getExtensionDetails = (extension: CustomExtension, extId: string) => {\n        const description = getExtensionText(extension);\n        return {\n            $ref: `${DEFINITION_LINK_PREFIX}${extensionDefinitionName}`,\n            description,\n            keys: [{ name: SchemaKeyName.key, value: `${extId}` }]\n        };\n    };\n    for (const extId in remainingExtensions) {\n        const extension = remainingExtensions[extId];\n        // Detect description based on extension in manifest\n        const newCustomExt = getExtensionDetails(extension, extId);\n        if (extension.position?.anchor && extension.position?.placement) {\n            const targetIndex = sortedExtArray.findIndex((element) => element[0] === extension.position.anchor);\n            if (targetIndex > -1) {\n                addExtensionToSortedArray(extension, sortedExtArray, targetIndex, extId, newCustomExt);\n                delete remainingExtensions[extId];\n            } else if (\n                extId === extension.position.anchor ||\n                Object.keys(remainingExtensions).indexOf(extension.position.anchor) === -1\n            ) {\n                log(logger, {\n                    severity: LogSeverity.Error,\n                    message: i18next.t('INVALIDANCHOR', { id: extId, anchor: extension.position.anchor }),\n                    location: {\n                        path: MANIFESTPATH,\n                        range: [ManifestSection.generic]\n                    }\n                });\n                sortedExtArray.splice(sortedExtArray.length, 0, [extId, newCustomExt]);\n                delete remainingExtensions[extId];\n            } else if (forceAdd) {\n                addRemainingTargetByBefore(remainingExtensions, extId, extension, sortedExtArray, newCustomExt);\n            }\n        } else if (forceAdd) {\n            addExtensionToSortedArray(extension, sortedExtArray, sortedExtArray.length, extId, newCustomExt);\n            delete remainingExtensions[extId];\n        }\n    }\n    const endRemaining = Object.entries(remainingExtensions).length;\n    if (endRemaining > 0 && initialRemaining !== endRemaining) {\n        adjustCustomExtReferringToCustomExt(remainingExtensions, extensionDefinitionName, sortedExtArray, logger);\n    } else if (endRemaining > 0) {\n        adjustCustomExtReferringToCustomExt(remainingExtensions, extensionDefinitionName, sortedExtArray, logger, true);\n    }\n}\n\n/**\n * Returns anchor for extension. Priority:\n * 1. 'anchor' property in extension;\n * 2. When 'anchor' is not defined in extension and does calculation based placement and current list of extension and annotation entries.\n * @param extension - extension in manifest\n * @param sortedExtensionsArray - sorted array of annotation-based nodes, to be enhanced by extensions\n */\nfunction getExtensionAnchor(extension: CustomExtension, sortedExtensionsArray: [string, unknown][]): string {\n    // Default placement is After\n    const placement = extension.position?.placement || v4.Placement.After;\n    let anchor = extension.position?.anchor;\n    if (!anchor) {\n        // Simulate runtime behavior - if there no anchor, then logic uses first or last annotation node\n        // In some cases last extension can be previously inserted extension - in such case we still need use annotation node\n        const index = placement === v4.Placement.Before ? 0 : sortedExtensionsArray.length - 1;\n        anchor = sortedExtensionsArray[index] ? sortedExtensionsArray[index][0] : undefined;\n    }\n    return anchor;\n}\n\n/**\n * Preprocesses and returns list of local extension ids that needs to be skipped from addition\n * @param {CustomExtensions} localExtensions - list of extensions in manifest\n * @param {[string, unknown][]} annotationEntries - sorted array of annotation-based nodes, to be enhanced by extensions\n */\nfunction getLocalExtensionsToSkip(localExtensions: CustomExtensions, annotationEntries: [string, unknown][]): string[] {\n    // collect local extensions that has no annotation based anchor\n    const ignoredIds = [];\n    for (const extensionId in localExtensions) {\n        const anchor = localExtensions[extensionId].position?.anchor;\n        const hasAnnotationAnchor = annotationEntries.some(\n            (annotationEntry: [string, unknown]) => annotationEntry[0] === anchor\n        );\n        if (anchor && !hasAnnotationAnchor) {\n            ignoredIds.push(extensionId);\n        }\n    }\n    return ignoredIds;\n}\n\n/**\n * Method returns position of passed extension using calculation for merged annotation nodes approach.\n * Currently is used for custom subsections - annotation merges subsection if there is no any child collecation facet.\n * @param extension - custom extension\n * @param extensions - list of extensions in manifest\n * @param sortedExtensionsArray - array of all entries(annotation entries and extensions), to be enhanced\n *\n * @returns Index of extension using merged annotation nodes approach.\n */\nfunction getExtensionIndexByMergedApproach(\n    extension: CustomExtension,\n    extensions: CustomExtensions,\n    sortedExtensionsArray: [string, unknown][]\n): number {\n    const placement = extension.position?.placement || v4.Placement.After;\n    const originalAnchor = extension.position?.anchor;\n    if (originalAnchor) {\n        // Custom extension is anchored to any extension\n        return sortedExtensionsArray.length;\n    }\n    // Custom extension is not anchored to any extension\n    // Inner method to find next available index before or after annotation node\n    const findNextIndex = (index: number, condition: (innerExtension?: CustomExtension) => boolean): number => {\n        for (const sortExtension of sortedExtensionsArray) {\n            const innerExtension = extensions[sortExtension[0]];\n            if (condition(innerExtension)) {\n                // Condition is fulfilled - no need to increase index\n                break;\n            }\n            // Increase index and check next ordered extension\n            index++;\n        }\n        return index;\n    };\n    let index = 0;\n    if (placement === v4.Placement.Before) {\n        // Special case when no anchor but placement is \"Before\" - then rendered as very first\n        // Find index before first annotation node\n        index = findNextIndex(0, (innerExtension: CustomExtension) => !innerExtension);\n    } else {\n        // Special case when no anchor but placement is \"After\" - then rendered right after last annotation node\n        index = findNextIndex(\n            -1,\n            (innerExtension: CustomExtension) =>\n                !!(\n                    innerExtension &&\n                    // Ignore extension without anchor but with position \"Before\"\n                    (innerExtension?.position?.anchor || innerExtension?.position?.placement !== v4.Placement.Before)\n                )\n        );\n    }\n    return index > -1 ? index : 0;\n}\n\n/**\n *\n * @param extension - custom extension\n * @param extensions - list of extensions in manifest\n * @param sortedExtensionsArray - array of all entries(annotation entries and extensions), to be enhanced\n * @param anchor - target anchor to check\n * @param ignoreAnnotationAnchors - calculation should ignore anchors referenced to annotation nodes. Used when annotations sections are merged\n *\n * @returns Index of extension using merged annotation nodes approach.\n */\nfunction getExtensionIndex(\n    extension: CustomExtension,\n    extensions: CustomExtensions,\n    sortedExtensionsArray: [string, unknown][],\n    anchor: string,\n    ignoreAnnotationAnchors = false\n): number {\n    return !ignoreAnnotationAnchors\n        ? sortedExtensionsArray.findIndex((element) => element[0] === anchor)\n        : getExtensionIndexByMergedApproach(extension, extensions, sortedExtensionsArray);\n}\n\n/**\n * Adds extension at the right position of the sorted array of annotation-based nodes\n * @param extensions - list of extensions in manifest\n * @param sortedExtensionsArray - sorted array of annotation-based nodes, to be enhanced by extensions\n * @param extensionDefinitionName - extension definition name, different in LR and OP\n * @param logger - logger for error messages\n * @param ignoreAnnotationAnchors - calculation should ignore anchors referenced to annotation nodes. Used when annotations sections are merged.\n */\nexport function addExtensionToArray(\n    extensions: CustomExtensions,\n    sortedExtensionsArray: [string, unknown][],\n    extensionDefinitionName: string,\n    templatePropertyName = 'template',\n    logger?: ExtensionLogger,\n    ignoreAnnotationAnchors = false\n): [string, unknown][] {\n    const annotationEntries = [...sortedExtensionsArray];\n    const localExtensions = { ...extensions };\n    const localExtensionsToSkip = getLocalExtensionsToSkip(localExtensions, annotationEntries);\n\n    for (const extensionId in localExtensions) {\n        if (localExtensionsToSkip?.includes(extensionId)) {\n            continue;\n        }\n        const extension = localExtensions[extensionId];\n        if (!(templatePropertyName in extension)) {\n            // Skip regular entries(columns, actions, etc.)\n            delete localExtensions[extensionId];\n            continue;\n        }\n        const newExtensionReference = {\n            $ref: `${DEFINITION_LINK_PREFIX}${extensionDefinitionName}`,\n            description: getExtensionText(extension) || extensionId,\n            keys: [{ name: SchemaKeyName.key, value: `${extensionId}` }],\n            actionType: ActionType.Custom\n        };\n        const anchor = getExtensionAnchor(extension, annotationEntries);\n        if (anchor) {\n            const targetIndex = getExtensionIndex(\n                extension,\n                extensions,\n                sortedExtensionsArray,\n                anchor,\n                ignoreAnnotationAnchors\n            );\n            if (targetIndex > -1) {\n                addExtensionToSortedArray(\n                    extension,\n                    sortedExtensionsArray,\n                    targetIndex,\n                    extensionId,\n                    newExtensionReference\n                );\n                delete localExtensions[extensionId];\n            }\n        } else {\n            // Empty array - no any anchor to reference to\n            sortedExtensionsArray.push([extensionId, newExtensionReference]);\n            delete localExtensions[extensionId];\n        }\n    }\n    if (Object.keys(localExtensions).length > 0) {\n        //Second loop is necessary for custom columns that refer to custom columns\n        adjustCustomExtReferringToCustomExt(localExtensions, extensionDefinitionName, sortedExtensionsArray, logger);\n    }\n    return sortedExtensionsArray;\n}\n\n/**\n * Common function for enhancing the LineItems definition of app schema by custom columns\n * @param appSchema - app-specific JSON schema\n * @param v4Page - actual page in the manifest\n * @param logger - logger for error messages\n * @param customColumnDefinitionName - custom column definition name\n * @param sectionId - identifier of the current object page section in schema\n * @param sectionIdInManifest - identifier of the current object page section in manifest\n */\nexport function addCustomColumnDefinition(\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4,\n    logger: ExtensionLogger,\n    customColumnDefinitionName: string = DefinitionName.CustomColumn,\n    sectionId?: string,\n    sectionIdInManifest?: string\n): void {\n    const lineItemId = sectionId || DefinitionName.LineItems;\n    const lineItems = appSchema.definitions[lineItemId];\n    if (!lineItems) {\n        return;\n    }\n    //sort line items\n    let sortedColumnsArray = sortPropertiesRecords(lineItems);\n\n    const id = sectionIdInManifest ? sectionIdInManifest.replace(/::/g, '/') : `@${UIAnnotationTerms.LineItem}`;\n    const columns = v4Page.options?.settings?.controlConfiguration?.[id]?.['columns'];\n    if (columns) {\n        sortedColumnsArray = addExtensionToArray(\n            columns,\n            sortedColumnsArray,\n            customColumnDefinitionName,\n            undefined,\n            logger\n        );\n    }\n    //Adjust propertyIndex\n    for (let index = 0; index < sortedColumnsArray.length; index++) {\n        sortedColumnsArray[index][1][SchemaTag.propertyIndex] = index;\n    }\n    const sortedColumnsAsObject = {};\n    sortedColumnsArray.forEach(([key, value]) => (sortedColumnsAsObject[key] = value));\n    (appSchema.definitions[lineItemId] as Definition).properties = sortedColumnsAsObject;\n}\n\n/**\n * Determines the name of the action in schema\n * @param {LineItemDataForSchema} data - data of the the LineItem\n *\n * @returns the name of the action\n */\nfunction determineActionDefinitionName(data: LineItemDataForSchema): DefinitionName {\n    let actionDefinitionName: DefinitionName;\n    if (data.lineItemId.startsWith(DefinitionName.LineItemsOfView)) {\n        actionDefinitionName = DefinitionName.ViewToolBarAction;\n    } else if (data.lineItemId.startsWith(DefinitionName.LineItems)) {\n        actionDefinitionName = DefinitionName.ToolBarAction;\n    } else {\n        actionDefinitionName = DefinitionName.ObjectPageToolBarAction;\n    }\n    return actionDefinitionName;\n}\n\n/**\n * Adds the schema tags 'keys' and 'target' to the schema definition of an action\n * @param {SchemaDefinition} actionDefinition - current action definition in the app schema\n * @param {DataFieldForActionAbstractTypes} lineItemRecord - actual record of the line item collection\n * @param {string} actionId - ID of the action, according to the lineItem definition\n */\nfunction addTargetAndKeysOfAction(\n    actionDefinition: SchemaDefinition,\n    lineItemRecord: DataFieldForActionAbstractTypes,\n    actionId: string\n): void {\n    actionDefinition[SchemaTag.keys] = [];\n    if (lineItemRecord[SchemaKeyName.semanticObject]) {\n        actionDefinition[SchemaTag.keys].push({\n            name: SchemaKeyName.semanticObject,\n            value: lineItemRecord[SchemaKeyName.semanticObject]\n        });\n    }\n    const { key, ns } = getActionKey(actionId, true);\n    actionDefinition[SchemaTag.keys].push({ name: SchemaKeyName.action, value: key });\n\n    if (ns) {\n        actionDefinition[SchemaTag.target] = ns;\n    }\n}\n\n/**\n * Processes a LineItem record of type DataFieldForAction during app schema generation\n * @param {LineItemDataForSchema} data: structure of input data\n * @param {Definition} actions - actions definition in schema, parent object\n * @param {string} lineItemPath - annotation path to the line item\n * @param {DataFieldForActionAbstractTypes} lineItemRecord - actual record of the line item collection\n * @param {number} recordIndex - record index in the collection\n * @param {boolean} createRef - defines whether the $ref attribute should be created for the action\n */\nfunction addActionRecordToSchema(\n    data: LineItemDataForSchema,\n    actionsDefinition: Definition,\n    lineItemPath: string,\n    lineItemRecord: DataFieldForActionAbstractTypes,\n    recordIndex: number,\n    createRef = true\n): void {\n    // Action but not inline action\n    if (lineItemRecord.Determining === true) {\n        return;\n    }\n    //no footer bar -> toolbar action\n    const actionDefinitionName = determineActionDefinitionName(data);\n    const description = getDataFieldDescription(lineItemRecord as DataFieldAbstractTypes, data.entityType);\n    const prefix = lineItemRecord.$Type.split(`${UIVOCABULARY}.`)[1];\n    const actionId = typeof lineItemRecord.Action === 'string' ? lineItemRecord.Action : lineItemRecord.Action['path'];\n    const propertyKey = replaceSpecialChars(actionId as string);\n    const actionDefinition: SchemaDefinition = (actionsDefinition.properties[`${prefix}::${propertyKey}`] = {\n        description\n    });\n    if (createRef) {\n        actionDefinition.$ref = getFacetDefinitionLink(actionDefinitionName, prepareRef(propertyKey));\n    } else {\n        actionDefinition.properties = {};\n        actionDefinition.type = 'object';\n        actionDefinition.isViewNode = true;\n    }\n    actionDefinition[SchemaTag.propertyIndex] = recordIndex;\n    actionDefinition[SchemaTag.dataType] = determineDataType(lineItemRecord);\n\n    //keys\n    addTargetAndKeysOfAction(actionDefinition, lineItemRecord, actionId);\n\n    actionDefinition[SchemaTag.annotationType] = lineItemRecord.$Type;\n    if (createRef) {\n        const action = parseSchemaDefinition(actionDefinitionName, prepareRef(propertyKey), data.appSchema);\n        action[SchemaTag.annotationPath] = `${lineItemPath}/${recordIndex}`;\n    } else {\n        actionDefinition[SchemaTag.annotationPath] = `${lineItemPath}/${recordIndex}`;\n    }\n}\n\n/**\n * Processes a LineItem record of type DataField during app schema generation\n * @param {LineItemDataForSchema} data: structure of input data\n * @param {object} lineItem - object comprising the line item information:\n * { lineItemRecord, lineItemId, lineItemPath }\n * @param {string} columnDefinitionName - Schema definition name for the column\n * @param {number} recordIndex - record index in the collection\n * @param {Definition | undefined} lineItemDefinition - line item definition\n */\nfunction addLineItemRecordToSchema(\n    data: LineItemDataForSchema,\n    lineItem: object,\n    columnDefinitionName: string,\n    recordIndex: number,\n    lineItemDefinition?: Definition\n) {\n    const lineItemId = lineItem['lineItemId'];\n    const lineItemRecord = lineItem['lineItemRecord'];\n    if (lineItemRecord['Target']?.['value']) {\n        const regex = `@${findAlias(UIVOCABULARY, data.oDataServiceAVT)}.`;\n        lineItemRecord['Target']['value'] = lineItemRecord['Target']['value'].replace(regex, '@');\n    }\n    const schemaKey = getStableIdPartFromDataField(lineItemRecord).replace(/\\//g, '::');\n    if (schemaKey) {\n        let columnsDefinition = lineItemDefinition;\n        if (!columnsDefinition) {\n            columnsDefinition = data.appSchema.definitions[lineItemId] as Definition;\n        }\n        const properties = columnsDefinition.properties;\n        const property: SchemaDefinition = {\n            description: getDataFieldDescription(lineItemRecord, data.entityType)\n        };\n        if (lineItemDefinition) {\n            property.properties = {};\n            property.type = 'object';\n            property.isViewNode = true;\n        } else {\n            property.$ref = DEFINITION_LINK_PREFIX + columnDefinitionName;\n        }\n        property[SchemaTag.annotationType] = lineItemRecord?.$Type;\n        property[SchemaTag.annotationPath] = `${lineItem['lineItemPath']}/${recordIndex}`;\n        property[SchemaTag.propertyIndex] = recordIndex;\n        property[SchemaTag.dataType] = determineDataType(lineItemRecord);\n        properties[schemaKey] = property;\n        addKeyToDefinition(lineItemRecord, properties, schemaKey);\n    }\n}\n\nexport type LineItemDataForSchema = {\n    appSchema: Definition;\n    lineItemAnnotation: AnnotationTerm<LineItem>;\n    entityType: EntityType;\n    oDataServiceAVT: ConvertedMetadata;\n    lineItemId: string;\n};\n\n/**\n * Appends line item columns and actions to the app schema (for the list report, custom page or an object page section comprising a table)\n * @param {LineItemDataForSchema} data: structure comprising\n * - appSchema - the app specific schema that shall get enhanced\n * - lineItemAnnotation - the UI.LineItem annotation, comprising all records\n * - entityType - the entity type as part of the AVT ConvertedMetadata\n * - oDataServiceAVT - complete service information, as returned by Annotation Vocabularies Tool\n * - lineItemId - in case of OP the parameter must be passed to distinguish the OP tables;\n *                in case of LR or ALP 'LineItems' is passed.\n * @param {Definition} actions - actions definition in schema, parent object\n * @param {string} lineItemPath - annotation path to the line item\n * @param {Definition | undefined} lineItemDefinition - line item definition\n * @param {string} columnDefinitionName - line item definition name\n */\nexport function appendLineItemsToSchema(\n    data: LineItemDataForSchema,\n    actions: Definition,\n    lineItemPath: string,\n    lineItemDefinition?: Definition,\n    columnDefinitionName: string = DefinitionName.TableColumn\n): void {\n    if (!data.lineItemAnnotation) {\n        return;\n    }\n    let i = 0;\n    data.lineItemAnnotation.forEach((lineItemRecord) => {\n        if (\n            (lineItemRecord.$Type === UIAnnotationTypes.DataFieldForAction ||\n                lineItemRecord.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation) &&\n            (lineItemRecord.Inline !== true || lineItemRecord.Determining === true)\n        ) {\n            addActionRecordToSchema(data, actions, lineItemPath, lineItemRecord, i, !lineItemDefinition);\n        } else {\n            const lineItem = { lineItemRecord, lineItemId: data.lineItemId, lineItemPath };\n            const columnDefinition =\n                lineItemRecord.$Type === UIAnnotationTypes.DataFieldForAction\n                    ? `${columnDefinitionName}Action`\n                    : columnDefinitionName;\n            addLineItemRecordToSchema(data, lineItem, columnDefinition, i, lineItemDefinition);\n        }\n        i++;\n    });\n}\n\n/**\n * Adds the line item definition, columns and actions to the app schema (for the list report, custom page or an object page section comprising a table\n * @param {LineItemDataForSchema} data: structure comprising\n * - appSchema - the app specific schema that shall get enhanced\n * - lineItemAnnotation - the UI.LineItem annotation, comprising all records\n * - entityType - the entity type as part of the AVT ConvertedMetadata\n * - oDataServiceAVT - complete service information, as returned by Annotation Vocabularies Tool\n * - lineItemId - in case of OP the parameter must be passed to distinguish the OP tables;\n *                in case of LR or ALP 'LineItems' is passed.\n * @param {string} columnDefinitionName - name of the column definition, i.e. TableColumn or ObjectPageTableColumn\n * @param {string} customColumnDefinitionName - name of the custom column definition\n * @param {string} customColumnDefinitionName - name of the custom action definition\n */\nexport function addLineItemsTypeToSchema(\n    data: LineItemDataForSchema,\n    columnDefinitionName: string = DefinitionName.TableColumn,\n    customColumnDefinitionName: string = DefinitionName.CustomColumn,\n    customActionDefinitionName: string = DefinitionName.CustomTableAction\n): void {\n    const { actions, lineItemPath } = addCommonLineItemDefinitions(\n        data.appSchema,\n        data.lineItemAnnotation,\n        data.entityType,\n        data.lineItemId,\n        customColumnDefinitionName,\n        customActionDefinitionName\n    );\n\n    appendLineItemsToSchema(data, actions, lineItemPath, undefined, columnDefinitionName);\n}\n\n/**\n * Adds an enum or value help to position > anchor of custom column\n * @param appSchema - app specific JSON schema\n * @param lineItemId - ID of the current line item in schema\n * @param v4Page - current page in manifest\n * @param positionName - ID of the definition of custom column position in schema\n * @param sectionIdInManifest - identifier of the current object page section in manifest\n */\nexport function addFragmentEnumForAnchor(\n    appSchema: Definition,\n    lineItemId: string,\n    v4Page: v4.SapUiAppPageV4,\n    positionName: string = DefinitionName.Position,\n    sectionIdInManifest?: string\n): void {\n    const columns = (appSchema.definitions[lineItemId] as Definition)?.properties;\n    const enumEntries = [];\n    if (columns) {\n        for (const key in columns) {\n            if (key !== 'custom') {\n                enumEntries.push(key);\n            }\n        }\n    }\n    const id = lineItemId !== DefinitionName.LineItems ? sectionIdInManifest : `@${UIAnnotationTerms.LineItem}`;\n    const columnsInManifest = v4Page.options?.settings?.controlConfiguration?.[id]?.['columns'];\n    if (columnsInManifest) {\n        for (const key in columnsInManifest) {\n            if (enumEntries.indexOf(key) === -1) {\n                enumEntries.push(key);\n            }\n        }\n    }\n    if (enumEntries.length > 0) {\n        const anchor = (appSchema.definitions[positionName] as Definition).properties.anchor as Definition;\n        addEnumToSchema(enumEntries, anchor);\n    }\n}\n\n/**\n * Adds an enum or value help to position > anchor of custom column\n * @param appSchema - app specific JSON schema\n * @param definitionId - definition key of actions\n * @param positionName - target definition to update\n */\nexport function addEnumForActionAnchor(\n    appSchema: Definition,\n    definitionId: string,\n    positionName: string = DefinitionName.CustomActionPosition\n): void {\n    addDescriptiveEnumDefinition(\n        appSchema,\n        appSchema.definitions[definitionId],\n        {\n            definition: positionName,\n            property: 'anchor'\n        },\n        {\n            resolveDefinition: true\n        }\n    );\n}\n\n/**\n * Find the relevant V4 page under the routing targets of manifest,json\n * @param pages - list of all pages in manifest\n * @param pageName - search criterion: page name\n * @param entitySet - search criterion: entity set object from AVT\n * @param contextPath - search criterion: contextPath\n * @returns the page definition in manifest (if found)\n */\nexport function findPageV4(\n    pages: v4.SapUiAppPageV4[],\n    pageName: string,\n    entitySet: EntitySet,\n    contextPath: string\n): v4.SapUiAppPageV4 | undefined {\n    let v4Page: v4.SapUiAppPageV4;\n\n    for (const i in pages) {\n        if (\n            ((contextPath && pages[i].options?.settings?.contextPath === contextPath) ||\n                pages[i].options?.settings?.entitySet === entitySet?.name) &&\n            (pages[i].name === pageName ||\n                (pageName === v4.FE_TEMPLATE_V4_ALP && pages[i].name === v4.FE_TEMPLATE_V4_LIST_REPORT))\n        ) {\n            v4Page = pages[i];\n            break;\n        }\n    }\n    return v4Page;\n}\n\n/**\n * Depending on the template type, strip down the app schema so that only the relevant views are part of it\n * @param {Definition} appSchema - app specific JSON schema, to be adjusted\n * @param {GenerateAppSchemaParameters} generateParameters - object comprising all input parameters\n * @returns the right definition name for the table in the schema\n */\nexport function alignSchemaWithTemplateType(\n    appSchema: Definition,\n    generateParameters: GenerateAppSchemaParameters\n): DefinitionName.Table | DefinitionName.ALPTableView {\n    let tableDefinitionName;\n    const tableDefinition = appSchema.properties[PropertyName.table] as Definition;\n    if (generateParameters.templateType === TemplateType.AnalyticalListPageV4) {\n        tableDefinitionName = DefinitionName.ALPTableView;\n\n        delete tableDefinition.anyOf;\n        tableDefinition.$ref = `${DEFINITION_LINK_PREFIX}${DefinitionName.ALPTableView}`;\n        delete appSchema.definitions[DefinitionName.Table];\n        delete appSchema.definitions[DefinitionName.LRChartView];\n        delete appSchema.definitions[DefinitionName.LRTableView];\n        delete appSchema.definitions[DefinitionName.MultiTableModeV4];\n    } else if (generateParameters.templateType === TemplateType.ListReportObjectPageV4) {\n        tableDefinitionName = DefinitionName.Table;\n\n        delete tableDefinition.anyOf;\n        tableDefinition.$ref = `${DEFINITION_LINK_PREFIX}${DefinitionName.Table}`;\n        (appSchema.definitions[tableDefinitionName] as Definition).properties[PropertyName.annotationPath][\n            SchemaTag.hidden\n        ] = true;\n        delete appSchema.definitions[DefinitionName.ALPTableView];\n        appSchema.properties[PropertyName.defaultPath][SchemaTag.hidden] = true;\n    }\n    return tableDefinitionName;\n}\n\n/**\n * Common function for enhancing LineItems and FieldGroups definitions of app schema by custom action definitions\n * @param appSchema - app-specific JSON schema\n * @param v4Page - actual page in the manifest\n * @param logger - logger for error messages\n * @param customActionDefinitionName - definition name of custom action\n * @param sectionId - identifier of the current object page section in schema\n * @param sectionIdInManifest - identifier of the current object page section in manifest\n */\nexport function addCustomActionDefinition(\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4,\n    logger: ExtensionLogger,\n    customActionDefinitionName: string = DefinitionName.CustomTableAction,\n    sectionId = '',\n    sectionIdInManifest = ''\n): void {\n    const definition = appSchema.definitions[sectionId];\n    if (!definition) {\n        return;\n    }\n    // Sort existing actions\n    let sortedActionsArray = sortPropertiesRecords(definition);\n\n    let configId;\n    if (sectionIdInManifest) {\n        if (customActionDefinitionName.indexOf(DefinitionName.CustomFormActionOP) !== -1) {\n            configId = sectionIdInManifest.replace(/::/g, '#');\n        } else {\n            configId = sectionIdInManifest.replace(/::/g, '/');\n        }\n    } else {\n        if (customActionDefinitionName === DefinitionName.CustomFormActionOP) {\n            configId = `@${UIAnnotationTerms.FieldGroup}`;\n        } else {\n            configId = `@${UIAnnotationTerms.LineItem}`;\n        }\n    }\n\n    const actions = v4Page.options?.settings?.controlConfiguration?.[configId]?.['actions'];\n    if (actions) {\n        sortedActionsArray = addExtensionToArray(\n            actions,\n            sortedActionsArray,\n            customActionDefinitionName,\n            'press',\n            logger\n        );\n    }\n    // Adjust propertyIndex\n    if (sortedActionsArray) {\n        for (let index = 0; index < sortedActionsArray.length; index++) {\n            sortedActionsArray[index][1][SchemaTag.propertyIndex] = index;\n        }\n        const sortedActionsAsObject = {};\n        sortedActionsArray.forEach(([key, value]) => (sortedActionsAsObject[key] = value));\n        (appSchema.definitions[sectionId] as Definition).properties = sortedActionsAsObject;\n    }\n}\n\n/**\n * Common function for enhancing header and footer definitions of app schema by custom action definitions\n * @param appSchema - app-specific JSON schema\n * @param v4Page - actual page in the manifest\n * @param logger - logger for error messages\n * @param customActionDefinitionName - definition name of custom action\n * @param sectionId - identifier of the current object page section in schema\n */\nexport function addHeaderFooterCustomActionDefinition(\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4,\n    logger: ExtensionLogger,\n    customActionDefinitionName: DefinitionName = DefinitionName.CustomHeaderActionOP,\n    sectionId = ''\n): void {\n    const definition = appSchema.definitions[sectionId];\n    if (!definition) {\n        return;\n    }\n    // Sort existing actions\n    let sortedActionsArray = sortPropertiesRecords(definition);\n    let actions;\n    if ([DefinitionName.CustomHeaderAction, DefinitionName.CustomHeaderActionOP].includes(customActionDefinitionName)) {\n        actions = v4Page.options?.settings?.content?.header?.['actions'];\n    } else {\n        actions = v4Page.options?.settings?.content?.footer?.['actions'];\n    }\n    if (actions) {\n        sortedActionsArray = addExtensionToArray(\n            actions,\n            sortedActionsArray,\n            customActionDefinitionName,\n            'press',\n            logger\n        );\n    }\n    // Adjust propertyIndex\n    const sortedActionsAsObject = {};\n    if (sortedActionsArray) {\n        for (let index = 0; index < sortedActionsArray.length; index++) {\n            sortedActionsArray[index][1][SchemaTag.propertyIndex] = index;\n        }\n        sortedActionsArray.forEach(([key, value]) => (sortedActionsAsObject[key] = value));\n    }\n    (appSchema.definitions[sectionId] as Definition).properties = sortedActionsAsObject;\n}\n\n/**\n * Method returns page from manifest by passed page key.\n * @param manifest Object from manifest.json.\n * @param pageId Page id.\n * @param logger Logger to report error of unexisting page.\n * @returns Manifest's target page.\n */\nexport function getManifestPage(\n    manifest: Manifest,\n    pageId: string,\n    logger?: ExtensionLogger\n): v4.RoutingTargetOptions | undefined {\n    const pages = getJSONPropertyByPath(manifest, [\n        ManifestSection.ui5,\n        'routing',\n        'targets'\n    ]) as v4.RoutingTargetOptions;\n    if (!pages) {\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOTARGETS'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5, 'routing']\n            }\n        });\n        return;\n    }\n    const page = getJSONPropertyByPath(pages, [pageId]) as v4.RoutingTargetOptions | undefined;\n    if (!page) {\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOROUTINGID', { routingId: pageId }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5, 'routing']\n            }\n        });\n        return;\n    }\n    return page;\n}\n\n/**\n * Method finds custom view/section XML file for passed page.\n * @param files All extension files.\n * @param pageId Page id.\n * @param manifest Object from manifest.json.\n * @param xmlType XML file type - view or fragment.\n * @param extensionName Extension namespace or path to extension name in page object.\n * @returns Custom page's data containing XML file.\n */\nexport function getPageCustomExtensionFile(\n    files: FileData[],\n    page: v4.RoutingTargetOptions,\n    manifest: Manifest,\n    xmlType: 'view' | 'fragment',\n    extensionName: string\n): ExtensionFileData | undefined {\n    if (extensionName) {\n        const appId = manifest['sap.app']?.id || '';\n        const fileExtension = 'xml';\n        if (extensionName.startsWith(appId)) {\n            // Remove app id from extension name\n            extensionName = extensionName.replace(appId, '');\n        }\n        const fileParts = extensionName.split('.');\n        let baseName = fileParts.pop();\n        baseName = `${baseName}.${xmlType}.${fileExtension}`;\n        const extPath = join(...fileParts, baseName);\n        const file = files.find((file: FileData) => file.dataSourceUri.endsWith(extPath));\n        if (file) {\n            const settings = page.options?.settings as { contextPath?: string; entitySet?: string };\n            return {\n                file,\n                relativeFilePath: extPath,\n                connection: {\n                    contextPath: settings?.contextPath,\n                    entitySet: settings?.entitySet\n                }\n            };\n        }\n    }\n    return undefined;\n}\n\n/**\n * Method finds view XML file for passed page.\n * @param files All view files.\n * @param pageId Page id.\n * @param manifest Object from manifest.json.\n * @param logger Logger.\n * @returns Custom page's data containing view XML file.\n */\nexport function getPageCustomViewFile(\n    files: FileData[],\n    pageId: string,\n    manifest: Manifest,\n    logger?: ExtensionLogger\n): ExtensionFileData | undefined {\n    const page = getManifestPage(manifest, pageId, logger);\n    const viewName = getJSONPropertyByPath(page, ['options', 'settings', 'viewName']);\n    return page && typeof viewName === 'string'\n        ? getPageCustomExtensionFile(files, page, manifest, 'view', viewName)\n        : undefined;\n}\n\n/**\n * Adds custom header or custom sub section definitions to app schema\n * @param appSchema - app-specific JSON schema\n * @param definition - sections definition\n * @param v4Page - actual page in the manifest\n * @param customSectionRef - value of custom section ref\n * @param isMergedSections - are merged section used\n * @param facetKey - facet key\n * @param logger - logger for error messages\n */\nexport function addCustomSectionDefinition(\n    appSchema: Definition,\n    definition: Definition,\n    v4Page: v4.SapUiAppPageV4,\n    customSectionRef: string,\n    isMergedSections: boolean,\n    facetKey?: string,\n    logger?: ExtensionLogger\n): void {\n    let sortedSectionsArray = sortPropertiesRecords(definition);\n    const annotationSectionsMap = new Map<string, string>();\n    sortedSectionsArray = sortedSectionsArray.map((annotationSection) => {\n        const entry = getEnumEntry(appSchema, annotationSection[1] as SchemaDefinition, annotationSection[0], {\n            keyProperties: [SchemaKeyName.id],\n            descriptionAsFallback: true,\n            resolveDefinition: true\n        });\n        annotationSectionsMap.set(entry.const, annotationSection[0]);\n        return [entry.const, annotationSection[1]];\n    });\n    if (facetKey) {\n        // check for already defined section\n        const section = v4Page.options?.settings?.content?.body?.sections?.[facetKey];\n        if (section && 'subSections' in section) {\n            // add extension to subsection of section\n            sortedSectionsArray = addExtensionToArray(\n                section.subSections,\n                sortedSectionsArray,\n                customSectionRef,\n                'template',\n                logger,\n                isMergedSections\n            );\n        }\n    } else {\n        // it is header section\n        const header = v4Page.options?.settings?.content?.header;\n        if (header && 'facets' in header) {\n            // add extension to header section\n            sortedSectionsArray = addExtensionToArray(\n                header.facets as CustomExtensions,\n                sortedSectionsArray,\n                customSectionRef,\n                'template',\n                logger,\n                isMergedSections\n            );\n        }\n    }\n    // Adjust propertyIndex\n    for (let index = 0; index < sortedSectionsArray.length; index++) {\n        sortedSectionsArray[index][1][SchemaTag.propertyIndex] = index;\n    }\n    const sortedActionsAsObject = {};\n    sortedSectionsArray.forEach(([key, value]) => {\n        key = annotationSectionsMap.get(key) || key;\n        sortedActionsAsObject[key] = value;\n    });\n    definition.properties = sortedActionsAsObject;\n}\n\n/**\n * Method adds custom filter fields from manifest to schema properties.\n * @param appSchema - app-specific JSON schema\n * @param definition - filter fields definition\n * @param v4Page - actual page in the manifest\n */\nexport function addCustomFilterFieldDefinition(\n    appSchema: Definition,\n    definition: Definition,\n    v4Page: v4.SapUiAppPageV4\n): void {\n    let sortedFilterFieldsArray: [string, DefinitionOrBoolean][] = sortPropertiesRecords(definition);\n    const annotationSectionsMap = new Map<string, string>();\n    sortedFilterFieldsArray = sortedFilterFieldsArray.map((annotationSection) => {\n        const entry = getEnumEntry(appSchema, annotationSection[1] as SchemaDefinition, annotationSection[0], {\n            keyProperties: [SchemaKeyName.value],\n            descriptionAsFallback: true,\n            resolveDefinition: true\n        });\n        annotationSectionsMap.set(entry.const, annotationSection[0]);\n        return [entry.const, annotationSection[1]];\n    });\n    // check for already defined section\n    const selectionFieldsEntry =\n        v4Page.options?.settings?.controlConfiguration?.[`@${UIAnnotationTerms.SelectionFields}`];\n    if (typeof selectionFieldsEntry === 'object' && 'filterFields' in selectionFieldsEntry) {\n        // add extension to subsection of section\n        sortedFilterFieldsArray = addExtensionToArray(\n            selectionFieldsEntry.filterFields as CustomExtensions,\n            sortedFilterFieldsArray,\n            DefinitionName.CustomFilterField,\n            'template'\n        );\n    }\n    // Adjust propertyIndex\n    for (let index = 0; index < sortedFilterFieldsArray.length; index++) {\n        sortedFilterFieldsArray[index][1][SchemaTag.propertyIndex] = index;\n    }\n    const sortedFilterFieldsAsObject = {};\n    sortedFilterFieldsArray.forEach(([key, value]) => {\n        key = annotationSectionsMap.get(key) || key;\n        sortedFilterFieldsAsObject[key] = value;\n    });\n    definition.properties = sortedFilterFieldsAsObject;\n}\n", "import type { LineItemDataForSchema } from '../utils/utils';\nimport {\n    alignSchemaWithTemplateType,\n    addCustomColumnDefinition,\n    addFragmentEnumForAnchor,\n    addLineItemsTypeToSchema,\n    findPageV4,\n    addEnumForActionAnchor,\n    addCustomActionDefinition,\n    addHeaderFooterCustomActionDefinition,\n    addCustomFilterFieldDefinition\n} from '../utils/utils';\n\nimport {\n    ArtifactType,\n    ManifestSection,\n    UIVOCABULARY,\n    TemplateType,\n    Visualization,\n    SchemaKeyName,\n    PropertyName,\n    DefinitionName,\n    FacetBase,\n    MANIFESTPATH,\n    SchemaTag,\n    LogSeverity,\n    UIVOCABULARYDOT,\n    UIVOCABULARYALPHADOT\n} from '@sap/ux-specification-types';\nimport type { ExtensionLogger, v4, GenerateAppSchemaParameters } from '@sap/ux-specification-types';\nimport type { AnnotationTerm, EntitySet, EntityType, ConvertedMetadata } from '@sap-ux/vocabularies-types';\nimport type { DataFieldAbstractTypes, LineItem, SelectionFields } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport i18next from 'i18next';\nimport { log } from '../../../extensionLogger';\nimport {\n    addEnumForSingleTabVariant,\n    createAnnotationPath,\n    DEFINITION_LINK_PREFIX,\n    determineDataType,\n    findAlias,\n    getDataFieldDescription,\n    getLabelForPropertyPath,\n    prepareRef,\n    parseSchemaDefinition,\n    addDefinitionRef,\n    getCustomExtensionDefinitionName,\n    getDefinitionKey,\n    getFacetDefinitionLink,\n    updatePropertyIndices,\n    replaceNamespaces,\n    addDescriptiveEnumDefinition\n} from '../../common';\nimport type { Definition } from 'typescript-json-schema';\n\nconst ROOT_PROPERTIES_ORDER: Array<keyof v4.ListReportConfigV4> = ['header', 'filterBar', 'chart', 'table'];\n\n/**\n * Adds the selection fields to the app schema, as properties of the FilterBar\n * @param {EntityType} entityType - the entity type as part of the AVT ConvertedMetadata\n * @param {Definition} appSchema - the app specific schema that shall get enhanced\n * @param {AnnotationTerm<SelectionFields>} selectionFieldsAnnotation - the UI.SelectionField annotation\n * @param {Definition} [selectionFieldsDefinition] - Schema definitions of selection fields\n */\nexport function addSelectionFields(\n    entityType: EntityType,\n    appSchema: Definition,\n    selectionFieldsAnnotation: AnnotationTerm<SelectionFields>,\n    selectionFieldsDefinition?: Definition\n): Definition {\n    if (!selectionFieldsDefinition) {\n        selectionFieldsDefinition = appSchema.definitions[DefinitionName.SelectionFields] as Definition;\n        selectionFieldsDefinition.additionalProperties = false;\n        selectionFieldsDefinition.properties = {};\n    }\n    if (entityType) {\n        selectionFieldsDefinition[SchemaTag.annotationPath] = createAnnotationPath(\n            entityType.fullyQualifiedName,\n            UIAnnotationTerms.SelectionFields\n        );\n    }\n    let i = 0;\n    selectionFieldsAnnotation?.forEach((selectionField) => {\n        let description = selectionField.value;\n        const fieldDefinition = 'SelectionField::' + prepareRef(selectionField.value);\n        if (selectionField.type === 'PropertyPath') {\n            description = getLabelForPropertyPath(selectionField, entityType);\n        }\n        selectionFieldsDefinition.properties[fieldDefinition] = {\n            $ref: DEFINITION_LINK_PREFIX + fieldDefinition\n        };\n        selectionFieldsDefinition.properties[fieldDefinition][SchemaTag.propertyIndex] = i;\n        const dataType = determineDataType(selectionField);\n        appSchema.definitions[fieldDefinition] = {\n            type: 'object',\n            properties: {},\n            description,\n            additionalProperties: false,\n            ...(dataType && { dataType })\n        };\n        appSchema.definitions[fieldDefinition][SchemaTag.isViewNode] = true;\n        appSchema.definitions[fieldDefinition][SchemaTag.keys] = [\n            { name: SchemaKeyName.value, value: `${selectionField.value}` }\n        ];\n        if (selectionField.$target?.fullyQualifiedName.indexOf('@') > -1) {\n            appSchema.definitions[fieldDefinition][SchemaTag.target] = selectionField.$target.fullyQualifiedName\n                .split('@')[0]\n                .split('/')[0];\n        } else if (selectionField.$target?.fullyQualifiedName) {\n            appSchema.definitions[fieldDefinition][SchemaTag.target] =\n                selectionField.$target.fullyQualifiedName.split('/')[0];\n        }\n\n        appSchema.definitions[fieldDefinition][SchemaTag.annotationType] = selectionField?.type;\n        appSchema.definitions[fieldDefinition][SchemaTag.annotationPath] = `${\n            selectionFieldsDefinition[SchemaTag.annotationPath]\n        }/${i}`;\n        i++;\n    });\n    return selectionFieldsDefinition;\n}\n\n/**\n * Returns visual filters (if defined) from manifest page\n * @param {SapUiAppPageV4} v4Page - actual page in the manifest\n * @returns\n */\nfunction getVisualFilters(v4Page: v4.SapUiAppPageV4): {} | undefined {\n    const selectionFields =\n        v4Page.options.settings?.controlConfiguration?.[`@${UIAnnotationTerms.SelectionFields}`]?.['filterFields'];\n    if (selectionFields) {\n        const visualFilters = {};\n        Object.keys(selectionFields).forEach((field) => {\n            if (!selectionFields[field].template) {\n                visualFilters[field] = selectionFields[field];\n            }\n        });\n        return Object.keys(visualFilters).length > 0 ? visualFilters : undefined;\n    }\n}\n\n/**\n * Collects indexes of selection fields and entityProperties to sort visual filters\n * @param {AnnotationTerm<SelectionFields>} selectionFieldsAnnotation - the UI.SelectionField annotation\n * @param {EntityType} entityType - the entity type as part of the AVT ConvertedMetadata\n * @returns\n */\nfunction getPropertiesIndex(selectionFields: AnnotationTerm<SelectionFields>, entityType: EntityType): string[] {\n    const properties: string[] = [];\n    selectionFields?.forEach((selectionField) => properties.push(selectionField.value));\n    if (entityType) {\n        entityType.entityProperties.forEach((property) =>\n            !properties.includes(property.name) ? properties.push(property.name) : undefined\n        );\n    }\n    return properties;\n}\n\n/**\n * Adds visual filters to the app schema, as properties of the FilterBar\n * @param {EntityType} entityType - the entity type as part of the AVT ConvertedMetadata\n * @param {Definition} appSchema - the app specific schema that shall get enhanced\n * @param visualFiltersManifest - the UI.SelectionFields under controlConfiguration\n * @param {AnnotationTerm<SelectionFields>} selectionFieldsAnnotation - the UI.SelectionField annotation\n */\nfunction addVisualFilters(\n    entityType: EntityType,\n    appSchema: Definition,\n    visualFiltersManifest: any,\n    selectionFields: AnnotationTerm<SelectionFields>\n) {\n    const propertiesIndex = getPropertiesIndex(selectionFields, entityType);\n    const visualFilters = appSchema.definitions[DefinitionName.VisualFilters] as Definition;\n    visualFilters.properties = {};\n    for (const fieldName in visualFiltersManifest) {\n        const filterField = visualFiltersManifest[fieldName];\n        // No custom filter field support in visual filters\n        if (!filterField.template) {\n            const visualFiltersField = (visualFilters.properties[fieldName] = {\n                $ref: getFacetDefinitionLink(DefinitionName.VisualFilter, fieldName)\n            });\n            const propertyIndex = propertiesIndex.indexOf(fieldName);\n            if (propertyIndex !== -1) {\n                visualFiltersField[SchemaTag.propertyIndex] = propertyIndex;\n            }\n            const filterDefinition = parseSchemaDefinition(DefinitionName.VisualFilter, fieldName, appSchema);\n            if (filterField.visualFilter?.valueList) {\n                filterDefinition[SchemaTag.annotationPath] = `${fieldName}/@${filterField.visualFilter.valueList}`;\n            }\n            const annotationLabel = entityType?.entityProperties\n                ?.find((property) => property.name === fieldName)\n                ?.annotations?.Common?.Label?.toString();\n            filterDefinition.description = annotationLabel || fieldName;\n            filterDefinition[SchemaTag.keys] = [{ name: SchemaKeyName.value, value: fieldName }];\n        }\n    }\n}\n\n/**\n * Method updates schema for custom filter fields:\n * 1. Enables creation of custom filter fields;\n * 2. Populates custom filter fields from manifest to schema;\n * @param {Definition} appSchema - the app specific schema that shall get enhanced\n * @param {Definition} selectionFieldsDefinition - schema of selection fields which should contain custom filter fields\n * @param {SapUiAppPageV4} v4Page - actual page in the manifest\n */\nfunction applyCustomFilterFields(\n    appSchema: Definition,\n    selectionFieldsDefinition: Definition,\n    v4Page: v4.SapUiAppPageV4\n): void {\n    selectionFieldsDefinition.additionalProperties = {\n        $ref: `#/definitions/${DefinitionName.CustomFilterField}`\n    };\n    addCustomFilterFieldDefinition(appSchema, selectionFieldsDefinition, v4Page);\n    const customSectionDefinition = appSchema.definitions[DefinitionName.CustomFilterFieldPosition];\n    if (typeof customSectionDefinition === 'object') {\n        addDescriptiveEnumDefinition(\n            appSchema,\n            selectionFieldsDefinition,\n            {\n                schema: customSectionDefinition,\n                property: 'anchor'\n            },\n            {\n                resolveDefinition: true,\n                keyProperties: [SchemaKeyName.value, SchemaKeyName.key],\n                descriptionAsFallback: true\n            }\n        );\n    }\n}\n\n/**\n * Adds selection fields or compact/visual filters to filter bar\n * @param {EntityType} entityType - actual entity type (AVT information)\n * @param {Definition} appSchema - app-specific JSON schema\n * @param {SapUiAppPageV4} v4Page - actual page in the manifest\n * @param {string} alias - the given alias or namespace of the OData annotations\n */\nfunction addFilterBar(entityType: EntityType, appSchema: Definition, v4Page: v4.SapUiAppPageV4, alias: string) {\n    const visualFilters = getVisualFilters(v4Page);\n    const selectionFields = alias && entityType?.annotations?.[alias]?.SelectionFields;\n    let selectionFieldsDefinition;\n    // Hide visualFilters/selectionFields depending on existing visual filters\n    if (visualFilters) {\n        appSchema.definitions[DefinitionName.SelectionFields][SchemaTag.hidden] = true;\n        appSchema.definitions[DefinitionName.SelectionFields]['properties'] = {};\n        selectionFieldsDefinition = appSchema.definitions[DefinitionName.CompactFilters];\n        selectionFieldsDefinition.additionalProperties = false;\n        selectionFieldsDefinition.properties = {};\n        addVisualFilters(entityType, appSchema, visualFilters, selectionFields);\n    } else {\n        const filterBar = appSchema.definitions[DefinitionName.FilterBar] as Definition;\n        filterBar.properties['initialLayout'][SchemaTag.hidden] = true;\n        filterBar.properties['layout'][SchemaTag.hidden] = true;\n        appSchema.definitions[DefinitionName.CompactFilters][SchemaTag.hidden] = true;\n        appSchema.definitions[DefinitionName.VisualFilters][SchemaTag.hidden] = true;\n    }\n    selectionFieldsDefinition = addSelectionFields(entityType, appSchema, selectionFields, selectionFieldsDefinition);\n    // Apply custom filter fields\n    applyCustomFilterFields(appSchema, selectionFieldsDefinition, v4Page);\n}\n\nfunction defineActions(\n    appSchema: Definition,\n    schemaIdForActions: string,\n    annotations,\n    targetAnnotation: string,\n    entityType: EntityType\n) {\n    appSchema.definitions[schemaIdForActions] = JSON.parse(JSON.stringify(appSchema.definitions['Actions']));\n    const actions = appSchema.definitions[schemaIdForActions] as Definition;\n    actions.properties = {};\n    actions.additionalProperties = false;\n    const chartAnnotation = annotations[targetAnnotation?.split(`${UIVOCABULARY}.`)[1]];\n    if (chartAnnotation && chartAnnotation.Actions) {\n        let i = 0;\n        chartAnnotation.Actions.forEach((actionRecord) => {\n            const actionDefinition = prepareRef(`${DefinitionName.ChartToolBarAction}<${actionRecord.Action}>`);\n            const description = getDataFieldDescription(actionRecord as DataFieldAbstractTypes, entityType);\n            const prefix = actionRecord.$Type.split(`${UIVOCABULARY}.`)[1];\n            const action = (actions.properties[`${prefix}::${actionRecord.Action}`] = {\n                $ref: DEFINITION_LINK_PREFIX + actionDefinition,\n                description\n            });\n            //Add tags\n            action[SchemaTag.propertyIndex] = i;\n            action[SchemaTag.annotationType] = actionRecord.$Type;\n            action[SchemaTag.annotationPath] = `/${actionRecord.fullyQualifiedName}`;\n            //as ChartToolBarAction is an empty object, copy ViewToolBarAction and remove properties\n            appSchema.definitions[actionDefinition] = JSON.parse(\n                JSON.stringify(appSchema.definitions[DefinitionName.ViewToolBarAction])\n            );\n            (appSchema.definitions[actionDefinition] as Definition).properties = {};\n            appSchema.definitions[actionDefinition][SchemaTag.annotationPath] = actionRecord.fullyQualifiedName;\n            i++;\n        });\n    }\n}\n\n/**\n * Finds the right visualization for a given view\n * @param allVisualizations - list of visualizations for the given (S)PV\n * @param namespace - namespace for the UI annotations\n * @param viewKey - view key: primary, secondary, or anything else; may also be undefined. The first visualization is taken in this case.\n * @param visualizationType - allows to find the right visualization if there are many.\n * @returns the value of the first fitting visualization\n */\nfunction findTheRightVisualization(\n    allVisualizations: Array<object>,\n    namespace: string,\n    viewKey?: string,\n    visualizationType?: Visualization\n): { visualization?: string; targetAnnotation: string } {\n    let visualization: string | undefined, visualizationObject: object, targetAnnotation: string;\n    if (allVisualizations) {\n        if (viewKey === 'primary') {\n            visualizationObject = allVisualizations.find((vis) => {\n                return vis['value'].indexOf('Chart') > -1;\n            });\n        } else if (viewKey === 'secondary') {\n            visualizationObject = allVisualizations.find((vis) => {\n                return vis['value'].indexOf(FacetBase.LineItem) > -1;\n            });\n        } else {\n            if (visualizationType) {\n                visualizationObject = allVisualizations.find((v) => v['value'].indexOf(visualizationType) > -1);\n            } else {\n                visualizationObject = allVisualizations[0];\n            }\n        }\n        visualization =\n            typeof visualizationObject?.['value'] === 'string'\n                ? replaceNamespaces(visualizationObject['value'])\n                : undefined;\n        if (visualizationObject?.['$target']?.fullyQualifiedName) {\n            targetAnnotation = `/${namespace}/${visualizationObject['$target'].fullyQualifiedName.split(namespace)[1]}`;\n        } else if (visualization) {\n            targetAnnotation = `/${namespace}/` + visualization.replace(`UI`, UIVOCABULARY);\n        }\n    }\n    return { visualization, targetAnnotation };\n}\n\n/**\n * An annotationPath must be analyzed, to find the right target annotation and visualization\n *\n */\nfunction analyzeChartAnnotation(\n    namespace: string,\n    annotationPath: string,\n    annotationAVT: object,\n    viewKey: string\n): { visualization: string; targetAnnotation: string; chartTitle: string } {\n    const visualization = '@UI.Chart';\n    const targetAnnotationFullName = `/${namespace}/@${annotationPath}`;\n    let chartTitle: string;\n\n    if (annotationAVT['Title']) {\n        chartTitle = annotationAVT['Title'];\n    } else {\n        chartTitle = `Chart View (${viewKey})`;\n    }\n    return { visualization, targetAnnotation: targetAnnotationFullName, chartTitle };\n}\n\n/**\n * An annotationPath must be analyzed, to find the right target annotation and visualization\n * @param annotationPath - given annotationPath\n * @param uIAnnotations - annotations of UI namespace of the given entityType\n * @param serviceAVT Combined service metadata, as returned by annotation vocabularies tools.\n * @param viewKey - allows to distinguish the different view types (LR or ALP)\n * @param visualizationType - allows to find the right visualization if there are many.\n * @param logger - extension logger.\n * @returns { visualization: string describing the visualization of the annotation,\n *            targetAnnotation: the target annotation behind the visualization\n *            namespace: namespace of the annotation,\n *            title: title to be shown, derived from the annotation }\n */\nexport function analyzeViewAnnotation(\n    annotationPath: string,\n    uIAnnotations: object,\n    serviceAVT: ConvertedMetadata,\n    viewKey?: string,\n    visualizationType?: Visualization,\n    logger?: ExtensionLogger\n): { visualization: string; targetAnnotation: string; namespace: string; title: string } {\n    let namespace: string = undefined,\n        title: string;\n    const UILINEITEM = '@UI.LineItem';\n    const annotationInManifest = annotationPath?.split(`${UIVOCABULARY}.`)[1];\n    const annotationAVT = annotationInManifest && uIAnnotations[annotationInManifest];\n    if (!annotationAVT) {\n        return { visualization: undefined, targetAnnotation: undefined, namespace, title: `View (${viewKey})` };\n    }\n    title = annotationAVT.Text;\n    namespace = annotationAVT.fullyQualifiedName.split(UIVOCABULARYALPHADOT)[0];\n\n    if (annotationInManifest.startsWith('PresentationVariant')) {\n        const { visualization, targetAnnotation } = findTheRightVisualization(\n            annotationAVT.Visualizations,\n            namespace,\n            viewKey,\n            visualizationType\n        );\n        title = title || `View (${viewKey})`;\n        return { visualization, targetAnnotation, namespace, title };\n    } else if (annotationInManifest.startsWith('SelectionPresentationVariant')) {\n        let { visualization, targetAnnotation } = findTheRightVisualization(\n            annotationAVT.PresentationVariant?.Visualizations,\n            namespace,\n            viewKey,\n            visualizationType\n        );\n        if (!visualization) {\n            log(logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOVISUALIZATIONS')\n            });\n            visualization = UILINEITEM; // default visualization\n            targetAnnotation = `/${namespace}/` + visualization.replace(`UI`, UIVOCABULARY); // default targetAnnotation\n        }\n        title = title || `View (${viewKey})`;\n        return { visualization, targetAnnotation, namespace, title };\n    } else if (annotationInManifest.startsWith('SelectionVariant')) {\n        const visualization = UILINEITEM;\n        const targetAnnotation = `/${namespace}/@${UIAnnotationTerms.LineItem}`;\n        title = title || `Table View (${viewKey})`;\n        return { visualization, targetAnnotation, namespace, title };\n    } else if (annotationInManifest.startsWith('LineItem')) {\n        let visualization = UILINEITEM;\n        if (annotationAVT.qualifier) {\n            visualization += `#${annotationAVT.qualifier}`;\n        }\n        const targetAnnotation = `/${namespace}/@${annotationPath}`;\n        title = title || `Table View (${viewKey})`;\n        return { visualization, targetAnnotation, namespace, title };\n    } else if (annotationInManifest.startsWith('Chart')) {\n        const { visualization, targetAnnotation, chartTitle } = analyzeChartAnnotation(\n            namespace,\n            annotationPath,\n            annotationAVT,\n            viewKey\n        );\n        return { visualization, targetAnnotation, namespace, title: chartTitle };\n    }\n    return { visualization: undefined, targetAnnotation: undefined, namespace, title: `View (${viewKey})` };\n}\n\n/**\n * Adds the ALP chart view to the app-specific schema\n * @param {Definition} appSchema - app-specific JSON schema\n * @param targetAnnotation - target annotation of the chart view, as determined by analyzeViewAnnotation\n * @param annotations - UI annotations, as determined by AVT\n */\nfunction addALPChartView(appSchema: Definition, chartAnnotationPath: string, targetAnnotation: string, annotations) {\n    const chartView = appSchema.definitions[DefinitionName.ALPChartView] as Definition;\n    appSchema.definitions[DefinitionName.ALPChart] = JSON.parse(JSON.stringify(chartView));\n    delete appSchema.definitions[DefinitionName.ALPChart][SchemaTag.isViewNode];\n    if (targetAnnotation) {\n        appSchema.definitions[DefinitionName.ALPChart][SchemaTag.annotationPath] = targetAnnotation;\n    }\n    (appSchema.definitions[DefinitionName.ALPChart] as Definition).properties.annotationPath[SchemaTag.hidden] = true;\n\n    chartView.properties.annotationPath[SchemaTag.hidden] = true;\n    chartView.additionalProperties = false;\n    chartView.description = `Chart (key: primary)`;\n    chartView.title = `Chart`;\n    chartView.$ref = `${DEFINITION_LINK_PREFIX}${DefinitionName.ALPChart}`;\n    if (chartAnnotationPath) {\n        const viewAnnotation = chartAnnotationPath.split(UIVOCABULARYDOT)[1];\n        const pathParts = annotations[viewAnnotation].fullyQualifiedName.split('@');\n        chartView[SchemaTag.annotationPath] = `/${pathParts[0]}/@${pathParts[1]}`;\n    }\n    chartView[SchemaTag.artifactType] = ArtifactType.Manifest;\n    chartView[SchemaTag.key] = 'primary';\n    chartView[SchemaTag.keys] = [{ name: SchemaKeyName.key, value: 'primary' }];\n}\n\n/**\n * Adds the ALP views to the app-specific schema\n * @param {Definition} appSchema - app-specific JSON schema\n * @param {Array<Object>} viewsPaths - views' paths' section in the manifest\n * @param {EntityType} entityType - actual entity type of the page's entitySet\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param templateAnnotation - defaultTemplateAnnotationPath as registered in manifest\n * @param {SapUiAppPageV4} v4Page - actual page in the manifest\n */\nfunction addALPViews(\n    appSchema: Definition,\n    viewsPaths: Array<Object>,\n    entityType: EntityType,\n    generateParameters: GenerateAppSchemaParameters,\n    templateAnnotation: string,\n    v4Page: v4.SapUiAppPageV4,\n    tableDefinitionName: string\n) {\n    const annotations = entityType?.annotations.UI;\n    //1. Chart View\n    const chartAnnotationPath = viewsPaths?.[0]?.['primary']?.[0]?.[SchemaTag.annotationPath];\n    const { targetAnnotation } = analyzeViewAnnotation(\n        chartAnnotationPath,\n        annotations,\n        generateParameters.serviceAVT,\n        'primary',\n        undefined,\n        generateParameters.logger\n    );\n    addALPChartView(appSchema, chartAnnotationPath, targetAnnotation, annotations);\n    // Copy toolbar\n    const schemaIdForActions = `Actions<ALPChart>`;\n    (appSchema.definitions[DefinitionName.ViewChartToolBar] as Definition).properties.actions['$ref'] =\n        DEFINITION_LINK_PREFIX + schemaIdForActions;\n\n    defineActions(appSchema, schemaIdForActions, annotations, targetAnnotation, entityType);\n\n    //2. Table View\n    const { visualization: tableVisualization, targetAnnotation: target } = analyzeViewAnnotation(\n        viewsPaths?.[0]?.['secondary']?.[0]?.[SchemaTag.annotationPath],\n        annotations,\n        generateParameters.serviceAVT,\n        'secondary',\n        undefined,\n        generateParameters.logger\n    );\n    const tableDefinition = appSchema.definitions[tableDefinitionName] as Definition;\n    if (tableVisualization || templateAnnotation) {\n        tableDefinition.properties.toolBar['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.ToolBarLR}`;\n        // Switch from generic column to specific definition\n        tableDefinition.properties['columns'] = {\n            $ref: DEFINITION_LINK_PREFIX + DefinitionName.LineItems\n        };\n        tableDefinition.properties.annotationPath[SchemaTag.hidden] = true;\n    } else {\n        tableDefinition.properties = {};\n    }\n    const tableView = appSchema.definitions[DefinitionName.ALPTableView] as Definition;\n    appSchema.definitions[DefinitionName.ALPTable] = JSON.parse(JSON.stringify(tableView));\n    delete appSchema.definitions[DefinitionName.ALPTable][SchemaTag.isViewNode];\n    tableView.additionalProperties = false;\n    tableView.description = `Table (key: secondary)`;\n    tableView.title = `Table`;\n    if (tableVisualization) {\n        delete tableView.properties;\n        tableView.$ref = `${DEFINITION_LINK_PREFIX}${DefinitionName.ALPTable}`;\n    } else if (!templateAnnotation) {\n        tableView.properties = {};\n    }\n    tableView[SchemaTag.artifactType] = ArtifactType.Manifest;\n\n    let annotationTerm: string, viewAnnotation: string;\n    if (tableVisualization && tableVisualization.indexOf(FacetBase.LineItem) > -1) {\n        annotationTerm = tableVisualization.split('.')[1];\n        viewAnnotation = viewsPaths[0]['secondary'][0].annotationPath.split(UIVOCABULARYDOT)[1];\n    } else if (templateAnnotation) {\n        annotationTerm = viewAnnotation = templateAnnotation.split(UIVOCABULARYDOT)[1];\n    }\n    if (annotationTerm) {\n        const dataForLineItem: LineItemDataForSchema = {\n            appSchema,\n            lineItemAnnotation: entityType?.annotations.UI[annotationTerm] as AnnotationTerm<LineItem>,\n            entityType,\n            oDataServiceAVT: generateParameters.serviceAVT,\n            lineItemId: DefinitionName.LineItems\n        };\n        addLineItemsTypeToSchema(dataForLineItem, DefinitionName.ViewTableColumn);\n        if (target) {\n            appSchema.definitions[DefinitionName.ALPTable][SchemaTag.annotationPath] = target;\n        }\n        const pathParts = annotations[viewAnnotation].fullyQualifiedName.split('@');\n        tableView[SchemaTag.annotationPath] = `/${pathParts[0]}/@${pathParts[1]}`;\n        tableView[SchemaTag.key] = 'secondary';\n        tableView[SchemaTag.keys] = [{ name: SchemaKeyName.key, value: 'secondary' }];\n    }\n    addCustomColumnDefinition(appSchema, v4Page, generateParameters.logger);\n    // Table toolbar actions with custom actions\n    const schemaIdForToolbarActions = `${DefinitionName.Actions}<${prepareRef(DefinitionName.LineItems)}>`;\n    addCustomActionDefinition(appSchema, v4Page, generateParameters.logger, undefined, schemaIdForToolbarActions);\n    addEnumForActionAnchor(appSchema, schemaIdForToolbarActions, DefinitionName.CustomActionPosition);\n}\n\ntype ViewsParameters = {\n    viewKey: string;\n    appSchema: Definition;\n    targetAnnotation: string;\n    navPropName: string;\n    targetEntityType: EntityType;\n    title: string;\n    entitySet?: string;\n};\n\n/**\n * Modifies the app schema, adds the right line chart settings\n * @param inputParameters - list of input parameters as collected by the calling instance\n * @param annotations - UI annotations of the given entityType\n * @returns the ID for the chart view in schema\n */\nfunction addViewChartDefinitions(inputParameters: ViewsParameters, annotations): string {\n    const idForChart = `${DefinitionName.LRChartView}<${inputParameters.viewKey}>`;\n    inputParameters.appSchema.definitions[idForChart] = JSON.parse(\n        JSON.stringify(inputParameters.appSchema.definitions[DefinitionName.LRChartView])\n    );\n    delete inputParameters.appSchema.definitions[idForChart][SchemaTag.isViewNode];\n    inputParameters.appSchema.definitions[idForChart][SchemaTag.annotationPath] = inputParameters.targetAnnotation;\n    if (inputParameters.navPropName) {\n        inputParameters.appSchema.definitions[idForChart]['navigationProperty'] = inputParameters.navPropName;\n    }\n    //Copy toolbar\n    const idForToolbar = `${DefinitionName.ViewChartToolBar}<${inputParameters.viewKey}>`;\n    inputParameters.appSchema.definitions[idForToolbar] = JSON.parse(\n        JSON.stringify(inputParameters.appSchema.definitions[DefinitionName.ViewChartToolBar])\n    );\n    inputParameters.appSchema.definitions[idForChart]['properties'].toolBar.$ref =\n        `${DEFINITION_LINK_PREFIX}${idForToolbar}`;\n    //Copy actions\n    const schemaIdForActions = `${DefinitionName.Actions}<${inputParameters.viewKey}>`;\n    defineActions(\n        inputParameters.appSchema,\n        schemaIdForActions,\n        annotations,\n        inputParameters.targetAnnotation,\n        inputParameters.targetEntityType\n    );\n    inputParameters.appSchema.definitions[idForToolbar]['properties'][PropertyName.actions]['$ref'] =\n        `${DEFINITION_LINK_PREFIX}${schemaIdForActions}`;\n\n    return idForChart;\n}\n\n/**\n * Adds the definition of a chart view to the app schema\n * @param inputParameters - list of input parameters as collected by the calling instance\n * @param UIAnnotations - AVT UI annotations of the given entity type\n * @param appSchema - app schema\n * @param viewsDefinition - the views definition in app schema (MultiTableModeV4)\n * @param viewKey - view key\n * @param title - view title\n */\nfunction addViewChart(\n    inputParameters: ViewsParameters,\n    UIAnnotations,\n    appSchema: Definition,\n    viewsDefinition: Definition,\n    viewKey: string,\n    title: string\n) {\n    const idForChart = addViewChartDefinitions(inputParameters, UIAnnotations);\n    (appSchema.definitions[idForChart] as Definition).properties.annotationPath[SchemaTag.hidden] = true;\n    (appSchema.definitions[idForChart] as Definition).properties.index[SchemaTag.hidden] = true;\n    (appSchema.definitions[idForChart] as Definition).properties.entitySet[SchemaTag.hidden] = true;\n    const titleOnHover = `Chart View (key: ${viewKey})`;\n    viewsDefinition.properties[viewKey] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${idForChart}`,\n        description: title ? title : titleOnHover,\n        title: titleOnHover\n    };\n}\n\n/**\n * Modifies the app schema, adds the right line item settings as derived from the visualization\n * @param inputParameters - list of input parameters as collected by the calling instance\n * @param viewsDefinition - the views definition in app schema (MultiTableModeV4)\n * @param visualization - visualization from the given (S)PV\n * @param templateAnnotation - defaultTemplateAnnotationPath as registered in manifest\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n */\nfunction addViewLineItems(\n    inputParameters: ViewsParameters,\n    viewsDefinition: Definition,\n    visualization: string,\n    templateAnnotation: string,\n    generateParameters: GenerateAppSchemaParameters\n): void {\n    const tableId = `${DefinitionName.LRTableView}<${inputParameters.viewKey}>`;\n    const viewId = `${DefinitionName.LineItemsOfView}::${inputParameters.viewKey}`;\n    const lrTableView = parseSchemaDefinition(\n        DefinitionName.LRTableView,\n        inputParameters.viewKey,\n        inputParameters.appSchema\n    );\n    delete lrTableView[SchemaTag.isViewNode];\n    lrTableView[SchemaTag.annotationPath] = inputParameters.targetAnnotation;\n    if (inputParameters.navPropName) {\n        lrTableView['navigationProperty'] = inputParameters.navPropName;\n    }\n    if (inputParameters.entitySet) {\n        lrTableView['entitySet'] = inputParameters.entitySet;\n    }\n    //Copy toolbar\n    addDefinitionRef(lrTableView.properties.toolBar as Definition, DefinitionName.ToolBar, viewId);\n    const title = `Table View (key: ${inputParameters.viewKey})`;\n    viewsDefinition.properties[inputParameters.viewKey] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${tableId}`,\n        description: inputParameters.title || title,\n        title\n    };\n    addDefinitionRef(lrTableView.properties.columns as Definition, viewId);\n    lrTableView.properties.annotationPath[SchemaTag.hidden] = true;\n    lrTableView.properties.index[SchemaTag.hidden] = true;\n    lrTableView.properties.entitySet[SchemaTag.hidden] = true;\n    const annotationTerm = visualization?.split('.')[1] || templateAnnotation.split(UIVOCABULARYDOT)[1];\n    const dataForLineItem: LineItemDataForSchema = {\n        appSchema: inputParameters.appSchema,\n        lineItemAnnotation: inputParameters.targetEntityType?.annotations.UI[\n            annotationTerm\n        ] as AnnotationTerm<LineItem>,\n        entityType: inputParameters.targetEntityType,\n        oDataServiceAVT: generateParameters.serviceAVT,\n        lineItemId: viewId\n    };\n    addLineItemsTypeToSchema(\n        dataForLineItem,\n        DefinitionName.ViewTableColumn,\n        DefinitionName.ViewCustomColumn,\n        DefinitionName.ViewCustomAction\n    );\n}\n\n/**\n * Adds the schema tags to a given view\n * @param viewsDefinition - the views definition in app schema (MultiTableModeV4)\n * @param viewKey - key property of the view\n * @param namespace - target namespace for annotations\n * @param view - the given view\n */\nfunction addTagsToView(viewsDefinition: Definition, viewKey: string, namespace: string, view: Object) {\n    viewsDefinition.properties[viewKey][SchemaTag.isViewNode] = true;\n    viewsDefinition.properties[viewKey][SchemaTag.annotationPath] = namespace\n        ? `/${namespace}/@${view[SchemaTag.annotationPath]}`\n        : undefined;\n    viewsDefinition.properties[viewKey][SchemaTag.artifactType] = ArtifactType.Manifest;\n    viewsDefinition.properties[viewKey][SchemaTag.key] = viewKey;\n    viewsDefinition.properties[viewKey][SchemaTag.keys] = [{ name: SchemaKeyName.key, value: viewKey }];\n}\n\n/**\n * Adjusts the entity type if a different entity set is maintained for a view\n * @param {EntitySet} entitySet - actual entity set (AVT information)\n * @param view - the current view in manifest\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {EntityType} entityType - actual entity type of the page's entitySet\n * @returns the target entity type\n */\nfunction getTargetEntityType(\n    entitySet: EntitySet,\n    view: Object,\n    generateParameters: GenerateAppSchemaParameters,\n    entityType: EntityType\n): EntityType {\n    let targetEntityType = entityType;\n    let viewEntitySet = entitySet;\n    if (view['entitySet'] && view['entitySet'] !== entitySet.name) {\n        viewEntitySet = generateParameters.serviceAVT?.entitySets.find((es) => {\n            return es.name === view['entitySet'];\n        });\n        targetEntityType = viewEntitySet.entityType;\n    }\n    return targetEntityType;\n}\n\n/**\n * Adds view custom extensions - custom column and custom action definitions\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {object} commonInputParameters - list of input parameters as collected by the calling instance\n * @param {string} visualization - visualization of the annotation\n * @param {SapUiAppPageV4} v4Page - the given page in manifest\n */\nfunction addViewCustomExtensions(\n    commonInputParameters: ViewsParameters,\n    generateParameters: GenerateAppSchemaParameters,\n    visualization: string,\n    v4Page: v4.SapUiAppPageV4\n) {\n    const sectionId = `${DefinitionName.LineItemsOfView}::${commonInputParameters.viewKey}`;\n    const sectionIdPrefix = commonInputParameters.entitySet ? `/${commonInputParameters.entitySet}/` : '';\n    const sectionIdInManifest = `${sectionIdPrefix}@${UIAnnotationTerms.LineItem}${\n        visualization.split(Visualization.LineItem)[1]\n    }`;\n    const viewColumnDefinition = parseSchemaDefinition(\n        DefinitionName.ViewCustomColumn,\n        sectionId,\n        commonInputParameters.appSchema\n    );\n    addDefinitionRef(viewColumnDefinition.properties.position as Definition, DefinitionName.ViewPosition, sectionId);\n    parseSchemaDefinition(DefinitionName.ViewPosition, sectionId, commonInputParameters.appSchema);\n    addCustomColumnDefinition(\n        commonInputParameters.appSchema,\n        v4Page,\n        generateParameters.logger,\n        `${DefinitionName.ViewCustomColumn}<${sectionId}>`,\n        sectionId,\n        sectionIdInManifest\n    );\n    addFragmentEnumForAnchor(\n        commonInputParameters.appSchema,\n        sectionId,\n        v4Page,\n        `${DefinitionName.ViewPosition}<${sectionId}>` as DefinitionName,\n        sectionIdInManifest\n    );\n    // Remove generic position\n    if (commonInputParameters.appSchema.definitions.Position) {\n        delete commonInputParameters.appSchema.definitions.Position;\n        delete commonInputParameters.appSchema.definitions.TableCustomColumn;\n    }\n    // Table toolbar actions with custom actions\n    const schemaIdForToolbarActions = `${DefinitionName.Actions}<${sectionId}>`;\n    const customActionDefinitionKey = `${DefinitionName.ViewCustomAction}<${sectionId}>`;\n    addCustomActionDefinition(\n        commonInputParameters.appSchema,\n        v4Page,\n        generateParameters.logger,\n        customActionDefinitionKey,\n        schemaIdForToolbarActions,\n        sectionIdInManifest\n    );\n    // Anchor selection\n    parseSchemaDefinition(DefinitionName.ViewCustomActionPosition, sectionId, commonInputParameters.appSchema);\n    const customActionPositionDefinitionKey = `${DefinitionName.ViewCustomActionPosition}<${sectionId}>`;\n    const customActionDefinition = commonInputParameters.appSchema.definitions[customActionDefinitionKey] as Definition;\n    (customActionDefinition.properties.position as Definition).$ref =\n        `${DEFINITION_LINK_PREFIX}${customActionPositionDefinitionKey}`;\n    addEnumForActionAnchor(\n        commonInputParameters.appSchema,\n        schemaIdForToolbarActions,\n        customActionPositionDefinitionKey\n    );\n}\n\n/**\n * Adds definition parts to a LR View (LineItem/Chart)\n * @param {string} templateAnnotation - defaultTemplateAnnotationPath as registered in manifest\n * @param {string} visualization - visualization of the annotation\n * @param viewsDefinition - the views definition in app schema (MultiTableModeV4)\n * @param {object} commonInputParameters - list of input parameters as collected by the calling instance\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {SapUiAppPageV4} v4Page - the given page in manifest\n * @param uiAnnotations - UI annotations of the given entityType\n * @paran view - the given view\n */\nfunction addLRViewParts(\n    visualization: string,\n    viewsDefinition: Definition,\n    commonInputParameters: ViewsParameters,\n    generateParameters: GenerateAppSchemaParameters,\n    v4Page: v4.SapUiAppPageV4,\n    uiAnnotations: object,\n    view: object\n) {\n    if (visualization?.indexOf(Visualization.LineItem) > -1) {\n        //Add Line item view\n        addViewLineItems(\n            commonInputParameters,\n            viewsDefinition,\n            visualization,\n            commonInputParameters.targetAnnotation,\n            generateParameters\n        );\n        addViewCustomExtensions(commonInputParameters, generateParameters, visualization, v4Page);\n    } else if (visualization?.indexOf('Chart') > -1) {\n        //Add Chart view\n        addViewChart(\n            commonInputParameters,\n            uiAnnotations,\n            commonInputParameters.appSchema,\n            viewsDefinition,\n            commonInputParameters.viewKey,\n            commonInputParameters.title\n        );\n    } else if (view['template']) {\n        const titleOnHover = view['label'] || `Custom View (key: ${commonInputParameters.viewKey})`;\n        viewsDefinition.properties[commonInputParameters.viewKey] = {\n            description: commonInputParameters.title || titleOnHover,\n            title: titleOnHover,\n            // Default view - use table view reference as default\n            $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.TableViewExtension}`\n        };\n    } else {\n        const titleOnHover = `View (key: ${commonInputParameters.viewKey})`;\n        viewsDefinition.properties[commonInputParameters.viewKey] = {\n            description: commonInputParameters.title || titleOnHover,\n            title: titleOnHover,\n            // Default view - use table view reference as default\n            $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.LRTableView}`\n        };\n    }\n}\n\n/**\n * Add list report views to the app-specific schema\n * @param {Definition} appSchema - app-specific JSON schema\n * @param {Array<Object>} viewsPaths - views' paths' section in the manifest\n * @param {EntityType} entityType - actual entity type of the page's entitySet\n * @param {EntitySet} entitySet - actual entity set (AVT information)\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {string} templateAnnotation - defaultTemplateAnnotationPath as registered in manifest\n * @param {SapUiAppPageV4} v4Page - the given page in manifest\n */\nfunction addLRViews(\n    appSchema: Definition,\n    viewsPaths: Array<Object>,\n    entityType: EntityType,\n    entitySet: EntitySet,\n    generateParameters: GenerateAppSchemaParameters,\n    v4Page: v4.SapUiAppPageV4,\n    tableDefinitionName: DefinitionName.Table | DefinitionName.ALPTableView\n) {\n    const tableDefinition = appSchema.definitions[tableDefinitionName] as Definition;\n    tableDefinition.properties = {\n        annotationPath: tableDefinition.properties.annotationPath,\n        initialLoad: tableDefinition.properties.initialLoad,\n        views: tableDefinition.properties.views\n    };\n    const viewsDefinition = appSchema.definitions.MultiTableModeV4 as Definition;\n    for (const view of viewsPaths) {\n        if (!view[SchemaTag.key]) {\n            continue;\n        }\n        let navPropName: string = undefined;\n        const targetEntityType = getTargetEntityType(entitySet, view, generateParameters, entityType);\n        const uiAnnotations = targetEntityType?.annotations.UI;\n        const { visualization, targetAnnotation, namespace, title } = analyzeViewAnnotation(\n            view?.[SchemaTag.annotationPath],\n            uiAnnotations,\n            generateParameters.serviceAVT,\n            view[SchemaTag.key],\n            undefined,\n            generateParameters.logger\n        );\n        if (view['entitySet']) {\n            navPropName = entityType.navigationProperties.find((np) => {\n                return np.targetTypeName === namespace;\n            })?.name;\n        }\n        const viewKey = prepareRef(view[SchemaTag.key]);\n        const commonInputParameters: ViewsParameters = {\n            viewKey,\n            appSchema,\n            targetAnnotation,\n            navPropName,\n            targetEntityType,\n            title,\n            entitySet: view['entitySet']\n        };\n        addLRViewParts(\n            visualization,\n            viewsDefinition,\n            commonInputParameters,\n            generateParameters,\n            v4Page,\n            uiAnnotations,\n            view\n        );\n        addTagsToView(viewsDefinition, viewKey, namespace, view);\n    }\n}\n\n/**\n * Adapts the table definition in schema.\n * Evaluates the path depending on if defaultTemplateAnnotationPath or Selection-/PresentationVariant is present.\n * @param {SapUiAppPageV4} v4Page - the given page in manifest\n * @param {EntityType} entityType - the current entity type, as defined in AVT\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param appSchema - the app-specific JSON schema\n * @param alias - alias definition for the UI vocabulary\n */\nfunction adaptTableDefinition(\n    appSchema: Definition,\n    entityType: EntityType,\n    generateParameters: GenerateAppSchemaParameters,\n    templateAnnotation: string,\n    v4Page: v4.SapUiAppPageV4,\n    alias: string,\n    tableDefinitionName: DefinitionName.Table | DefinitionName.ALPTableView\n) {\n    //here: tableDefinitionName = DefinitionName.Table\n    const tableDefinition = appSchema.definitions[tableDefinitionName] as Definition;\n    const { visualization, targetAnnotation, namespace } = analyzeViewAnnotation(\n        templateAnnotation,\n        entityType?.annotations.UI,\n        generateParameters.serviceAVT,\n        undefined,\n        Visualization.LineItem,\n        generateParameters.logger\n    );\n    if (visualization) {\n        const annotationTerm = visualization.split('.')[1];\n        const annotationTermInSchema = `${DefinitionName.LineItems}OfSPV::${prepareRef(annotationTerm)}`;\n        const spvTable = (appSchema.definitions[`${tableDefinitionName}SPV`] = JSON.parse(\n            JSON.stringify(appSchema.definitions[tableDefinitionName])\n        ) as Definition);\n        delete spvTable[SchemaTag.isViewNode];\n        addDefinitionRef(spvTable.properties.toolBar as Definition, DefinitionName.ToolBar, annotationTermInSchema);\n        // Switch from generic column to specific definition\n        spvTable[SchemaTag.annotationPath] = targetAnnotation;\n        spvTable.properties.columns = {} as Definition;\n        addDefinitionRef(spvTable.properties.columns, annotationTermInSchema);\n\n        delete tableDefinition.properties;\n        addDefinitionRef(tableDefinition, `${tableDefinitionName}SPV`);\n        tableDefinition[SchemaTag.annotationPath] = `/${namespace}/@${templateAnnotation}`;\n        const lineItemAnnotation = entityType?.annotations.UI[annotationTerm] as AnnotationTerm<LineItem>;\n        if (!lineItemAnnotation) {\n            log(generateParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOTARGET', { target: annotationTerm })\n            });\n        }\n        const dataForLineItem: LineItemDataForSchema = {\n            appSchema,\n            lineItemAnnotation,\n            entityType,\n            oDataServiceAVT: generateParameters.serviceAVT,\n            lineItemId: annotationTermInSchema\n        };\n        addLineItemsTypeToSchema(dataForLineItem);\n        const annotationTermQualifier = annotationTerm.split('#')?.[1];\n        const sectionIdInManifest = annotationTermQualifier\n            ? `@${UIAnnotationTerms.LineItem}#${annotationTermQualifier}`\n            : `@${UIAnnotationTerms.LineItem}`;\n        addCustomColumnDefinition(\n            appSchema,\n            v4Page,\n            generateParameters.logger,\n            undefined,\n            annotationTermInSchema,\n            sectionIdInManifest\n        );\n        addFragmentEnumForAnchor(appSchema, annotationTermInSchema, v4Page, undefined, sectionIdInManifest);\n        // Table toolbar actions with custom actions\n        const schemaIdForToolbarActions = `${DefinitionName.Actions}<${annotationTermInSchema}>`;\n        const customColumnDefinitionName = getCustomExtensionDefinitionName(\n            appSchema,\n            annotationTermInSchema,\n            DefinitionName.CustomTableAction\n        );\n        addCustomActionDefinition(\n            appSchema,\n            v4Page,\n            generateParameters.logger,\n            getDefinitionKey(customColumnDefinitionName),\n            schemaIdForToolbarActions,\n            sectionIdInManifest\n        );\n        addEnumForActionAnchor(appSchema, schemaIdForToolbarActions, DefinitionName.CustomActionPosition);\n    } else {\n        tableDefinition.properties.toolBar['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.ToolBarLR}`;\n        // Switch from generic column to specific definition\n        addDefinitionRef(tableDefinition.properties.columns as Definition, DefinitionName.LineItems);\n        const lineItemAnnotation = entityType?.annotations?.[alias]?.LineItem;\n        if (!lineItemAnnotation) {\n            log(generateParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOLINEITEMS')\n            });\n        }\n        const dataForLineItem: LineItemDataForSchema = {\n            appSchema,\n            lineItemAnnotation,\n            entityType,\n            oDataServiceAVT: generateParameters.serviceAVT,\n            lineItemId: DefinitionName.LineItems\n        };\n        addLineItemsTypeToSchema(dataForLineItem);\n        addCustomColumnDefinition(appSchema, v4Page, generateParameters.logger);\n        addFragmentEnumForAnchor(appSchema, DefinitionName.LineItems, v4Page);\n        if (lineItemAnnotation) {\n            tableDefinition[SchemaTag.annotationPath] = createAnnotationPath(\n                entityType?.fullyQualifiedName,\n                lineItemAnnotation.term,\n                lineItemAnnotation.qualifier\n            );\n        }\n\n        // Table toolbar actions with custom actions\n        const schemaIdForActions = `${DefinitionName.Actions}<${prepareRef(DefinitionName.LineItems)}>`;\n        addCustomActionDefinition(appSchema, v4Page, generateParameters.logger, undefined, schemaIdForActions);\n        addEnumForActionAnchor(appSchema, schemaIdForActions, DefinitionName.CustomActionPosition);\n    }\n}\n\n/**\n * Checks for the default annotation path to use for LR table\n * @param {SapUiAppPageV4} v4Page - actual page in the manifest\n * @param {EntityType} entityType - actual entity type (AVT information)\n * @returns {string} annotation term\n */\nfunction getDefaultAnnotationPath(\n    v4Page: v4.SapUiAppPageV4,\n    entityType: EntityType,\n    templateType: TemplateType\n): string | undefined {\n    if (v4Page.options.settings?.views?.paths && templateType === TemplateType.ListReportObjectPageV4) {\n        return;\n    }\n    if (v4Page.options.settings?.defaultTemplateAnnotationPath) {\n        return v4Page.options.settings.defaultTemplateAnnotationPath;\n    }\n    if (templateType === TemplateType.ListReportObjectPageV4) {\n        return (\n            entityType?.annotations.UI?.SelectionPresentationVariant?.term ||\n            entityType?.annotations.UI?.PresentationVariant?.term\n        );\n    }\n}\n\n/**\n * Add views to schema (LR or ALP)\n * @param {Definition} appSchema - app-specific JSON schema\n * @param {SapUiAppPageV4} v4Page - actual page in the manifest\n * @param {EntityType} entityType - actual entity type (AVT information)\n * @param {EntitySet} entitySet - actual entity set (AVT information)\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n */\nfunction addTableAndViews(\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4,\n    generateParameters: GenerateAppSchemaParameters,\n    alias: string\n): void {\n    const viewsPaths = v4Page.options?.settings?.views?.paths;\n    const entityType = generateParameters.entityType;\n    const entitySet = generateParameters.entitySet;\n    const defaultAnnotation = getDefaultAnnotationPath(v4Page, entityType, generateParameters.templateType);\n    const tableDefinitionName = alignSchemaWithTemplateType(appSchema, generateParameters);\n    // Add filter bar\n    addFilterBar(entityType, appSchema, v4Page, alias);\n    if (generateParameters.templateType === TemplateType.ListReportObjectPageV4) {\n        if (viewsPaths) {\n            addLRViews(appSchema, viewsPaths, entityType, entitySet, generateParameters, v4Page, tableDefinitionName);\n        } else {\n            if (!v4Page.options?.settings?.views) {\n                (appSchema.definitions.MultiTableModeV4 as Definition).properties = {};\n            }\n            adaptTableDefinition(\n                appSchema,\n                entityType,\n                generateParameters,\n                defaultAnnotation,\n                v4Page,\n                alias,\n                tableDefinitionName\n            );\n        }\n        appSchema.properties[PropertyName.chart][SchemaTag.hidden] = true;\n    } else if (generateParameters.templateType === TemplateType.AnalyticalListPageV4) {\n        addALPViews(\n            appSchema,\n            viewsPaths,\n            entityType,\n            generateParameters,\n            defaultAnnotation,\n            v4Page,\n            tableDefinitionName\n        );\n        addFragmentEnumForAnchor(appSchema, DefinitionName.LineItems, v4Page);\n    }\n}\n\n/**\n * Adds header actions to schema (LR or ALP)\n * @param {Definition} appSchema - app-specific JSON schema\n * @param {SapUiAppPageV4} v4Page - actual page in the manifest\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nfunction addHeaderActions(appSchema: Definition, v4Page: v4.SapUiAppPageV4, logger: ExtensionLogger): void {\n    // add header action definitions\n    const headerActionsDefinitionKey = DefinitionName.HeaderActions;\n    const headerActionsDefinition = appSchema.definitions[headerActionsDefinitionKey] as Definition;\n    headerActionsDefinition[SchemaTag.isViewNode] = true;\n    headerActionsDefinition.description = 'Actions';\n    headerActionsDefinition.properties = {};\n\n    // add custom action definitions\n    const customActionDefinitionKey = DefinitionName.CustomHeaderAction;\n    const customActionDefinition = appSchema.definitions[customActionDefinitionKey] as Definition;\n    customActionDefinition[SchemaTag.isViewNode] = true;\n    customActionDefinition.description = 'Custom Action';\n    addHeaderFooterCustomActionDefinition(\n        appSchema,\n        v4Page,\n        logger,\n        customActionDefinitionKey,\n        headerActionsDefinitionKey\n    );\n    const facetKey = DefinitionName.CustomHeaderActionPosition;\n    parseSchemaDefinition(facetKey, facetKey, appSchema, false);\n\n    // Anchor selection\n    (customActionDefinition.properties.position as Definition).$ref = `${DEFINITION_LINK_PREFIX}${facetKey}`;\n    addEnumForActionAnchor(appSchema, headerActionsDefinitionKey, facetKey);\n}\n\n/**\n * Generates an app specific schema for the FE V4 ListReport from the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param genericSchema  - generic JSON schema of an object page\n * @param {string} templateName - allows to distinguish list report from ALP\n * @param {string} contextPath - entity set (AVT object) that is relevant for the given page\n *\n * @returns {object} application-specific schema of the list report\n */\nexport function generateListReportSchemaV4(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchema: object,\n    templateName: string,\n    contextPath: string\n): object {\n    const appSchema: Definition = JSON.parse(JSON.stringify(genericSchema));\n    const entityType = generateParameters.entityType;\n\n    const alias = generateParameters.serviceAVT && findAlias(UIVOCABULARY, generateParameters.serviceAVT);\n    appSchema.properties[PropertyName.defaultTemplateAnnotationPath][SchemaTag.hidden] = true;\n\n    //enum for annotation path as part of QuickVariantSelection\n    addEnumForSingleTabVariant(entityType, appSchema, DefinitionName.AnnotationPathAsObject);\n\n    if (generateParameters.manifest) {\n        //Find page in targets\n        const pages = generateParameters.manifest[ManifestSection.ui5].routing\n            .targets as unknown as v4.SapUiAppPageV4[];\n        if (!pages) {\n            log(generateParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOPAGES', { appId: generateParameters.manifest['sap.app']['id'] }),\n                location: {\n                    path: MANIFESTPATH,\n                    range: [ManifestSection.generic]\n                }\n            });\n            return appSchema;\n        }\n        const v4Page = findPageV4(pages, templateName, generateParameters.entitySet, contextPath);\n        if (!v4Page) {\n            return appSchema;\n        }\n\n        addHeaderActions(appSchema, v4Page, generateParameters.logger);\n        addTableAndViews(appSchema, v4Page, generateParameters, alias);\n    }\n    delete appSchema.definitions.GenericColumns;\n    delete appSchema.definitions.Action;\n    updatePropertyIndices(appSchema, ROOT_PROPERTIES_ORDER);\n    return appSchema;\n}\n", "import type { Definition } from 'typescript-json-schema';\nimport type { ExtensionLogger, GenerateAppSchemaParameters } from '../../..';\nimport type { PresentationVariantV4 } from '../types';\nimport type { AnnotationTerm, ConvertedMetadata, EntitySet, EntityType } from '@sap-ux/vocabularies-types';\nimport type {\n    Chart,\n    DataFieldAbstractTypes,\n    LineItem,\n    PresentationVariant\n} from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport i18next from 'i18next';\nimport { log } from '../../../extensionLogger';\nimport { UIAnnotationTerms, UIAnnotationTypes } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport type { EntityTypeAnnotationsBase_UI } from '@sap-ux/vocabularies-types/vocabularies/UI_Edm';\nimport {\n    v4,\n    ActionType,\n    FioriElementsVersion,\n    ManifestSection,\n    SectionType,\n    Visualization,\n    DefinitionName,\n    SchemaKeyName,\n    MANIFESTPATH,\n    LogSeverity,\n    SchemaTag,\n    FacetBase,\n    UIVOCABULARYDOT,\n    UIVOCABULARYALPHADOT,\n    Features\n} from '@sap/ux-specification-types';\nimport type { FacetConfig, FacetConfigs, FacetSection } from '@sap/ux-specification-types';\nimport {\n    DEFINITION_LINK_PREFIX,\n    addCommonHeaderSchema,\n    addDefinitionForRelatedFacetKeys,\n    addEnumForSingleTabVariant,\n    addFooterActions,\n    addHeaderActions,\n    addSectionTitleAndDescription,\n    addTargetTitleAndSectionDescription,\n    createDefaultSection,\n    determineDataType,\n    determineDataTypeOfTarget,\n    getActionNameAndId,\n    getDataFieldDescription,\n    getFacetAnnotationPath,\n    getFacetDefinitionLink,\n    getFacetKeyInSchema,\n    getObjectPageFacets,\n    getObjectPageHeaderFacets,\n    getObjectPageFacetSection,\n    handleAddressContact,\n    handleForm,\n    parseSchemaDefinition,\n    prepareRef,\n    replaceAlias,\n    updatePropertyIndices,\n    isFeatureSupported,\n    addDescriptiveEnumDefinition\n} from '../../common';\nimport type { LineItemDataForSchema } from '../utils/utils';\nimport { addHeaderFooterCustomActionDefinition, addCustomSectionDefinition } from '../utils/utils';\nimport {\n    addCustomColumnDefinition,\n    addFragmentEnumForAnchor,\n    addLineItemsTypeToSchema,\n    findPageV4,\n    addCustomActionDefinition,\n    addEnumForActionAnchor\n} from '../utils/utils';\nimport { getStableIdPartFromDataField } from '../../v4/utils/StableIdHelper';\nimport { resolveFragments } from './fpm-custom-page/pageExtensions';\nimport { isDraftEnabled, isEntityDeletable, isEntityUpdatable } from '../../v2/generate/utils';\n\nconst ROOT_PROPERTIES_ORDER: Array<keyof v4.ObjectPageConfigV4> = ['header', 'layout', 'sections', 'footer'];\nconst CRITICAL_ACTION_TYPES = [\n    'UI.CriticalityType/Positive',\n    'UI.CriticalityType/VeryPositive',\n    'UI.CriticalityType/Negative',\n    'UI.CriticalityType/VeryNegative'\n];\nconst CUSTOM_ACTION_DEFINITION_DESCRIPTION = 'Custom Action';\n\ntype ActionListType = {\n    index: string;\n    item: object;\n};\n\n/**\n * V4 callback - adds a single header action to schema\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {ActionListType} action - item of the Ui.Identification collection and its original index\n * @param {ActionType} actionType - action classification for grouping\n * @param {Definition} appSchema Schema of the app\n * @param {EntityType} entityType - current entity type\n * @param {Definition} headerActions - list of header actions, to be enhanced\n */\nfunction addSingleHeaderActionV4(\n    oDataServiceAVT: ConvertedMetadata,\n    action: ActionListType,\n    actionType: ActionType,\n    appSchema: Definition,\n    entityType: any,\n    headerActions: Definition,\n    index: number\n): void {\n    const { actionName, namespace } = getActionNameAndId(action.item, oDataServiceAVT);\n    const stableId = getStableIdPartFromDataField(action.item);\n    //stableId is used as key in V4, as the DataFieldForAction:: prefix shall be present in manifest settings\n    const convertedIdentification = action.item['fullyQualifiedName'].replace(\n        `@${UIAnnotationTerms.Identification}`,\n        `/@${UIAnnotationTerms.Identification}`\n    );\n    const actionDefinitionKey = `ObjectPageHeaderAction<${prepareRef(stableId)}>`;\n    const headerAction = (appSchema.definitions[actionDefinitionKey] = {\n        type: 'object',\n        $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.ObjectPageHeaderAction}`,\n        description: getDataFieldDescription(action.item as DataFieldAbstractTypes, entityType)\n    });\n    headerAction[SchemaTag.isViewNode] = true;\n    headerAction[SchemaTag.dataType] = determineDataType(action.item);\n    headerAction[SchemaTag.propertyIndex] = index;\n\n    //keys\n    headerAction[SchemaTag.keys] = [];\n    if (action.item[SchemaKeyName.semanticObject]) {\n        headerAction[SchemaTag.keys].push({\n            name: SchemaKeyName.semanticObject,\n            value: action.item[SchemaKeyName.semanticObject]\n        });\n    }\n    headerAction[SchemaTag.keys].push({ name: SchemaKeyName.action, value: actionName });\n\n    if (namespace) {\n        appSchema.definitions[actionDefinitionKey][SchemaTag.target] = namespace;\n    }\n    headerAction[SchemaTag.actionType] = actionType;\n    headerAction[SchemaTag.annotationPath] = `/${convertedIdentification}`;\n    headerActions.properties[stableId] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${actionDefinitionKey}`\n    };\n\n    // add propertyIndexes\n    headerActions.properties[stableId][SchemaTag.propertyIndex] = index;\n}\n\n/**\n * Adds a given standard action to the app schema of the object page\n * @param {string} actionName  - name of the action\n * @param {Definition} appSchema - schema of the object page\n * @param {Definition} headerActions - list of header actions, to be enhanced\n * @param {number} index - index for propertyIndex\n *\n * @returns the new header action definition\n */\nfunction addStandardHeaderAction(\n    actionName: string,\n    appSchema: Definition,\n    headerActions: Definition,\n    index: number\n): Definition {\n    const referenceKey = `${actionName}Action`;\n    const actionDefinitionKey = `ObjectPageHeaderAction<${referenceKey}>`;\n    const headerAction = (appSchema.definitions[actionDefinitionKey] = {\n        type: 'object',\n        description: `${actionName}`,\n        additionalProperties: true\n    });\n    headerAction[SchemaTag.isViewNode] = true;\n    headerAction[SchemaTag.propertyIndex] = index;\n\n    //keys\n    headerAction[SchemaTag.keys] = [];\n    headerAction[SchemaTag.keys].push({ name: SchemaKeyName.action, value: actionName });\n\n    headerAction[SchemaTag.actionType] = ActionType.Standard;\n    headerActions.properties[referenceKey] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${actionDefinitionKey}`\n    };\n    // add propertyIndexes\n    headerActions.properties[referenceKey][SchemaTag.propertyIndex] = index;\n    return headerAction;\n}\n\n/**\n * V4 callback - adds a single footer action to schema\n * @param {ActionListType} action - item of the Ui.Identification collection and its original index\n * @param {ActionType} actionType - action classification for grouping\n * @param {EntityType} entityType - current entity type\n * @param {Definition} appSchema - schema of the object page\n * @param {Definition} footerActions - list of footer actions, to be enhanced\n */\nfunction addSingleFooterAction(\n    action: ActionListType,\n    actionType: ActionType,\n    entityType: any,\n    appSchema: Definition,\n    footerActions: Definition,\n    index: number\n) {\n    const actionId = getStableIdPartFromDataField(action.item);\n    const description = getDataFieldDescription(action.item as DataFieldAbstractTypes, entityType);\n    const actionDefinitionKey = prepareRef(`${DefinitionName.ObjectPageFooterAction}<${actionId}>`);\n    const convertedIdentification = action.item['fullyQualifiedName'].replace(\n        `@${UIAnnotationTerms.Identification}`,\n        `/@${UIAnnotationTerms.Identification}`\n    );\n    const footerAction = (appSchema.definitions[actionDefinitionKey] = {\n        type: 'object',\n        $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.FooterActionV4}`,\n        description: description\n    });\n    footerAction[SchemaTag.isViewNode] = true;\n    footerAction[SchemaTag.actionType] = actionType;\n    footerAction[SchemaTag.propertyIndex] = index;\n    footerAction[SchemaTag.annotationPath] = `/${convertedIdentification}`;\n\n    footerActions.properties[actionId] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${actionDefinitionKey}`\n    };\n}\n\n/**\n * Distiguishes critical actions and others and returns two separate groups\n * @param {any} identification - UI.Identification annotation as present in AVT ConvertedMetadata\n * @returns two separate groups of items\n */\nfunction groupByCriticality(identification: any) {\n    const criticalActions: ActionListType[] = [];\n    const unCriticalActions: ActionListType[] = [];\n\n    identification.forEach((item, index) => {\n        if (\n            (!item['Determining'] && item.$Type === UIAnnotationTypes.DataFieldForAction) ||\n            item.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation\n        ) {\n            if (CRITICAL_ACTION_TYPES.includes(item['Criticality'])) {\n                criticalActions.push({ index, item });\n            } else {\n                unCriticalActions.push({ index, item });\n            }\n        }\n    });\n    return { criticalActions, unCriticalActions };\n}\n\n/**\n * Adds the critical header actions to schema\n * @param {ActionListType[]} criticalActions - list of critical actions\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {Definition} appSchema - schema of the object page\n * @param {EntityType} entityType - current entity type\n * @param {Definition} headerActions - list of all header actions\n */\nfunction addCriticalActions(\n    criticalActions: ActionListType[],\n    oDataServiceAVT: ConvertedMetadata,\n    appSchema: Definition,\n    entityType: EntityType,\n    headerActions: Definition\n) {\n    for (let index = 0; index < criticalActions.length; index++) {\n        addSingleHeaderActionV4(\n            oDataServiceAVT,\n            criticalActions[index],\n            ActionType.Criticality,\n            appSchema,\n            entityType,\n            headerActions,\n            index\n        );\n    }\n}\n\n/**\n * Checks if one of the uncritical actions is marked by isCopyAction.\n * If so, adds this first to the schema and deletes it from the list.\n * @param {ActionListType[]} unCriticalActions - list of uncritical actions\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {Definition} appSchema - schema of the object page\n * @param {EntityType} entityType - current entity type\n * @param {Definition} headerActions - list of all header actions\n * @param {number} nextIndex - index for propertyIndex\n */\nfunction addCopyAction(\n    unCriticalActions: ActionListType[],\n    oDataServiceAVT: ConvertedMetadata,\n    appSchema: Definition,\n    entityType: EntityType,\n    headerActions: Definition,\n    nextIndex: number\n) {\n    const copyActionIndex = unCriticalActions.findIndex((action) => {\n        return action.item['annotations']?.UI?.IsCopyAction !== undefined;\n    });\n    if (copyActionIndex > -1) {\n        addSingleHeaderActionV4(\n            oDataServiceAVT,\n            unCriticalActions[copyActionIndex],\n            ActionType.Copy,\n            appSchema,\n            entityType,\n            headerActions,\n            nextIndex\n        );\n        nextIndex++;\n        unCriticalActions.splice(copyActionIndex, 1);\n    }\n}\n\n/**\n * Adds the critical header actions to schema\n * @param {ActionListType[]} unCriticalActions - list of uncritical actions\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {Definition} appSchema - schema of the object page\n * @param {EntityType} entityType - current entity type\n * @param {Definition} headerActions - list of all header actions\n * @param {number} nextIndex - index for propertyIndex\n */\nfunction addUncriticalActions(\n    unCriticalActions: ActionListType[],\n    oDataServiceAVT: ConvertedMetadata,\n    appSchema: Definition,\n    entityType: EntityType,\n    headerActions: Definition,\n    nextIndex: number\n) {\n    for (const action of unCriticalActions) {\n        addSingleHeaderActionV4(\n            oDataServiceAVT,\n            action,\n            ActionType.Annotation,\n            appSchema,\n            entityType,\n            headerActions,\n            nextIndex\n        );\n        nextIndex++;\n    }\n}\n\n/**\n * Fills the annotationPath of the given schema definition, by checking first the EntitySet annotation, then the EntityType annotation.\n * @param {Definition} schemaDefinition - current definition in the schema\n * @param {EntitySet} entitySet - current entity set\n * @param {EntityType} entityType - current entity type\n * @param {string} annotationName - name of the annotation term to be checked\n */\nfunction setAnnotationPathFromEntitySetOrEntityType(\n    schemaDefinition: Definition,\n    entitySet: EntitySet,\n    entityType: EntityType,\n    annotationName: string\n) {\n    if (entitySet?.annotations?.UI?.[annotationName] || !entityType?.annotations?.UI?.[annotationName]) {\n        schemaDefinition[SchemaTag.annotationPath] =\n            `/${entitySet.fullyQualifiedName}/${UIVOCABULARYALPHADOT}${annotationName}`;\n    } else {\n        schemaDefinition[SchemaTag.annotationPath] =\n            `/${entityType.fullyQualifiedName}/${UIVOCABULARYALPHADOT}${annotationName}`;\n    }\n}\n\n/**\n * Callback for adding a single action to headerActions of V4\n * @param {EntityType} entityType - current entity type\n * @param {Definition} appSchema - schema of the object page\n * @param {any} identification - UI.Identification annotation as present in AVT ConvertedMetadata\n * @param {Definition} headerActions - list of header actions, to be enhanced\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {EntitySet} entitySet - current entity set\n */\nfunction addHeaderActionCallBackV4(\n    entityType: EntityType,\n    appSchema: Definition,\n    identification: EntityTypeAnnotationsBase_UI['Identification'] | undefined,\n    headerActions: Definition,\n    oDataServiceAVT: ConvertedMetadata,\n    entitySet: EntitySet\n): any {\n    //Build groups of action types\n    const { criticalActions = [], unCriticalActions = [] } = identification ? groupByCriticality(identification) : {};\n\n    addCriticalActions(criticalActions, oDataServiceAVT, appSchema, entityType, headerActions);\n\n    if (entitySet) {\n        const isDeletable = isEntityDeletable(entitySet);\n        const isUpdatable = isEntityUpdatable(entitySet);\n        // Add standard header actions\n\n        // If ReadOnly, and all capabilities restrictions are set to true or When nothing exists i.e. no capabilities annotation and no draft root, show only Delete button\n        // If DraftRoot + DraftNode and dynamic value for restriction - show Edit and Delete, if bool == false then hide the button\n\n        if (isDraftEnabled(entitySet) && isUpdatable) {\n            const editAction = addStandardHeaderAction('Edit', appSchema, headerActions, criticalActions.length);\n            setAnnotationPathFromEntitySetOrEntityType(editAction, entitySet, entityType, 'UpdateHidden');\n        }\n        if (isDeletable) {\n            const deleteAction = addStandardHeaderAction(\n                'Delete',\n                appSchema,\n                headerActions,\n                criticalActions.length + 1\n            );\n            setAnnotationPathFromEntitySetOrEntityType(deleteAction, entitySet, entityType, 'DeleteHidden');\n        }\n    }\n\n    const nextIndex = criticalActions.length + 2;\n\n    //Check if isCopyAction is defined, this gets rendered first after delete\n    addCopyAction(unCriticalActions, oDataServiceAVT, appSchema, entityType, headerActions, nextIndex);\n\n    addUncriticalActions(unCriticalActions, oDataServiceAVT, appSchema, entityType, headerActions, nextIndex);\n}\n\n/**\n * Callback for adding a single action to footerActions of V4\n * @param {EntityType} entityType - current entity type\n * @param {Definition} appSchema - schema of the object page\n * @param {Definition} footerActions - list of footer actions, to be enhanced\n * @param {any} identification - UI.Identification annotation as present in AVT ConvertedMetadata\n */\nfunction addFooterActionCallBackV4(\n    entityType,\n    appSchema: Definition,\n    footerActions: Definition,\n    identification: any\n): any {\n    const criticalActions: ActionListType[] = [];\n    const unCriticalActions: ActionListType[] = [];\n\n    identification.forEach((item, index) => {\n        if (item['Determining'] && item.$Type === UIAnnotationTypes.DataFieldForAction) {\n            if (item['Criticality']) {\n                criticalActions.push({ index, item });\n            } else {\n                unCriticalActions.push({ index, item });\n            }\n        }\n    });\n    for (let index = 0; index < criticalActions.length; index++) {\n        const action = criticalActions[index];\n        addSingleFooterAction(action, ActionType.Criticality, entityType, appSchema, footerActions, index);\n    }\n\n    for (let index = 0; index < unCriticalActions.length; index++) {\n        const action = unCriticalActions[index];\n        addSingleFooterAction(\n            action,\n            ActionType.Annotation,\n            entityType,\n            appSchema,\n            footerActions,\n            criticalActions.length + index\n        );\n    }\n}\n\n/**\n * Object Page specific enhancements to addCustomColumnDefinition\n * @param {object} appSchema - app schema of the object page\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n * @param {string} lineItemId - identifier of the current table in schema\n * @param {string} facetIdInManifest - identifier of the current object page section in manifest\n * @param {ExtensionLogger} logger - logger for exceptions\n */\nfunction addCustomColumnsOP(\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4,\n    lineItemId: string,\n    facetIdInManifest: string,\n    logger: ExtensionLogger\n) {\n    // Create type specific copy of 'TableCustomColumnOP'\n    const useDefinitionAsKey =\n        lineItemId !== DefinitionName.LineItems &&\n        lineItemId !== 'LineItemsOfSPV::LineItem' &&\n        lineItemId !== `@${UIAnnotationTerms.LineItem}`;\n    const customColumDefinitionKey = useDefinitionAsKey\n        ? `${DefinitionName.CustomColumnOP}<${lineItemId}>`\n        : DefinitionName.CustomColumnOP;\n    const customColumnDefinition = appSchema.definitions[customColumDefinitionKey] as Definition;\n    customColumnDefinition[SchemaTag.isViewNode] = true;\n    customColumnDefinition.description = 'Custom Column';\n\n    // Update definitions for type specific custom columns\n    const schemaId = `${DefinitionName.CustomColumnOP}<${lineItemId}>`;\n    addCustomColumnDefinition(appSchema, v4Page, logger, schemaId, lineItemId, facetIdInManifest);\n    const facetKey = useDefinitionAsKey ? lineItemId : DefinitionName.PositionOP;\n    parseSchemaDefinition(DefinitionName.PositionOP, facetKey, appSchema, useDefinitionAsKey);\n    const positionId = useDefinitionAsKey ? `${DefinitionName.PositionOP}<${lineItemId}>` : DefinitionName.PositionOP;\n    (customColumnDefinition.properties.position as Definition).$ref = `${DEFINITION_LINK_PREFIX}${positionId}`;\n    addFragmentEnumForAnchor(appSchema, lineItemId, v4Page, positionId, facetIdInManifest.replace(/::/g, '/'));\n}\n\n/**\n * Object Page specific enhancements to addCustomColumnDefinition\n * @param {object} appSchema - app schema of the object page\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n * @param {string} lineItemId - identifier of the current table in schema\n * @param {string} facetIdInManifest - identifier of the current object page section in manifest\n * @param {ExtensionLogger} logger - logger for exceptions\n */\nfunction addTableCustomActionsOP(\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4,\n    lineItemId: string,\n    facetIdInManifest: string,\n    logger: ExtensionLogger\n) {\n    // Create type specific copy of 'TableCustomActionOP'\n    const useDefinitionAsKey =\n        lineItemId !== DefinitionName.LineItems &&\n        lineItemId !== 'LineItemsOfSPV::LineItem' &&\n        lineItemId !== `@${UIAnnotationTerms.LineItem}`;\n    const customActionDefinitionKey = useDefinitionAsKey\n        ? `${DefinitionName.CustomTableActionOP}<${lineItemId}>`\n        : DefinitionName.CustomTableActionOP;\n    const customActionDefinition = appSchema.definitions[customActionDefinitionKey] as Definition;\n    customActionDefinition[SchemaTag.isViewNode] = true;\n    customActionDefinition.description = CUSTOM_ACTION_DEFINITION_DESCRIPTION;\n    // Update definitions for type specific custom columns\n    const schemaId = `${DefinitionName.CustomTableActionOP}<${lineItemId}>`;\n    const schemaIdForActions = `${DefinitionName.Actions}<${prepareRef(lineItemId)}>`;\n    addCustomActionDefinition(appSchema, v4Page, logger, schemaId, schemaIdForActions, facetIdInManifest);\n    const facetKey = useDefinitionAsKey ? lineItemId : DefinitionName.CustomActionPositionOP;\n    parseSchemaDefinition(DefinitionName.CustomActionPositionOP, facetKey, appSchema, useDefinitionAsKey);\n    // Anchor selection\n    const positionId = useDefinitionAsKey\n        ? `${DefinitionName.CustomActionPositionOP}<${lineItemId}>`\n        : DefinitionName.CustomActionPositionOP;\n    (customActionDefinition.properties.position as Definition).$ref = `${DEFINITION_LINK_PREFIX}${positionId}`;\n    addEnumForActionAnchor(appSchema, schemaIdForActions, positionId);\n}\n\n/**\n * Object Page specific custom action enhancements to header and footer\n * @param {object} appSchema - app schema of the object page\n * @param {SapUiAppPageV4} v4Page  - current page in manifest\n * @param {DefinitionName} customActionDefinitionKey - custom action key used in definitions\n * @param {ExtensionLogger} logger - logger for exceptions\n */\nfunction addHeaderFooterCustomActionsOP(\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4,\n    customActionDefinitionKey: DefinitionName.CustomHeaderActionOP | DefinitionName.CustomFooterActionOP,\n    logger: ExtensionLogger\n) {\n    const customActionDefinition = appSchema.definitions[customActionDefinitionKey] as Definition;\n    customActionDefinition[SchemaTag.isViewNode] = true;\n    customActionDefinition.description = CUSTOM_ACTION_DEFINITION_DESCRIPTION;\n    const schemaIdForActions =\n        customActionDefinitionKey === DefinitionName.CustomHeaderActionOP\n            ? DefinitionName.ObjectPageHeaderActions\n            : DefinitionName.FooterActions;\n    addHeaderFooterCustomActionDefinition(appSchema, v4Page, logger, customActionDefinitionKey, schemaIdForActions);\n    const facetKey =\n        customActionDefinitionKey === DefinitionName.CustomHeaderActionOP\n            ? DefinitionName.CustomHeaderActionPositionOP\n            : DefinitionName.CustomFooterActionPositionOP;\n    parseSchemaDefinition(facetKey, facetKey, appSchema, false);\n    // Anchor selection\n    (customActionDefinition.properties.position as Definition).$ref = `${DEFINITION_LINK_PREFIX}${facetKey}`;\n    addEnumForActionAnchor(appSchema, schemaIdForActions, facetKey);\n    if (appSchema.definitions[schemaIdForActions]) {\n        (appSchema.definitions[schemaIdForActions] as Definition).additionalProperties = {\n            $ref: `${DEFINITION_LINK_PREFIX}${customActionDefinitionKey}`\n        };\n    }\n}\n\n/**\n * Object Page specific enhancements to handleFormIdentification\n * @param {object} appSchema - app schema of the object page\n * @param {SapUiAppPageV4} v4Page - current page in manifest\n * @param {string} formItemId - identifier of the current form in schema\n * @param {string} facetIdInManifest - identifier of the current object page section in manifest\n * @param {ExtensionLogger} logger - logger for exceptions\n */\nfunction addFormCustomActionsOP(\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4,\n    formItemId: string,\n    facetIdInManifest: string,\n    logger: ExtensionLogger\n) {\n    const customActionDefinitionKey = `${DefinitionName.CustomFormActionOP}<${formItemId}>`;\n    const customActionDefinition = appSchema.definitions[customActionDefinitionKey] as Definition;\n    customActionDefinition[SchemaTag.isViewNode] = true;\n    customActionDefinition.description = CUSTOM_ACTION_DEFINITION_DESCRIPTION;\n    const schemaId = `${DefinitionName.CustomFormActionOP}<${formItemId}>`;\n    const schemaIdForActions = `${DefinitionName.SectionActions}<${prepareRef(formItemId)}>`;\n    addCustomActionDefinition(appSchema, v4Page, logger, schemaId, schemaIdForActions, facetIdInManifest);\n    parseSchemaDefinition(DefinitionName.CustomActionPositionOP, formItemId, appSchema, true);\n    // Anchor selection\n    const positionId = `${DefinitionName.CustomActionPositionOP}<${formItemId}>`;\n    (customActionDefinition.properties.position as Definition).$ref = `${DEFINITION_LINK_PREFIX}${positionId}`;\n    addEnumForActionAnchor(appSchema, schemaIdForActions, positionId);\n    if (appSchema.definitions[schemaIdForActions]) {\n        (appSchema.definitions[schemaIdForActions] as Definition).additionalProperties = {\n            $ref: `${DEFINITION_LINK_PREFIX}${customActionDefinitionKey}`\n        };\n    }\n}\n\n/**\n * Adds definitions for line items in object page sections to the app schema\n * @param {FacetConfig} facet - the given facet from the UI annotations\n * @param {string} facetKey - key of the facet, as used in annotation\n * @param {Definition} appSchema - app schema of the object page\n * @param {object} lineItemFacet - current lineItem facet\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n * @param {ExtensionLogger} logger - logger for exceptions\n */\nfunction handleLineItem(\n    facet: FacetConfig,\n    facetKey: string,\n    appSchema: Definition,\n    lineItemFacet: object,\n    oDataServiceAVT: ConvertedMetadata,\n    v4Page: v4.SapUiAppPageV4,\n    logger: ExtensionLogger\n): Definition {\n    const lineItemId = getFacetKeyInSchema(facetKey);\n    const index = facetKey.lastIndexOf('::');\n    const annotation = index > -1 ? facetKey.substring(index + 2) : facetKey;\n    const tableDefinition = parseSchemaDefinition(DefinitionName.ObjectPageTable, facetKey, appSchema);\n    if (facet.entityType && annotation) {\n        tableDefinition[SchemaTag.annotationPath] = `/${facet.entityType.fullyQualifiedName}/${annotation}`;\n    }\n    tableDefinition.properties.columns = {\n        $ref: `${DEFINITION_LINK_PREFIX}${lineItemId}`\n    };\n    (tableDefinition.properties.toolBar as Definition).$ref = getFacetDefinitionLink(\n        DefinitionName.ObjectPageToolBar,\n        facetKey\n    );\n    //adjust quickVariantSelection\n    (tableDefinition.properties.quickVariantSelection as Definition).$ref = getFacetDefinitionLink(\n        DefinitionName.QuickVariantSelectionV4OP,\n        facetKey\n    );\n    const tableQVS = parseSchemaDefinition(DefinitionName.QuickVariantSelectionV4OP, facetKey, appSchema);\n    tableQVS.properties.paths['items'].$ref = getFacetDefinitionLink(DefinitionName.AnnotationPathAsObject, facetKey);\n    parseSchemaDefinition(DefinitionName.AnnotationPathAsObject, facetKey, appSchema);\n\n    addEnumForSingleTabVariant(facet.entityType, appSchema, `${DefinitionName.AnnotationPathAsObject}<${lineItemId}>`);\n    const dataForLineItem: LineItemDataForSchema = {\n        appSchema,\n        lineItemAnnotation: lineItemFacet['target'] as AnnotationTerm<LineItem>,\n        entityType: lineItemFacet['entityType'],\n        oDataServiceAVT,\n        lineItemId\n    };\n    addLineItemsTypeToSchema(\n        dataForLineItem,\n        DefinitionName.ObjectPageTableColumn,\n        DefinitionName.CustomColumnOP,\n        DefinitionName.CustomTableActionOP\n    );\n    addCustomColumnsOP(appSchema, v4Page, lineItemId, facetKey, logger);\n    addTableCustomActionsOP(appSchema, v4Page, lineItemId, facetKey, logger);\n    return tableDefinition;\n}\n\n/**\n * Adds definitions for table section in object page sections to the app schema\n * @param {FacetConfig} facet - current facet\n * @param {string} facetKey - facet key\n * @param {Definition} appSchema - app specific schema of the object page that gets enhanced\n * @param {object} lineItemFacet - current lineItem facet\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n * @param {Definition} sections - schema of current sections definition.\n * @returns {object} sectionTable - section of app schema containing added table section\n */\nfunction handleSectionTable(\n    facet: FacetConfig,\n    facetKey: string,\n    appSchema: Definition,\n    lineItemFacet: FacetConfig,\n    generateParameters: GenerateAppSchemaParameters,\n    v4Page,\n    sections?: Definition\n): { sectionTable: Definition; table: Definition } {\n    if (sections) {\n        sections.properties[facetKey] = {\n            $ref: getFacetDefinitionLink(DefinitionName.ObjectPageSectionTableV4, facetKey)\n        };\n    }\n    const sectionTable = parseSchemaDefinition(DefinitionName.ObjectPageSectionTableV4, facetKey, appSchema);\n    addSectionTitleAndDescription(facet, sectionTable, getFacetKeyInSchema(facetKey));\n    sectionTable[SchemaTag.annotationPath] = facet.annotationPath;\n    sectionTable[SchemaTag.target] = facet.namespace;\n    sectionTable.properties.table['$ref'] = getFacetDefinitionLink(DefinitionName.ObjectPageTable, facetKey);\n    const table = handleLineItem(\n        facet,\n        facetKey,\n        appSchema,\n        lineItemFacet,\n        generateParameters.serviceAVT,\n        v4Page,\n        generateParameters.logger\n    );\n    return { sectionTable, table };\n}\n\n/**\n * Adds definitions for Identification and Form facet items in object page sections to the app schema\n * @param {FacetConfig} facet - current facet\n * @param {v4.SapUiAppPageV4} v4Page Current page in manifest\n * @param {string} facetKey - facet key\n * @param {object} sections - schema of current sections definition\n * @param {object} appSchema - app specific schema of the object page that gets enhanced\n * @param {SectionType} sectionPrefix - prefix to distinguish Section and HeaderSection\n * @param {ExtensionLogger} logger - logger for exceptions\n */\nfunction handleFormIdentification(\n    facet: FacetConfig,\n    v4Page: v4.SapUiAppPageV4,\n    facetKey: string,\n    sections: Definition,\n    appSchema: Definition,\n    sectionPrefix: SectionType,\n    logger: ExtensionLogger\n) {\n    let definitionType: DefinitionName;\n    if (sectionPrefix === SectionType.Section) {\n        definitionType = DefinitionName.ObjectPageSectionForm;\n    } else if (sectionPrefix === SectionType.HeaderSection) {\n        definitionType = DefinitionName.ObjectPageHeaderSectionForm;\n    }\n    sections['properties'][facetKey] = {\n        $ref: getFacetDefinitionLink(definitionType, facetKey)\n    };\n    const formSection: Definition = parseSchemaDefinition(definitionType, facetKey, appSchema);\n    if (!facet.ID) {\n        formSection.properties = {};\n    }\n    addSectionTitleAndDescription(facet, formSection, facetKey);\n    formSection[SchemaTag.annotationPath] = facet.annotationPath;\n    formSection[SchemaTag.target] = facet.namespace;\n    formSection[SchemaTag.isViewNode] = true;\n    const targetId = handleForm(sectionPrefix, facet, formSection, appSchema, FioriElementsVersion.v4, facetKey);\n    if (facet.base === FacetBase.Form) {\n        const formItemId = getFacetKeyInSchema(facetKey);\n        parseSchemaDefinition(DefinitionName.CustomFormActionOP, targetId, appSchema);\n        addFormCustomActionsOP(appSchema, v4Page, targetId, formItemId, logger);\n    }\n}\n\n/**\n * Adds definitions for header sections (DataPoint, Chart) in object page sections to the app schema\n * @param {FacetConfig} facet - current facet\n * @param {string} facetKey - facet key\n * @param {object} sections - schema of current sections definition\n * @param {object} appSchema - app specific schema of the object page that gets enhanced\n * @param {SectionType} facetDefinitionKey - key to identify new definition\n */\nfunction handleHeaderFacet(\n    facet: FacetConfig,\n    facetKey: string,\n    sections: Definition,\n    appSchema: Definition,\n    facetDefinitionKey: string\n) {\n    sections['properties'][facetKey] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${facetDefinitionKey}`\n    };\n    const sectionFacet = parseSchemaDefinition(\n        DefinitionName.CommonHeaderFacetSettings,\n        facetDefinitionKey,\n        appSchema,\n        false\n    );\n    addTargetTitleAndSectionDescription(facet, sectionFacet, facetKey);\n    sectionFacet[SchemaTag.annotationPath] = facet.annotationPath;\n    sectionFacet[SchemaTag.target] = facet.namespace;\n    sectionFacet[SchemaTag.dataType] = determineDataTypeOfTarget(facet?.target);\n    sectionFacet[SchemaTag.isViewNode] = true;\n}\n\n/**\n * Adds definitions for Chart items in object page sections to the app schema\n * @param {FacetConfig | Chart | object} facet - current facet.\n * @param {string} facetKey - facet key.\n * @param {object} appSchema - app specific schema of the object page that gets enhanced.\n * @param {EntityType} entityType - current entity type\n */\nfunction handleChartActions(\n    facet: FacetConfig | Chart | object,\n    facetKey: string,\n    appSchema: Definition,\n    entityType: EntityType\n): Definition {\n    const actions = parseSchemaDefinition(DefinitionName.ObjectPageToolBarActions, facetKey, appSchema);\n    actions.additionalProperties = false;\n    actions.properties = {};\n    if ((facet as Chart).Actions) {\n        let i = 0;\n        (facet as Chart).Actions.forEach((actionRecord) => {\n            const description = getDataFieldDescription(actionRecord as DataFieldAbstractTypes, entityType);\n            const prefix = actionRecord.$Type.split(UIVOCABULARYDOT)[1];\n            const actionId = (actionRecord.Action as string).replace('/', '::');\n            const toolBarActionsProperty = (actions.properties[`${prefix}::${actionRecord.Action}`] = {\n                $ref: getFacetDefinitionLink(DefinitionName.ObjectPageToolBarAction, actionId),\n                description\n            });\n            toolBarActionsProperty[SchemaTag.propertyIndex] = i;\n            toolBarActionsProperty[SchemaTag.annotationType] = actionRecord.$Type;\n            const toolBarAction = parseSchemaDefinition(\n                DefinitionName.ObjectPageToolBarAction,\n                prepareRef(actionId),\n                appSchema\n            );\n            toolBarAction[SchemaTag.annotationPath] = getFacetAnnotationPath(actionRecord);\n            toolBarAction[SchemaTag.dataType] = determineDataType(actionRecord);\n            toolBarAction.properties = {};\n            i++;\n        });\n    }\n    return actions;\n}\n\n/**\n * Adds definitions for Chart items in object page sections to the app schema\n * @param {FacetConfig | Chart | object} facet - current facet.\n * @param {string} facetKey - facet key.\n * @param {object} appSchema - app specific schema of the object page that gets enhanced.\n * @param {EntityType} entityType - current entity type\n */\nfunction handleChart(\n    facet: FacetConfig | Chart | object,\n    facetKey: string,\n    appSchema: Definition,\n    entityType?: EntityType\n): { chart: Definition; chartActions: Definition } {\n    const chart = parseSchemaDefinition(DefinitionName.ObjectPageChart, facetKey, appSchema);\n    if (facet['Title']) {\n        chart.description = facet['Title'];\n    }\n    chart[SchemaTag.annotationPath] = getFacetAnnotationPath(facet as PresentationVariantV4);\n    chart[SchemaTag.dataType] = determineDataTypeOfTarget((facet as FacetConfig).target || facet);\n    chart[SchemaTag.isViewNode] = true;\n    chart.properties.toolBar['$ref'] = getFacetDefinitionLink(DefinitionName.ObjectPageToolBar, facetKey);\n    const chartToolBar = parseSchemaDefinition(DefinitionName.ObjectPageToolBar, facetKey, appSchema);\n\n    chartToolBar.properties.actions['$ref'] = getFacetDefinitionLink(DefinitionName.ObjectPageToolBarActions, facetKey);\n    const chartActions = handleChartActions(facet, facetKey, appSchema, entityType);\n    return { chart, chartActions };\n}\n\n/**\n * Adds definitions for Chart section in object page sections to the app schema\n * @param {FacetConfig} facet - current facet.\n * @param {string} facetKey - facet key.\n * @param {object} appSchema - app specific schema of the object page that gets enhanced.\n * @param {object} sections - schema of current sections definition.\n * @param {EntityType} entityType - current entity type\n */\nfunction handleSectionChart(\n    facet: FacetConfig | Chart,\n    facetKey: string,\n    appSchema: Definition,\n    sections?: Definition,\n    entityType: EntityType = (facet as FacetConfig).entityType\n): { sectionChart: Definition; chart: Definition; chartActions?: Definition } {\n    if (sections) {\n        sections.properties[facetKey] = {\n            $ref: getFacetDefinitionLink(DefinitionName.ObjectPageSectionChart, facetKey)\n        };\n    }\n    const sectionChart = parseSchemaDefinition(DefinitionName.ObjectPageSectionChart, facetKey, appSchema);\n    addTargetTitleAndSectionDescription(facet as FacetConfig, sectionChart, facetKey);\n\n    sectionChart[SchemaTag.annotationPath] = getFacetAnnotationPath(facet);\n    sectionChart.properties.chart['$ref'] = getFacetDefinitionLink(DefinitionName.ObjectPageChart, facetKey);\n    const { chart, chartActions } = handleChart(\n        (facet as FacetConfig).target || facet,\n        facetKey,\n        appSchema,\n        entityType\n    );\n    return { sectionChart, chart, chartActions };\n}\n\n/**\n * Adds definitions for presentation variants in object page sections to the app schema\n * @param {FacetConfig} facet - the given facet from the UI annotations\n * @param {string} facetKey - key of the facet, as used in annotation\n * @param {Definition} appSchema - app schema of the object page\n * @param {object} sections - schema of current sections definition.\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n */\nfunction handleSectionPresentationVariant(\n    facet: FacetConfig,\n    facetKey: string,\n    appSchema: Definition,\n    sections: Definition,\n    generateParameters: GenerateAppSchemaParameters,\n    v4Page: v4.SapUiAppPageV4\n) {\n    let facetTarget, visualizationKey: string, target: object;\n    if (!facet?.target) {\n        log(generateParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOPRESENTATIONVARIANT', { key: facetKey })\n        });\n        return;\n    }\n    const visualizations = (facet?.target as PresentationVariant)?.Visualizations;\n    const navPath = facetKey.lastIndexOf('::') > 0 ? facetKey.slice(0, facetKey.lastIndexOf('::')) : undefined;\n    if (visualizations?.[0]) {\n        if (visualizations[0].$target) {\n            facetTarget = visualizations[0].$target;\n            visualizationKey = `@${facetTarget.fullyQualifiedName.split('@')[1].split('/')[0]}`;\n            target = facetTarget;\n        } else {\n            facetTarget = visualizations[0];\n            visualizationKey =\n                '@' +\n                replaceAlias(`${facetTarget.targetString.split('@')[1].split('/')[0]}`, generateParameters.serviceAVT);\n            const navigationProp = generateParameters.entityType.navigationProperties.find((prop) => {\n                return prop.name === navPath;\n            });\n            const targetType = navigationProp.targetType;\n            const visualization = visualizationKey?.split(UIVOCABULARYDOT)[1];\n            target = visualization && targetType?.annotations?.UI[visualization];\n        }\n    }\n    if (facetTarget) {\n        const visualizationType = visualizationKey.split(UIVOCABULARYDOT)[1];\n        const namespace = facet.target[SchemaTag.fullyQualifiedName].split('@')[0];\n        const fullVisualizationKey = navPath ? `${navPath}::${visualizationKey}` : visualizationKey;\n\n        if (visualizationType.startsWith(Visualization.Chart)) {\n            sections.properties[`${facetKey}<${visualizationKey}>`] = {\n                $ref: getFacetDefinitionLink(DefinitionName.ObjectPageSectionChart, fullVisualizationKey)\n            };\n            const { sectionChart, chart } = handleSectionChart(\n                facetTarget as Chart,\n                fullVisualizationKey,\n                appSchema,\n                undefined,\n                facet.entityType\n            );\n            sectionChart[SchemaTag.annotationPath] = facet.annotationPath;\n            addTargetTitleAndSectionDescription(facet, sectionChart, facetKey);\n            chart[SchemaTag.annotationPath] = `/${namespace}/${visualizationKey}`;\n            chart[SchemaTag.target] = namespace;\n        } else if (visualizationType.startsWith(Visualization.LineItem)) {\n            sections.properties[`${facetKey}<${visualizationKey}>`] = {\n                $ref: getFacetDefinitionLink(DefinitionName.ObjectPageSectionTableV4, fullVisualizationKey)\n            };\n            const { sectionTable, table } = handleSectionTable(\n                facet,\n                fullVisualizationKey,\n                appSchema,\n                { target, entityType: facet.entityType } as FacetConfig,\n                generateParameters,\n                v4Page\n            );\n            sectionTable[SchemaTag.annotationPath] = facet.annotationPath;\n            addTargetTitleAndSectionDescription(facet, sectionTable, facetKey);\n            delete sectionTable[SchemaTag.isViewNode];\n            table[SchemaTag.annotationPath] = `/${namespace}/${visualizationKey}`;\n            table[SchemaTag.target] = namespace;\n        }\n    }\n}\n\n/**\n * Method checks if passed facet contains any collection facet.\n * @param {FacetConfig} facet - facet to check\n * @returns {boolean} Passed facet contains at least one collection facet\n */\nfunction containsCollectionFacet(facet: FacetConfig): boolean {\n    const childFacets = facet.facets || {};\n    for (const id in childFacets) {\n        const childFacet = childFacets[id];\n        if (childFacet.base === FacetBase.CollectionFacet) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Object Page specific enhancements to addCustomColumnDefinition\n * @param {object} appSchema - app schema of the object page\n * @param {string} id - identifier of the current section facet\n * @param {string[]} featureToggles - supported features\n * @returns {string} Custom sub section reference id\n */\nfunction createCustomSubSectionReference(appSchema: Definition, id: string, featureToggles?: string[]): string {\n    const referenceId = `${DefinitionName.ObjectPageCustomSubSectionFragment}<${id}>`;\n    const sourceDefinition = appSchema.definitions[DefinitionName.ObjectPageCustomSubSectionFragment];\n    if (typeof sourceDefinition === 'object') {\n        const relatedFacetSchema =\n            typeof sourceDefinition.properties?.relatedFacet === 'object'\n                ? sourceDefinition.properties.relatedFacet\n                : {};\n        const newRef: Definition = {\n            ...sourceDefinition,\n            properties: {\n                ...sourceDefinition.properties,\n                relatedFacet: {\n                    ...relatedFacetSchema,\n                    type: 'string'\n                }\n            }\n        };\n        // Building blocks\n        if (isFeatureSupported(featureToggles, Features.BuildingBlocks)) {\n            newRef['properties']['controls'] = {\n                type: 'object'\n            };\n        }\n        appSchema.definitions[referenceId] = newRef;\n    }\n\n    return referenceId;\n}\n\n/**\n * Common method updates schema for custom header sections or custom subsections.\n * @param {Definition} sections - sections definition\n * @param {Definition} appSchema - app schema of the object page\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n * @param {FacetConfig} facet - the given facet from the UI annotations\n * @param {string} facetKey - key of the facet, as used in annotation\n */\nfunction applyCustomSections(\n    sections: Definition,\n    appSchema: Definition,\n    generateParameters: GenerateAppSchemaParameters,\n    v4Page: v4.SapUiAppPageV4,\n    facet?: FacetConfig,\n    facetKey?: string\n): void {\n    let isMergedSections = false;\n    let customSectionRef: string;\n    // facet and facetkey are used for custom subsection definition\n    if (facet && facetKey) {\n        isMergedSections = !containsCollectionFacet(facet);\n        customSectionRef = createCustomSubSectionReference(appSchema, facetKey, generateParameters.featureToggles);\n    } else {\n        // else use custom header section definition\n        customSectionRef = DefinitionName.ObjectPageCustomHeaderSectionFragment;\n    }\n    sections.additionalProperties = {\n        $ref: `${DEFINITION_LINK_PREFIX}${customSectionRef}`\n    };\n    addCustomSectionDefinition(\n        appSchema,\n        sections,\n        v4Page,\n        customSectionRef,\n        isMergedSections,\n        facetKey,\n        generateParameters.logger\n    );\n    const sectionDefinition = appSchema.definitions[customSectionRef] as Definition;\n    if (typeof sectionDefinition === 'object') {\n        addDescriptiveEnumDefinition(\n            appSchema,\n            sections,\n            {\n                schema: sectionDefinition,\n                property: 'relatedFacet'\n            },\n            {\n                resolveDefinition: true,\n                keyProperties: [SchemaKeyName.id, SchemaKeyName.key],\n                descriptionAsFallback: true\n            }\n        );\n    }\n    const relatedFacet = sectionDefinition.properties.relatedFacet;\n    if (\n        customSectionRef?.includes(DefinitionName.ObjectPageCustomSubSectionFragment) &&\n        isMergedSections &&\n        typeof relatedFacet === 'object'\n    ) {\n        // Exclude annotation nodes\n        const section = v4Page.options?.settings?.content?.body?.sections?.[facetKey];\n        const subSections = section && 'subSections' in section ? section.subSections : {};\n        for (let i = relatedFacet.oneOf.length - 1; i >= 0; i--) {\n            const entry = relatedFacet.oneOf[i] as { const: string; hidden?: boolean };\n            if (!subSections[entry.const]) {\n                entry.hidden = true;\n            }\n        }\n    }\n}\n\n/**\n * Adds definitions for collections in object page sections to the app schema\n * @param {FacetConfig} facet - the given facet from the UI annotations\n * @param {string} facetKey - key of the facet, as used in annotation\n * @param {Definition} appSchema - app schema of the object page\n * @param {Definition} sections - schema of current sections definition.\n * @param {SectionType} sectionPrefix - prefix to distinguish Section and HeaderSection\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n * @param {number} level Collection level in tree\n */\nfunction handleCollection(\n    facet: FacetConfig,\n    facetKey: string,\n    appSchema: Definition,\n    sections: Definition,\n    sectionPrefix: SectionType,\n    generateParameters: GenerateAppSchemaParameters,\n    v4Page: v4.SapUiAppPageV4,\n    level: number\n) {\n    const isCustomSubSectionsSupported = level === 0;\n    const collectionFacet = (sections.properties[facetKey] = createDefaultSection(appSchema, facet, facetKey));\n    const subsections: Definition = {\n        // Custom subsections are allowed on first level of subsections\n        additionalProperties: false,\n        type: 'object',\n        properties: {},\n        description: 'Subsections'\n    };\n    collectionFacet.properties = {\n        subsections\n    };\n    subsections[SchemaTag.annotationPath] = facet.annotationPath;\n    subsections[SchemaTag.target] = facet.namespace;\n    subsections[SchemaTag.keys] = [\n        {\n            name: SchemaKeyName.id,\n            value: facet.ID\n        }\n    ];\n    subsections[SchemaTag.isViewNode] = true;\n    const nextLevel = level + 1;\n    for (const key in facet.facets) {\n        addSection(generateParameters, facet.facets, key, subsections, appSchema, sectionPrefix, v4Page, nextLevel);\n    }\n    if (isCustomSubSectionsSupported) {\n        applyCustomSections(subsections, appSchema, generateParameters, v4Page, facet, facetKey);\n    }\n}\n\n/**\n * Creates a section definition in app schema.\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {FacetConfigs} facets - list of all facets\n * @param {string} facetKey - facet key\n * @param {object} sections - schema of current sections definition\n * @param {object} appSchema - app specific schema of the object page that gets enhanced.\n * @param {SectionType} sectionPrefix - prefix to distinguish Section and HeaderSection\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n * @param {number} [level=0] Section level in tree\n */\nfunction addSection(\n    generateParameters: GenerateAppSchemaParameters,\n    facets: FacetConfigs,\n    facetKey: string,\n    sections: Definition,\n    appSchema: Definition,\n    sectionPrefix: SectionType,\n    v4Page: v4.SapUiAppPageV4,\n    level = 0\n): void {\n    const facet: FacetConfig = facets[facetKey];\n    const facetDefinitionKey = `ObjectPage${sectionPrefix}${facet.base}<${getFacetKeyInSchema(facetKey)}>`;\n    switch (facet.base) {\n        case FacetBase.PresentationVariant: {\n            handleSectionPresentationVariant(facet, facetKey, appSchema, sections, generateParameters, v4Page);\n            break;\n        }\n        case FacetBase.CollectionFacet: {\n            handleCollection(facet, facetKey, appSchema, sections, sectionPrefix, generateParameters, v4Page, level);\n            break;\n        }\n        case FacetBase.LineItem: {\n            if (sectionPrefix === SectionType.Section) {\n                const lineItemFacet = facets[facetKey];\n                handleSectionTable(facet, facetKey, appSchema, lineItemFacet, generateParameters, v4Page, sections);\n            }\n            break;\n        }\n        case FacetBase.Form:\n        case FacetBase.Identification: {\n            handleFormIdentification(\n                facet,\n                v4Page,\n                facetKey,\n                sections,\n                appSchema,\n                sectionPrefix,\n                generateParameters.logger\n            );\n            break;\n        }\n        case FacetBase.DataPoint: {\n            handleHeaderFacet(facet, facetKey, sections, appSchema, facetDefinitionKey);\n            break;\n        }\n        case FacetBase.Chart: {\n            if (sectionPrefix === SectionType.HeaderSection) {\n                handleHeaderFacet(facet, facetKey, sections, appSchema, facetDefinitionKey);\n            } else if (sectionPrefix === SectionType.Section) {\n                handleSectionChart(facet, facetKey, appSchema, sections);\n            }\n            break;\n        }\n        case FacetBase.Address:\n        case FacetBase.Contact: {\n            handleAddressContact(facet, facetKey, sections, appSchema, sectionPrefix);\n            break;\n        }\n        default: {\n            sections['properties'][facetKey] = createDefaultSection(appSchema, facet, facetKey);\n        }\n    }\n}\n\n/**\n * Derives the sections from the UI.Facets annotation and adds them to the schema\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {object} appSchema - application specific JSON schema of the object page\n * @param {SapUiAppPageV4} v4Page - current page\n */\nfunction addSections(\n    generateParameters: GenerateAppSchemaParameters,\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4\n): void {\n    // Get facet annotations\n    const facets: FacetConfigs = getObjectPageFacets(\n        generateParameters.entityType,\n        generateParameters.serviceAVT,\n        FioriElementsVersion.v4,\n        generateParameters.logger\n    );\n    if (!facets) {\n        delete appSchema.definitions[DefinitionName.ObjectPageSubSections];\n        return;\n    }\n\n    const sections = appSchema.definitions[DefinitionName.Sections] as Definition;\n\n    for (const facetKey in facets) {\n        addSection(generateParameters, facets, facetKey, sections, appSchema, SectionType.Section, v4Page);\n    }\n    // Custom sections as part of sections\n    if (appSchema.definitions[DefinitionName.CustomSections]) {\n        sections.properties = {\n            ...sections.properties,\n            ...(appSchema.definitions[DefinitionName.CustomSections] as Definition).properties\n        };\n    }\n}\n\n/**\n * Derives the header sections from the UI.HeaderFacets annotation and adds them to the schema\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {object} appSchema - application specific JSON schema of the object page\n * @param {EntityType} entityType - current entity type\n * @param {SapUiAppPageV4} v4Page - current page in manifest\n */\nfunction addHeaderSections(\n    generateParameters: GenerateAppSchemaParameters,\n    appSchema: Definition,\n    entityType: EntityType,\n    v4Page: v4.SapUiAppPageV4\n): void {\n    // Get facet annotations\n    const facets: FacetConfigs = getObjectPageHeaderFacets(\n        entityType,\n        generateParameters.serviceAVT,\n        FioriElementsVersion.v4,\n        generateParameters.logger\n    );\n    const sections = appSchema.definitions[DefinitionName.HeaderSections] as Definition;\n    sections.properties = {};\n    sections.additionalProperties = false;\n\n    if (!facets) {\n        return;\n    }\n    // add annotation header sections\n    for (const facetKey in facets) {\n        addSection(generateParameters, facets, facetKey, sections, appSchema, SectionType.HeaderSection, v4Page);\n    }\n    // add custom header sections\n    applyCustomSections(sections, appSchema, generateParameters, v4Page);\n    //delete generic definitions\n    delete appSchema.definitions[DefinitionName.ObjectPageHeaderSectionForm];\n    delete appSchema.definitions[DefinitionName.ObjectPageHeaderSectionChart];\n    delete appSchema.definitions[DefinitionName.ObjectPageHeaderSectionDataPoint];\n    delete appSchema.definitions[DefinitionName.ObjectPageHeaderSectionContact];\n    delete appSchema.definitions[DefinitionName.ObjectPageHeaderSectionAddress];\n}\n\n/**\n * Adds the related facets keys 'enum' to the app schema\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {object} schema - app specific schema of the object page that gets enhanced\n * @param {SapUiAppPageV4[]} pages - list of all pages\n * @param {string} contextPath - contextPath of the actual (object) page\n */\nfunction addRelatedFacetKeysType(\n    generateParameters: GenerateAppSchemaParameters,\n    schema: object,\n    pages: v4.SapUiAppPageV4[],\n    contextPath: string\n): void {\n    Object.keys(pages).forEach((element) => {\n        if (\n            pages[element].options &&\n            pages[element].options.settings &&\n            (pages[element].options.settings.entitySet === generateParameters?.entitySet?.name ||\n                (contextPath && pages[element].options.settings.contextPath === contextPath)) &&\n            pages[element].name === v4.FE_TEMPLATE_V4_OBJECT_PAGE\n        ) {\n            // Find sections from annotation\n            const facetSections: FacetSection[] = getObjectPageFacetSection(\n                generateParameters.entityType,\n                generateParameters.serviceAVT,\n                generateParameters.logger\n            );\n            // Find custom sections ids from manifest\n            const page: v4.SapUiAppPageV4 = pages[element];\n            const customSections = page.options?.settings?.content?.body?.sections;\n            if (customSections) {\n                for (const key in customSections) {\n                    const customSection = customSections[key];\n                    // Avoid duplications\n                    if (!facetSections.some((section: FacetSection) => section.key === key)) {\n                        facetSections.push({\n                            key,\n                            title: customSection['title'],\n                            custom: true\n                        });\n                    }\n                }\n            }\n            // Update schema definition\n            addDefinitionForRelatedFacetKeys(schema, [DefinitionName.ObjectPageCustomSectionFragment], facetSections, [\n                'ID',\n                'label',\n                'key'\n            ]);\n        }\n    });\n}\n\n/**\n * Add Object Page Header to app-specific schema\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {Definition} appSchema Schema of the object page\n * @param {SapUiAppPageV4} v4Page - current page in manifest\n */\nfunction addHeader(\n    generateParameters: GenerateAppSchemaParameters,\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4\n): void {\n    const entityType = generateParameters.entityType;\n    addCommonHeaderSchema(appSchema, entityType);\n\n    // Add header actions\n    addHeaderActions(\n        appSchema,\n        entityType,\n        generateParameters.entitySet,\n        generateParameters.serviceAVT,\n        addHeaderActionCallBackV4\n    );\n\n    // Add custom header actions\n    addHeaderFooterCustomActionsOP(appSchema, v4Page, DefinitionName.CustomHeaderActionOP, generateParameters.logger);\n\n    // Add header sections\n    if (entityType) {\n        appSchema.definitions[DefinitionName.HeaderSections][SchemaTag.annotationPath] =\n            `/${entityType.fullyQualifiedName}/@${UIAnnotationTerms.HeaderFacets}`;\n    }\n    addHeaderSections(generateParameters, appSchema, entityType, v4Page);\n}\n\n/**\n * Generates an app specific schema out of the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {object} genericSchema  - generic JSON schema of an object page\n * @param {string} contextPath - contextPath of the given page\n * @param {object} genericMacrosSchema - generic JSON schema of custom page\n *\n * @returns the app specific JSON schema\n */\nexport function generateObjectPageSchemaV4(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchema: object,\n    contextPath: string,\n    genericMacrosSchema?: object\n): object {\n    const appSchema: Definition = JSON.parse(JSON.stringify(genericSchema));\n\n    // Change reference to generated sections\n    appSchema.properties.sections = {\n        $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.Sections}`\n    };\n    if (\n        !generateParameters.manifest[ManifestSection.ui5].routing ||\n        !generateParameters.manifest[ManifestSection.ui5].routing.targets\n    ) {\n        log(generateParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOROUTING'),\n            location: {\n                path: MANIFESTPATH\n            }\n        });\n        return appSchema;\n    }\n\n    //initialize sections\n    const sections = (appSchema.definitions[DefinitionName.Sections] = {\n        type: 'object',\n        properties: {},\n        additionalProperties: false,\n        description: DefinitionName.Sections\n    } as Definition);\n    sections[SchemaTag.isViewNode] = true;\n    if (generateParameters.entityType) {\n        const pages = generateParameters.manifest[ManifestSection.ui5].routing\n            .targets as unknown as v4.SapUiAppPageV4[];\n        if (!pages) {\n            log(generateParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOPAGES', { appId: generateParameters.manifest['sap.app']['id'] }),\n                location: {\n                    path: MANIFESTPATH,\n                    range: [ManifestSection.generic]\n                }\n            });\n            return appSchema;\n        }\n        const v4Page = findPageV4(pages, v4.FE_TEMPLATE_V4_OBJECT_PAGE, generateParameters.entitySet, contextPath);\n        if (!v4Page) {\n            return appSchema;\n        }\n\n        // Add Header\n        addHeader(generateParameters, appSchema, v4Page);\n\n        // Add sections\n        sections[SchemaTag.isViewNode] = true;\n        if (generateParameters.entityType) {\n            sections[SchemaTag.annotationPath] =\n                `/${generateParameters.entityType.fullyQualifiedName}/@${UIAnnotationTerms.Facets}`;\n        }\n        addSections(generateParameters, appSchema, v4Page);\n\n        // Custom Section facets\n        addRelatedFacetKeysType(generateParameters, appSchema, pages, contextPath);\n\n        // Custom extension fragments\n        if (isFeatureSupported(generateParameters.featureToggles, Features.BuildingBlocks) && genericMacrosSchema) {\n            appSchema['definitions'][DefinitionName.ObjectPageCustomSectionFragment]['properties']['controls'] = {\n                type: 'object'\n            };\n            try {\n                resolveFragments(appSchema, genericMacrosSchema, generateParameters, v4Page.id);\n            } catch (error) {\n                log(generateParameters.logger, {\n                    severity: LogSeverity.Error,\n                    message: error\n                });\n            }\n        }\n\n        // Add Footer (actions only)\n        addFooterActions(appSchema, generateParameters, FioriElementsVersion.v4, addFooterActionCallBackV4);\n        addHeaderFooterCustomActionsOP(\n            appSchema,\n            v4Page,\n            DefinitionName.CustomFooterActionOP,\n            generateParameters.logger\n        );\n    }\n    // Delete generic definitions from schema\n    delete appSchema.definitions[DefinitionName.CommonHeaderFacetSettings];\n    delete appSchema.definitions[DefinitionName.GenericColumnsOP];\n    delete appSchema.definitions[DefinitionName.GenericSections];\n    delete appSchema.definitions[DefinitionName.GenericSubSections];\n    delete appSchema.definitions[DefinitionName.ObjectPageChart];\n    delete appSchema.definitions[DefinitionName.ObjectPageSectionAddress];\n    delete appSchema.definitions[DefinitionName.ObjectPageSectionChart];\n    delete appSchema.definitions[DefinitionName.ObjectPageSectionContact];\n    delete appSchema.definitions[DefinitionName.ObjectPageSectionDataPoint];\n    delete appSchema.definitions[DefinitionName.ObjectPageSectionForm];\n    delete appSchema.definitions[DefinitionName.ObjectPageSectionTableV4];\n    delete appSchema.definitions[DefinitionName.ObjectPageSectionPresentationVariant];\n    delete appSchema.definitions[DefinitionName.ObjectPageSubSections];\n    delete appSchema.definitions[DefinitionName.ObjectPageTable];\n    delete appSchema.definitions[DefinitionName.ObjectPageToolBar];\n    delete appSchema.definitions[DefinitionName.ObjectPageToolBarAction];\n    delete appSchema.definitions[DefinitionName.ObjectPageToolBarActions];\n    delete appSchema.definitions[DefinitionName.QuickVariantSelectionV4OP];\n    updatePropertyIndices(appSchema, ROOT_PROPERTIES_ORDER);\n    return appSchema;\n}\n", "import { xml2js } from 'xml-js';\nimport type { Element } from 'xml-js';\nimport { buildAst } from '@xml-tools/ast';\nimport type { XMLDocument } from '@xml-tools/ast';\nimport { parse } from '@xml-tools/parser';\nimport type { DocumentCstNode } from '@xml-tools/parser';\nimport i18next from 'i18next';\nimport type {\n    MacrosXMLPath,\n    ExtensionLogger,\n    FileData,\n    SchemaDefinition,\n    MacrosSchemaMetadata\n} from '@sap/ux-specification-types';\nimport { DefinitionName } from '@sap/ux-specification-types';\nimport { LogSeverity } from '@sap/ux-specification-types';\nimport { getDefinitionKey, getErrorMessage } from '../../common/utils';\nimport { log } from '../../../extensionLogger';\nimport type { Definition } from 'typescript-json-schema';\n\nexport interface TraverseData {\n    fullSchema: SchemaDefinition;\n    schema: SchemaDefinition;\n    element: Element;\n    contextPath: MacrosXMLPath;\n    config: object;\n    parent?: TraverseData;\n}\n\nexport type TraverseCallback = (\n    traverseData: TraverseData,\n    property: SchemaDefinition,\n    config: object,\n    name: string\n) => boolean;\n\n/**\n * Method finds element by XML path.\n * @param {Element} element Element to look in.\n * @param {MacrosXMLPath} path XML path to search.\n * @returns {Element | undefined} Element is returned if element found by passed path.\n */\nfunction findElementByXMLPath(element: Element, path: MacrosXMLPath): Element | undefined {\n    let currentElement: Element | undefined = element;\n    for (const subPath of path) {\n        const elements = currentElement?.elements?.filter((element) => element.type !== 'comment');\n        currentElement = elements?.[subPath.index];\n    }\n    return currentElement;\n}\n\n/**\n * Method ensures that inner object exists for passed property name.\n * @param {object} obj Object to check and update.\n * @param {string} name Property name in object to check and update.\n * @returns {boolean} True if object created.\n */\nfunction ensureObjectExists(obj: object, name: string): boolean {\n    if (!obj[name]) {\n        obj[name] = {};\n        return true;\n    }\n    return false;\n}\n\n/**\n * Method gets properties from full schema definitions using current schema $ref property.\n * @param {SchemaDefinition} fullSchema Full schema object.\n * @param {string} $ref $ref property of current schema object.\n * @returns {Definition}\n */\nfunction getPropertiesFromRef(fullSchema: SchemaDefinition, $ref: string): Definition {\n    let properties: Definition = {};\n    const key = getDefinitionKey($ref);\n    if (fullSchema.definitions && fullSchema.definitions[key]) {\n        const definition = fullSchema.definitions[key];\n        if (typeof definition === 'object' && definition.properties) {\n            properties = definition.properties;\n        }\n    }\n    return properties;\n}\n\n/**\n * Method traverses schema for default aggregation.\n * @param {TraverseData} traverseData Traverse data object.\n * @param {TraverseCallback} callback Callbck to handle export or import.\n * @param {MacrosSchemaMetadata} metadata Metadata with default aggregation.\n * @returns {boolean} Is changes applied during export or import.\n */\nfunction traverseDefaultAggregation(\n    traverseData: TraverseData,\n    callback: TraverseCallback,\n    metadata: MacrosSchemaMetadata\n): boolean {\n    const { defaultAggregation } = metadata;\n    const { schema, element, contextPath, config = {}, fullSchema } = traverseData;\n    const { properties = {} as Definition } = schema;\n    const differs = ensureObjectExists(config, defaultAggregation);\n    const contextConfig = config[defaultAggregation];\n    return (\n        traverseSchema(\n            {\n                fullSchema,\n                schema: properties[defaultAggregation],\n                element: element,\n                contextPath: contextPath,\n                config: contextConfig,\n                parent: traverseData\n            },\n            callback\n        ) || differs\n    );\n}\n\n/**\n * Method checks if passed schema is eligable for default aggregation handling.\n * @param {Definition} properties Schema properties which can contain default aggregation.\n * @param {MacrosSchemaMetadata} [metadata] Metadata with default aggregation.\n * @returns {boolean} True if passed schema is eligable for default aggregation handling.\n */\nfunction isDefaultAggregationAppliable(properties: Definition, metadata?: MacrosSchemaMetadata): boolean {\n    return (\n        metadata?.defaultAggregation && properties[metadata.defaultAggregation]?.['metadata']?.['path']?.length === 0\n    );\n}\n\n/**\n * Method traverses schema together with XML element.\n * @param {TraverseData} traverseData Traverse data object.\n * @param {TraverseCallback} callback Callbck to handle export or import.\n * @returns {boolean} Is changes applied during export or import.\n */\nexport function traverseSchema(traverseData: TraverseData, callback: TraverseCallback): boolean {\n    const { schema, element, contextPath, config = {}, fullSchema } = traverseData;\n    let differs = false;\n    let { properties = {} as Definition } = schema;\n    const { metadata = {} } = schema;\n    if (schema.$ref && !schema.properties) {\n        properties = getPropertiesFromRef(fullSchema, schema.$ref);\n    }\n    for (const name in properties) {\n        const property = properties[name];\n        let shouldTraverse = typeof property === 'object';\n        // Handle default aggregation\n        if (\n            shouldTraverse &&\n            metadata?.defaultAggregation === name &&\n            isDefaultAggregationAppliable(properties, metadata)\n        ) {\n            // Special hook to apply default aggregation\n            differs = traverseDefaultAggregation(traverseData, callback, metadata) || differs;\n            shouldTraverse = false;\n        }\n        if (!shouldTraverse) {\n            continue;\n        }\n        // Check if object contains \"metadata\" to map with XML element\n        if (property['metadata']?.['path']?.length) {\n            const path = property['metadata']['path'];\n            const checkPath = path.slice(contextPath.length);\n            const targetElement = findElementByXMLPath(element, checkPath);\n            differs = ensureObjectExists(config, name) || differs;\n            const contextConfig = config[name];\n            differs =\n                traverseSchema(\n                    {\n                        fullSchema: traverseData.fullSchema,\n                        schema: property,\n                        element: targetElement,\n                        contextPath: path,\n                        config: contextConfig,\n                        parent: traverseData\n                    },\n                    callback\n                ) || differs;\n        } else {\n            differs = callback(traverseData, property, config, name) || differs;\n        }\n    }\n    return differs;\n}\n\n/**\n * Method parses XML file and returns parsed object.\n * @param {FileData} xmlFile XML file.\n * @param {boolean} providePositions - If true then parsing result will contain information about elements and attributes positions.\n * @param {ExtensionLogger} [logger] - Logger class for logging messages.\n * @returns {Element | undefined} Parsed XML.\n */\nexport function parseXML(xmlFile: FileData, providePositions: true, logger?: ExtensionLogger): XMLDocument | undefined;\nexport function parseXML(xmlFile: FileData, providePositions: false, logger?: ExtensionLogger): Element | undefined;\nexport function parseXML(\n    xmlFile: FileData,\n    providePositions: boolean,\n    logger?: ExtensionLogger\n): Element | XMLDocument | undefined {\n    let element: Element | XMLDocument;\n    try {\n        if (providePositions) {\n            const { cst, tokenVector } = parse(xmlFile.fileContent);\n            const xmlDocument = buildAst(cst as DocumentCstNode, tokenVector);\n            if (!xmlDocument.rootElement) {\n                // Throw exception than invalid xml string provided\n                throw new Error('Invalid XML');\n            }\n            element = xmlDocument;\n        } else {\n            element = xml2js(xmlFile.fileContent) as Element;\n        }\n    } catch (error) {\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('XMLPARSEFAILURE', { error: getErrorMessage(error) }),\n            location: {\n                path: xmlFile.dataSourceUri\n            }\n        });\n    }\n    return element;\n}\n\n/**\n * Resolves definition key for custom extension fragment.\n * @param {string} fragmentName Name of the fragment.\n * @returns {string} Definition key for custom extension fragment.\n */\nexport function getCustomExtensionFragmentDefinitionKey(fragmentName: string): string {\n    return `${DefinitionName.CustomExtensionFragment}<${fragmentName}>`;\n}\n\n/**\n * Method find first renderable element for passed definition element.\n * @param element Definition element.\n * @returns First renderable element.\n */\nexport function getRootElement(element?: Element): Element | undefined {\n    return element.elements?.find((root) => root.type !== 'comment');\n}\n", "import type { DefinitionOrBoolean } from 'typescript-json-schema';\nimport type { ConvertedMetadata } from '@sap-ux/vocabularies-types';\nimport type {\n    ExtensionLogger,\n    MacrosXMLPath,\n    SchemaDefinition,\n    MacrosSchemaMetadata\n} from '@sap/ux-specification-types';\nimport { LogSeverity } from '@sap/ux-specification-types';\nimport { MacrosPropertyType } from '@sap/ux-specification-types';\nimport { getDefinitionsRef, getDefinitionKey, DEFINITION_LINK_PREFIX } from '../../../common/utils';\nimport { parseXML } from '../../utils/macros';\nimport type { XMLElement } from '@xml-tools/ast';\nimport { annotationMacrosHandlers } from './annotations';\nimport type { HandlerParams } from './annotations';\nimport { handleExtensions } from './extensions';\nimport type { ExtensionFileData, PageConnection } from '../../types';\nimport { initI18n } from '../../../../i18n/i18n';\nimport i18next from 'i18next';\nimport { log } from '../../../../extensionLogger';\nimport { v4 as uuidV4 } from 'uuid';\nimport { getNodeByName } from './utils';\n\nconst MACROS_NAMESPACE = 'sap.fe.macros';\n// List of properties which should be used to describe schema view nodes\nconst descriptionProperties = ['id', 'key', 'title', 'text', 'label', 'header'];\n\ninterface UI5Depenencies {\n    [key: string]: string;\n}\n\ninterface XMLParseParams {\n    macrosPrefixes: string[];\n    schema: SchemaDefinition;\n    dependencies: UI5Depenencies;\n    index: number;\n    isUnique: boolean;\n    path: MacrosXMLPath;\n    serviceAVT: ConvertedMetadata;\n    connectionContext: PageConnection;\n    logger?: ExtensionLogger;\n}\n\ninterface DefaultAggregationData {\n    schema: SchemaDefinition;\n    name: string;\n}\n\n/**\n * Method returns full element name by concating name and namespace.\n * @param {XMLElement} element Parsed XML element.\n * @returns {string} Full name of element including namespace.\n */\nfunction getElementName(element: XMLElement): string {\n    const { ns, name } = element;\n    if (ns) {\n        return `${ns}:${name}`;\n    }\n    return name;\n}\n\n/**\n * Method checks if passed XML element is defined within passed namespace.\n * @param {XMLElement} element Parsed XML element.\n * @param {string[]} namespacePrefixes Used namespace prefixes.\n * @returns {boolean} Is element defined within passed namespace.\n */\nfunction isElementWithNamespace(element: XMLElement, namespacePrefixes: string[]): boolean {\n    const { ns = '' } = element;\n    if (!namespacePrefixes) {\n        return !ns;\n    } else {\n        return namespacePrefixes.includes(ns);\n    }\n}\n\n/**\n * Method returns all dependecies defined in passed core SAPUI5 XML element.\n * @param {XMLElement} coreElement Parsed XML element.\n * @returns {UI5Depenencies} Object with dependencies.\n */\nfunction getDependencies(coreElement: XMLElement): UI5Depenencies {\n    const dependencies: UI5Depenencies = {};\n    const coreAttributes = coreElement.attributes || [];\n    for (const attr of coreAttributes) {\n        const { key, value } = attr;\n        let accesor = '';\n        const namespaceConst = 'xmlns:';\n        if (key.startsWith(namespaceConst)) {\n            accesor = key.substring(namespaceConst.length);\n        }\n        dependencies[value] = accesor;\n    }\n    return dependencies;\n}\n\n/**\n * Method returns description for passed view node.\n * @param {XMLElement} node Parsed XML element.\n * @param {string} name View node name.\n * @returns {string} Description for view node.\n */\nfunction getViewNodeDescription(node: XMLElement, name: string): string {\n    let description = '';\n    const attributes = node.attributes || [];\n    for (const attributeName of descriptionProperties) {\n        const attr = attributes.find((attribute) => attribute.key === attributeName);\n        if (attr) {\n            const prefix = attributeName === 'id' ? '#' : '';\n            description = `${prefix}${attr.value}`;\n            break;\n        }\n    }\n    return description ? `${name} ${description}` : name;\n}\n\n/**\n * Method finds available name for properties in schema's properties.\n * @param {string} name Original property name.\n * @param {{ [k: string]: SchemaDefinition }} properties Object with existing properties.\n * @returns {string} Available name in properties.\n */\nfunction findAvailableName(name: string, properties: { [k: string]: DefinitionOrBoolean }): string {\n    let availableName = name;\n    let index = 2;\n    while (availableName in properties) {\n        availableName = `${name}${index}`;\n        index++;\n    }\n\n    return availableName;\n}\n\n/**\n * Method prepares schema 'properties' for passed schema by resolving '$ref' property.\n * @param {SchemaDefinition} schema Schema node to update.\n * @param {SchemaDefinition} fullSchema Full schema object which contains definitions.\n */\nfunction prepareSchemaProperties(schema: SchemaDefinition, fullSchema: SchemaDefinition): void {\n    schema.properties = {};\n    if (schema.$ref) {\n        const key = getDefinitionKey(schema.$ref);\n        const definition = fullSchema.definitions[key] as SchemaDefinition;\n        if (typeof definition === 'object' && definition.properties) {\n            schema.type = definition.type;\n            schema.isViewNode = definition.isViewNode;\n            schema.properties = JSON.parse(JSON.stringify(definition.properties));\n        }\n        delete schema.$ref;\n    }\n}\n\n/**\n * Method handles attributes of xml node and stores range position to schema.\n * @param {XMLElement} node Parsed XML element.\n * @param {SchemaDefinition} schema Schema object containing properties matching to element attributes.\n * @param {SchemaDefinition} fullSchema Full schema object which contains definitions.\n */\nfunction handleAttributes(node: XMLElement, schema: SchemaDefinition, fullSchema: SchemaDefinition): void {\n    if (!schema.properties) {\n        prepareSchemaProperties(schema, fullSchema);\n    }\n    const { properties = {} } = schema;\n    for (const attr of node.attributes) {\n        const property = properties[attr.key] as SchemaDefinition;\n        if (property && property.metadata) {\n            property.metadata.position = attr.position;\n        }\n    }\n}\n\n/**\n * Method adds custom ID property for macros control type in schema.\n * @param {MacrosSchemaMetadata} metadata Macros metadata.\n */\nfunction applyIdForMacros(metadata: MacrosSchemaMetadata): void {\n    if (metadata.type === MacrosPropertyType.Control) {\n        metadata.internalId = uuidV4();\n    }\n}\n\n/**\n * Method calls annotation handler for passed macros control.\n * @param {string} macrosControl Full macros control namespace. Like 'sap.fe.macros.Table'.\n * @param {string} options Handler options.\n * @param {ExtensionLogger} [logger] Logger.\n */\nfunction callAnnotationHandler(macrosControl: string, options: HandlerParams, logger?: ExtensionLogger): void {\n    try {\n        annotationMacrosHandlers[macrosControl]?.(options);\n    } catch (e) {\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('MACROS_ANNOTATION_ERROR', { control: macrosControl })\n        });\n    }\n}\n\n/**\n * Method updates/syncs passed schema's metadata with metadata from passed reference.\n * @param {MacrosSchemaMetadata} metadata Metadata to update/sync.\n * @param {SchemaDefinition} schema Reference schema.\n * @param {string} refName Reference schema name. In case of ui5 control schema - name is control name.\n */\nfunction updateMetadataByReference(metadata: MacrosSchemaMetadata, schema: SchemaDefinition, refName: string): void {\n    if (!metadata.type) {\n        metadata.type = schema.metadata.type;\n    }\n    if (schema.metadata.defaultAggregation) {\n        metadata.defaultAggregation = schema.metadata.defaultAggregation;\n    }\n    if (metadata.type === MacrosPropertyType.Control) {\n        metadata.controlName = refName;\n    }\n}\n\n/**\n * Method adds control or complex property to schema's properties.\n * @param {XMLElement} node Parsed XML element.\n * @param {SchemaDefinition} schema Schema object to update with new property.\n * @param {XMLParseParams} params XML parsing params.\n * @param {string} name Property name.\n * @returns {string} Added property name.\n */\nfunction addControlToSchema(node: XMLElement, schema: SchemaDefinition, params: XMLParseParams, name: string): string {\n    const fullSchema = params.schema;\n    if (!schema.properties) {\n        prepareSchemaProperties(schema, fullSchema);\n    }\n    const schemaProperty = schema.properties[name] as SchemaDefinition;\n    const type = schemaProperty?.metadata?.type;\n    const defaultAggregation = schemaProperty?.metadata?.defaultAggregation;\n    const metadata: MacrosSchemaMetadata = {\n        path: params.path,\n        type,\n        position: node.position\n    };\n    if (defaultAggregation) {\n        metadata.defaultAggregation = defaultAggregation;\n    }\n    const objectKey = schemaProperty?.metadata?.path?.length ? findAvailableName(name, schema.properties) : name;\n    let refs: string[] = [];\n    if (schemaProperty?.$ref) {\n        refs.push(getDefinitionKey(schemaProperty.$ref));\n    } else {\n        refs = [\n            `${MACROS_NAMESPACE}.${name}`,\n            `${MACROS_NAMESPACE}.table.${name}`,\n            `${MACROS_NAMESPACE}.filterBar.${name}`\n        ];\n    }\n    let handled = false;\n    for (const ref of refs) {\n        const refDefinition = fullSchema.definitions?.[ref] as SchemaDefinition;\n        if (typeof refDefinition !== 'object') {\n            continue;\n        }\n        updateMetadataByReference(metadata, refDefinition, ref);\n        const description = getViewNodeDescription(node, name);\n        const newDefinition: SchemaDefinition = {\n            $ref: getDefinitionsRef(ref),\n            description,\n            propertyIndex: params.index,\n            metadata\n        };\n        handleAttributes(node, newDefinition, fullSchema);\n        schema.properties[objectKey] = newDefinition;\n        handled = true;\n        // Call annotation handler\n        callAnnotationHandler(\n            ref,\n            {\n                ...params,\n                node,\n                schema: newDefinition,\n                rootSchema: params.schema\n            },\n            params.logger\n        );\n\n        break;\n    }\n    applyIdForMacros(metadata);\n    if (!handled) {\n        if (!schemaProperty?.properties) {\n            // Unknown definition\n            const newDefinition: SchemaDefinition = {\n                properties: {},\n                isViewNode: true,\n                type: 'object',\n                description: name,\n                propertyIndex: params.index,\n                metadata\n            };\n            schema.properties[objectKey] = newDefinition;\n        } else {\n            schemaProperty.metadata = metadata;\n        }\n    }\n\n    return objectKey;\n}\n\n/**\n * Method helps to populate used definition keys by looking in passed schema properties.\n * @param {SchemaDefinition} schema Schema to check for properties.\n * @param {string[] | undefined} usedDefinitionKeys Parameter populates used definition keys in macros schema.\n */\nfunction populateUsedDefinitionKeys(schema: SchemaDefinition, usedDefinitionKeys: string[]) {\n    const properties = schema.properties;\n    if (properties) {\n        for (const i in properties) {\n            const property = properties[i] as SchemaDefinition;\n            if (property.$ref) {\n                const definitionKey = property.$ref.split(DEFINITION_LINK_PREFIX)[1];\n                if (definitionKey && usedDefinitionKeys.indexOf(definitionKey) === -1) {\n                    usedDefinitionKeys.push(definitionKey);\n                }\n            }\n            populateUsedDefinitionKeys(property, usedDefinitionKeys);\n        }\n    }\n}\n\n/**\n * Method checks if passed node is addable to passed schema by checking \"additionalProperties\".\n * @param {XMLElement} node XML element.\n * @param {DefinitionOrBoolean} [schema] JSON schema.\n * @returns {boolean} True if node is addable for schema's additionalProperties.\n */\nfunction isElementAddableToSchema(node: XMLElement, schema?: DefinitionOrBoolean): boolean {\n    if (\n        typeof schema === 'object' &&\n        typeof schema.additionalProperties === 'object' &&\n        schema.additionalProperties.$ref\n    ) {\n        const ref = schema.additionalProperties.$ref;\n        const parts = ref.split('.');\n        if (parts[parts.length - 1] === node.name) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Method returns default aggregation information if schema contains default aggregation.\n * @param {XMLElement} node Parsed XML element.\n * @param {SchemaDefinition} schema Schema object to check for default aggregation.\n * @returns {DefaultAggregationData} Default aggregation information.\n */\nfunction getDefaultAggregation(node: XMLElement, schema: SchemaDefinition): DefaultAggregationData | undefined {\n    const defaultAggregation = schema.metadata?.defaultAggregation;\n    if (defaultAggregation && !getNodeByName(node, defaultAggregation)) {\n        const defaultAggregationSchema = schema.properties[defaultAggregation];\n        if (typeof defaultAggregationSchema === 'object') {\n            return {\n                schema: defaultAggregationSchema,\n                name: defaultAggregation\n            };\n        }\n    }\n    return undefined;\n}\n\n/**\n * Handles subelements of an XML node.\n * @param {XMLElement[]} subElements of a parent node.\n * @param {SchemaDefinition} schema Schema object to update with new property.\n * @param {XMLParseParams} params XML parsing params.\n * @param {string[] | undefined} usedDefinitionKeys Parameter populates used definition keys in macros schema.\n */\nfunction handleSubElementsOfXMLNode(\n    subElements: XMLElement[],\n    schema: SchemaDefinition,\n    params: XMLParseParams,\n    usedDefinitionKeys: string[]\n) {\n    const uniqueKeys: { [key: string]: boolean } = {};\n\n    for (let index = 0; index < subElements.length; index++) {\n        const element = subElements[index];\n        const isUnique = !uniqueKeys[element.name];\n        uniqueKeys[element.name] = true;\n        handleXMLNode(\n            element,\n            schema,\n            {\n                ...params,\n                isUnique,\n                index,\n                path: [\n                    ...params.path,\n                    {\n                        name: getElementName(element),\n                        index\n                    }\n                ]\n            },\n            usedDefinitionKeys\n        );\n    }\n}\n\n/**\n * Method adds property to schema's properties.\n * @param {XMLElement} node Parsed XML element.\n * @param {SchemaDefinition} schema Schema object to update with new property.\n * @param {XMLParseParams} params XML parsing params.\n * @param {string[] | undefined} usedDefinitionKeys Parameter populates used definition keys in macros schema.\n */\nfunction handleXMLNode(\n    node: XMLElement,\n    schema: SchemaDefinition,\n    params: XMLParseParams,\n    usedDefinitionKeys?: string[]\n): void {\n    const postProcesses: Array<{ node: XMLElement; schema: SchemaDefinition; name?: string }> = [];\n    const { macrosPrefixes } = params;\n    const parentSchema = schema?.$ref ? params.schema.definitions?.[getDefinitionKey(schema.$ref)] : schema;\n    if (\n        isElementWithNamespace(node, macrosPrefixes) ||\n        (typeof parentSchema === 'object' && parentSchema.properties?.[node.name])\n    ) {\n        const defaultAggregation = schema.metadata?.defaultAggregation;\n        if (defaultAggregation && isElementAddableToSchema(node, schema.properties[defaultAggregation])) {\n            schema = schema.properties[defaultAggregation] as SchemaDefinition;\n        }\n        const names = node.name.split(':');\n        const name = addControlToSchema(node, schema, params, names[names.length - 1]);\n        // Go deeper in schema\n        if (!schema.properties[name]) {\n            return;\n        } else {\n            schema = schema.properties[name] as SchemaDefinition;\n        }\n    }\n    const { subElements = [] } = node;\n    const definitionName = schema?.metadata ? schema.metadata.controlName : undefined;\n    if (\n        usedDefinitionKeys &&\n        definitionName &&\n        params.schema.definitions[definitionName] &&\n        usedDefinitionKeys.indexOf(definitionName) === -1\n    ) {\n        usedDefinitionKeys.push(definitionName);\n        // search deeper for macros definitions\n        populateUsedDefinitionKeys(schema, usedDefinitionKeys);\n    }\n    const defaultAggregation = getDefaultAggregation(node, schema);\n    if (defaultAggregation) {\n        postProcesses.push({ node, schema: defaultAggregation.schema, name: defaultAggregation.name });\n    }\n    handleSubElementsOfXMLNode(subElements, schema, params, usedDefinitionKeys);\n    postProcesses.push({ node, schema });\n    // Post process schema\n    for (const postProcess of postProcesses) {\n        handleExtensions(postProcess.node, postProcess.schema, params.schema, postProcess.name);\n    }\n}\n\n/**\n * Method returns available macros namespace prefixes.\n * @param {SchemaDefinition} genericSchema Generic schema of \"sap.fe.macros\".\n * @param {UI5Depenencies} dependencies Used dependencies.\n * @returns {string[]} Available macros namespace prefixes.\n */\nfunction getMacrosPrefixes(genericSchema: SchemaDefinition, dependencies: UI5Depenencies): string[] {\n    const macrosPrefixes = [];\n    // populate available namespace prefixes\n    if (genericSchema?.metadata?.namespaces) {\n        genericSchema.metadata.namespaces.forEach((prefix: string) => {\n            if (prefix in dependencies) {\n                macrosPrefixes.push(dependencies[prefix]);\n            }\n        });\n    }\n    return macrosPrefixes;\n}\n\n/**\n * Method generates schema for passed XML content.\n * @param {SchemaDefinition} genericSchema Generic schema of \"sap.fe.macros\".\n * @param {ExtensionFileData} xmlFile Object with xml file.\n * @param {ConvertedMetadata} serviceAVT OData metadata.\n * @param {ExtensionLogger} [logger] - Logger class for logging messages.\n * @returns {SchemaDefinition} Generated schema for passed XML content.\n */\nexport function generateMacrosSchemaDefinition(\n    genericSchema: SchemaDefinition,\n    xmlFile: ExtensionFileData,\n    serviceAVT: ConvertedMetadata,\n    logger?: ExtensionLogger\n): SchemaDefinition | undefined {\n    const viewDocument = parseXML(xmlFile.file, true, logger);\n    const usedDefinitionKeys: string[] = [];\n    if (!viewDocument) {\n        return undefined;\n    }\n    initI18n();\n    // define default schema without any definitions and properties\n    let schema: SchemaDefinition = {\n        type: 'object',\n        properties: {},\n        definitions: {},\n        additionalProperties: false,\n        $schema: 'http://json-schema.org/draft-07/schema#'\n    };\n    if (!genericSchema) {\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOGENERICSCHEMA', { pageType: 'FPM Custom Page' })\n        });\n        return;\n    }\n    const coreElement = viewDocument.rootElement;\n    const dependencies = getDependencies(coreElement);\n    const macrosPrefixes = getMacrosPrefixes(genericSchema, dependencies);\n    if (macrosPrefixes.length) {\n        // Macros supported\n        schema = JSON.parse(JSON.stringify(genericSchema));\n        const uniqueKeys: { [key: string]: boolean } = {};\n        for (let index = 0; index < coreElement.subElements.length; index++) {\n            const element = coreElement.subElements[index];\n            const isUnique = !uniqueKeys[element.name];\n            uniqueKeys[element.name] = true;\n            handleXMLNode(\n                element,\n                schema,\n                {\n                    macrosPrefixes,\n                    schema,\n                    dependencies,\n                    index,\n                    isUnique,\n                    path: [\n                        {\n                            name: getElementName(element),\n                            index\n                        }\n                    ],\n                    serviceAVT,\n                    connectionContext: xmlFile.connection,\n                    logger\n                },\n                usedDefinitionKeys\n            );\n        }\n        // clean unused definitions from macros schema\n        for (const i in schema.definitions) {\n            if (schema.definitions[i]['metadata'] && !usedDefinitionKeys.includes(i)) {\n                delete schema.definitions[i];\n            }\n        }\n    }\n    return schema;\n}\n", "import type {\n    ConvertedMetadata,\n    EntitySet,\n    EntityType,\n    BaseNavigationProperty,\n    AnnotationTerm\n} from '@sap-ux/vocabularies-types';\nimport type { LineItem } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport type { XMLElement } from '@xml-tools/ast';\nimport type { SchemaDefinition } from '@sap/ux-specification-types';\nimport { UIVOCABULARY, DefinitionName } from '@sap/ux-specification-types';\nimport type { PageConnection } from '../../types';\nimport { addSelectionFields, analyzeViewAnnotation } from '../listReport';\nimport { findAlias, getAnnotationPathUsingFullyQualifiedName } from '../../../common';\nimport { getAttribute } from './utils';\nimport { appendLineItemsToSchema } from '../../utils/utils';\nimport type { LineItemDataForSchema } from '../../utils/utils';\n\nexport interface HandlerParams {\n    serviceAVT: ConvertedMetadata;\n    node: XMLElement;\n    // Current parsing context schema\n    schema: SchemaDefinition;\n    // Full schema\n    rootSchema: SchemaDefinition;\n    connectionContext: PageConnection;\n}\n\ninterface EntityTypeResolution {\n    entityType: EntityType;\n    metaPath?: string;\n}\n\ninterface MetaPathResolution {\n    term?: string;\n    navigation?: string;\n}\n\ntype AnnotationMacrosHandler = (params: HandlerParams) => void;\n\ninterface TableLineItemAnnotationData {\n    lineItem: AnnotationTerm<LineItem>;\n    annotationPath?: string;\n}\n\n/**\n * Method resolves passed \"metaPath\" property from XML node.\n * @param {string} metaPath \"metaPath\" property from XML node.\n * @returns {MetaPathResolution} Meta path resolution.\n */\nfunction resolveMetaPath(metaPath: string): MetaPathResolution {\n    const mataPathParts = metaPath.split('/');\n    let navigationIndex = -1;\n    for (let i = 0; i < mataPathParts.length; i++) {\n        if (mataPathParts[i]) {\n            if (!mataPathParts[i].startsWith('@')) {\n                navigationIndex = i;\n            }\n            break;\n        }\n    }\n    if (navigationIndex !== -1) {\n        return {\n            navigation: mataPathParts[navigationIndex],\n            term: mataPathParts.slice(navigationIndex + 1, mataPathParts.length).join('/')\n        };\n    }\n    return { term: metaPath };\n}\n\n/**\n * Method returns entity type for passed macros annotation handler params.\n * @param {HandlerParams} params Macros annotation handler params containing serviceAvt and connection context information.\n * @returns {EntityType | undefined} EntityType for passed connection.\n */\nfunction getEntityTypeResolution(params: HandlerParams): EntityTypeResolution | undefined {\n    const { node, serviceAVT, connectionContext } = params;\n    const contextPath = getAttribute(node, 'contextPath') || connectionContext.contextPath;\n    let metaPath = getAttribute(node, 'metaPath');\n    const entitySet = connectionContext.entitySet;\n    if (!contextPath && !entitySet) {\n        return undefined;\n    }\n    let path = contextPath || `/${entitySet}`;\n    if (metaPath) {\n        const metaPathResolution = resolveMetaPath(metaPath);\n        if (metaPathResolution.navigation) {\n            path += '/' + metaPathResolution.navigation;\n            metaPath = metaPathResolution.term;\n        }\n    }\n    const resolvedContextPath = serviceAVT?.resolvePath<EntitySet | EntityType | BaseNavigationProperty>(path);\n    let entityType: EntityType | undefined;\n    switch (resolvedContextPath?.target?.['_type']) {\n        case 'EntitySet': {\n            entityType = resolvedContextPath.target.entityType;\n            break;\n        }\n        case 'NavigationProperty': {\n            entityType = resolvedContextPath.target.targetType;\n            break;\n        }\n        case 'EntityType': {\n            entityType = resolvedContextPath.target;\n            break;\n        }\n    }\n    return entityType\n        ? {\n              entityType,\n              metaPath\n          }\n        : undefined;\n}\n\n/**\n * Method applies annotation path for passed XML node's schema.\n * @param {HandlerParams} schema Schema to update with \"annotationPath\".\n * @param {EntityTypeResolution} [entityTypeResolution] Entity type resolution object.\n */\nfunction applyAnnotationPath(schema: SchemaDefinition, entityTypeResolution?: EntityTypeResolution): void {\n    if (entityTypeResolution?.metaPath) {\n        const { entityType, metaPath } = entityTypeResolution;\n        schema.annotationPath = `/${entityType.fullyQualifiedName}/${metaPath}`;\n    }\n}\n\n/**\n * Method returns data for table annotation line items for passed entity type resolution.\n * @param {EntityTypeResolution} entityTypeResolution Entity type resolution object.\n * @param {ConvertedMetadata} serviceAVT Combined service metadata, as returned by annotation vocabularies tools.\n * @param {ConvertedMetadata} alias Annotation alias.\n * @returns {TableLineItemAnnotationData | undefined} Table annotation line items.\n */\nfunction getTableLineItemAnnotationData(\n    entityTypeResolution: EntityTypeResolution,\n    serviceAVT: ConvertedMetadata,\n    alias: string\n): TableLineItemAnnotationData | undefined {\n    const { metaPath, entityType } = entityTypeResolution;\n    let lineItem: AnnotationTerm<LineItem> | undefined;\n    let annotationPath: string | undefined;\n    if (entityType && metaPath) {\n        const annotation = analyzeViewAnnotation(metaPath, entityType?.annotations?.[alias], serviceAVT);\n        if (annotation.visualization) {\n            const annotationTerm = annotation.visualization.split('.')[1];\n            lineItem = entityType?.annotations?.[alias]?.[annotationTerm];\n            if (lineItem?.fullyQualifiedName) {\n                annotationPath = getAnnotationPathUsingFullyQualifiedName(entityType, lineItem.fullyQualifiedName);\n            }\n        }\n    }\n    if (lineItem) {\n        return {\n            lineItem,\n            annotationPath\n        };\n    }\n\n    return undefined;\n}\n\n// Handlers map for macros controls\nexport const annotationMacrosHandlers: { [key: string]: AnnotationMacrosHandler } = {\n    'sap.fe.macros.Chart': (params: HandlerParams) => {\n        const entityTypeResolution = getEntityTypeResolution(params);\n        applyAnnotationPath(params.schema, entityTypeResolution);\n    },\n    'sap.fe.macros.FilterBar': (params: HandlerParams) => {\n        const { schema, serviceAVT, rootSchema } = params;\n        const entityTypeResolution = getEntityTypeResolution(params);\n        // Handler selection fields\n        const filterFieldsDefinition = schema.properties?.filterFields;\n        if (typeof filterFieldsDefinition === 'object' && entityTypeResolution) {\n            if (!filterFieldsDefinition.properties) {\n                filterFieldsDefinition.properties = {};\n            }\n            const alias = findAlias(UIVOCABULARY, serviceAVT);\n            const selectionFieldAnnotation =\n                alias && entityTypeResolution.entityType?.annotations?.[alias]?.SelectionFields;\n            addSelectionFields(\n                entityTypeResolution.entityType,\n                rootSchema,\n                selectionFieldAnnotation,\n                filterFieldsDefinition\n            );\n        }\n    },\n    'sap.fe.macros.Table': (params: HandlerParams) => {\n        const { schema, serviceAVT, rootSchema } = params;\n        const entityTypeResolution = getEntityTypeResolution(params);\n        const colDefinition = schema.properties.columns;\n        const actionDefinition = schema.properties.actions;\n        if (typeof colDefinition === 'object' && typeof actionDefinition === 'object' && entityTypeResolution) {\n            if (!colDefinition.properties) {\n                colDefinition.properties = {};\n            }\n            if (!actionDefinition.properties) {\n                actionDefinition.properties = {};\n            }\n            const alias = findAlias(UIVOCABULARY, serviceAVT);\n            applyAnnotationPath(schema, entityTypeResolution);\n\n            if (schema.annotationPath) {\n                const annotationData = getTableLineItemAnnotationData(entityTypeResolution, serviceAVT, alias);\n                if (annotationData?.annotationPath) {\n                    schema.annotationPath = annotationData.annotationPath;\n                }\n                const dataForLineItem: LineItemDataForSchema = {\n                    appSchema: rootSchema,\n                    lineItemAnnotation: annotationData.lineItem,\n                    entityType: entityTypeResolution.entityType,\n                    oDataServiceAVT: serviceAVT,\n                    lineItemId: DefinitionName.LineItems\n                };\n                appendLineItemsToSchema(dataForLineItem, actionDefinition, schema.annotationPath, colDefinition);\n            }\n        }\n    }\n};\n", "import type { XMLElement } from '@xml-tools/ast';\n\n/**\n * Method to get value of xml attribute by attribute name.\n * @param {XMLElement} node XML node\n * @param {string} name Attribute name\n * @returns {string | undefined} Value of xml attribute\n */\nexport function getAttribute(node: XMLElement, name: string): string | undefined {\n    return node.attributes.find((attribute) => attribute.key === name)?.value;\n}\n\n/**\n * Method to get node by node name.\n * @param {XMLElement} node XML node with children\n * @param {string} name Name of children node to search\n * @returns {XMLElement | undefined} Found children XML node\n */\nexport function getNodeByName(node: XMLElement, name: string): XMLElement | undefined {\n    return node.subElements?.find((child: XMLElement) => child.name === name);\n}\n", "import type { SchemaDefinition } from '@sap/ux-specification-types';\nimport { v4 } from '@sap/ux-specification-types';\nimport { getDefinitionKey } from '../../../common/utils';\nimport { addDescriptiveEnumDefinition } from '../../../common/generate/utils';\nimport type { XMLElement } from '@xml-tools/ast';\nimport { getAttribute } from './utils';\nimport type { CustomExtensions, CustomExtension } from '../../utils/utils';\nimport { addExtensionToArray } from '../../utils/utils';\n\nconst ANNOTATION_PREFIX_MAP_REPLACE = new Map([['filterFields', 'SelectionField::']]);\n\nconst ANNOTATION_PREFIX_MAP = new Map([\n    ['columns', 'DataField::'],\n    ['actions', 'DataFieldForAction::']\n]);\n\nconst PLACEMENT_PROPERTIES = {\n    anchor: 'anchor',\n    placement: 'placement',\n    key: 'key'\n};\n\ninterface ExtensionData {\n    key: string;\n    extension: CustomExtension;\n}\n\ninterface AnnotationPrefix {\n    prefix: string;\n    replace: boolean;\n}\n\n/**\n * Method checks if passed schema definition is custom extension.\n * @param {XMLElement} node Parsed XML element.\n * @param {SchemaDefinition} schema Schema object which contains custom extensions and annotation elements.\n * @param {SchemaDefinition} appSchema Full app schema.\n * @returns {string} Added property name.\n */\nfunction isCustomExtensionSchema(schema: SchemaDefinition, appSchema: SchemaDefinition): boolean {\n    if (typeof schema?.additionalProperties === 'object' && schema?.additionalProperties.$ref) {\n        const definition = appSchema.definitions?.[getDefinitionKey(schema.additionalProperties.$ref)];\n        const additionalProperties = typeof definition === 'object' ? definition.properties || {} : {};\n        return (\n            PLACEMENT_PROPERTIES.anchor in additionalProperties &&\n            PLACEMENT_PROPERTIES.placement in additionalProperties\n        );\n    }\n    return false;\n}\n\n/**\n * Method returns annotation prefix for passed macro node name.\n * @param {string} nodeName Macros node name.\n */\nfunction getAnnotationPrefix(nodeName: string): AnnotationPrefix | undefined {\n    let prefix = ANNOTATION_PREFIX_MAP_REPLACE.get(nodeName);\n    const result: AnnotationPrefix = { prefix: '', replace: false };\n    if (prefix) {\n        result.prefix = prefix;\n        result.replace = true;\n    } else {\n        prefix = ANNOTATION_PREFIX_MAP.get(nodeName);\n        if (prefix) {\n            result.prefix = prefix;\n        }\n    }\n    return result;\n}\n\n/**\n * Method returns proxy extension object by parsing XML node.\n * Proxy object is required to be able to reuse 'utils.addExtensionToArray' method to recalculate order of annotation and custom extensions.\n * @param {XMLElement} node Parsed XML element.\n * @param {SchemaDefinition} schema Schema object which contains custom extensions and annotation elements.\n * @param {string} property Custom extension key in schema's properties.\n * @param {string} aggregationName Aggregation name of container.\n * @returns {ExtensionData} Proxy extension object.\n */\nfunction getExtensionData(\n    node: XMLElement,\n    schema: SchemaDefinition,\n    property: string,\n    aggregationName: string\n): ExtensionData {\n    const schemaNode = schema.properties[property] as SchemaDefinition;\n    const annotationPrefix = getAnnotationPrefix(aggregationName);\n    // Custom extension node\n    const xmlPath = schemaNode.metadata.path;\n    const xmlExtension = node.subElements[xmlPath[xmlPath.length - 1].index];\n    const key = getAttribute(xmlExtension, PLACEMENT_PROPERTIES.key) || property;\n    const anchor = getAttribute(xmlExtension, PLACEMENT_PROPERTIES.anchor);\n    const placement = getAttribute(xmlExtension, PLACEMENT_PROPERTIES.placement) || v4.Placement.After;\n    const annotationAnchor = annotationPrefix.replace ? `${annotationPrefix.prefix}${anchor}` : anchor;\n    const extension = {\n        position: {\n            anchor: annotationAnchor in schema.properties ? annotationAnchor : anchor,\n            placement\n        }\n    } as CustomExtension;\n    return { key, extension };\n}\n\n/**\n * Method updates 'propertyIndex' for passed schema's properties.\n * Method prepares proxy objects and reuses 'utils.addExtensionToArray' method to recalculate order of annotation and custom extensions.\n * @param {XMLElement} node Parsed XML element.\n * @param {SchemaDefinition} schema Schema object which contains custom extensions and annotation elements.\n * @param {string} aggregationName Aggregation name of container.\n */\nfunction updatePropertyIndices(node: XMLElement, schema: SchemaDefinition, aggregationName: string): void {\n    // Reuse \"addExtensionToArray\" method for calculating extensions position as it is done for manifest based extensions\n    // Logic requires to create 2 proxy objects to be able to reuse same logic\n    // Custom extension entries\n    const extensions: CustomExtensions = {};\n    // Annotation entries\n    const sortedExtensionsArray: [string, SchemaDefinition][] = [];\n    // Custom extension mapping between schema property key and extension key in xml\n    const extensionSchemaKeyMap: { [key: string]: string } = {};\n    // Populate annotation and custom extension entries\n    for (const property in schema.properties) {\n        const schemaNode = schema.properties[property] as SchemaDefinition;\n        if ('metadata' in schemaNode) {\n            // Custom extension node\n            const { extension, key } = getExtensionData(node, schema, property, aggregationName);\n            extensions[key] = extension;\n            // Mapping between extension key in xml and key in schema\n            extensionSchemaKeyMap[key] = property;\n        } else {\n            // Annotation based node\n            sortedExtensionsArray.push([property, schemaNode]);\n        }\n    }\n    // Reuse method to calculate order\n    addExtensionToArray(extensions, sortedExtensionsArray, '', 'position');\n    // Apply order to 'propertyIndex' properties in schema\n    for (let i = 0; i < sortedExtensionsArray.length; i++) {\n        const key = sortedExtensionsArray[i][0];\n        let schemaNode = schema.properties[key] as SchemaDefinition;\n        if (sortedExtensionsArray[i][1].$ref === '#/definitions/' && key in extensionSchemaKeyMap) {\n            // Entry of custom extension\n            schemaNode = schema.properties[extensionSchemaKeyMap[key]] as SchemaDefinition;\n        }\n\n        if (schemaNode) {\n            // Update index to affect ordering\n            schemaNode.propertyIndex = i;\n        }\n    }\n}\n\n/**\n * Method applies correction to anchor enum entry based on collection element and anchor type(annotation or custom extension).\n * @param {XMLElement} node Parsed XML element.\n * @param {string} originalKey Original full enum key\n * @param {AnnotationPrefix} annotationPrefix Annotation prefix data - data depends on collection element.\n * @param {SchemaDefinition} property Reference/anchored element from schema.\n */\nfunction getCorrectedAnchorEnumKey(\n    node: XMLElement,\n    originalKey: string,\n    annotationPrefix: AnnotationPrefix,\n    property?: SchemaDefinition\n): string {\n    let key = originalKey;\n    if (annotationPrefix.prefix && key.startsWith(annotationPrefix.prefix)) {\n        if (annotationPrefix.replace) {\n            // Remove annotation prefix - it is not required for some macros elements(currently FilterField)\n            key = key.replace(annotationPrefix.prefix, '');\n        }\n    } else if (property?.metadata?.path) {\n        // Reference to custom extension - use key for enum value\n        const index = property.metadata.path[property.metadata.path.length - 1].index;\n        key = getAttribute(node.subElements[index], 'key') || key;\n    }\n    return key;\n}\n\n/**\n * Method refreshes custom extension schema's 'anchor' property with 'oneOf' enum entires.\n * @param {XMLElement} node Parsed XML element.\n * @param {SchemaDefinition} schema Schema object which contains custom extensions and annotation elements.\n * @param {SchemaDefinition} appSchema Full app schema.\n * @param {string} aggregationName Aggregation name of container.\n */\nfunction applyEnumsForAnchors(\n    node: XMLElement,\n    schema: SchemaDefinition,\n    appSchema: SchemaDefinition,\n    aggregationName: string\n): void {\n    const annotationPrefix = getAnnotationPrefix(aggregationName);\n    for (const name in schema.properties) {\n        const anchorProperty = 'anchor';\n        const property = schema.properties[name] as SchemaDefinition;\n        if (!property.metadata) {\n            continue;\n        }\n        addDescriptiveEnumDefinition(\n            appSchema,\n            schema,\n            {\n                property: anchorProperty,\n                schema: property\n            },\n            {\n                excludeKey: name,\n                resolveDefinition: true\n            }\n        );\n        // Remove annotation prefix from anchor enum entries - it is difference between manifest and macros anchering\n        const oneOf = (property.properties?.[anchorProperty] as SchemaDefinition)?.oneOf || [];\n        for (const entry of oneOf) {\n            if (typeof entry === 'object' && typeof entry.const === 'string') {\n                entry.const = getCorrectedAnchorEnumKey(\n                    node,\n                    entry.const,\n                    annotationPrefix,\n                    schema.properties[entry.const] as SchemaDefinition\n                );\n            }\n        }\n    }\n}\n\n/**\n * Method handles custom extension - resolve positions and ordering.\n * Currently it handles `sap.fe.macros.FilterField`, but code is generic and can handle also other extensions - method relies on 'anchor' and 'placement' properties.\n * @param {XMLElement} node Parsed XML element.\n * @param {SchemaDefinition} schema Schema object which contains custom extensions and annotation elements.\n * @param {SchemaDefinition} appSchema Full app schema.\n */\nexport function handleExtensions(\n    node: XMLElement,\n    schema: SchemaDefinition,\n    appSchema: SchemaDefinition,\n    aggregationName?: string\n): void {\n    if (!isCustomExtensionSchema(schema, appSchema)) {\n        // Schema does not support custom extensions\n        return;\n    }\n    aggregationName = aggregationName || node.name;\n\n    // Update ordering of nodes by updating 'propertyIndex' for each node\n    updatePropertyIndices(node, schema, aggregationName);\n    // Enhance anchor property to add enum\n    applyEnumsForAnchors(node, schema, appSchema, aggregationName);\n}\n", "import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import crypto from 'crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "import type { GenerateAppSchemaParameters, SchemaDefinition } from '@sap/ux-specification-types';\nimport { getCustomExtensionFragmentDefinitionKey } from '../../utils/macros';\nimport { getManifestPage, getPageCustomExtensionFile } from '../../utils/utils';\nimport { generateMacrosSchemaDefinition } from './generator';\n\ntype Templates = Array<string>;\n\n/**\n * Method to populate all templates/fragments by parsing manifest extensions.\n * @param manifestSections Object containing sections\n * @param templates Templates to populate\n */\nfunction populateTemplates(manifestSections: unknown, templates: Templates): void {\n    if (typeof manifestSections === 'object') {\n        for (const id in manifestSections) {\n            const section = manifestSections[id];\n            if ('template' in section && section.template && typeof section.template === 'string') {\n                templates.push(section.template);\n            }\n            if ('subSections' in section) {\n                populateTemplates(section.subSections, templates);\n            }\n        }\n    }\n}\n\n/**\n * Generates schema for custom extension fragments.\n * @param {SchemaDefinition} appSchema - Schema of the app\n * @param {SchemaDefinition} genericMacrosSchema - generic macros schema of the app\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {string} pageId - page id from manifest targets\n *\n * @returns the app specific JSON schema\n */\nexport function resolveFragments(\n    appSchema: SchemaDefinition,\n    genericMacrosSchema: SchemaDefinition,\n    generateParameters: GenerateAppSchemaParameters,\n    pageId: string\n) {\n    const targetManifest = getManifestPage(generateParameters.manifest, pageId);\n    const templates: Templates = [];\n    populateTemplates(targetManifest?.options?.settings.content?.body?.sections || {}, templates);\n    for (const fragmentName of templates) {\n        if (!fragmentName) {\n            continue;\n        }\n        const definition: SchemaDefinition = {\n            additionalProperties: false,\n            description: 'Custom Extension Fragment',\n            metadata: {},\n            properties: {}\n        };\n        const definitionKey = getCustomExtensionFragmentDefinitionKey(fragmentName);\n        appSchema['definitions'][definitionKey] = definition;\n        const extensionFile = getPageCustomExtensionFile(\n            generateParameters.fragments,\n            targetManifest,\n            generateParameters.manifest,\n            'fragment',\n            fragmentName\n        );\n        if (extensionFile) {\n            // assign relative file path to project for fragment\n            definition.metadata.filePath = extensionFile.relativeFilePath;\n            // get fragment schema\n            const { properties = {}, definitions = {} } =\n                generateMacrosSchemaDefinition(\n                    genericMacrosSchema,\n                    extensionFile,\n                    generateParameters.serviceAVT,\n                    generateParameters.logger\n                ) || {};\n            definition.properties = properties;\n            // copy schema definitions from macros schema to app schema\n            for (const i in definitions) {\n                if (!appSchema.definitions[i]) {\n                    appSchema.definitions[i] = definitions[i];\n                }\n            }\n        }\n    }\n\n    return genericMacrosSchema;\n}\n", "import type { GenerateAppSchemaParameters } from '@sap/ux-specification-types';\n\n/**\n * Generates an app specific schema for the FE V4 Freestyle page from the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param genericSchema  - generic JSON schema of an object page\n *\n * @returns {object} application-specific schema of the freestyle page\n */\nexport function generateFreestyleSchemaV4(\n    _generateParameters: GenerateAppSchemaParameters,\n    genericSchema: object\n): object {\n    return JSON.parse(JSON.stringify(genericSchema));\n}\n", "import { parseAndMergeAndConvert, isFeatureSupported } from '../../common/utils';\nimport {\n    generateFreestyleSchemaV4,\n    generateListReportSchemaV4,\n    generateObjectPageSchemaV4,\n    generateMacrosSchemaDefinition\n} from '.';\nimport type {\n    ExtensionLogger,\n    GenerateAppSchemaParameters,\n    FileData,\n    Manifest,\n    FeatureToggle\n} from '@sap/ux-specification-types';\nimport { v4, FioriElementsVersion, TemplateType, Features } from '@sap/ux-specification-types';\nimport { getPageCustomViewFile } from '../utils/utils';\nimport { getEntityTypeEntitySetFromContextPath } from '../../common/importProject';\nimport { initI18n } from '../../../i18n/i18n';\n\n/**\n * Generates the app specific schema of an object page out of the generic schema for the same page.\n * Generic types are replaced by information from the app specific annotations.\n *\n * @param genericSchema - generic JSON schema of a list report\n * @param entitySetName - the base entity set of the given page\n * @param annotations - list of all annotation files (file content plus URI as identifier)\n * @param manifest - manifest.json of the app\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @param {FileData[]} fragments - list of fragment files and their content\n * @param {string} contextPath - contextPath of the actual (object) page\n * @param {object} genericMacrosSchema - generic macros schema of the app\n * @param {FeatureToggle[]} [featureToggles] - array of supported features\n *\n * @returns the app specific JSON schema\n */\nexport function generateObjectPageInterfaceV4(\n    genericSchema: object,\n    entitySetName: string,\n    annotations: FileData[],\n    manifest: Manifest,\n    logger?: ExtensionLogger,\n    fragments?: FileData[],\n    contextPath?: string,\n    genericMacrosSchema?: object,\n    featureToggles?: FeatureToggle[]\n): object {\n    const serviceAVT = parseAndMergeAndConvert(annotations, logger);\n\n    const { entitySet, entityType } = getEntityTypeEntitySetFromContextPath(\n        serviceAVT,\n        contextPath,\n        entitySetName,\n        logger\n    );\n\n    const generateParameters: GenerateAppSchemaParameters = {\n        templateType: TemplateType.ListReportObjectPageV4,\n        fioriElementsVersion: FioriElementsVersion.v4,\n        manifest,\n        fragments,\n        serviceAVT,\n        logger,\n        entitySet,\n        entityType,\n        featureToggles\n    };\n    return generateObjectPageSchemaV4(generateParameters, genericSchema, contextPath, genericMacrosSchema);\n}\n\n/**\n * Generates the app specific schema of a list report out of the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n * @param {TemplateType} templateType - the template type allows distinguishing LR and ALP\n * @param genericSchema - generic JSON schema of a list report\n * @param entitySetName - the base entity set of the given page\n * @param annotations - list of all annotation files (file content plus URI as identifier)\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @param manifest - manifest.json of the app\n *\n * @returns the app specific JSON schema\n */\nexport function generateListReportInterfaceV4(\n    templateType: TemplateType,\n    genericSchema: object,\n    entitySetName: string,\n    annotations: FileData[],\n    logger?: ExtensionLogger,\n    manifest?: Manifest,\n    contextPath?: string\n): object {\n    initI18n();\n    const serviceAVT = parseAndMergeAndConvert(annotations, logger);\n    const { entitySet, entityType } = getEntityTypeEntitySetFromContextPath(\n        serviceAVT,\n        contextPath,\n        entitySetName,\n        logger\n    );\n    const generateParameters: GenerateAppSchemaParameters = {\n        templateType,\n        fioriElementsVersion: FioriElementsVersion.v4,\n        manifest,\n        serviceAVT,\n        logger,\n        entitySet,\n        entityType\n    };\n\n    const templateName =\n        templateType === TemplateType.ListReportObjectPageV4 ? v4.FE_TEMPLATE_V4_LIST_REPORT : v4.FE_TEMPLATE_V4_ALP;\n    return generateListReportSchemaV4(generateParameters, genericSchema, templateName, contextPath);\n}\n\n/**\n * Generates the app specific schema of a freestyle page out of the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n * @param {TemplateType} templateType - the template type allows distinguishing LR and ALP\n * @param genericSchema - generic JSON schema of a list report\n * @param annotations - list of all annotation files (file content plus URI as identifier)\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @param manifest - manifest.json of the app\n *\n * @returns the app specific JSON schema\n */\nexport function generateFreestyleInterfaceV4(\n    templateType: TemplateType,\n    genericSchema: object,\n    annotations: FileData[],\n    manifest?: Manifest,\n    _entitySetName?: string,\n    logger?: ExtensionLogger\n): object {\n    const serviceAVT = parseAndMergeAndConvert(annotations, logger);\n    const generateParameters: GenerateAppSchemaParameters = {\n        templateType,\n        fioriElementsVersion: FioriElementsVersion.v4,\n        manifest,\n        serviceAVT,\n        logger\n    };\n    return generateFreestyleSchemaV4(generateParameters, genericSchema);\n}\n\n/**\n * Generates the app specific schema of a FPM Custom page out of the generic schema.\n * @param {object} genericSchema - generic JSON schema of a list report.\n * @param {string} routingId - page id in routing.\n * @param {Manifest} manifest - manifest.json of the app.\n * @param {FileData[]} views - array of views.xml files.\n * @param {FeatureToggle[]} [featureToggles] - array of supported features.\n * @param {ExtensionLogger} [logger] - Logger class for logging messages.\n *\n * @returns the app specific JSON schema.\n */\nexport function generateFPMCustomPageInterfaceV4(\n    genericSchema: object,\n    routingId: string,\n    manifest: Manifest,\n    views: FileData[],\n    annotations: FileData[],\n    featureToggles?: FeatureToggle[],\n    logger?: ExtensionLogger\n): object {\n    let schema = {};\n    if (isFeatureSupported(featureToggles, Features.BuildingBlocks)) {\n        const serviceAVT = parseAndMergeAndConvert(annotations, logger);\n        const viewData = getPageCustomViewFile(views || [], routingId, manifest, logger);\n        schema = viewData?.file.fileContent\n            ? generateMacrosSchemaDefinition(genericSchema, viewData, serviceAVT, logger)\n            : {};\n    }\n    return schema;\n}\n", "import { syncRule, childId, validity } from '../common/decoration/decorators';\nimport type { v4, ViewTypes, Target, Manifest, Application } from '@sap/ux-specification-types';\nimport { UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { QUICKVARPATH } from '@sap/ux-specification-types';\nimport { controllerExtensions } from './sync-rules/controllerExtensions';\n\nexport const getSettingsPathForPage = (pageName: string[]): string => {\n    return `sap.ui5/routing/targets/${pageName[0]}/options/settings`;\n};\n\nexport const getSettingsPathForLRViewsPaths = (pageName: string[]): string => {\n    return getSettingsPathForPage(pageName) + `/views/paths`;\n};\n\nexport const getSettingsPathForHeaderOP = (pageName: string[]): string => {\n    return getSettingsPathForPage(pageName) + `/content/header`;\n};\n\nexport const getSettingsPathForFooterOP = (pageName: string[]): string => {\n    return getSettingsPathForPage(pageName) + `/content/footer`;\n};\n\nexport const getControlConfigurationPath = (pageName: string[]): string => {\n    return getSettingsPathForPage(pageName) + '/controlConfiguration';\n};\n\nexport const getHeaderFacetSettingPath = (pageName: string[], _manifest: Manifest, sectionId: string): string => {\n    return getControlConfigurationPath(pageName) + `/@${UIAnnotationTerms.HeaderFacets}/facets/${sectionId}`;\n};\n\nexport const getSelectionFieldsPath = (pageName: string[]): string => {\n    return getControlConfigurationPath(pageName) + `/@${UIAnnotationTerms.SelectionFields}`;\n};\n\n/**\n * Common function that calculates the path in manifest for custom filter field\n * @param pageName - page name in manifest\n * @param _manifest - manifest (not used)\n * @param _sectionId - section id (not used)\n * @param filterFieldId - Custom filter field id\n * @returns - path as string\n */\nexport const getCustomFilterFieldFieldPath = (\n    pageName: string[],\n    _manifest: Manifest,\n    _sectionId: string,\n    filterFieldId\n): string => {\n    return (\n        getControlConfigurationPath(pageName) + `/@${UIAnnotationTerms.SelectionFields}/filterFields/${filterFieldId}`\n    );\n};\n\nexport const getFilterFieldPath = (\n    pageName: string[],\n    _manifest: Manifest,\n    _targetAnnotationEncoded: string,\n    fieldId: string\n): string => {\n    return getSelectionFieldsPath(pageName) + `/filterFields/${fieldId}`;\n};\n\n/**\n * Common function that calculates the path in manifest for table settings of a list report or ALP table view\n * @param pageName - page name in manifest\n * @param manifest - manifest (not used)\n * @param targetAnnotationEncoded - encoded target annotation (not used)\n * @param viewKey - view key (not used)\n * @param targetAnnotation - target annotation, i.e. the line item (with or without qualifier)\n * @returns - path as string\n */\nexport const getTableSettingsPathForView = (\n    pageName: string[],\n    _manifest: Manifest,\n    _targetAnnotationEncoded: string,\n    _viewKey: string,\n    targetAnnotation: string\n): string => {\n    const annotationEncoded = targetAnnotation?.replace(/\\//gi, '??');\n    return annotationEncoded\n        ? getControlConfigurationPath(pageName) + `/${annotationEncoded}/tableSettings`\n        : undefined;\n};\n\nexport const getTableSettingsPathForLR = (\n    pageName: string[],\n    manifest: Manifest,\n    targetAnnotationEncoded: string,\n    columnKey: string,\n    targetAnnotation: string\n): string => {\n    if (targetAnnotation) {\n        return getTableSettingsPathForView(pageName, manifest, targetAnnotationEncoded, columnKey, targetAnnotation);\n    } else {\n        return getControlConfigurationPath(pageName) + `/@${UIAnnotationTerms.LineItem}/tableSettings`;\n    }\n};\n\nexport const getQuickVariantPath = (\n    pageName: string[],\n    manifest: Manifest,\n    targetAnnotationEncoded: string,\n    columnKey: string,\n    targetAnnotation: string\n): string => {\n    return (\n        getTableSettingsPathForLR(pageName, manifest, targetAnnotationEncoded, columnKey, targetAnnotation) +\n        QUICKVARPATH\n    );\n};\n\nexport const getColumnsPathForView = (\n    pageName: string[],\n    _manifest: Manifest,\n    _targetAnnotationEncoded: string,\n    columnKey: string,\n    targetAnnotation: string\n): string => {\n    const annotationEncoded = targetAnnotation.replace(/\\//gi, '??');\n    return getControlConfigurationPath(pageName) + `/${annotationEncoded}/columns/${columnKey}`;\n};\n\nexport const getColumnsPathForLR = (\n    pageName: string[],\n    manifest: Manifest,\n    targetAnnotationEncoded: string,\n    columnKey: string,\n    targetAnnotation: string\n): string => {\n    if (targetAnnotation) {\n        return getColumnsPathForView(pageName, manifest, targetAnnotationEncoded, columnKey, targetAnnotation);\n    } else {\n        return getControlConfigurationPath(pageName) + `/@${UIAnnotationTerms.LineItem}/columns/${columnKey}`;\n    }\n};\n\nexport const getActionsPathForView = (\n    pageName: string[],\n    _manifest: Manifest,\n    _targetAnnotationEncoded: string,\n    columnKey: string,\n    targetAnnotation: string\n): string => {\n    const annotationEncoded = targetAnnotation.replace(/\\//gi, '??');\n    return getControlConfigurationPath(pageName) + `/${annotationEncoded}/actions/${columnKey}`;\n};\n\nexport const getActionsPathForLR = (\n    pageName: string[],\n    manifest: Manifest,\n    targetAnnotationEncoded: string,\n    columnKey: string,\n    targetAnnotation: string\n): string => {\n    if (targetAnnotation) {\n        return getActionsPathForView(pageName, manifest, targetAnnotationEncoded, columnKey, targetAnnotation);\n    } else {\n        return getControlConfigurationPath(pageName) + `/@${UIAnnotationTerms.LineItem}/actions/${columnKey}`;\n    }\n};\n\nexport const getColumnsPathForOP = (\n    pageName: string[],\n    _manifest: Manifest,\n    sectionId: string,\n    columnKey: string\n): string => {\n    return getControlConfigurationPath(pageName) + `/${sectionId}/columns/${columnKey}`;\n};\n\nexport const getActionsPathForOP = (\n    pageName: string[],\n    _manifest: Manifest,\n    sectionId: string,\n    columnKey: string\n): string => {\n    return getControlConfigurationPath(pageName) + `/${sectionId}/actions/${columnKey.replace('/', '??')}`;\n};\n\nexport const getHeaderActionsPath = (\n    pageName: string[],\n    _manifest: Manifest,\n    sectionId: string,\n    columnKey: string\n): string => {\n    return getSettingsPathForHeaderOP(pageName) + `/actions/${columnKey.replace('/', '??')}`;\n};\n\nexport const getFooterActionsPath = (\n    pageName: string[],\n    _manifest: Manifest,\n    sectionId: string,\n    columnKey: string\n): string => {\n    return getSettingsPathForFooterOP(pageName) + `/actions/${columnKey.replace('/', '??')}`;\n};\n\nexport const getTableSettingsPathForOP = (pageName: string[], _manifest: Manifest, sectionId: string): string => {\n    return getControlConfigurationPath(pageName) + `/${sectionId}/tableSettings`;\n};\n\nexport const getCustomSectionPath = (\n    pageName: string[],\n    _manifest: Manifest,\n    sectionId: string,\n    pathPart?: string\n): string => {\n    let path = getSettingsPathForPage(pageName) + `/content/body/sections/${sectionId}`;\n    if (pathPart) {\n        path += '/' + pathPart;\n    }\n    return path;\n};\n\nexport const getObjectPageCustomHeaderSectionPath = (\n    pageName: string[],\n    _manifest: Manifest,\n    sectionId: string,\n    pathPart?: string\n): string => {\n    let path = getSettingsPathForPage(pageName) + `/content/header/facets/${sectionId}`;\n    if (pathPart) {\n        path += '/' + pathPart;\n    }\n    return path;\n};\n\nexport const getCustomSubSectionPath = (\n    pageName: string[],\n    manifest: Manifest,\n    sectionId: string,\n    pathPart?: string,\n    targetAnnotation?: string,\n    configObject?: object,\n    originalIds?: string[]\n): string => {\n    let parent = sectionId;\n\n    if (originalIds) {\n        if (originalIds[0] === 'sections' && originalIds[1]) {\n            parent = originalIds[1];\n        }\n        if (originalIds[2] === 'subsections' && originalIds[3]) {\n            pathPart = `subSections/${originalIds[3]}`;\n        }\n    }\n    let path = getSettingsPathForPage(pageName) + `/content/body/sections/${parent}`;\n    if (pathPart) {\n        path += '/' + pathPart;\n    }\n    return path;\n};\n\nexport class ApplicationV4 implements Application {\n    $schema?: string;\n    id?: string;\n    pages?: v4.Pages;\n    home?: string;\n    target?: Target;\n    @childId('settings')\n    settings?: AppSettings;\n}\n\nexport class AppSettings implements v4.AppSettings {\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.app'\n        }\n    })\n    title?: string;\n\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.app'\n        }\n    })\n    description?: string;\n\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.ui5/routing/config'\n        }\n    })\n    @validity({\n        since: '1.78.0'\n    })\n    flexibleColumnLayout?: v4.FlexibleColumnLayoutV4;\n\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.ui5'\n        }\n    })\n    @validity({\n        since: '1.56.0'\n    })\n    flexEnabled?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.ui5/routing/config'\n        }\n    })\n    viewType?: ViewTypes;\n\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.ui5/routing/config'\n        }\n    })\n    path?: string;\n\n    @syncRule(controllerExtensions)\n    controllerExtensions?: v4.ControllerExtensions;\n}\n", "import { PageTypeV2, v4 } from '@sap/ux-specification-types';\n\nconst PAGE_TYPE_TO_CONTROLLER_EXTENSION_MAP = new Map<PageTypeV2, string>([\n    [PageTypeV2.ListReport, v4.SAPUI5_VIEW_EXTENSION_LIST_REPORT],\n    [PageTypeV2.ObjectPage, v4.SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]\n]);\n\n/**\n * Method transfers values of 'controllerNames' and 'controllerName' from source to target.\n * Method can be uses in both ways - import or export.\n * @param {SapUi5ControllerExtensionV4} source - source object\n * @param {SapUi5ControllerExtensionV4} target - target object\n */\nconst applyControllerNameProperties = (\n    source: v4.SapUi5ControllerExtensionV4,\n    target: v4.SapUi5ControllerExtensionV4\n) => {\n    const properties = ['controllerNames', 'controllerName'];\n    for (const property of properties) {\n        if (property in source) {\n            target[property] = source[property];\n        } else if (property in target) {\n            // Deletion of property happens\n            delete target[property];\n        }\n    }\n};\n\n/**\n * Method returns extension key for import(page.json).\n * @param {string} manifestKey - extension name in manifest.\n * @returns - extension key for import.\n */\nconst getExtensionKeyForImport = (manifestKey: string): string | undefined => {\n    for (const [pageType, key] of PAGE_TYPE_TO_CONTROLLER_EXTENSION_MAP) {\n        if (manifestKey?.startsWith(key)) {\n            // Replace SAPUI5 specific key like 'sap.fe.templates.ObjectPage.ObjectPageController' with more readable PageTypeV2\n            let configKey: string = pageType;\n            if (manifestKey.includes('#')) {\n                // Append with page id\n                const id = manifestKey.split('#')[1]?.split('::')[1];\n                configKey += `#${id}`;\n            }\n            return configKey;\n        }\n    }\n    return undefined;\n};\n\n/**\n * Method returns extension key for export(manifest.json).\n * @param {string} configKey - extension name in config.\n * @param {string} appId - application id.\n * @returns - extension key for export.\n */\nconst getExtensionKeyForExport = (configKey: string, appId: string): string => {\n    let manifestKey = '';\n    for (const [pageType, key] of PAGE_TYPE_TO_CONTROLLER_EXTENSION_MAP) {\n        if (configKey.startsWith(pageType)) {\n            manifestKey = key;\n        }\n    }\n    const idParts = configKey.split('#');\n    if (idParts.length > 1) {\n        const pageId = idParts[1];\n        manifestKey = `${manifestKey}#${appId}::${pageId}`;\n    }\n    return manifestKey;\n};\n\nexport const controllerExtensions = {\n    manifest: {\n        path: (): string => `sap.ui5/extends/extensions/${v4.SAPUI5_CONTROLLER_EXTENSION}`,\n        import: (extensions: v4.SapUi5ControllerExtensionsV4): v4.ControllerExtensions | undefined => {\n            const result: v4.ControllerExtensions = {};\n            if (extensions && typeof extensions === 'object') {\n                for (const manifestKey in extensions) {\n                    const configKey = getExtensionKeyForImport(manifestKey);\n                    if (configKey) {\n                        result[configKey] = {};\n                        applyControllerNameProperties(extensions[manifestKey], result[configKey]);\n                    }\n                }\n            }\n            return Object.keys(result).length ? result : undefined;\n        },\n        export: (\n            manifestSection: v4.SapUi5ControllerExtensionsV4,\n            configObject: v4.ApplicationV4,\n            key: string\n        ): void => {\n            const appId = configObject?.id || '';\n            const configExtensions = configObject?.settings?.[key] || {};\n            // Go through all config extensions\n            for (const configKey in configExtensions) {\n                const manifestKey = getExtensionKeyForExport(configKey, appId);\n                if (!manifestSection[manifestKey]) {\n                    manifestSection[manifestKey] = {};\n                }\n                applyControllerNameProperties(configExtensions[configKey], manifestSection[manifestKey]);\n            }\n            // Handle removed extensions\n            for (const manifestKey in manifestSection) {\n                const configKey = getExtensionKeyForImport(manifestKey);\n                if (configKey && !configExtensions[configKey]) {\n                    delete manifestSection[manifestKey];\n                }\n            }\n        }\n    }\n};\n", "import {\n    PageTypeV4,\n    SchemaType,\n    ManifestSection,\n    MANIFESTPATH,\n    SchemaTag,\n    DefinitionName,\n    LogSeverity,\n    PropertyName\n} from '@sap/ux-specification-types';\nimport type { Manifest, v4, ImportListReportV4Parameters, SapUi5RoutingTarget } from '@sap/ux-specification-types';\nimport { DEFINITION_LINK_PREFIX, getPageTypeV4, removeEmptyStructure, getDefinitionKey } from '../../../common';\nimport { importSettingsOfObject } from '../utils';\nimport { initI18n } from '../../../../i18n/i18n';\nimport i18next from 'i18next';\nimport { log } from '../../../../extensionLogger';\nimport { MetadataInstanceFactoryV4 as Factory } from '../../export/factory';\nimport type { MetadataInstanceInterface } from '../../../common/decoration/factory';\nimport type { Definition, DefinitionOrBoolean } from 'typescript-json-schema';\nimport { UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\n\n/**\n * Imports the content of annotation-based as well as custom columns\n * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled\n * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {PageTypeV4} pageType - page type\n * @param {string} routingId - ID of the given page\n * @param {string} configId - config id\n * @param {string} viewId - view id in multi view mode\n */\nfunction transferColumns(\n    config: v4.Table | v4.LRTableView,\n    importParameters: ImportListReportV4Parameters,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV4,\n    routingId: string,\n    configId?: string,\n    viewId?: string\n) {\n    const schemaDefinitions = importParameters.jsonSchema.definitions;\n    const lineItemsId = configId && configId !== `@${UIAnnotationTerms.LineItem}` ? configId : DefinitionName.LineItems;\n    const lineItems = schemaDefinitions[lineItemsId] as Definition;\n    if (lineItems && Object.keys(lineItems.properties).length > 0) {\n        config.columns = {};\n        for (const columnKey in lineItems.properties) {\n            const columnDefinition = (schemaDefinitions[lineItemsId] as Definition).properties[columnKey] as Definition;\n            const schemaPropertyName = columnDefinition.$ref.split(DEFINITION_LINK_PREFIX)[1].split('<')[0];\n            config.columns[columnKey] = factory.createInstance(pageType, schemaPropertyName);\n            const targetAnnotation = viewId || configId;\n            importSettingsOfObject(\n                config.columns[columnKey],\n                importParameters.manifest,\n                schemaDefinitions[schemaPropertyName] as Definition,\n                routingId,\n                [columnKey, targetAnnotation],\n                targetAnnotation,\n                importParameters.logger\n            );\n            removeEmptyStructure(config.columns, columnKey);\n        }\n        removeEmptyStructure(config, 'columns');\n    } else {\n        const views = (importParameters.manifest['sap.ui5']?.routing?.targets?.[routingId] as SapUi5RoutingTarget)\n            ?.options?.settings?.views;\n        if (!views || views.paths.length < 1) {\n            log(importParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOLINEITEMS')\n            });\n        }\n    }\n}\n\n/**\n * Import visual filters of list report\n * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data\n * @param {v4.FilterBar} filterBarConfig - the configuration to be filled\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {PageTypeV4} pageType - page type\n * @param {string} routingId - page key in manifest\n */\nfunction importVisualFilters(\n    importParameters: ImportListReportV4Parameters,\n    filterBarConfig: v4.FilterBar,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV4,\n    routingId: string\n) {\n    const schemaDefinitions = importParameters.jsonSchema.definitions;\n    const visualFilters = schemaDefinitions[DefinitionName.VisualFilters];\n    filterBarConfig.visualFilters = {};\n    if (typeof visualFilters === 'object') {\n        for (const visualFilter in visualFilters.properties) {\n            const filterDefinition = visualFilters.properties[visualFilter];\n            if (typeof filterDefinition === 'object' && filterDefinition.$ref) {\n                const definitionKey = getDefinitionKey(filterDefinition.$ref);\n                const schemaPropertyName = definitionKey.split('<')[0];\n                filterBarConfig.visualFilters[visualFilter] = factory.createInstance(pageType, schemaPropertyName);\n                importSettingsOfObject(\n                    filterBarConfig.visualFilters[visualFilter],\n                    importParameters.manifest,\n                    schemaDefinitions[definitionKey] as Definition,\n                    routingId,\n                    [visualFilter]\n                );\n            }\n        }\n        removeEmptyStructure(filterBarConfig, 'visualFilters');\n    }\n}\n\n/**\n * Import table toolbar actions of list report\n * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data\n * @param {ListReportConfigV4} config - the configuration to be filled\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {SapUiAppPageV4} page - page in manifest\n * @param {PageTypeV4} pageType - page type\n */\nfunction importActions(\n    importParameters: ImportListReportV4Parameters,\n    tableConfig: v4.Table | v4.LRTableView | v4.ALPTableView,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV4,\n    routingId: string,\n    columnDefinitionName: string = DefinitionName.LineItems,\n    viewId?: string\n) {\n    const schemaDefinitions = importParameters.jsonSchema.definitions;\n    let targetAnnotation = viewId;\n    if (\n        !targetAnnotation &&\n        [DefinitionName.LineItems, `${DefinitionName.LineItems}OfSPV::LineItem`].indexOf(columnDefinitionName) === -1\n    ) {\n        targetAnnotation = `@${UIAnnotationTerms.LineItem}#${columnDefinitionName.split('::').pop()}`;\n    }\n    const actionsDefinition = schemaDefinitions[`${DefinitionName.Actions}<${columnDefinitionName}>`];\n    if (typeof actionsDefinition === 'object') {\n        for (const actionKey in actionsDefinition.properties) {\n            const actionDefinition = actionsDefinition.properties[actionKey];\n            if (typeof actionDefinition === 'object' && actionDefinition.$ref) {\n                const definitionKey = getDefinitionKey(actionDefinition.$ref);\n                const schemaPropertyName = definitionKey.split('<')[0];\n                tableConfig.toolBar.actions[actionKey] = factory.createInstance(pageType, schemaPropertyName);\n\n                importSettingsOfObject(\n                    tableConfig.toolBar.actions[actionKey],\n                    importParameters.manifest,\n                    schemaDefinitions[definitionKey] as Definition,\n                    routingId,\n                    [actionKey, targetAnnotation]\n                );\n                removeEmptyStructure(tableConfig.toolBar.actions, actionKey);\n            }\n        }\n    }\n}\n\nfunction transferToolBar(\n    importParameters: ImportListReportV4Parameters,\n    config: v4.ListReportConfigV4 | v4.Table,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV4,\n    routingId: string,\n    columnDefinitionName: string = DefinitionName.LineItems,\n    viewId?: string\n) {\n    const toolbarInstance = factory.createInstance(pageType, DefinitionName.ToolBar, {\n        actions: {}\n    });\n    let table;\n    if (!viewId && config && 'table' in config) {\n        table = config.table;\n    } else {\n        table = config;\n    }\n    table.toolBar = toolbarInstance;\n\n    importSettingsOfObject(\n        table.toolBar,\n        importParameters.manifest,\n        importParameters.jsonSchema.definitions[DefinitionName.ToolBarLR],\n        routingId,\n        []\n    );\n    importActions(importParameters, table, factory, pageType, routingId, columnDefinitionName, viewId);\n\n    removeEmptyStructure(table.toolBar, 'actions');\n    removeEmptyStructure(table, 'toolBar');\n}\n\n/**\n * Determines the target annotation of a list report view or defaultTemplateAnnotationPath\n * @param schemaDefinitions - app schema definitions\n * @param definitionName - current definition name\n * @returns the target annotation as string\n */\nfunction determineTargetAnnotationOfView(\n    schemaDefinitions: Definition,\n    definitionName: string,\n    entitySet?: string\n): string {\n    const lineItemAnnotation = schemaDefinitions[definitionName]?.[SchemaTag.annotationPath];\n    const targetAnnotationPrefix = entitySet ? `/${entitySet}/` : '';\n    let targetAnnotation = lineItemAnnotation?.substr(lineItemAnnotation.lastIndexOf('@'));\n    targetAnnotation = targetAnnotationPrefix ? `${targetAnnotationPrefix}${targetAnnotation}` : targetAnnotation;\n    return targetAnnotation;\n}\n\n/**\n * Import chart & table view of ALP\n * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data\n * @param {ListReportConfigV4} config - the configuration to be filled\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {SapUiAppPageV4} page - page in manifest\n * @param {PageTypeV4} pageType - page type\n * @param {string} routingId - page key in manifest\n */\nfunction importALPViews(\n    importParameters: ImportListReportV4Parameters,\n    config: v4.ListReportConfigV4,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV4,\n    routingId: string\n): void {\n    const schemaDefinitions = importParameters.jsonSchema.definitions;\n    //chart view\n    config.chart = factory.createInstance(pageType, DefinitionName.ALPChart);\n    const chartDefinition = schemaDefinitions[DefinitionName.ALPChart] as Definition;\n    const chartAnnotationPath = chartDefinition[SchemaTag.annotationPath];\n    importSettingsOfObject(config.chart, importParameters.manifest, chartDefinition, routingId, [\n        chartDefinition[SchemaTag.key],\n        chartAnnotationPath?.substr(chartAnnotationPath.lastIndexOf('@'))\n    ]);\n    config.chart.toolBar = factory.createInstance(pageType, DefinitionName.ToolBar, { actions: {} });\n    importSettingsOfObject(\n        config.chart.toolBar,\n        importParameters.manifest,\n        schemaDefinitions[DefinitionName.ViewChartToolBar] as Definition,\n        routingId,\n        []\n    );\n    //table view\n    const tableAnnotationPath = schemaDefinitions[DefinitionName.ALPTable][SchemaTag.annotationPath];\n    if (tableAnnotationPath) {\n        const tableDefinition = schemaDefinitions[DefinitionName.ALPTable];\n        const tableConfig = (config.table = factory.createInstance(\n            pageType,\n            DefinitionName.ALPTable\n        ) as v4.ALPTableView);\n        transferToolBar(importParameters, config, factory, pageType, routingId);\n        const configId = tableAnnotationPath.substr(tableAnnotationPath.lastIndexOf('@'));\n        importSettingsOfObject(tableConfig, importParameters.manifest, tableDefinition, routingId, [\n            tableDefinition[SchemaTag.key],\n            configId\n        ]);\n        //transfer columns\n        transferColumns(tableConfig, importParameters, factory, pageType, routingId, undefined, configId);\n    }\n}\n\n/**\n * Method received view definition name and returns view type.\n * @param {string} definition  - definition name in schema.\n * @returns {DefinitionName | undefined} Resolved view type.\n */\nfunction getViewTypeByDefinition(definition: string): DefinitionName | undefined {\n    let viewType: DefinitionName;\n    if (definition.indexOf(DefinitionName.LRTableView) > -1) {\n        viewType = DefinitionName.LRTableView;\n    } else if (definition.indexOf(DefinitionName.LRChartView) > -1) {\n        viewType = DefinitionName.LRChartView;\n    } else if (definition === DefinitionName.TableViewExtension) {\n        viewType = DefinitionName.TableViewExtension;\n    }\n    return viewType;\n}\n\n/**\n * Import table views of list report\n * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data\n * @param {ListReportConfigV4} config - the configuration to be filled\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {PageTypeV4} pageType - page type\n * @param {string} routingId - page key in manifest\n */\nfunction importLRViews(\n    importParameters: ImportListReportV4Parameters,\n    config: v4.ListReportConfigV4,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV4,\n    routingId: string\n): void {\n    const tableViewConfig: v4.MultiTableModeV4 = ((config.table as v4.Table).views = factory.createInstance(\n        pageType,\n        DefinitionName.MultiTableModeV4\n    ));\n    const schemaDefinitions = importParameters.jsonSchema.definitions as Definition;\n\n    //Transfer settings on overall views' level\n    importSettingsOfObject(\n        tableViewConfig,\n        importParameters.manifest,\n        schemaDefinitions[DefinitionName.MultiTableModeV4],\n        routingId,\n        []\n    );\n    const properties = schemaDefinitions[DefinitionName.MultiTableModeV4].properties;\n    const sortedList = Object.entries(properties).sort(\n        (a, b) => a[1][SchemaTag.propertyIndex] - b[1][SchemaTag.propertyIndex]\n    );\n    for (const element of sortedList) {\n        //process single views\n        if (element[1]['$ref']) {\n            const nextDefinition = element[1]['$ref'].split(DEFINITION_LINK_PREFIX)[1];\n            const viewType = getViewTypeByDefinition(nextDefinition);\n            const tableView = (tableViewConfig[element[0]] = factory.createInstance(pageType, viewType));\n            const entitySet = schemaDefinitions[nextDefinition]['entitySet'];\n            const targetAnnotation = determineTargetAnnotationOfView(schemaDefinitions, nextDefinition, entitySet);\n            importSettingsOfObject(tableView, importParameters.manifest, schemaDefinitions[nextDefinition], routingId, [\n                element[0],\n                targetAnnotation\n            ]);\n            if (viewType === DefinitionName.LRTableView) {\n                const definitionName = `${DefinitionName.LineItemsOfView}::${element[0]}`;\n                transferToolBar(\n                    importParameters,\n                    tableView,\n                    factory,\n                    pageType,\n                    routingId,\n                    definitionName,\n                    targetAnnotation\n                );\n                transferColumns(\n                    tableView,\n                    importParameters,\n                    factory,\n                    pageType,\n                    routingId,\n                    definitionName,\n                    targetAnnotation\n                );\n            }\n            if (Object.keys(tableView).length === 0) {\n                delete tableViewConfig[element[0]];\n            }\n        }\n    }\n    removeEmptyStructure(config.table, 'views');\n}\n\n/**\n * Fills the header actions in the config file of a V4 list report page\n * @param {Definition} appSchema - app specific schema\n * @param {v4.ListReportConfigV4} objectPageConfig - configuration, to be enhanced\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {Manifest} manifest - manifest.json of the app\n * @param {routingId} string - current (object) page\n */\nfunction transferHeaderActions(\n    appSchema: Definition,\n    listReportPageConfig: v4.ListReportConfigV4,\n    factory: MetadataInstanceInterface,\n    manifest: Manifest,\n    routingId: string\n): void {\n    const definitionName = DefinitionName.HeaderActions;\n    const actionType = PropertyName.header;\n    const actions = appSchema.definitions[definitionName] as Definition;\n    if (typeof actions === 'object') {\n        listReportPageConfig[actionType].actions = {};\n        for (const actionKey in actions.properties) {\n            const definition = actions.properties[actionKey];\n            if (typeof definition === 'object' && definition.$ref) {\n                const definitionKey = getDefinitionKey(definition.$ref);\n                const actionDefinition = appSchema.definitions[definitionKey] as Definition;\n                const key = getDefinitionKey(actionDefinition.$ref || definition.$ref);\n\n                listReportPageConfig[actionType].actions[actionKey] = factory.createInstance(\n                    PageTypeV4.ObjectPage,\n                    key\n                );\n                importSettingsOfObject(\n                    listReportPageConfig[actionType].actions[actionKey],\n                    manifest,\n                    appSchema.definitions[key],\n                    routingId,\n                    [actionKey.replace('/', '??')]\n                );\n                removeEmptyStructure(listReportPageConfig.header, 'actions');\n                removeEmptyStructure(listReportPageConfig, 'header');\n            }\n        }\n    }\n}\n\n/**\n * Import custom filter fields of list report\n * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data\n * @param {v4.FilterBar} filterBarConfig - the configuration to be filled\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {string} routingId - page key in manifest\n */\nfunction importCustomFilterFields(\n    importParameters: ImportListReportV4Parameters,\n    filterBarConfig: v4.FilterBar,\n    factory: MetadataInstanceInterface,\n    routingId: string\n) {\n    const schemaDefinitions = importParameters.jsonSchema.definitions;\n    let filterFieldsProperties: { [key: string]: DefinitionOrBoolean } = {};\n    for (const definition of [DefinitionName.SelectionFields, DefinitionName.CompactFilters]) {\n        const filterFieldsSchema = schemaDefinitions[definition];\n        if (\n            typeof filterFieldsSchema === 'object' &&\n            filterFieldsSchema.properties &&\n            Object.keys(filterFieldsSchema.properties).length\n        ) {\n            filterFieldsProperties = filterFieldsSchema.properties;\n        }\n    }\n    for (const filterFieldId in filterFieldsProperties) {\n        const schemaFilterField = filterFieldsProperties[filterFieldId];\n        if (\n            typeof schemaFilterField !== 'object' ||\n            schemaFilterField.$ref !== DEFINITION_LINK_PREFIX + DefinitionName.CustomFilterField\n        ) {\n            continue;\n        }\n        // Handle custom filter field\n        const customFilterField = factory.createInstance(PageTypeV4.ListReport, DefinitionName.CustomFilterField);\n        const sectionIdRef = schemaFilterField['$ref'].split(DEFINITION_LINK_PREFIX)[1];\n        importSettingsOfObject(\n            customFilterField,\n            importParameters.manifest,\n            importParameters.jsonSchema.definitions[sectionIdRef],\n            routingId,\n            [filterFieldId]\n        );\n        if (!filterBarConfig.selectionFields) {\n            filterBarConfig.selectionFields = {};\n        }\n        filterBarConfig.selectionFields[filterFieldId] = customFilterField;\n    }\n}\n\n/**\n * Adds manifest settings to the config.json of LR or ALP V4\n * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data\n * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {PageTypeV4} pageType - page type\n * @param {string} routingId - page key in manifest\n * @param {SchemaType} schemaType - allows distinction of LR and ALP scenario\n */\nexport function addSettings(\n    importParameters: ImportListReportV4Parameters,\n    config: v4.ListReportConfigV4,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV4,\n    routingId: string,\n    schemaType: SchemaType\n): void {\n    // Transfer page level settings with sync rules\n    importSettingsOfObject(config, importParameters.manifest, importParameters.jsonSchema, routingId, []);\n\n    config.header = factory.createInstance(pageType, DefinitionName.Header);\n    importSettingsOfObject(\n        config.header,\n        importParameters.manifest,\n        importParameters.jsonSchema.definitions[DefinitionName.Header],\n        routingId,\n        []\n    );\n    transferHeaderActions(importParameters.jsonSchema, config, factory, importParameters.manifest, routingId);\n\n    //FilterBar:\n    config.filterBar = factory.createInstance(pageType, DefinitionName.FilterBar);\n    importSettingsOfObject(\n        config.filterBar,\n        importParameters.manifest,\n        importParameters.jsonSchema.definitions[DefinitionName.FilterBar],\n        routingId,\n        []\n    );\n    importVisualFilters(importParameters, config.filterBar, factory, pageType, routingId);\n    // Import custom filter fields\n    importCustomFilterFields(importParameters, config.filterBar, factory, routingId);\n\n    //Distinguish ALP table from LR table\n    if (schemaType === SchemaType.ListReport) {\n        let definitionName = DefinitionName.Table;\n        let tableDefinition = importParameters.jsonSchema.definitions[definitionName] as Definition;\n        let columnDefinitionName;\n        if (tableDefinition.$ref) {\n            //(S)PV scenario ==> delegation, go to TableSPV\n            definitionName = tableDefinition.$ref.split(DEFINITION_LINK_PREFIX)[1] as DefinitionName;\n            tableDefinition = importParameters.jsonSchema.definitions[definitionName] as Definition;\n            columnDefinitionName = (tableDefinition.properties.columns as Definition).$ref.split(\n                DEFINITION_LINK_PREFIX\n            )[1];\n        }\n        config.table = factory.createInstance(pageType, DefinitionName.Table);\n        const targetAnnotation = determineTargetAnnotationOfView(\n            importParameters.jsonSchema.definitions,\n            definitionName\n        );\n        importSettingsOfObject(config.table, importParameters.manifest, tableDefinition, routingId, [\n            definitionName,\n            targetAnnotation\n        ]);\n        //transfer toolbar\n        transferToolBar(importParameters, config, factory, pageType, routingId, columnDefinitionName);\n        //transfer columns\n        transferColumns(\n            config.table,\n            importParameters,\n            factory,\n            pageType,\n            routingId,\n            columnDefinitionName,\n            targetAnnotation\n        );\n        importLRViews(importParameters, config, factory, pageType, routingId);\n    } else if (schemaType === SchemaType.AnalyticalListPage) {\n        importALPViews(importParameters, config, factory, pageType, routingId);\n    }\n}\n\n/**\n * Creates the configuration file content for a list report V4\n * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data\n *\n * @returns {ListReportConfig} - the configuration (JSON) for the list report\n */\nexport function createListReportConfig(\n    importParameters: ImportListReportV4Parameters,\n    schemaType: SchemaType\n): v4.ListReportConfigV4 | undefined {\n    // Initialize i18next\n    initI18n();\n    if (!importParameters.jsonSchema) {\n        return;\n    }\n    if (!importParameters.manifest[ManifestSection.ui5] || !importParameters.manifest[ManifestSection.ui5]['routing']) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOROUTING'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5]\n            }\n        });\n        return;\n    }\n    const v4Pages = importParameters.manifest[ManifestSection.ui5]['routing']['targets'] as v4.SapUi5RoutingTargetsV4;\n    if (!v4Pages) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOTARGETS'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5]\n            }\n        });\n        return;\n    }\n    const factory = new Factory();\n    //Instantiate Page\n    const config = factory.createPageInstance(PageTypeV4.ListReport);\n\n    for (const key in v4Pages) {\n        const v4Page = v4Pages[key];\n        const pageType = getPageTypeV4(v4Page as v4.SapUiAppPageV4);\n        if ('name' in v4Page && (pageType === PageTypeV4.ListReport || pageType === PageTypeV4.AnalyticalListPage)) {\n            addSettings(importParameters, config, factory, PageTypeV4.ListReport, key, schemaType);\n            break;\n        }\n    }\n\n    return config;\n}\n", "import type { Definition, DefinitionOrBoolean } from 'typescript-json-schema';\nimport { importProperty, checkDeprecatedProperties, getManifestSectionByPathV4 } from '../../common';\nimport { getReflectMetadata } from '../../common/decoration/decorators';\nimport type { ExtensionLogger } from '../../..';\nimport type { Manifest } from '@sap/ux-specification-types';\n\n/**\n * Transfers settings from manifest to object page config\n * @param configPart - part of the configuration to be filled\n * @param manifest - manifest.json of the app\n * @param appSchema - app specific schema\n * @param pageID - ID of the given object page\n * @param sectionId (optional) - ID of the given section (optional)\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nexport function importSettingsOfObject(\n    configPart: { [key: string]: any },\n    manifest: Manifest,\n    appSchema: Definition | DefinitionOrBoolean,\n    pageKey: string,\n    breadcrumbs: string[],\n    sectionId?: string,\n    logger?: ExtensionLogger\n): void {\n    if (!appSchema) {\n        return;\n    }\n    let manifestSection = {};\n    const deprecatedProperties = configPart?.getDeprecated;\n\n    const targetAnnotationEncoded = sectionId && sectionId.replace(/\\//g, '::');\n    for (const propertyKey in appSchema['properties']) {\n        const syncRule = getReflectMetadata(configPart, propertyKey);\n\n        if (syncRule?.manifest) {\n            const path = syncRule.manifest.path([pageKey], manifest, targetAnnotationEncoded, ...breadcrumbs);\n            manifestSection = getManifestSectionByPathV4(manifest, path, sectionId, targetAnnotationEncoded, true);\n            if (manifestSection && Object.keys(manifestSection).length > 0) {\n                importProperty(syncRule, manifestSection, propertyKey, configPart, sectionId, breadcrumbs);\n                checkDeprecatedProperties(deprecatedProperties, manifestSection, path, logger);\n            }\n        }\n    }\n}\n", "export * from './Table';\nexport * from './TableColumn';\nexport * from './ToolBar';\nexport * from './ToolBarAction';\nexport * from './ObjectPageToolBarAction';\nexport * from './ObjectPageForm';\nexport * from './ObjectPageFormAction';\nexport * from './FilterBar';\nexport * from './Header';\nexport * from './HeaderAction';\nexport * from './ObjectPageTableColumn';\nexport * from './ObjectPageHeader';\nexport * from './ObjectPageFooter';\nexport * from './ObjectPageHeaderSection';\nexport * from './ObjectPageLayout';\nexport * from './ObjectPageTable';\nexport * from './ObjectPageCustomHeaderSection';\nexport * from './ObjectPageCustomSection';\nexport * from './ObjectPageForm';\nexport * from './ObjectPageHeaderAction';\nexport * from './ObjectPageFooterAction';\n", "import type { Manifest } from '@sap/ux-specification-types';\nimport { v4, SchemaTag } from '@sap/ux-specification-types';\nimport type { ToolBar } from './ToolBar';\nimport { addPatternForBindingChangeOfEnumLR, doNotDelete } from '../../../common';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport {\n    getTableSettingsPathForLR,\n    getSettingsPathForPage,\n    getSettingsPathForLRViewsPaths,\n    getTableSettingsPathForView,\n    getQuickVariantPath\n} from '../../application';\n\n/**\n * Special edition of the global function getManifestSectionByPathV4 that initializes the views array if empty\n * @param manifest - manifest.json\n * @param path - path to the views array in manifest\n * @param key - key of the view\n * @returns the paths array of the views\n */\nconst getManifestSectionByPathV4 = (manifest: object, path: string): Array<object> => {\n    let manifestSection = manifest;\n    for (const element of path.split('/')) {\n        if (!manifestSection[element]) {\n            if (element === 'paths') {\n                manifestSection[element] = [];\n            } else {\n                manifestSection[element] = {};\n            }\n        }\n        manifestSection = manifestSection[element];\n    }\n    return manifestSection as Array<object>;\n};\n\n/**\n * Common function for determining the path in manifest of a list report view's path\n * @param pageName - page name in manifest\n * @param manifest - manifest.json\n * @param _targetAnnotationEncoded - target annotation (not used here)\n * @param viewKey - value of the key property of the view\n * @returns the path to the entry in manifest\n */\nfunction getSettingsPathForLRViewsPath(\n    pageName: string[],\n    manifest: Manifest,\n    _targetAnnotationEncoded: string,\n    viewKey: string,\n    _targetAnnotation: string,\n    configObject: object\n): string {\n    const viewsPath = getSettingsPathForLRViewsPaths(pageName);\n    const manifestSection = getManifestSectionByPathV4(JSON.parse(JSON.stringify(manifest)), viewsPath);\n    let path: string;\n    for (let index = 0; index < manifestSection.length; index++) {\n        const view = manifestSection[index];\n        if (view && (view[SchemaTag.key] === configObject?.['key'] || view[SchemaTag.key] === viewKey)) {\n            path = `${viewsPath}/${index}`;\n            break;\n        }\n    }\n    if (!path) {\n        path = `${viewsPath}/[]`;\n    }\n    return path;\n}\n\n/**\n * Subroutine of checkViewOrder, fills the new list of views for the manifest\n */\nfunction fillNewlyOrderedViews(\n    manifestSection: object,\n    keyInConfig: string,\n    newIndex: string,\n    minIndex: number,\n    maxIndex: number,\n    direction: number\n): Array<object> {\n    const newlyOrderedViews = JSON.parse(JSON.stringify(manifestSection));\n    const viewKeys = Object.keys(manifestSection);\n\n    for (const index of viewKeys) {\n        const indexInManifest = Number(index);\n        const view = manifestSection[index];\n        if (keyInConfig === view['key']) {\n            newlyOrderedViews[newIndex] = view;\n        } else {\n            if (indexInManifest >= minIndex && indexInManifest <= maxIndex) {\n                newlyOrderedViews[Math.max(0, indexInManifest + direction)] = view;\n            } else {\n                newlyOrderedViews[index] = view;\n            }\n        }\n    }\n    return newlyOrderedViews;\n}\n\n/**\n * If a view index was changed we need to adapt the order of views in manifest\n * @param manifestSection - section in manifest comprising the table settings\n * @param configObject - section in config.json describing the table settings\n */\nexport function checkViewOrder(manifestSection: unknown, configObject: unknown): void {\n    const keyInConfig = configObject['key'];\n    const oldIndex = (manifestSection as Array<object>).findIndex((view) => {\n        return view?.['key'] === keyInConfig;\n    });\n    const newIndex = configObject['index'];\n    if (oldIndex > -1 && oldIndex !== newIndex) {\n        const direction = newIndex > oldIndex ? -1 : 1;\n        const minIndex = Math.min(Number(oldIndex), newIndex);\n        const maxIndex = Math.max(Number(oldIndex), newIndex);\n        const newlyOrderedViews = fillNewlyOrderedViews(\n            manifestSection as object,\n            keyInConfig,\n            newIndex,\n            minIndex,\n            maxIndex,\n            direction\n        );\n        for (const index of Object.keys(newlyOrderedViews)) {\n            manifestSection[index] = newlyOrderedViews[index];\n        }\n    }\n}\n\n/**\n * common sync rule function for export of creation for personalization object\n * @param manifestSection - section in manifest comprising the table settings\n * @param configObject - section in config.json describing the table settings\n * @param key - key or property in config.json\n * @param manifestKey - key or property in manifest\n */\nexport function exportPersonalization(\n    manifestSection: unknown,\n    configObject: unknown,\n    key: string,\n    manifestKey?: string\n): void {\n    if (\n        !manifestSection[manifestKey] &&\n        typeof configObject[key] === 'object' &&\n        Object.keys(configObject[key]).length\n    ) {\n        // Create 'personalization' object only when config object is not empty\n        configObject[key] = {};\n    }\n}\n\n/**\n * common sync rule function for export of personalization properties\n * @param manifestSection - section in manifest comprising the table settings\n * @param configObject - section in config.json describing the table settings\n * @param key - key or property in config.json\n * @param manifestKey - key or property in manifest\n */\nexport function exportPersonalizationProperty(\n    manifestSection: unknown,\n    configObject: unknown,\n    key: string,\n    manifestKey: string\n): void {\n    if (typeof manifestSection['personalization'] === 'boolean' || !manifestSection['personalization']) {\n        manifestSection['personalization'] = {};\n    }\n    manifestSection['personalization'][manifestKey] = configObject[key];\n}\n\n/**\n * common sync rule function for the deletion of any property of personalization\n * @param manifestSection - section in manifest comprising the table settings\n * @param _configObject - page config object\n * @param _key - key or property in page config object\n * @param manifestKey - key or property in manifest\n */\nexport function deletePersonalizationProperty(\n    manifestSection: unknown,\n    _configObject: object,\n    _key: string,\n    manifestKey: string\n): void {\n    if (\n        typeof manifestSection['personalization'] === 'object' &&\n        manifestSection['personalization'][manifestKey] !== undefined\n    ) {\n        delete manifestSection['personalization'][manifestKey];\n        if (Object.keys(manifestSection['personalization']).length === 0) {\n            delete manifestSection['personalization'];\n        }\n    } else if (\n        typeof manifestSection['personalization'] === 'string' &&\n        manifestSection['personalization'] !== undefined\n    ) {\n        delete manifestSection['personalization'];\n    }\n}\n\n/**\n * sync rule deleting a view if the index gets deleted\n * @param manifestSection - manifest section of the given view\n * @param configObject - section of the configration JSON\n * @param syncRuleKey - key of the view\n * @param config - the complete config JSON\n */\nfunction deleteView(\n    manifestSection: object,\n    configObject: object,\n    _configPropertyKey: string,\n    _manifestKey: string,\n    syncRuleKey: string,\n    config: object\n): void {\n    let deletedViewIndex;\n    if (!configObject || Object.keys(configObject).length === 0) {\n        const viewsInManifest = manifestSection as Array<object>;\n        Object.keys(viewsInManifest).forEach((index) => {\n            if (viewsInManifest[index] && viewsInManifest[index].key === syncRuleKey) {\n                manifestSection[Number(index)] = {};\n                deletedViewIndex = index;\n            }\n        });\n    }\n    if (deletedViewIndex) {\n        const viewsInConfig = config['table']['views'];\n        for (const key in viewsInConfig) {\n            if (viewsInConfig[key].index > deletedViewIndex) {\n                viewsInConfig[key].index--;\n            }\n        }\n    }\n}\n\n/**\n * sync rule function for export of creationMode properties\n * @param manifestSection - section in manifest comprising the table settings\n * @param configObject - section in config.json describing the table settings\n * @param key - key or property in config.json\n * @param manifestKey - key or property in manifest\n */\nexport function exportCreationModeProperty(manifestSection: unknown, configObject: unknown, key: string): void {\n    if (typeof manifestSection['creationMode'] === 'object') {\n        manifestSection['creationMode'][key] = configObject[key];\n    } else if (typeof manifestSection['creationMode'] === 'string') {\n        manifestSection['creationMode'] = configObject;\n    }\n}\n\n/**\n * sync rule function for the deletion of creationMode properties\n * @param manifestSection - section in manifest comprising the table settings\n * @param manifestKey - key or property in manifest\n */\nexport function deleteCreationModeProperty(manifestSection: unknown, manifestKey: string): void {\n    if (\n        typeof manifestSection['creationMode'] === 'object' &&\n        manifestSection['creationMode'][manifestKey] !== undefined\n    ) {\n        delete manifestSection['creationMode'][manifestKey];\n    } else if (typeof manifestSection['creationMode'] === 'string' && manifestSection['creationMode'] !== undefined) {\n        delete manifestSection['creationMode'];\n    }\n}\n\n/**\n * sync rule for the import of personalization, does an implicit conversion of the former boolean value to the new object representation\n * @param tableSettings - table settings in manifest, to be analyzed\n * @returns - object representing the value(s) for the config file\n */\nfunction importPersonalization(tableSettings: object): object | undefined {\n    const value: any = tableSettings['personalization'];\n    if (typeof value === 'object') {\n        return value;\n    } else if (typeof value === 'boolean') {\n        return {\n            column: value,\n            sort: value,\n            filter: value\n        };\n    }\n}\n\n/**\n * sync rule for the import of the index of a table view\n * @param manifestSection - manifest section, as determined by synRule.path\n * @param _sectionId  - not used\n * @param _propertyKey - not used\n * @param breadcrumbs - list if breadcrumbs, includes the given view key\n * @returns index of the view in manifest, undefined if not found\n */\nfunction determineIndexOfView(\n    manifestSection: object[],\n    _sectionId: string,\n    _propertyKey: string,\n    breadcrumbs: string[]\n): number | undefined {\n    const viewIndex = manifestSection.findIndex((view) => view['key'] === breadcrumbs[0]);\n    return viewIndex === -1 ? undefined : viewIndex;\n}\n\n/************************************\n * Sync class for PersonalizationType\n */\nexport class PersonalizationType implements v4.PersonalizationType {\n    //column\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR, // Here we are using path of parent to have correct value for manifestSection\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    column?: boolean;\n\n    //sort\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR,\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    sort?: boolean;\n\n    //filter\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR,\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    filter?: boolean;\n}\n\nexport class ViewPersonalizationType implements v4.ViewPersonalizationType {\n    //column\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView, // Here we are using path of parent to have correct value for manifestSection\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    column?: boolean;\n\n    //sort\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView,\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    sort?: boolean;\n\n    //filter\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR,\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    filter?: boolean;\n}\n\n/****************************************\n * Sync class for QuickVariantSelectionV4\n */\nexport class QuickVariantSelectionV4 implements v4.QuickVariantSelectionV4 {\n    //paths\n    @syncRule({\n        manifest: {\n            path: getQuickVariantPath\n        }\n    })\n    paths: v4.AnnotationPathAsObject[];\n\n    //hideTableTitle\n    @syncRule({\n        manifest: {\n            path: getQuickVariantPath\n        }\n    })\n    hideTableTitle?: boolean;\n\n    //showCounts\n    @syncRule({\n        manifest: {\n            path: getQuickVariantPath\n        }\n    })\n    showCounts?: boolean;\n}\n\n/****************************************\n * Sync class for TableSettings\n */\nexport class TableSettings implements v4.TableSettings {\n    //type\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    type?: v4.TableTypeV4;\n\n    //personalization\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR,\n            import: importPersonalization,\n            export: exportPersonalization\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    personalization?: PersonalizationType;\n\n    //selectionMode\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectionMode?: v4.SelectionMode;\n\n    //selectAll\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectAll?: boolean;\n\n    //selectionLimit\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectionLimit?: number;\n\n    //enableExport\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enableExport?: boolean;\n\n    //quickVariantSelection\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    quickVariantSelection?: QuickVariantSelectionV4;\n\n    //condensedTableLayout\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    condensedTableLayout?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR\n        }\n    })\n    @validity({\n        since: '1.117.0'\n    })\n    hierarchyQualifier?: string;\n}\n\n/****************************************\n * Sync class for ALPChartView (renamed due to indirection in app schema)\n */\nexport class ALPChart implements v4.ALPChartView {\n    //annotationPath\n    @syncRule({\n        manifest: {\n            path: (pageName): string => getSettingsPathForPage(pageName) + '/views/paths/0/primary/0',\n            delete: deleteView\n        }\n    })\n    annotationPath: string;\n\n    //toolBar\n    toolBar?: v4.ViewChartToolBar;\n}\n\nexport class CommonViewSettings implements v4.CommonViewSettings {\n    //key\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath,\n            delete: doNotDelete\n        }\n    })\n    key: string;\n    //index\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPaths,\n            import: determineIndexOfView,\n            export: (manifestSection, configObject): void => {\n                checkViewOrder(manifestSection, configObject);\n            },\n            delete: deleteView\n        }\n    })\n    index: number;\n\n    //annotationPath\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath,\n            delete: doNotDelete\n        }\n    })\n    annotationPath: string;\n\n    //entitySet\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        }\n    })\n    entitySet?: string;\n}\n\n/****************************************\n * Sync class for view table settings\n */\nexport class TableViewSettings extends CommonViewSettings implements v4.TableSettings {\n    //type\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    type?: v4.TableTypeV4;\n\n    //personalization\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView,\n            import: importPersonalization\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    personalization?: ViewPersonalizationType;\n\n    //selectionMode\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectionMode?: v4.SelectionMode;\n\n    //selectAll\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectAll?: boolean;\n\n    //selectionLimit\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectionLimit?: number;\n\n    //enableExport\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enableExport?: boolean;\n\n    //quickVariantSelection\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    quickVariantSelection?: QuickVariantSelectionV4;\n\n    //condensedTableLayout\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    condensedTableLayout?: boolean;\n}\n\nfunction getTableViewSettings<T>(SuperClass: T) {\n    return TableViewSettings;\n}\n\n/****************************************\n * Sync class for ALPTableView (renamed due to indirection in app schema)\n */\nexport class ALPTable extends TableViewSettings implements v4.ALPTableView {\n    //annotationPath\n    @syncRule({\n        manifest: {\n            path: (pageName): string => getSettingsPathForPage(pageName) + '/views/paths/0/secondary/0',\n            delete: doNotDelete\n        }\n    })\n    annotationPath: string;\n\n    //initialLoad\n    @syncRule({\n        manifest: {\n            path: (pageName: string[]): string => getSettingsPathForPage(pageName)\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    initialLoad?: v4.InitialLoadType;\n\n    //toolBar\n    toolBar?: ToolBar;\n}\n\n/****************************************\n * Sync class for LRChartView\n */\nexport class LRChartView extends CommonViewSettings implements v4.LRChartView {\n    //toolBar\n    toolBar?: v4.ViewChartToolBar;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    visible?: boolean;\n}\n\n/****************************************\n * Sync class for LRTableView\n */\nexport class LRTableView extends getTableViewSettings(CommonViewSettings) {\n    //keepPreviousPersonalization\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        }\n    })\n    keepPreviousPersonalization?: boolean;\n\n    //entitySet\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        }\n    })\n    entitySet?: string;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    visible?: boolean;\n\n    //toolBar\n    toolBar?: ToolBar;\n}\n\nexport class TableViewExtension implements v4.TableViewExtension {\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        }\n    })\n    key: string;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPaths,\n            import: determineIndexOfView,\n            export: (manifestSection, configObject): void => {\n                checkViewOrder(manifestSection, configObject);\n            },\n            delete: deleteView\n        }\n    })\n    index: number;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        }\n    })\n    label?: string;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        }\n    })\n    template: string;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    visible?: boolean;\n}\n\n/**\n * LR multi-view: own class for properties on views' level\n */\nexport class MultiTableModeV4 implements v4.MultiTableModeV4 {\n    // List of annotation paths\n    [key: string]: v4.ViewTypeV4;\n\n    //showCounts\n    @syncRule({\n        manifest: {\n            path: (pageName): string => getSettingsPathForPage(pageName) + '/views'\n        }\n    })\n    showCounts?: boolean;\n}\n\n/****************************************\n * Sync class for Table\n */\nexport class Table extends TableSettings implements v4.Table {\n    //annotationPath\n    @syncRule({\n        manifest: {\n            path: (pageName): string => getSettingsPathForPage(pageName) + '/views/paths/0/secondary/0',\n            delete: doNotDelete\n        }\n    })\n    annotationPath?: string;\n\n    //views\n    views?: MultiTableModeV4;\n\n    //initialLoad\n    @syncRule({\n        manifest: {\n            path: (pageName: string[]): string => getSettingsPathForPage(pageName)\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    initialLoad?: v4.InitialLoadType;\n\n    //toolBar\n    toolBar?: ToolBar;\n}\n", "import type { v4, Manifest } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getColumnsPathForLR, getColumnsPathForView } from '../../application';\n\nexport class ActionAfterExecutionConfiguration implements v4.ActionAfterExecutionConfiguration {\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string =>\n                getColumnsPathForLR(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/afterExecution'\n        }\n    })\n    navigateToInstance?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string =>\n                getColumnsPathForLR(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/afterExecution'\n        }\n    })\n    enableAutoScroll?: boolean;\n}\n\n/************************************\n * Sync class for TableColumn\n */\nexport class TableColumn implements v4.TableColumn {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    width?: string;\n\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.85.0'\n    })\n    availability?: v4.Availability;\n}\n\n/************************************\n * Sync class for ViewTableColumn\n */\nexport class ViewTableColumn implements v4.ViewTableColumn {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    width?: string;\n\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.85.0'\n    })\n    availability?: v4.Availability;\n}\n\nexport class TableColumnAction extends TableColumn implements v4.TableColumnAction {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    afterExecution?: ActionAfterExecutionConfiguration;\n}\n\nexport class ViewTableColumnAction extends ViewTableColumn implements v4.ViewTableColumnAction {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    afterExecution?: ActionAfterExecutionConfiguration;\n}\n\n/**\n * Sync class for Position\n */\nexport class Position implements v4.Position {\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getColumnsPathForLR(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchor?: string;\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getColumnsPathForLR(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    placement: v4.Placement;\n}\n\n/**\n * Sync class for ViewPosition\n */\nexport class ViewPosition implements v4.ViewPosition {\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getColumnsPathForView(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchor?: string;\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getColumnsPathForView(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    placement: v4.Placement;\n}\n\n/**\n * Sync class for TableCustomColumn\n */\nexport class TableCustomColumn implements v4.TableCustomColumn {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position?: Position;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    header: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    width?: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    template: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    horizontalAlign?: v4.HorizontalAlign;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    availability?: v4.Availability;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.85.0'\n    })\n    properties?: v4.ColumnPropertiesType;\n}\n\n/**\n * Sync class for ViewTableCustomColumn\n */\nexport class ViewTableCustomColumn implements v4.ViewTableCustomColumn {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position?: Position;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    header: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    width?: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    template: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    horizontalAlign?: v4.HorizontalAlign;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    availability?: v4.Availability;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.85.0'\n    })\n    properties?: v4.ColumnPropertiesType;\n}\n", "import type { v4 } from '@sap/ux-specification-types';\nimport { ToolBarAction, CustomTableAction } from './ToolBarAction';\n\nexport class Actions implements v4.Actions {\n    [key: string]: ToolBarAction | CustomTableAction;\n}\n\nexport class ToolBar implements v4.ToolBar {\n    actions: Actions;\n}\n", "import type { v4, Manifest } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getActionsPathForLR, getActionsPathForView } from '../../application';\nimport { addPatternForBindingChangeOfEnumLR } from '../../../common/decoration/control';\n\nexport class ActionAfterExecutionConfigurationToolBarLR implements v4.ActionAfterExecutionConfiguration {\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string =>\n                getActionsPathForLR(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/afterExecution'\n        }\n    })\n    navigateToInstance?: boolean;\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string =>\n                getActionsPathForLR(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/afterExecution'\n        }\n    })\n    enableAutoScroll?: boolean;\n}\n\nexport class ToolBarAction implements v4.ToolBarAction {\n    @syncRule({\n        manifest: {\n            path: getActionsPathForLR\n        }\n    })\n    enableOnSelect?: v4.SelectType;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForLR\n        }\n    })\n    afterExecution?: ActionAfterExecutionConfigurationToolBarLR;\n}\n\nexport class ViewToolBarAction implements v4.ViewToolBarAction {\n    @syncRule({\n        manifest: {\n            path: getActionsPathForView\n        }\n    })\n    enableOnSelect?: v4.SelectType;\n}\n\n/**\n * Sync class for Position\n */\nexport class CustomActionPosition implements v4.CustomActionPosition {\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getActionsPathForLR(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchor?: string;\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getActionsPathForLR(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    placement: v4.ActionPlacement;\n}\n\nexport class CustomTableAction implements v4.CustomTableAction {\n    @syncRule({\n        manifest: {\n            path: getActionsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    text: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position: CustomActionPosition;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    press: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    requiresSelection?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForLR\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    visible?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForLR\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enabled?: boolean;\n}\n\n/**\n * Sync class for Position\n */\nexport class ViewCustomActionPosition implements v4.ViewCustomActionPosition {\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getActionsPathForView(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchor?: string;\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getActionsPathForView(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    placement: v4.ActionPlacement;\n}\n\nexport class ViewTableCustomAction implements v4.ViewTableCustomAction {\n    @syncRule({\n        manifest: {\n            path: getActionsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    text: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position: CustomActionPosition;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    press: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    requiresSelection?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForView\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    visible?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForView\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enabled?: boolean;\n}\n", "import type { v4, Manifest } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getActionsPathForOP } from '../../application';\nimport { addPatternForBindingChangeOfEnumOPV4 } from '../../../common/decoration/control';\n\nexport class ObjectPageToolBarAction implements v4.ObjectPageToolBarAction {\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    enableOnSelect?: v4.SelectType;\n}\n\n/**\n * Sync class for Position\n */\nexport class CustomActionPositionOP implements v4.CustomActionPositionOP {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey: string): string =>\n                getActionsPathForOP(pageName, manifest, sectionId, columnKey) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchor?: string;\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey: string): string =>\n                getActionsPathForOP(pageName, manifest, sectionId, columnKey) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    placement: v4.ActionPlacement;\n}\n\nexport class CustomTableActionOP implements v4.CustomTableActionOP {\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    text: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position: CustomActionPositionOP;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    press: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    requiresSelection?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        },\n        generate: addPatternForBindingChangeOfEnumOPV4\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    visible?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        },\n        generate: addPatternForBindingChangeOfEnumOPV4\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enabled?: boolean;\n}\n", "import type { Manifest, v4 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getActionsPathForOP } from '../../application';\nimport { CustomFormActionOP } from './ObjectPageFormAction';\n\nexport class ActionAfterExecutionConfigurationForm implements v4.ActionAfterExecutionConfiguration {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey): string =>\n                getActionsPathForOP(pageName, manifest, sectionId, columnKey) + '/afterExecution'\n        }\n    })\n    navigateToInstance?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey): string =>\n                getActionsPathForOP(pageName, manifest, sectionId, columnKey) + '/afterExecution'\n        }\n    })\n    enableAutoScroll?: boolean;\n}\n\nexport class FormAction implements v4.FormAction {\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    afterExecution?: ActionAfterExecutionConfigurationForm;\n}\n\nexport class ObjectPageFormActions implements v4.ObjectPageFormActions {\n    [key: string]: FormAction | CustomFormActionOP;\n}\n\nexport class ObjectPageForm implements v4.ObjectPageForm {\n    actions: ObjectPageFormActions;\n}\n", "import type { v4 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getActionsPathForOP } from '../../application';\nimport { addPatternForBindingChangeOfEnumOPV4 } from '../../../common/decoration/control';\nimport type { CustomActionPositionOP } from './ObjectPageToolBarAction';\n\nexport class CustomFormActionOP implements v4.CustomFormActionOP {\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    text: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position: CustomActionPositionOP;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    press: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        },\n        generate: addPatternForBindingChangeOfEnumOPV4\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    visible?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        },\n        generate: addPatternForBindingChangeOfEnumOPV4\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enabled?: boolean;\n}\n", "import type { v4, Manifest } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport {\n    getCustomFilterFieldFieldPath,\n    getFilterFieldPath,\n    getSelectionFieldsPath,\n    getSettingsPathForPage\n} from '../../application';\n\nfunction exportVisualFilterValueList(\n    manifestSection: unknown,\n    configObject: unknown,\n    key: string,\n    manifestKey?: string\n): void {\n    if (manifestSection[manifestKey]) {\n        manifestSection[manifestKey].valueList = configObject[key];\n    } else {\n        manifestSection[manifestKey] = { valueList: configObject[key] };\n    }\n}\n\nexport class FilterBar implements v4.FilterBar {\n    selectionFields?: v4.SelectionFields | v4.CompactFilters;\n\n    visualFilters?: v4.VisualFilters;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[]): string => getSettingsPathForPage(pageName)\n        }\n    })\n    @validity({\n        since: '1.99.0'\n    })\n    hideFilterBar?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getSelectionFieldsPath\n        }\n    })\n    @validity({\n        since: '1.93.0'\n    })\n    initialLayout?: v4.InitialLayoutType;\n\n    @syncRule({\n        manifest: {\n            path: getSelectionFieldsPath\n        }\n    })\n    @validity({\n        since: '1.93.0'\n    })\n    layout?: v4.LayoutType;\n}\n\nexport class VisualFilter implements v4.VisualFilter {\n    @syncRule({\n        manifest: {\n            path: getFilterFieldPath\n        }\n    })\n    @validity({\n        since: '1.93.0'\n    })\n    availability?: v4.Availability;\n\n    @syncRule({\n        manifest: {\n            path: getFilterFieldPath,\n            import: (manifestSection: unknown) => manifestSection?.['visualFilter']?.['valueList'],\n            export: exportVisualFilterValueList,\n            key: 'visualFilter'\n        }\n    })\n    @validity({\n        since: '1.93.0'\n    })\n    visualFilterValueList?: string;\n}\n\nexport class CustomFilterFieldPosition implements v4.CustomFilterFieldPosition {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey: string): string =>\n                getCustomFilterFieldFieldPath(pageName, manifest, sectionId, columnKey) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchor?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey: string): string =>\n                getCustomFilterFieldFieldPath(pageName, manifest, sectionId, columnKey) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    placement: v4.FilterFieldPlacement;\n}\n\nexport class CustomFilterField implements v4.CustomFilterField {\n    @syncRule({\n        manifest: {\n            path: getCustomFilterFieldFieldPath\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    label: string;\n\n    @syncRule({\n        manifest: {\n            path: getCustomFilterFieldFieldPath\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    property: string;\n\n    @syncRule({\n        manifest: {\n            path: getCustomFilterFieldFieldPath\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    template: string;\n\n    @syncRule({\n        manifest: {\n            path: getCustomFilterFieldFieldPath\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    required: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getCustomFilterFieldFieldPath\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    position: CustomFilterFieldPosition;\n}\n", "import type { v4 } from '@sap/ux-specification-types';\nimport { CustomHeaderAction } from './HeaderAction';\n\nexport class HeaderActions implements v4.HeaderActions {\n    [key: string]: CustomHeaderAction;\n}\n\nexport class Header implements v4.Header {\n    actions?: HeaderActions;\n}\n", "import type { Manifest, v4 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { addPatternForBindingChangeOfEnumLR } from '../../../common/decoration/control';\nimport { getHeaderActionsPath } from '../../application';\n\n/**\n * Sync class for Position\n */\nexport class CustomHeaderActionPosition implements v4.CustomHeaderActionPosition {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey: string): string =>\n                getHeaderActionsPath(pageName, manifest, sectionId, columnKey) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchor?: string;\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey: string): string =>\n                getHeaderActionsPath(pageName, manifest, sectionId, columnKey) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    placement: v4.ActionPlacement;\n}\n\nexport class CustomHeaderAction implements v4.CustomHeaderAction {\n    @syncRule({\n        manifest: {\n            path: getHeaderActionsPath\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    text: string;\n\n    @syncRule({\n        manifest: {\n            path: getHeaderActionsPath\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position: CustomHeaderActionPosition;\n\n    @syncRule({\n        manifest: {\n            path: getHeaderActionsPath\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    press: string;\n\n    @syncRule({\n        manifest: {\n            path: getHeaderActionsPath\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    visible?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getHeaderActionsPath\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enabled?: boolean;\n}\n", "import type { v4, Manifest } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getColumnsPathForOP } from '../../application';\n\nexport class ActionAfterExecutionConfigurationOP implements v4.ActionAfterExecutionConfiguration {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey): string =>\n                getColumnsPathForOP(pageName, manifest, sectionId, columnKey) + '/afterExecution'\n        }\n    })\n    navigateToInstance?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey): string =>\n                getColumnsPathForOP(pageName, manifest, sectionId, columnKey) + '/afterExecution'\n        }\n    })\n    enableAutoScroll?: boolean;\n}\n\nexport class ObjectPageTableColumn implements v4.ObjectPageTableColumn {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    width?: string;\n\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.85.0'\n    })\n    availability?: v4.Availability;\n}\n\nexport class ObjectPageTableColumnAction extends ObjectPageTableColumn implements v4.ObjectPageTableColumnAction {}\n\nexport class PositionOP implements v4.PositionOP {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey): string =>\n                getColumnsPathForOP(pageName, manifest, sectionId, columnKey) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchor?: string;\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey): string =>\n                getColumnsPathForOP(pageName, manifest, sectionId, columnKey) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    placement: v4.Placement;\n}\nexport class TableCustomColumnOP implements v4.TableCustomColumnOP {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position?: PositionOP;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    header: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    width?: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    template: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    horizontalAlign?: v4.HorizontalAlign;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    availability?: v4.Availability;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.85.0'\n    })\n    properties?: v4.ColumnPropertiesType;\n}\n", "import type { v4 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getSettingsPathForPage, getSettingsPathForHeaderOP } from '../../application';\nimport { ObjectPageHeaderAction, CustomHeaderActionOP } from './ObjectPageHeaderAction';\n\nexport class ObjectPageHeaderActions implements v4.ObjectPageHeaderActions {\n    [key: string]: ObjectPageHeaderAction | CustomHeaderActionOP;\n}\n\nexport class ObjectPageHeader implements v4.ObjectPageHeader {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[]): string => getSettingsPathForPage(pageName)\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    editableHeaderContent?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[]): string => getSettingsPathForPage(pageName)\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    showRelatedApps?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForHeaderOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    visible?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForHeaderOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchorBarVisible?: boolean;\n    sections?: v4.HeaderSections;\n    actions?: ObjectPageHeaderActions;\n}\n", "import type { v4 } from '@sap/ux-specification-types';\nimport { FooterActionV4, CustomFooterActionOP } from './ObjectPageFooterAction';\n\nexport class ObjectPageFooterActions implements v4.ObjectPageFooterActions {\n    [key: string]: FooterActionV4 | CustomFooterActionOP;\n}\nexport class ObjectPageFooter implements v4.ObjectPageFooter {\n    actions?: ObjectPageFooterActions;\n}\n", "import type { v4, Manifest } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getHeaderFacetSettingPath } from '../../application';\nimport { ObjectPageCustomHeaderSectionFragment } from './ObjectPageCustomHeaderSection';\n\nexport class FlexSettings implements v4.FlexSettings {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getHeaderFacetSettingPath(pageName, manifest, sectionId) + '/flexSettings'\n        }\n    })\n    @validity({\n        since: '1.81.0'\n    })\n    designtime?: v4.DesignTime;\n}\n\nexport class CommonHeaderFacetSettings implements v4.CommonHeaderFacetSettings {\n    @syncRule({\n        manifest: {\n            path: getHeaderFacetSettingPath\n        }\n    })\n    @validity({\n        since: '1.81.0'\n    })\n    stashed?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getHeaderFacetSettingPath\n        }\n    })\n    @validity({\n        since: '1.81.0'\n    })\n    flexSettings?: FlexSettings;\n}\n\nexport class ObjectPageHeaderSectionForm extends CommonHeaderFacetSettings implements v4.ObjectPageHeaderSectionForm {}\n\nexport class ObjectPageHeaderSectionChart\n    extends CommonHeaderFacetSettings\n    implements v4.ObjectPageHeaderSectionChart {}\n\nexport class ObjectPageHeaderSectionDataPoint\n    extends CommonHeaderFacetSettings\n    implements v4.ObjectPageHeaderSectionDataPoint {}\n\nexport class ObjectPageHeaderSectionContact\n    extends CommonHeaderFacetSettings\n    implements v4.ObjectPageHeaderSectionContact {}\n\nexport class ObjectPageHeaderSectionAddress\n    extends CommonHeaderFacetSettings\n    implements v4.ObjectPageHeaderSectionAddress {}\n\nexport class HeaderSections implements v4.HeaderSections {\n    [key: string]:\n        | ObjectPageHeaderSectionForm\n        | ObjectPageHeaderSectionChart\n        | ObjectPageHeaderSectionDataPoint\n        | ObjectPageHeaderSectionContact\n        | ObjectPageHeaderSectionAddress\n        | ObjectPageCustomHeaderSectionFragment;\n}\n", "import type { v4 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getSettingsPathForPage } from '../../application';\n\nexport class ObjectPageLayout implements v4.ObjectPageLayout {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[]): string => getSettingsPathForPage(pageName)\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    sectionLayout?: v4.SectionLayoutType;\n}\n", "import type { Manifest, v4 } from '@sap/ux-specification-types';\nimport { QUICKVARPATH } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getTableSettingsPathForOP } from '../../application';\nimport {\n    exportCreationModeProperty,\n    deleteCreationModeProperty,\n    exportPersonalizationProperty,\n    deletePersonalizationProperty,\n    exportPersonalization\n} from './Table';\n\nexport class TableCreationModeOP implements v4.TableCreationModeOP {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId),\n            export: (manifestSection, configObject, key): void => {\n                exportCreationModeProperty(manifestSection, configObject, key);\n            },\n            delete: (manifestSection, _configObject, _key, manifestKey): void => {\n                deleteCreationModeProperty(manifestSection, manifestKey);\n            }\n        }\n    })\n    name?: v4.TableCreationModeType;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId),\n            export: (manifestSection, configObject, key): void => {\n                exportCreationModeProperty(manifestSection, configObject, key);\n            },\n            delete: (manifestSection, _configObject, _key, manifestKey): void => {\n                deleteCreationModeProperty(manifestSection, manifestKey);\n            }\n        }\n    })\n    createAtEnd?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId),\n            export: (manifestSection, configObject, key): void => {\n                exportCreationModeProperty(manifestSection, configObject, key);\n            },\n            delete: (manifestSection, _configObject, _key, manifestKey): void => {\n                deleteCreationModeProperty(manifestSection, manifestKey);\n            }\n        }\n    })\n    inlineCreationRowsHiddenInEditMode?: boolean;\n}\n\nexport class PersonalizationTypeOP implements v4.PersonalizationTypeOP {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId), // Here we are using path of parent to have correct value for manifestSection\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    column?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId), // Here we are using path of parent to have correct value for manifestSection\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    sort?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId),\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    filter?: boolean;\n}\n\nexport class QuickVariantSelectionV4OP implements v4.QuickVariantSelectionV4 {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId) + QUICKVARPATH\n        }\n    })\n    paths: v4.AnnotationPathAsObject[];\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId) + QUICKVARPATH\n        }\n    })\n    hideTableTitle?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId) + QUICKVARPATH\n        }\n    })\n    showCounts?: boolean;\n}\n\nexport class ObjectPageTable implements v4.ObjectPageTable {\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    type?: v4.TableTypeV4;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP,\n            import: (tableSettings: object): object | undefined => {\n                const value: any = tableSettings['creationMode'];\n                if (typeof value === 'object') {\n                    return value;\n                } else if (typeof value === 'string') {\n                    return {\n                        name: value\n                    };\n                }\n            }\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    creationMode?: TableCreationModeOP;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP,\n            import: (tableSettings: object): object | undefined => {\n                const value: any = tableSettings['personalization'];\n                if (typeof value === 'object') {\n                    return value;\n                } else if (typeof value === 'boolean') {\n                    return {\n                        column: value,\n                        sort: value,\n                        filter: value\n                    };\n                }\n            },\n            export: exportPersonalization\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    personalization?: PersonalizationTypeOP;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectionMode?: v4.SelectionMode;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectAll?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectionLimit?: number;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enableExport?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    quickVariantSelection?: QuickVariantSelectionV4OP;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    condensedTableLayout?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    enableFullScreen?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enablePaste?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.117.0'\n    })\n    hierarchyQualifier?: string;\n}\n", "import type { Manifest, v4 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getObjectPageCustomHeaderSectionPath } from '../../application';\nimport { addPatternForBindingChangeOfEnumOPV4 } from '../../../common';\n\nexport class ObjectPageCustomHeaderSectionFlexSettings implements v4.ObjectPageCustomHeaderSectionFlexSettings {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getObjectPageCustomHeaderSectionPath(pageName, manifest, sectionId, 'flexSettings')\n        }\n    })\n    @validity({\n        since: '1.81.0'\n    })\n    designtime?: v4.DesignTime;\n}\n\nexport class ObjectPageCustomHeaderSectionFragment implements v4.ObjectPageCustomHeaderSectionFragment {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string => {\n                return getObjectPageCustomHeaderSectionPath(pageName, manifest, sectionId, 'position');\n            },\n            key: 'anchor'\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    relatedFacet: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getObjectPageCustomHeaderSectionPath(pageName, manifest, sectionId, 'position'),\n            key: 'placement'\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    relativePosition: v4.SectionPosition;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomHeaderSectionPath\n        },\n        generate: addPatternForBindingChangeOfEnumOPV4\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    visible: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomHeaderSectionPath\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    title: string;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomHeaderSectionPath\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    subTitle: string;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomHeaderSectionPath,\n            import: (manifestSection: v4.SapUi5RoutingTargetContentSection): string => {\n                // During import, we need to consider both `name` and `template` to correctly fill our config and to be upgrade safe\n                return manifestSection.name || manifestSection.template;\n            },\n            key: 'template' // key: 'name' deprecated since '1.86'\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    fragmentName: string;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomHeaderSectionPath,\n            import: (manifestSection: v4.SapUi5RoutingTargetContentSection): string => {\n                return manifestSection.templateEdit;\n            },\n            key: 'templateEdit' // templateEdit deprecated since '1.86'\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    templateEdit: string;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomHeaderSectionPath\n        }\n    })\n    @validity({\n        since: '1.81.0'\n    })\n    stashed: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomHeaderSectionPath\n        }\n    })\n    @validity({\n        since: '1.81.0'\n    })\n    flexSettings: ObjectPageCustomHeaderSectionFlexSettings;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomHeaderSectionPath\n        }\n    })\n    @validity({\n        since: '1.81.0'\n    })\n    requestGroupId: v4.RequestGroupId;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomHeaderSectionPath,\n            import: false,\n            export: false\n        },\n        xml: (config: object): string => {\n            return config['fragmentName'];\n        }\n    })\n    @validity({\n        since: '1.96.0'\n    })\n    controls: object;\n}\n", "import type { Manifest } from '@sap/ux-specification-types';\nimport { SAPUI5_FRAGMENT_CLASS, v4 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getCustomSectionPath, getCustomSubSectionPath } from '../../application';\n\nexport class ObjectPageCustomSectionFragment implements v4.ObjectPageCustomSectionFragment {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId): string => {\n                return getCustomSectionPath(pageName, manifest, sectionId, 'position');\n            },\n            key: 'anchor'\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    relatedFacet: string;\n\n    @syncRule({\n        manifest: {\n            path: getCustomSectionPath,\n            import: (_manifest: v4.SapUi5RoutingTargetContentSection, sectionId: string): string => {\n                // Id is read from path's section - it is object's key\n                return sectionId;\n            },\n            export: false\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    id: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getCustomSectionPath(pageName, manifest, sectionId, 'position'),\n            key: 'placement'\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    relativePosition: v4.SectionPosition;\n\n    @syncRule({\n        manifest: {\n            path: getCustomSectionPath\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    title: string;\n\n    @syncRule({\n        manifest: {\n            path: getCustomSectionPath,\n            import: (manifest: v4.SapUi5RoutingTargetContentSection): v4.CustomSectionViewTypesV4 | string => {\n                // Currently only XML supported, but idea is that we need to check 'manifest.type' and allow other types - maybe JS, JSON, etc.\n                if (!manifest.type || manifest.type.startsWith(v4.CustomSectionViewTypesV4.XML)) {\n                    return v4.CustomSectionViewTypesV4.XML;\n                }\n                return '';\n            },\n            export: (manifest: v4.SapUi5RoutingTargetContentSection, object: ObjectPageCustomSectionFragment): void => {\n                // Currently only 'XMLFragment', but in future we can add logic here\n                let type = '' as typeof v4.SAPUI5_FRAGMENT_TYPE_V4;\n                if ('type' in object) {\n                    type += object.type;\n                }\n                if ('className' in object) {\n                    if (object.className === SAPUI5_FRAGMENT_CLASS) {\n                        type += 'Fragment';\n                    } else {\n                        type += object.className;\n                    }\n                }\n                manifest.type = type;\n            }\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    type: v4.CustomSectionViewTypesV4;\n\n    @syncRule({\n        manifest: {\n            path: getCustomSectionPath,\n            import: (manifest: v4.SapUi5RoutingTargetContentSection): typeof SAPUI5_FRAGMENT_CLASS | string => {\n                // Currently only XML Fragment supported, but idea is that we need to check 'value.type'\n                // f.e. type === 'XMLFragment' ? 'sap.ui.core.Fragment' : ...\n                if (!manifest.type || manifest.type.startsWith(v4.CustomSectionViewTypesV4.XML)) {\n                    if (!manifest.type || manifest.type === 'XMLFragment') {\n                        return SAPUI5_FRAGMENT_CLASS;\n                    } else {\n                        return (manifest.type as string).slice(v4.CustomSectionViewTypesV4.XML.length);\n                    }\n                }\n                // Fallback - if there is unsupported value\n                return manifest.type;\n            },\n            export: false\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n\n    @syncRule({\n        manifest: {\n            path: getCustomSectionPath,\n            import: (manifestSection: v4.SapUi5RoutingTargetContentSection): string => {\n                // During import, we need to consider both `name` and `template` to correctly fill our config and to be upgrade safe\n                return manifestSection.name || manifestSection.template;\n            },\n            key: 'template' // key: 'name' deprecated since '1.86'\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    fragmentName: string;\n\n    @syncRule({\n        manifest: {\n            path: getCustomSectionPath,\n            import: false,\n            export: false\n        },\n        xml: (config: object): string => {\n            return config['fragmentName'];\n        }\n    })\n    @validity({\n        since: '1.96.0'\n    })\n    controls: object;\n}\n\nexport class ObjectPageCustomSubSectionFragment\n    extends ObjectPageCustomSectionFragment\n    implements v4.ObjectPageCustomSubSectionFragment\n{\n    @syncRule({\n        manifest: {\n            path: (...args): string => {\n                const resolvedPath = getCustomSubSectionPath.apply({}, args);\n                return `${resolvedPath}/position`;\n            },\n            key: 'anchor'\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    relatedFacet: string;\n\n    @syncRule({\n        manifest: {\n            path: (...args): string => {\n                const resolvedPath = getCustomSubSectionPath.apply({}, args);\n                return `${resolvedPath}/position`;\n            },\n            key: 'placement'\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    relativePosition: v4.SectionPosition;\n\n    @syncRule({\n        manifest: {\n            path: getCustomSubSectionPath\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    title: string;\n\n    @syncRule({\n        manifest: {\n            path: getCustomSubSectionPath,\n            import: (manifestSection: v4.SapUi5RoutingTargetContentSection): string => {\n                // During import, we need to consider both `name` and `template` to correctly fill our config and to be upgrade safe\n                return manifestSection.name || manifestSection.template;\n            },\n            key: 'template' // key: 'name' deprecated since '1.86'\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    fragmentName: string;\n\n    @syncRule({\n        manifest: {\n            path: getCustomSubSectionPath,\n            import: false,\n            export: false\n        },\n        xml: (config: object): string => {\n            return config['fragmentName'];\n        }\n    })\n    @validity({\n        since: '1.96.0'\n    })\n    controls: object;\n}\n", "import type { Manifest, v4 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { addPatternForBindingChangeOfEnumOPV4 } from '../../../common/decoration/control';\nimport { getHeaderActionsPath } from '../../application';\nimport { CustomHeaderActionPosition } from './HeaderAction';\n\nexport class ActionAfterExecutionConfigurationObjectPageHeader\n    implements v4.ActionAfterExecutionConfigurationObjectPageHeader\n{\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey): string =>\n                getHeaderActionsPath(pageName, manifest, sectionId, columnKey) + '/afterExecution'\n        }\n    })\n    navigateToInstance?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey): string =>\n                getHeaderActionsPath(pageName, manifest, sectionId, columnKey) + '/afterExecution'\n        }\n    })\n    enableAutoScroll?: boolean;\n}\n\nexport class ObjectPageHeaderAction implements v4.ObjectPageHeaderAction {\n    @syncRule({\n        manifest: {\n            path: getHeaderActionsPath\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    afterExecution?: ActionAfterExecutionConfigurationObjectPageHeader;\n}\n\n/**\n * Sync class for Position\n */\n\nexport class CustomHeaderActionPositionOP extends CustomHeaderActionPosition {}\n\nexport class CustomHeaderActionOP implements v4.CustomHeaderActionOP {\n    @syncRule({\n        manifest: {\n            path: getHeaderActionsPath\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    text: string;\n\n    @syncRule({\n        manifest: {\n            path: getHeaderActionsPath\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position: CustomHeaderActionPositionOP;\n\n    @syncRule({\n        manifest: {\n            path: getHeaderActionsPath\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    press: string;\n\n    @syncRule({\n        manifest: {\n            path: getHeaderActionsPath\n        },\n        generate: addPatternForBindingChangeOfEnumOPV4\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    visible?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getHeaderActionsPath\n        },\n        generate: addPatternForBindingChangeOfEnumOPV4\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enabled?: boolean;\n}\n", "import type { Manifest, v4 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { addPatternForBindingChangeOfEnumOPV4 } from '../../../common/decoration/control';\nimport { getFooterActionsPath } from '../../application';\n\nexport class ActionAfterExecutionConfigurationFooter implements v4.ActionAfterExecutionConfiguration {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey): string =>\n                getFooterActionsPath(pageName, manifest, sectionId, columnKey) + '/afterExecution'\n        }\n    })\n    navigateToInstance?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey): string =>\n                getFooterActionsPath(pageName, manifest, sectionId, columnKey) + '/afterExecution'\n        }\n    })\n    enableAutoScroll?: boolean;\n}\n\nexport class FooterActionV4 implements v4.ObjectPageHeaderAction {\n    @syncRule({\n        manifest: {\n            path: getFooterActionsPath\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    afterExecution?: ActionAfterExecutionConfigurationFooter;\n}\n\n/**\n * Sync class for Position\n */\nexport class CustomFooterActionPositionOP implements v4.CustomFooterActionPositionOP {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey: string): string =>\n                getFooterActionsPath(pageName, manifest, sectionId, columnKey) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchor?: string;\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey: string): string =>\n                getFooterActionsPath(pageName, manifest, sectionId, columnKey) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    placement: v4.ActionPlacement;\n}\n\nexport class CustomFooterActionOP implements v4.CustomFooterActionOP {\n    @syncRule({\n        manifest: {\n            path: getFooterActionsPath\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    text: string;\n\n    @syncRule({\n        manifest: {\n            path: getFooterActionsPath\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position: CustomFooterActionPositionOP;\n\n    @syncRule({\n        manifest: {\n            path: getFooterActionsPath\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    press: string;\n\n    @syncRule({\n        manifest: {\n            path: getFooterActionsPath\n        },\n        generate: addPatternForBindingChangeOfEnumOPV4\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    visible?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getFooterActionsPath\n        },\n        generate: addPatternForBindingChangeOfEnumOPV4\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enabled?: boolean;\n}\n", "export * from './ListReport';\nexport * from './ObjectPage';\nexport * from './FreestylePage';\n", "import type { v4 } from '@sap/ux-specification-types';\nimport type { Table, FilterBar, Header } from '../controls';\nimport { pageLayoutInformation, childId, syncRule, validity } from '../../../common/decoration/decorators';\nimport { getSettingsPathForPage } from '../../application';\n\n/**\n * sync rule deleting all views if the chart view gets deleted\n * @param manifestSection - manifest section of the given view\n */\nfunction deleteAllALPViews(manifestSection: object): void {\n    if (manifestSection['paths']?.[0]?.primary || manifestSection['paths']?.[0]?.secondary) {\n        Object.keys(manifestSection).forEach((key) => delete manifestSection[key]);\n    }\n}\n\n/**\n * sync rule for preventing the export of a property\n */\nfunction doNotExport(): void {\n    return;\n}\n\n/**\n * sync rule for preventing the import of a property\n */\nfunction doNotImport(): void {\n    return;\n}\n\n/**\n * Sync class for import and export of V4 list report\n */\n@pageLayoutInformation({\n    id: 'sap.suite.ui.generic.template.ListReport.view.ListReport',\n    pageId: 'sap.suite.ui.generic.template.ListReport'\n})\nexport class ListReport implements v4.ListReportConfigV4 {\n    @syncRule({\n        manifest: {\n            path: (pageName): string => getSettingsPathForPage(pageName) + '/views',\n            import: doNotImport,\n            export: doNotExport,\n            delete: deleteAllALPViews\n        }\n    })\n    chart?: v4.ALPChartView;\n\n    /* Table\n    Example Ids: EntitySet - Booking\n    s4v4lrop::BookingList--fe::table::Booking::LineItem-innerTable for sap.m.Table\n    s4v4lrop::BookingList--fe::table::Booking::LineItem for sap.ui.mdc.Table\n    */\n    table?: v4.ALPTableView | Table;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[]): string => getSettingsPathForPage(pageName)\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    variantManagement?: v4.VariantManagementTypeListReport;\n\n    @syncRule({\n        manifest: {\n            path: (pageName): string => getSettingsPathForPage(pageName) + '/views/paths/[]/0'\n        }\n    })\n    defaultPath?: v4.DefaultPathType;\n\n    @syncRule({\n        manifest: {\n            path: (pageName): string => getSettingsPathForPage(pageName)\n        }\n    })\n    defaultTemplateAnnotationPath?: string;\n\n    @childId('header')\n    header?: Header;\n\n    // Currently childIds are not used in case of OData V4 Example Id - \"fe::FilterBar::Booking\", where Booking is entitySet\n    @childId('fe::FilterBar')\n    filterBar?: FilterBar;\n}\n", "import type { ObjectPageHeader, ObjectPageLayout } from '../controls';\nimport { v4 } from '@sap/ux-specification-types';\nimport { pageLayoutInformation, childId, syncRule, validity } from '../../../common/decoration/decorators';\nimport { getSettingsPathForPage } from '../../application';\n\n@pageLayoutInformation({\n    id: `${v4.FE_TEMPLATE_V4_OBJECT_PAGE}.view.Details`,\n    pageId: v4.FE_TEMPLATE_V4_OBJECT_PAGE\n})\nexport class ObjectPage implements v4.ObjectPageConfigV4 {\n    @childId('header')\n    header?: ObjectPageHeader;\n\n    @childId('layout')\n    layout?: ObjectPageLayout;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[]): string => getSettingsPathForPage(pageName)\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    variantManagement?: v4.VariantManagementTypeObjectPage;\n\n    @childId('sections')\n    sections?: v4.GenericSections | v4.CustomSections;\n\n    footer?: v4.ObjectPageFooter<v4.ObjectPageFooterActions>;\n}\n", "/**\n * Sync class for import and export of V4 freestyle page\n */\nexport class FreestylePage {}\n", "import * as controls from './controls';\nimport * as pages from './pages';\nimport type { MetadataInstanceInterface } from '../../common/decoration/factory';\nimport { MetadataFactory } from '../../common/decoration/factory';\nimport { PageTypeV2 } from '@sap/ux-specification-types';\n\n/**\n * Note: If the key of the elements corresponds to the name of the definition in schema, you do not have to list it explicitly here.\n * The following tables only comprise entries for elements that do not follow the official pattern (yet)\n */\nconst ALPElements = {\n    //no deviations\n};\n\nconst LRElements = {\n    //no deviations\n};\n\nconst OPElements = {\n    Table: controls.ObjectPageTable,\n    TableColumn: controls.ObjectPageTableColumn,\n    ObjectPageCustomSectionView: controls.ObjectPageCustomSectionFragment,\n    ActionAfterExecutionConfiguration: controls.ActionAfterExecutionConfigurationOP\n};\n\nconst pageTypes = {\n    [PageTypeV2.AnalyticalListPage]: ALPElements,\n    [PageTypeV2.ListReport]: LRElements,\n    [PageTypeV2.ObjectPage]: OPElements\n};\n\n/**\n * V4 specific factory class for creating instances of (reflect) metadata classes\n */\nexport class MetadataInstanceFactoryV4 extends MetadataFactory implements MetadataInstanceInterface {\n    constructor() {\n        super(controls, pages, pageTypes);\n    }\n}\n", "import type { Definition } from 'typescript-json-schema';\nimport type { Manifest, v4, ImportObjectPageV4Parameters } from '@sap/ux-specification-types';\nimport {\n    MANIFESTPATH,\n    FacetTitlePrefix,\n    ManifestSection,\n    PageTypeV4,\n    DefinitionName,\n    LogSeverity,\n    PropertyName\n} from '@sap/ux-specification-types';\nimport { UIAnnotationTerms, UIAnnotationTypes } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { importSettingsOfObject } from '../utils';\nimport { DEFINITION_LINK_PREFIX, getDefinitionKey } from '../../../common';\nimport i18next from 'i18next';\nimport { log } from '../../../../extensionLogger';\nimport { initI18n } from '../../../../i18n/i18n';\nimport { MetadataInstanceFactoryV4 as Factory } from '../../export/factory';\nimport type { MetadataInstanceInterface } from '../../../common/decoration/factory';\nimport { createCustomFragmentConfig } from './fpmCustomPage';\n\n/**\n * Converts section ID to manifest ID (replaces '::' with ['/', '#'])\n * @param sectionId - converted ID of the given object page section\n * @param splitOnLt - split ID and get only part in <...>\n * @param annotationTerm - annotationTerm to split Id on\n * @returns manifest ID\n */\nexport function getManifestId(sectionId: string, splitOnLt = false, annotationTerm?: string) {\n    const Id = splitOnLt ? sectionId.split('<')[1]?.slice(0, -1) : sectionId;\n    if (annotationTerm) {\n        const pathParts = Id.split(`@${annotationTerm}`);\n        return `${pathParts[0]?.replace(/::/g, '/')}@${annotationTerm}${pathParts[1]?.replace(/::/g, '#')}`;\n    }\n\n    return `${sectionId?.replace(/::/g, '/').replace(/::/g, '#')}`;\n}\n\n/**\n * Converts manifest ID to definition ID (replaces ['#', '/'] with '::')\n * @param manifestId - ID of the given object page section in manifest\n * @returns definition ID\n */\nexport function getDefinitionId(manifestId: string) {\n    return manifestId.replace(/#/g, '::').replace(/\\//g, '::');\n}\n\n/**\n * Fills the section table columns in a V4 config\n * @param {ImportObjectPageV4Parameters} importParameters  - object comprising all input data\n * @param manifestSection - section of the manifest.json\n * @param configPart - the given part of the object page config\n * @param sectionId - converted ID of the given object page section\n * @param manifestSectionId - ID of the given object page section in manifest\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param v4Page - page definition in V4 format\n */\nfunction fillTableColumnsInConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    manifestSection: string | number | boolean | object,\n    configPart: object,\n    sectionId: string,\n    factory: MetadataInstanceInterface,\n    manifestSectionId: string\n) {\n    if (manifestSection['columns']) {\n        configPart[sectionId].table.columns = {};\n        let tableDefinition: DefinitionName;\n        const lineItems = importParameters.jsonSchema.definitions[getDefinitionId(manifestSectionId)] as Definition;\n        if (lineItems) {\n            for (const columnKey in lineItems.properties) {\n                const columnInSchema = lineItems.properties[columnKey] as Definition;\n                if (columnInSchema.$ref.indexOf(DefinitionName.CustomColumnOP) > -1) {\n                    tableDefinition = DefinitionName.CustomColumnOP;\n                } else {\n                    tableDefinition = DefinitionName.ObjectPageTableColumn;\n                }\n                const columnInConfig = factory.createInstance(PageTypeV4.ObjectPage, tableDefinition);\n\n                importSettingsOfObject(\n                    columnInConfig,\n                    importParameters.manifest,\n                    importParameters.jsonSchema.definitions[tableDefinition],\n                    importParameters.routingId,\n                    [columnKey],\n                    manifestSectionId\n                );\n                if (Object.keys(columnInConfig).length > 0) {\n                    configPart[sectionId].table.columns[columnKey] = columnInConfig;\n                }\n            }\n        }\n    }\n}\n\n/**\n * Fills the table actions in config.json\n * @param {ImportObjectPageV4Parameters} importParameters - object comprising all input data\n * @param sectionId - ID of the current section\n * @param configPart - the given part of the object page config\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param v4Page - current (object) page\n */\nfunction fillTableActionsInConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    sectionId: string,\n    configPart: object,\n    factory: MetadataInstanceInterface,\n    manifestSectionId: string = sectionId\n) {\n    const actionsDefinition =\n        importParameters.jsonSchema.definitions[`${DefinitionName.Actions}<${getDefinitionId(manifestSectionId)}>`];\n    if (typeof actionsDefinition === 'object') {\n        for (const actionKey in actionsDefinition['properties']) {\n            const actionDefinition = actionsDefinition.properties[actionKey];\n            if (typeof actionDefinition === 'object' && actionDefinition.$ref) {\n                const definitionKey = getDefinitionKey(actionDefinition.$ref);\n                const schemaPropertyName = definitionKey.split('<')[0];\n                configPart[sectionId].table.toolBar.actions[actionKey] = factory.createInstance(\n                    PageTypeV4.ObjectPage,\n                    schemaPropertyName\n                );\n                importSettingsOfObject(\n                    configPart[sectionId].table.toolBar.actions[actionKey],\n                    importParameters.manifest,\n                    importParameters.jsonSchema.definitions[definitionKey],\n                    importParameters.routingId,\n                    [actionKey],\n                    manifestSectionId\n                );\n                if (Object.keys(configPart[sectionId].table.toolBar.actions[actionKey]).length === 0) {\n                    delete configPart[sectionId].table.toolBar.actions[actionKey];\n                }\n            }\n        }\n    }\n}\n\n/**\n * Fills form  actions in config.json\n * @param {ImportObjectPageV4Parameters} importParameters - object comprising all input data\n * @param sectionId - ID of the current section\n * @param configPart - the given part of the object page config\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param v4Page - current (object) page\n */\nfunction fillFormActionsInConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    manifestSection: string | number | boolean | object,\n    sectionId: string,\n    configPart: object,\n    factory: MetadataInstanceInterface,\n    manifestSectionId: string = sectionId\n) {\n    if (manifestSection['actions']) {\n        configPart[sectionId].form.actions = {};\n        const forms = importParameters.jsonSchema.definitions[\n            `${DefinitionName.ObjectPageSectionForm}<${getDefinitionId(manifestSectionId)}>`\n        ] as Definition;\n        const formReference = forms.properties.form['$ref'].split(DEFINITION_LINK_PREFIX)[1];\n        const form = importParameters.jsonSchema.definitions[formReference] as Definition;\n        const actions = form.properties['actions'] as Definition;\n        const actionsReference = actions.$ref.split(DEFINITION_LINK_PREFIX)[1];\n        const actionsDefinition = importParameters.jsonSchema.definitions[actionsReference] as Definition;\n\n        for (const actionKey in actionsDefinition['properties']) {\n            const actionDefinition = actionsDefinition.properties[actionKey] as Definition;\n            const definitionKey = getDefinitionKey(actionDefinition.$ref);\n            const formActionDefinition = importParameters.jsonSchema.definitions[definitionKey] as Definition;\n            if (\n                formActionDefinition['annotationType'] === UIAnnotationTypes.DataFieldForAction ||\n                formActionDefinition.description === 'Custom Action'\n            ) {\n                // For custom actions we use definitionKey.split('<')[0];\n                const formActionKey = getDefinitionKey(formActionDefinition.$ref) || definitionKey.split('<')[0];\n                configPart[sectionId].form.actions[actionKey] = factory.createInstance(\n                    PageTypeV4.ObjectPage,\n                    formActionKey\n                );\n                importSettingsOfObject(\n                    configPart[sectionId].form.actions[actionKey],\n                    importParameters.manifest,\n                    importParameters.jsonSchema.definitions[formActionKey],\n                    importParameters.routingId,\n                    [actionKey.replace('/', '??')],\n                    manifestSectionId\n                );\n                if (Object.keys(configPart[sectionId].form.actions[actionKey]).length === 0) {\n                    delete configPart[sectionId].form.actions[actionKey];\n                }\n            }\n        }\n    }\n}\n\n/**\n * Fills the table settings in config.json\n * @param {ImportObjectPageV4Parameters} importParameters  - object comprising all input data\n * @param manifestSettings - object page settings section of the manifest\n * @param configPart - the given part of the object page config\n * @param sectionId - ID of the current section\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param v4Page - current (object) page\n */\nfunction fillTableInConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    manifestSettings: v4.SapUiPageSettingsV4,\n    configPart: object,\n    sectionId: string,\n    factory: MetadataInstanceInterface,\n    tableId?: string\n) {\n    const manifestSectionId = tableId ? tableId : getManifestId(sectionId, false, UIAnnotationTerms.LineItem);\n    const manifestSection = manifestSettings.controlConfiguration?.[manifestSectionId];\n\n    if (manifestSection) {\n        // Data needs to be transferred\n        configPart[sectionId] = {};\n        configPart[sectionId].table = factory.createInstance(PageTypeV4.ObjectPage, DefinitionName.ObjectPageTable);\n\n        const sectionDefinition = `${DefinitionName.ObjectPageTable}<${\n            tableId ? getDefinitionId(tableId) : sectionId.replace('#', '::')\n        }>`;\n        importSettingsOfObject(\n            configPart[sectionId].table,\n            importParameters.manifest,\n            importParameters.jsonSchema.definitions[sectionDefinition],\n            importParameters.routingId,\n            [],\n            manifestSectionId\n        );\n\n        configPart[sectionId].table.toolBar = factory.createInstance(PageTypeV4.ObjectPage, DefinitionName.ToolBar, {\n            actions: {}\n        });\n        fillTableActionsInConfig(importParameters, sectionId, configPart, factory, manifestSectionId);\n        fillTableColumnsInConfig(importParameters, manifestSection, configPart, sectionId, factory, manifestSectionId);\n    }\n}\n\n/**\n * Fills the form settings in config.json\n * @param {ImportObjectPageV4Parameters} importParameters  - object comprising all input data\n * @param manifestSettings - object page settings section of the manifest\n * @param configPart - the given part of the object page config\n * @param sectionId - ID of the current section\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param formId - from defitinion ID\n */\nfunction fillFormInConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    manifestSettings: v4.SapUiPageSettingsV4,\n    configPart: object,\n    sectionId: string,\n    factory: MetadataInstanceInterface\n) {\n    const manifestSectionId = getManifestId(sectionId);\n    const manifestSection = manifestSettings.controlConfiguration?.[manifestSectionId];\n    if (manifestSection) {\n        configPart[sectionId] = {};\n        configPart[sectionId].form = factory.createInstance(PageTypeV4.ObjectPage, DefinitionName.ObjectPageForm, {\n            actions: {}\n        });\n        fillFormActionsInConfig(importParameters, manifestSection, sectionId, configPart, factory, manifestSectionId);\n    }\n}\n\n/**\n * Fills the custom sub section in config.json\n * @param importParameters Object comprising all input data\n * @param schemaSection Section schema\n * @param configPart The given part of the object page config\n * @param sectionId ID of the current section\n * @param factory Factory, for generating the access to reflect-metadata\n * @param parentId Parent section id\n */\nfunction fillCustomSubSectionInConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    schemaSection: Definition,\n    configPart: object,\n    sectionId: string,\n    factory: MetadataInstanceInterface,\n    parentId?: string\n) {\n    const section = factory.createInstance(PageTypeV4.ObjectPage, DefinitionName.ObjectPageCustomSubSectionFragment);\n    const sectionIdRef = schemaSection['$ref'].split(DEFINITION_LINK_PREFIX)[1];\n    importSettingsOfObject(\n        section,\n        importParameters.manifest,\n        importParameters.jsonSchema.definitions[sectionIdRef],\n        importParameters.routingId,\n        [`subSections/${sectionId}`],\n        parentId\n    );\n    if (section.fragmentName) {\n        const customPageConfig = createCustomFragmentConfig(importParameters, section.fragmentName);\n        section.controls = customPageConfig;\n    }\n    configPart[sectionId] = section;\n}\n\n/**\n * Fills the sections and subsections of the configuration (recursive function)\n * @param {ImportObjectPageV4Parameters} importParameters - object comprising all input data\n * @param sectionProperties - current properties' list (of sections or subsections)\n * @param manifestSettings - object page settings section of the manifest\n * @param configPart - the given part of the object page config\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param parentId - parent section id\n */\nfunction fillSectionsInConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    sectionProperties: Definition,\n    manifestSettings: v4.SapUiPageSettingsV4,\n    configPart: Definition,\n    factory: MetadataInstanceInterface,\n    parentId?: string\n): void {\n    for (const sectionId in sectionProperties) {\n        const schemaSection: Definition = sectionProperties[sectionId];\n        let tableManifestId = sectionId;\n        if (\n            sectionId.includes(UIAnnotationTerms.PresentationVariant) &&\n            schemaSection.$ref?.startsWith(DEFINITION_LINK_PREFIX + DefinitionName.ObjectPageSectionTableV4)\n        ) {\n            const sectionIdRef = schemaSection['$ref'].split(DEFINITION_LINK_PREFIX)[1];\n            tableManifestId = sectionIdRef ? getManifestId(sectionIdRef, true, UIAnnotationTerms.LineItem) : sectionId;\n            fillTableInConfig(importParameters, manifestSettings, configPart, sectionId, factory, tableManifestId);\n        } else if (schemaSection.$ref?.startsWith(DEFINITION_LINK_PREFIX + DefinitionName.ObjectPageSectionTableV4)) {\n            // Section without subsections\n            fillTableInConfig(importParameters, manifestSettings, configPart, sectionId, factory);\n        } else if (schemaSection.properties && schemaSection.properties.subsections) {\n            configPart[sectionId] = {\n                subsections: {}\n            };\n            fillSectionsInConfig(\n                importParameters,\n                schemaSection.properties.subsections['properties'],\n                manifestSettings,\n                configPart[sectionId].subsections,\n                factory,\n                sectionId\n            );\n        } else if (\n            schemaSection.$ref?.startsWith(DEFINITION_LINK_PREFIX + DefinitionName.ObjectPageSectionForm) &&\n            schemaSection.$ref?.includes(`@${UIAnnotationTerms.FieldGroup}::`)\n        ) {\n            // Form section\n            fillFormInConfig(importParameters, manifestSettings, configPart, sectionId, factory);\n        } else if (\n            schemaSection.$ref?.startsWith(DEFINITION_LINK_PREFIX + DefinitionName.ObjectPageCustomSubSectionFragment)\n        ) {\n            fillCustomSubSectionInConfig(importParameters, schemaSection, configPart, sectionId, factory, parentId);\n        }\n    }\n}\n\n/**\n * Fills the custom sections of the configuration\n * @param {ImportObjectPageV4Parameters} importParameters - object comprising all input data\n * @param manifestSettings - object page settings section of the manifest\n * @param objectPageConfig - the given part of the object page config\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n */\nfunction fillCustomSectionsInConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    manifestSettings: v4.SapUiPageSettingsV4,\n    objectPageConfig: v4.ObjectPageConfigV4,\n    factory: MetadataInstanceInterface\n): void {\n    const customSections = manifestSettings.content?.body?.sections;\n    if (customSections) {\n        objectPageConfig.sections.custom = [];\n        for (const sectionId in customSections) {\n            const customSection = customSections[sectionId];\n            if ('subSections' in customSection) {\n                //'subSections' is reserved property - It is not custom section, but object with custom subsections\n                continue;\n            }\n            const section = factory.createInstance(\n                PageTypeV4.ObjectPage,\n                DefinitionName.ObjectPageCustomSectionFragment\n            );\n            importSettingsOfObject(\n                section,\n                importParameters.manifest,\n                importParameters.jsonSchema.definitions[DefinitionName.ObjectPageCustomSectionFragment],\n                importParameters.routingId,\n                [],\n                sectionId\n            );\n            const fragmentName = customSection.template;\n            if (fragmentName) {\n                const customPageConfig = createCustomFragmentConfig(importParameters, fragmentName);\n                section.controls = customPageConfig;\n            }\n            objectPageConfig.sections.custom.push(section);\n        }\n    }\n}\n\n/**\n * Fills the custom header sections of the configuration\n * @param {ImportObjectPageV4Parameters} importParameters - object comprising all input data\n * @param {v4.SapUiPageSettingsV4} manifestSettings - object page settings header section of the manifest\n * @param {v4.ObjectPageConfigV4} objectPageConfig - the given part of the object page config\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n */\nfunction fillCustomHeaderSectionsInConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    manifestSettings: v4.SapUiPageSettingsV4,\n    objectPageConfig: v4.ObjectPageConfigV4,\n    factory: MetadataInstanceInterface\n): void {\n    const header = manifestSettings.content?.header;\n    const customHeaderSections = header && 'facets' in header ? header.facets : undefined;\n    if (customHeaderSections) {\n        for (const sectionId in customHeaderSections as object) {\n            const customHeaderSection = customHeaderSections[sectionId];\n            const section = factory.createInstance(\n                PageTypeV4.ObjectPage,\n                DefinitionName.ObjectPageCustomHeaderSectionFragment\n            );\n            importSettingsOfObject(\n                section,\n                importParameters.manifest,\n                importParameters.jsonSchema.definitions[DefinitionName.ObjectPageCustomHeaderSectionFragment],\n                importParameters.routingId,\n                [],\n                sectionId\n            );\n            // assign fragment contents in config\n            const readFragmentName = customHeaderSection.template;\n            if (readFragmentName) {\n                const customPageConfig = createCustomFragmentConfig(importParameters, readFragmentName);\n                section.controls = customPageConfig;\n            }\n            const editFragmentName = customHeaderSection.templateEdit;\n            if (editFragmentName) {\n                const customPageConfig = createCustomFragmentConfig(importParameters, editFragmentName);\n                section.controlsEditMode = customPageConfig;\n            }\n            objectPageConfig.header.sections[sectionId] = section;\n        }\n    }\n}\n\n/**\n * Fills the header facets in the config file of a V4 object page\n * @param appSchema - app specific schema\n * @param objectPageConfig - configuration, to be enhanced\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param manifest - manifest.json of the app\n * @param v4Page - current (object) page\n */\nfunction fillHeaderFacets(\n    appSchema: Definition,\n    objectPageConfig: v4.ObjectPageConfigV4,\n    factory: MetadataInstanceInterface,\n    manifest: Manifest,\n    routingId: string\n): void {\n    const headerSections = appSchema.definitions[DefinitionName.HeaderSections] as Definition;\n    if (headerSections && headerSections.properties) {\n        objectPageConfig.header.sections = {};\n        for (const sectionId in headerSections.properties) {\n            let sectionDefinition = headerSections.properties[sectionId];\n            let factoryKey;\n            const sectionDefinitionKey = headerSections.properties[sectionId]['$ref']?.split(DEFINITION_LINK_PREFIX)[1];\n            if (sectionDefinitionKey) {\n                sectionDefinition = appSchema.definitions[sectionDefinitionKey];\n                factoryKey = sectionDefinitionKey.split('<')[0];\n            }\n            const isCustomHeaderSection = factoryKey?.includes(DefinitionName.ObjectPageCustomHeaderSectionFragment);\n            if (!isCustomHeaderSection) {\n                objectPageConfig.header.sections[sectionId] = factoryKey\n                    ? factory.createInstance(PageTypeV4.ObjectPage, factoryKey)\n                    : {};\n                importSettingsOfObject(\n                    objectPageConfig.header.sections[sectionId],\n                    manifest,\n                    sectionDefinition,\n                    routingId,\n                    [],\n                    (sectionDefinition as Definition)?.title?.split(FacetTitlePrefix)[1]\n                );\n            }\n        }\n    }\n}\n\n/**\n * Fills the properties of a given action definition into the OP config\n * @param actionPropertyDefinition\n * @param {Definition} appSchema - app specific schema\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {object} actionsInConfig - actions' definition in the config file, to be enhanced\n * @param {string} actionKey - key of action property\n * @param {Manifest} manifest - manifest.json of the app\n * @param {string} routingId - routing id of page\n */\nfunction importActionSettingsOfReference(\n    actionPropertyDefinition: Definition,\n    appSchema: Definition,\n    factory: MetadataInstanceInterface,\n    actionsInConfig: object,\n    actionKey: string,\n    manifest: Manifest,\n    routingId: string\n) {\n    const definitionKey = getDefinitionKey(actionPropertyDefinition.$ref);\n    const definitionOfReference = appSchema.definitions[definitionKey] as Definition;\n    const key = getDefinitionKey(definitionOfReference.$ref || actionPropertyDefinition.$ref);\n\n    const metaInstance = factory.createInstance(PageTypeV4.ObjectPage, key);\n    if (metaInstance) {\n        const action = (actionsInConfig[actionKey] = metaInstance);\n        importSettingsOfObject(action, manifest, appSchema.definitions[key], routingId, [actionKey.replace('/', '??')]);\n        if (Object.keys(action).length === 0) {\n            delete actionsInConfig[actionKey];\n        }\n    }\n}\n\n/**\n * Fills the header and footer actions in the config file of a V4 object page\n * @param {Definition} appSchema - app specific schema\n * @param {v4.ObjectPageConfigV4} objectPageConfig - configuration, to be enhanced\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {Manifest} manifest - manifest.json of the app\n * @param {string} routingId - routing id of page\n * @param {DefinitionName} definitionName definition name in the schema\n * @param {PropertyName} actionPropertyName - header or a footer action\n */\nfunction fillHeaderFooterActions(\n    appSchema: Definition,\n    objectPageConfig: v4.ObjectPageConfigV4,\n    factory: MetadataInstanceInterface,\n    manifest: Manifest,\n    routingId: string,\n    definitionName: DefinitionName,\n    actionPropertyName: PropertyName\n): void {\n    const actions = appSchema.definitions[definitionName] as Definition;\n    if (typeof actions === 'object') {\n        const actionsInConfig = (objectPageConfig[actionPropertyName].actions = {});\n        for (const actionKey in actions.properties) {\n            const definition = actions.properties[actionKey];\n            if (typeof definition === 'object' && definition.$ref) {\n                importActionSettingsOfReference(\n                    definition,\n                    appSchema,\n                    factory,\n                    actionsInConfig,\n                    actionKey,\n                    manifest,\n                    routingId\n                );\n            }\n        }\n    }\n}\n\n/**\n * Fills the object page configuration from the given manifest\n * @param {ImportObjectPageV4Parameters} importParameters  - object comprising all input data\n * @param v4Page - current (object) page\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @returns {ObjectPageConfig} the object page configuration\n */\nfunction fillObjectPageConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    v4Page: v4.SapUiAppPageV4,\n    factory: MetadataInstanceInterface\n): v4.ObjectPageConfigV4 {\n    const objectPageConfig: v4.ObjectPageConfigV4 = factory.createPageInstance(PageTypeV4.ObjectPage);\n\n    const manifestSettings = v4Page.options && v4Page.options.settings;\n\n    // Transfer header information\n    objectPageConfig.header = factory.createInstance(PageTypeV4.ObjectPage, DefinitionName.ObjectPageHeader);\n    importSettingsOfObject(\n        objectPageConfig.header,\n        importParameters.manifest,\n        importParameters.jsonSchema.definitions[DefinitionName.ObjectPageHeader],\n        importParameters.routingId,\n        []\n    );\n\n    // Transfer footer information\n    objectPageConfig.footer = factory.createInstance(PageTypeV4.ObjectPage, DefinitionName.ObjectPageFooter);\n    importSettingsOfObject(\n        objectPageConfig.footer,\n        importParameters.manifest,\n        importParameters.jsonSchema.definitions[DefinitionName.ObjectPageFooter],\n        importParameters.routingId,\n        []\n    );\n\n    // Transfer layout information\n    objectPageConfig.layout = factory.createInstance(PageTypeV4.ObjectPage, DefinitionName.ObjectPageLayout);\n    importSettingsOfObject(\n        objectPageConfig.layout,\n        importParameters.manifest,\n        importParameters.jsonSchema.definitions[DefinitionName.ObjectPageLayout],\n        importParameters.routingId,\n        []\n    );\n\n    importSettingsOfObject(\n        objectPageConfig,\n        importParameters.manifest,\n        importParameters.jsonSchema,\n        importParameters.routingId,\n        []\n    );\n    if (!objectPageConfig.sections) {\n        objectPageConfig.sections = {};\n    }\n    if (manifestSettings) {\n        if (\n            (manifestSettings.controlConfiguration || manifestSettings.content?.body?.sections) &&\n            importParameters.jsonSchema.definitions[DefinitionName.Sections]\n        ) {\n            // Fill sections and subsections\n            objectPageConfig.sections = {};\n            fillSectionsInConfig(\n                importParameters,\n                importParameters.jsonSchema.definitions[DefinitionName.Sections]['properties'],\n                manifestSettings,\n                objectPageConfig.sections as Definition,\n                factory\n            );\n        }\n        // Fill custom sections\n        fillCustomSectionsInConfig(importParameters, manifestSettings, objectPageConfig, factory);\n        // Fill header facets\n        fillHeaderFacets(\n            importParameters.jsonSchema,\n            objectPageConfig,\n            factory,\n            importParameters.manifest,\n            importParameters.routingId\n        );\n        // Fill custom header sections\n        fillCustomHeaderSectionsInConfig(importParameters, manifestSettings, objectPageConfig, factory);\n        fillHeaderFooterActions(\n            importParameters.jsonSchema,\n            objectPageConfig,\n            factory,\n            importParameters.manifest,\n            importParameters.routingId,\n            DefinitionName.ObjectPageHeaderActions,\n            PropertyName.header\n        );\n        fillHeaderFooterActions(\n            importParameters.jsonSchema,\n            objectPageConfig,\n            factory,\n            importParameters.manifest,\n            importParameters.routingId,\n            DefinitionName.FooterActions,\n            PropertyName.footer\n        );\n    }\n    return objectPageConfig;\n}\n\n/**\n * External API: Create configuration (file content) for a V4 object page\n * @param {ImportObjectPageV4Parameters} importParameters  - object comprising all input data\n * @param {ExtensionLogger} logger - Logger class for logging messages\n *\n * @returns {ObjectPageConfig} config - the object page configuration\n */\nexport function createObjectPageConfigV4(\n    importParameters: ImportObjectPageV4Parameters\n): v4.ObjectPageConfigV4 | undefined {\n    // Initialize i18next\n    initI18n();\n    if (!importParameters.manifest[ManifestSection.ui5] || !importParameters.manifest[ManifestSection.ui5]['routing']) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOROUTING'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5]\n            }\n        });\n        return;\n    }\n    const v4Pages = importParameters.manifest[ManifestSection.ui5]['routing']['targets'] as v4.SapUi5RoutingTargetsV4;\n    if (!v4Pages) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOTARGETS'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5, 'routing']\n            }\n        });\n        return;\n    }\n    const v4Page = v4Pages[importParameters.routingId];\n    if (!v4Page) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOROUTINGID', { routingId: importParameters.routingId }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5, 'routing']\n            }\n        });\n        return;\n    }\n    const factory = new Factory();\n\n    //Fill config.json\n    return fillObjectPageConfig(importParameters, v4Page as v4.SapUiAppPageV4, factory);\n}\n", "import type {\n    v4,\n    ImportFPMCustomPageV4Parameters,\n    SchemaDefinition,\n    PageConfig,\n    ExtensionLogger,\n    ImportObjectPageV4Parameters\n} from '@sap/ux-specification-types';\nimport { getManifestPage, getPageCustomExtensionFile, getPageCustomViewFile } from '../../utils/utils';\nimport { parseXML, traverseSchema, getCustomExtensionFragmentDefinitionKey, getRootElement } from '../../utils/macros';\nimport type { TraverseData } from '../../utils/macros';\nimport type { ExtensionFileData } from '../../types';\n\n/**\n * Method checks if passed string value and schema matches to boolean type.\n * @param {string} value Attribute value from xml file.\n * @param {SchemaDefinition} schema Property's schema containing information about property type.\n * @returns {boolean} Is value a boolean type.\n */\nfunction isBoolean(value: string, schema: SchemaDefinition): boolean {\n    const schemaBoolean = 'boolean';\n    if (\n        schema.type === schemaBoolean ||\n        schema.anyOf?.find((entry: SchemaDefinition) => entry.type === schemaBoolean)\n    ) {\n        return value === 'true' || value === 'false';\n    }\n    return false;\n}\n\n/**\n * Method checks if passed string value and schema matches to number type.\n * @param {string} value Attribute value from xml file.\n * @param {SchemaDefinition} schema Property's schema containing information about property type.\n * @returns {boolean} Is value a number type.\n */\nfunction isNumber(value: string, schema: SchemaDefinition): boolean {\n    const schemaNumber = 'number';\n    if (schema.type === schemaNumber || schema.anyOf?.find((entry: SchemaDefinition) => entry.type === schemaNumber)) {\n        return !isNaN(parseFloat(value.toString()));\n    }\n    return false;\n}\n\n/**\n * Method converts string value from XML file attribute to strict type depending on property's schema.\n * @param {string | number} value Attribute value from xml file.\n * @param {SchemaDefinition} schema Property's schema containing information about property type.\n * @returns {unknown} Converted value.\n */\nfunction convertValue(value: string | number, schema: SchemaDefinition): unknown {\n    const valueStr = value.toString();\n    if (isBoolean(valueStr, schema)) {\n        return valueStr === 'true' ? true : false;\n    }\n    if (isNumber(valueStr, schema)) {\n        return parseFloat(valueStr);\n    }\n    return value;\n}\n\n/**\n * Callback method of traversing schema and XML.\n * Method imports value from XML element to page config object.\n * @param {TraverseData} traverseData Schema and XML traverse data.\n * @param {SchemaDefinition} property Schema property to use for import.\n * @param {object} config Fragment of page config object.\n * @param {string} name Name of property to import.\n * @returns {boolean} Is new value differs.\n */\nfunction importProperty(traverseData: TraverseData, property: SchemaDefinition, config: object, name: string): boolean {\n    const { element } = traverseData;\n    let differs = false;\n    // Do not import comments inside XML\n    if (element && element.type !== 'comment' && element.attributes && name in element.attributes) {\n        const value = convertValue(element.attributes[name], property);\n        if (value !== config[name]) {\n            config[name] = value;\n            differs = true;\n        }\n    }\n    return differs;\n}\n\n/**\n * Method coverts xml file with json schema to page config.\n * @param {ExtensionFileData} fileData XML file data.\n * @param {SchemaDefinition} schema Schema of target config.\n * @param {ExtensionLogger} logger Logger.\n * @returns {PageConfig} Converted config.\n */\nexport function convertXmlFileToConfig(\n    fileData: ExtensionFileData,\n    schema: SchemaDefinition,\n    logger: ExtensionLogger\n): PageConfig {\n    let config: PageConfig | undefined;\n    const element = parseXML(fileData.file, false, logger);\n    if (element) {\n        const coreElement = getRootElement(element);\n        config = {};\n        // get schema definition for passed fragment\n        traverseSchema(\n            {\n                fullSchema: schema,\n                schema: schema,\n                element: coreElement,\n                contextPath: [],\n                config\n            },\n            importProperty\n        );\n    }\n    return config;\n}\n\n/**\n * Imports the content of fpm custom page by parsing associated view file.\n * @param {ImportFPMCustomPageV4Parameters} importParameters Object comprising all input data.\n * @param {FeatureToggle[]} [featureToggles] - array of supported features.\n * @returns {v4.ListReportConfigV4 | undefined} Result of import.\n */\nexport function createCustomPageConfig(\n    importParameters: ImportFPMCustomPageV4Parameters\n): v4.ListReportConfigV4 | undefined {\n    const { views, manifest, jsonSchema, routingId, logger } = importParameters;\n    if (!jsonSchema || Object.keys(jsonSchema).length === 0) {\n        // Unsupported feature\n        return undefined;\n    }\n    const viewData = getPageCustomViewFile(views || [], routingId, manifest, logger);\n    let config: v4.ListReportConfigV4 | undefined;\n    if (viewData) {\n        config = convertXmlFileToConfig(viewData, jsonSchema, importParameters.logger);\n    }\n    return config;\n}\n\n/**\n * Imports the content of fpm custom page by parsing associated fragment file.\n * @param {ImportObjectPageV4Parameters} importParameters Object comprising all input data.\n * @param {string} fragmentName Fragment full namespace.\n * @param {FeatureToggle[]} [featureToggles] - array of supported features.\n * @returns {v4.ListReportConfigV4 | undefined} Result of import.\n */\nexport function createCustomFragmentConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    fragmentName: string\n): v4.ListReportConfigV4 | undefined {\n    const { fragments, manifest, jsonSchema, routingId, logger } = importParameters;\n    const definitionKey = getCustomExtensionFragmentDefinitionKey(fragmentName);\n    const schema = jsonSchema['definitions']?.[definitionKey] as SchemaDefinition;\n    if (!jsonSchema || !schema) {\n        // Unsupported feature\n        return undefined;\n    }\n    const targetManifest = getManifestPage(manifest, routingId);\n    const fragmentData = getPageCustomExtensionFile(\n        fragments || [],\n        targetManifest,\n        manifest,\n        'fragment',\n        fragmentName\n    );\n    let config: v4.ListReportConfigV4 | undefined;\n    if (fragmentData) {\n        const tempSchema = {\n            ...schema,\n            definitions: jsonSchema['definitions']\n        } as SchemaDefinition;\n        config = convertXmlFileToConfig(fragmentData, tempSchema, logger);\n    }\n    return config;\n}\n", "import { AppProvider } from '../../../common/appProvider';\nimport { AppSettings } from '../../application';\nimport { getSchemaFilePath, determineV4PageTemplateType } from '../../../common';\nimport { createListReportConfig } from '../pages/listReport';\nimport { createObjectPageConfigV4 } from '../pages/objectPage';\nimport { createCustomPageConfig } from '../pages/fpmCustomPage';\nimport type {\n    ExtensionFiles,\n    Files,\n    Manifest,\n    SapUi5RoutingRoute,\n    SapUi5RoutingRouteTarget,\n    ImportAllConfigsParameters\n} from '@sap/ux-specification-types';\nimport {\n    v4,\n    MANIFESTPATH,\n    TemplateType,\n    PageTypeV4,\n    FioriElementsVersion,\n    SchemaType,\n    ManifestSection,\n    ViewTypes,\n    LogSeverity\n} from '@sap/ux-specification-types';\nimport { importSettingsOfObject } from '../utils';\nimport type {\n    ExtensionLogger,\n    ImportObjectPageV4Parameters,\n    ImportListReportV4Parameters,\n    ImportFPMCustomPageV4Parameters,\n    ImportAnalyticalListPageV4Parameters\n} from '../../../..';\nimport { log } from '../../../../extensionLogger';\nimport i18next from 'i18next';\nimport { initI18n } from '../../../../i18n/i18n';\nimport type { Definition } from 'typescript-json-schema';\nimport { getEntityTypeEntitySetFromContextPath } from '../../../common/importProject';\n\nexport enum Constants {\n    OptionalQuery = ':?query:',\n    Component = 'sap/fe/AppComponent',\n    Namespace = 'sap.fe.templates'\n}\n\n// Store controller names which should be handled lately\nexport const unhandledControllers: Array<string> = [];\n// Store route associations\nlet associations: object = {};\n\n/**\n * Sort in following way\n * 1. string targets first\n * 2. Then sort targets as array by elements count - from lowest to highest(ASC)\n * @param {SapUi5RoutingRoute} route1 - First instance of router to compare.\n * @param {SapUi5RoutingRoute} route2 - Second instance of router to compare.\n * @return {number} Compare result.\n */\nfunction routesSorter(route1: SapUi5RoutingRoute, route2: SapUi5RoutingRoute): number {\n    const target1 = route1.target;\n    const target2 = route2.target;\n    const isT1Array = Array.isArray(target1);\n    const isT2Array = Array.isArray(target2);\n    if (isT1Array && isT2Array) {\n        return target1.length - target2.length;\n    }\n    if (!isT1Array && !isT2Array) {\n        return 0;\n    }\n    return !isT1Array ? -1 : 1;\n}\n\n/**\n * Method to resolve target and return target name as string.\n * Thing is that we can receive target as array of targets and we need detect which target is unique target in that array.\n * @param {SapUi5RoutingRouteTarget} target - Target to resolve.\n * @param {Array<string>} usedTargets - Array of resolved targets(which means that those targets are not unique anymore).\n * @return {string} Resolved unique target namet.\n */\nfunction resolveTarget(target: SapUi5RoutingRouteTarget, usedTargets: Array<string> = []): string {\n    if (!Array.isArray(target)) {\n        return target;\n    }\n    let targetParts: Array<string> = target;\n    for (const usedTarget of usedTargets) {\n        targetParts = targetParts.filter((targetPart) => !usedTarget.includes(targetPart));\n    }\n    return targetParts[0];\n}\n\n/**\n * Method which populates object with routings routes associations.\n * @param {SapUi5RoutingRoute} routes - Routing routes.\n * @return {object} Map object of association routes.\n */\nfunction populateAssociations(routes: SapUi5RoutingRoute[]): object {\n    const routesAssociations = {};\n    routes = routes.concat().sort(routesSorter);\n    const resolvedTargets = [];\n    for (const route of routes) {\n        const parts = route.pattern.split(':')[0].split('/');\n        let target;\n        if (Array.isArray(route.target)) {\n            target = resolveTarget(route.target, resolvedTargets);\n            resolvedTargets.push(route.target);\n        } else {\n            target = route.target;\n        }\n        for (const part of parts) {\n            const prop = part.split('(')[0];\n            routesAssociations[target] = routesAssociations[target] ? `${routesAssociations[target]}.${prop}` : prop;\n        }\n    }\n    return routesAssociations;\n}\n\n/**\n * Determines the page type of a routing target\n * @param target - routing target, as defined in manifest\n * @param logger - logger for error messages\n * @param routingTargetId - ID of the routing target\n * @returns the page type\n */\nfunction determinePageType(\n    target: v4.RoutingTargetOptions,\n    logger: ExtensionLogger,\n    routingTargetId: string\n): PageTypeV4 {\n    let pageType: PageTypeV4;\n    if (target['name']) {\n        if (target['name'] === v4.FE_TEMPLATE_V4_CUSTOM_PAGE) {\n            pageType = PageTypeV4.FPMCustomPage;\n        } else if (\n            target['name'].endsWith(PageTypeV4.ListReport) ||\n            target['name'].endsWith(PageTypeV4.AnalyticalListPage)\n        ) {\n            pageType = PageTypeV4.ListReport;\n        } else if (target['name'].endsWith(PageTypeV4.ObjectPage)) {\n            pageType = PageTypeV4.ObjectPage;\n        } else {\n            pageType = PageTypeV4.CustomPage;\n        }\n    } else if ('viewId' in target) {\n        pageType = PageTypeV4.CustomPage;\n    } else {\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('INVALIDTARGETDEFINITION', { target: JSON.stringify(target) }),\n            location: {\n                path: MANIFESTPATH,\n                range: [`${ManifestSection.ui5}/routing/targets/${routingTargetId}`]\n            }\n        });\n        if (target['viewType'] in ViewTypes && 'viewName' in target) {\n            pageType = PageTypeV4.CustomPage;\n        }\n    }\n    return pageType;\n}\n\nexport type ConversionParameters = {\n    target: v4.RoutingTargetOptions;\n    pageType: PageTypeV4;\n    manifest: Manifest;\n    schemas: Files;\n    logger: ExtensionLogger;\n    page: v4.Page;\n    id: string;\n    templateType: TemplateType;\n    extensionFiles: ExtensionFiles;\n};\n\nfunction convertSettingsToConfig(params: ConversionParameters) {\n    const viewId = params.target['viewId'] || params.target['id'];\n    const schemaId = getSchemaFilePath(params.page.pageType, params.id, viewId).filename;\n    if (!schemaId || params.page.pageType === PageTypeV4.CustomPage) {\n        return;\n    }\n    // Get the JSON schema for the page. If no page specific schema exists, fall back top the generic schema for the page type\n    const jsonSchema: string =\n        Object.keys(params.schemas).find((element) => element.includes(schemaId)) ||\n        Object.keys(params.schemas).find((element) => element.includes(schemaId.slice(0, -1))) ||\n        Object.keys(params.schemas).find((element) => element.includes(params.page.pageType));\n\n    if (jsonSchema) {\n        if (params.page.pageType === PageTypeV4.ObjectPage) {\n            const importParameters: ImportObjectPageV4Parameters = {\n                manifest: params.manifest,\n                jsonSchema: params.schemas[jsonSchema],\n                routingId: params.id,\n                fragments: params.extensionFiles.fragments,\n                logger: params.logger\n            };\n            params.page.config = createObjectPageConfigV4(importParameters);\n        } else if (params.page.pageType === PageTypeV4.FPMCustomPage) {\n            const importParameters: ImportFPMCustomPageV4Parameters = {\n                manifest: params.manifest,\n                jsonSchema: params.schemas[jsonSchema],\n                logger: params.logger,\n                routingId: params.id,\n                fragments: params.extensionFiles.fragments,\n                views: params.extensionFiles.views\n            };\n            params.page.config = createCustomPageConfig(importParameters);\n        } else if (params.templateType === TemplateType.ListReportObjectPageV4) {\n            const importParameters: ImportListReportV4Parameters = {\n                manifest: params.manifest,\n                jsonSchema: params.schemas[jsonSchema],\n                logger: params.logger\n            };\n            params.page.config = createListReportConfig(importParameters, SchemaType.ListReport);\n        } else if (params.templateType === TemplateType.AnalyticalListPageV4) {\n            const importParameters: ImportAnalyticalListPageV4Parameters = {\n                manifest: params.manifest,\n                jsonSchema: params.schemas[jsonSchema],\n                logger: params.logger\n            };\n            params.page.config = createListReportConfig(importParameters, SchemaType.AnalyticalListPage);\n        } else if (\n            params.templateType === TemplateType.FreestylePageV4 &&\n            params.page.pageType === PageTypeV4.ListReport\n        ) {\n            const importParameters: ImportListReportV4Parameters = {\n                manifest: params.manifest,\n                jsonSchema: params.schemas[jsonSchema],\n                logger: params.logger\n            };\n            const templateType = determineV4PageTemplateType(params.target as v4.SapUiAppPageV4);\n            const schemaType =\n                templateType === TemplateType.AnalyticalListPageV4\n                    ? SchemaType.AnalyticalListPage\n                    : SchemaType.ListReport;\n            params.page.config = createListReportConfig(importParameters, schemaType);\n        }\n    }\n}\n\n/**\n * Updates the class variable collecting the unhandled controllers\n * @param target - current routing target\n */\nfunction updateUnhandledControllers(target: v4.RoutingTargetOptions): void {\n    if (target.options) {\n        if ('viewName' in target.options.settings) {\n            const viewParts = target.options.settings.viewName.split('.');\n            unhandledControllers.push(viewParts[viewParts.length - 1]);\n        }\n    } else if ('viewId' in target) {\n        // There no 'options' for custom page target -\n        //    we need check target's controller source for navigation\n        const viewParts = target.viewName.split('.');\n        unhandledControllers.push(viewParts[viewParts.length - 1]);\n    }\n}\n\n/*\n * Evaluates the target options in manifest, determines variantManagement and page navigation.\n * @param {RoutingTargetOptions} target - target definition in manifest\n * @param {Page} page - page config, to be updated\n */\nfunction setVariantManagmentAndNavigation(target: v4.RoutingTargetOptions, page: v4.PageV4): void {\n    if (target.options) {\n        if (target.options.settings.variantManagement) {\n            page.variantManagement = target.options.settings.variantManagement;\n        }\n        page.navigation = {};\n        for (const name in target.options.settings.navigation) {\n            const navigationRoute = target.options.settings.navigation[name];\n            page.navigation[name] = navigationRoute.detail;\n        }\n    }\n}\n\n/**\n * Evaluates the target options in manifest, determines entitySet, entityType and contextPath.\n * @param {RoutingTargetOptions} target - target definition in manifest\n * @param {Page} page - page config, to be updated\n */\nfunction setEntitySetEntityTypeContextPath(\n    target: v4.RoutingTargetOptions,\n    page: v4.PageV4,\n    importParameters: ImportAllConfigsParameters\n): void {\n    if (target.options) {\n        page.entitySet = target.options.settings?.entitySet;\n        page.contextPath = target.options.settings?.contextPath;\n        const { entitySet, entityType } = getEntityTypeEntitySetFromContextPath(\n            importParameters.serviceAVT,\n            page.contextPath,\n            page.entitySet,\n            importParameters.logger\n        );\n        page.entitySet = page.entitySet || entitySet?.name;\n        page.entityType = entityType?.fullyQualifiedName;\n    }\n}\n\n/**\n * Checks if the manifest's routing target represents a custom page definition\n * @param {RoutingTargetOptions} target - target definition in manifest\n * @param {Page} page - page config, to be updated\n * @param {PageTypeV4} pageType - page type\n */\nfunction evaluateCustomPageSettings(target: v4.RoutingTargetOptions, page: v4.Page, pageType: PageTypeV4): void {\n    if ('viewId' in target) {\n        // Populate view of custom page\n        page.view = {\n            id: target.viewId,\n            name: target.viewName,\n            ...(target.viewType && { viewType: target.viewType }),\n            ...(target.viewPath && { path: target.viewPath }),\n            ...(target.path && { path: target.path })\n        };\n    } else if ([PageTypeV4.CustomPage, PageTypeV4.FPMCustomPage].includes(pageType)) {\n        const customPageName =\n            (target as v4.SapUi5RoutingTargetCustomPageV4New).options?.settings?.viewName || target['viewName'];\n        page.view = {\n            ...(target.id && { id: target.id }),\n            ...(customPageName && { name: customPageName }),\n            ...(target.name && { template: target.name as any }),\n            ...(target['viewType'] && { viewType: target['viewType'] })\n        };\n    }\n}\n\n/**\n * Determines a single page  information for app.json and creates the configuration for the page\n * @param {v4.SapUi5RoutingV4} routing - complete routing information from manifest\n * @param {string} id - routing target id in manifest\n * @param {v4.Pages} pages - list of all pages, the current page information gets added\n * @param {ImportAllConfigsParameters} importParameters - structure comprising all input parameters\n *\n */\nfunction getSinglePageAndConfig(\n    routing: v4.SapUi5RoutingV4,\n    id: string,\n    pages: v4.Pages,\n    importParameters: ImportAllConfigsParameters\n): void {\n    const target: v4.RoutingTargetOptions = routing.targets[id];\n    const pageType = determinePageType(target, importParameters.logger, id);\n    const page: v4.PageV4 = { pageType };\n\n    // Entity set\n    setEntitySetEntityTypeContextPath(target, page, importParameters);\n    if (target.controlAggregation) {\n        page.controlAggregation = target.controlAggregation;\n    }\n    if (associations[id] && associations[id].indexOf('.') !== -1) {\n        const parts = associations[id].split('.');\n        page.navigationProperty = parts[parts.length - 1];\n    }\n    // Custom page's view object\n    evaluateCustomPageSettings(target, page, pageType);\n    setVariantManagmentAndNavigation(target, page);\n    updateUnhandledControllers(target);\n    // Get layout from route\n    const route = routing.routes.find((routingRoute) => routingRoute.name === id);\n    if (route) {\n        page.routePattern = route.pattern;\n        if ('layout' in route) {\n            page.defaultLayoutType = route.layout;\n        }\n    }\n\n    pages[id] = page;\n    // convert settings to config\n    const conversionParameters: ConversionParameters = {\n        target,\n        pageType,\n        manifest: importParameters.manifest,\n        schemas: importParameters.appSchemas,\n        logger: importParameters.logger,\n        page,\n        id,\n        templateType: importParameters.templateType,\n        extensionFiles: { views: importParameters.views, fragments: importParameters.fragments }\n    };\n    convertSettingsToConfig(conversionParameters);\n}\n\n/**\n * Determines the Pages(app.json) using routing configuration from manifest and creates the configuration for each page\n * @param {ImportAllConfigsParameters} importParameters - structure comprising all input parameters\n *\n * @returns a list of configs for all pages\n */\nexport function getPagesAndConfigs(importParameters: ImportAllConfigsParameters): v4.Pages {\n    const pages: v4.Pages = {};\n    const routing: v4.SapUi5RoutingV4 = importParameters.manifest[ManifestSection.ui5].routing as v4.SapUi5RoutingV4;\n\n    if (!routing || !routing.routes) {\n        const message = i18next.t('NOROUTING');\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message,\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5]\n            }\n        });\n        return pages;\n    }\n    associations = populateAssociations(routing.routes || []);\n    for (const id in routing.targets) {\n        getSinglePageAndConfig(routing, id, pages, importParameters);\n    }\n    return pages;\n}\n\n/**\n * Get the id of the page that is to open when the application is started.\n * @param routing UI5 routing configuration\n */\nexport function getHome(routing: v4.SapUi5RoutingV4): string | undefined {\n    let routeHome;\n    if (routing && routing.routes && routing.routes.length > 0) {\n        for (const route of routing.routes) {\n            //find the home, i.e. route which starts with ':?query:' pattern for List Report,\n            //resp. doesn't contain '/' for Form Page\n            if (route.pattern.startsWith(':?query:')) {\n                routeHome = route;\n                break;\n            } else if (route.pattern.indexOf('/') === -1) {\n                routeHome = route;\n                continue;\n            }\n        }\n        if (routeHome) {\n            return resolveTarget(routeHome.target);\n        } else {\n            return resolveTarget(routing.routes[0].target);\n        }\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Method which detects app settings from manifest.\n * Currently only some settings are detected - Flexible Column Layout, viewPath, viewType, path\n * @param routing UI5 routing configuration.\n * @return {AppSettings} Application settings.\n */\nexport function getSettings(routing: v4.SapUi5RoutingV4): AppSettings {\n    const config = routing?.config;\n    return config\n        ? {\n              ...(config.flexibleColumnLayout && { flexibleColumnLayout: config.flexibleColumnLayout }),\n              ...(config.viewType && { viewType: config.viewType }),\n              ...(config.viewPath && { path: config.viewPath }),\n              ...(config.path && { path: config.path })\n          }\n        : {};\n}\n\nexport function getPages(manifest: Manifest, targetName: string): v4.SapUiAppPagesV4 {\n    const routing = manifest[ManifestSection.ui5].routing as v4.SapUi5RoutingV4;\n    const pages: v4.SapUiAppPagesV4 = {};\n    if (routing) {\n        for (const id in routing.targets) {\n            const v4Page = routing.targets[id];\n            if (v4Page['name'] === targetName) {\n                pages[id] = v4Page as v4.SapUiAppPageV4;\n            }\n        }\n    }\n    return pages;\n}\n\nexport class V4AppProvider extends AppProvider {\n    public constructor(importParameters: ImportAllConfigsParameters) {\n        initI18n();\n        // Import settings\n        const appSettings = new AppSettings();\n        const schemaFile = getSchemaFilePath(SchemaType.Application);\n        const appSchema = importParameters.appSchemas[schemaFile.filename] as Definition;\n        importSettingsOfObject(appSettings, importParameters.manifest, appSchema.definitions.AppSettings, '', []);\n        super(\n            importParameters.manifest,\n            importParameters.appSchemas,\n            getHome(importParameters.manifest[ManifestSection.ui5].routing as v4.SapUi5RoutingV4),\n            getPagesAndConfigs(importParameters),\n            FioriElementsVersion.v4,\n            {\n                ...getSettings(importParameters.manifest[ManifestSection.ui5].routing as v4.SapUi5RoutingV4),\n                ...appSettings\n            },\n            importParameters.logger\n        );\n        this.unhandledControllers = unhandledControllers;\n    }\n}\n", "import { readFile } from 'fs';\nimport { join } from 'path';\nimport type { FioriElementsVersion } from '@sap/ux-specification-types';\nimport { SchemaType } from '@sap/ux-specification-types';\n\n/**\n * Return the path to the generic JSON schema\n * @param version - Fiori elements version\n * @param schemaType - Type of the schema, e.g Application, ListReport, ObjectPage, ...\n */\nexport const getPathToGenericSchema = (\n    version: FioriElementsVersion,\n    schemaType: SchemaType,\n    directory: string = __dirname\n): string | undefined => {\n    let fileName: string;\n    switch (schemaType) {\n        case SchemaType.Application: {\n            fileName = `${SchemaType.Application}${version.toUpperCase()}.json`;\n            break;\n        }\n        case SchemaType.FPMCustomPage: {\n            // Use building blocks generic schema for FPM custom pages\n            fileName = `${SchemaType.BuildingBlocks}Config.json`;\n            break;\n        }\n        default: {\n            fileName = `${schemaType}Config.json`;\n            break;\n        }\n    }\n    if (directory.endsWith('dist')) {\n        return join(directory, 'schemas', version, fileName);\n    } else if (directory.endsWith(join('specification', 'packages', 'specification'))) {\n        return join(directory, 'dist', 'schemas', version, fileName);\n    } else if (directory.endsWith(join('src', 'specification'))) {\n        return join(directory, '..', '..', 'dist', 'schemas', version, fileName);\n    } else if (directory.indexOf('node_modules') > -1) {\n        const moduleRoot = directory.substring(0, directory.indexOf('node_modules') + 12);\n        return join(moduleRoot, '@sap', 'ux-specification', 'dist', 'schemas', version, fileName);\n    }\n    return undefined;\n};\n\n/**\n * Read JSON schema from given path\n * @param path - path to schema file\n */\nconst readJsonSchema = async (path: string): Promise<JSON> => {\n    return new Promise((resolve, reject): void => {\n        readFile(path, { encoding: 'utf8' }, (err, data): void => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(JSON.parse(data));\n            }\n        });\n    });\n};\n\n/**\n * Return the generic schema for a given version and type\n * @param version - Fiori elements version, e.g. v2 or v4\n * @param schemaType - Type of the schema, e.g Application, ListReport, ObjectPage, ...\n * @returns the generic schema for the given Fiori Elements version and schema type\n */\nexport const getGenericSchema = async (version: FioriElementsVersion, schemaType: SchemaType): Promise<JSON> => {\n    try {\n        const path = getPathToGenericSchema(version, schemaType, __dirname);\n        return await readJsonSchema(path);\n    } catch (error) {\n        throw new Error(`No schema available for type: ${schemaType}, version: ${version}. Error was ${error.message}`);\n    }\n};\n", "import {\n    addLineItemsType,\n    addSelectionFields,\n    addTableColumnExtensions,\n    addEntityPropertiesToEnum,\n    addStandardHeaderActions\n} from './utils';\nimport { findListReportPageV2 } from '../import';\nimport {\n    DEFINITION_LINK_PREFIX,\n    addFieldsType,\n    addEnumForSingleTabVariant,\n    addEnumForMultiTabVariant,\n    addEnumForVariantEntitySet,\n    addEnumForFilterBarAnnotationPath,\n    addEnumFieldGroupAnnotationPath,\n    updatePropertyIndices,\n    createAnnotationPath\n} from '../../common';\nimport i18next from 'i18next';\nimport { ManifestSection, DefinitionName, LogSeverity, MANIFESTPATH, SchemaTag } from '@sap/ux-specification-types';\nimport type { v2 } from '@sap/ux-specification-types';\nimport { log } from '../../../extensionLogger';\nimport {\n    ANALYTICALTABLE,\n    GRIDTABLE,\n    INLINEDELETETABLE,\n    MULTISELECTTABLE,\n    TREETABLE,\n    LINEITEMTABLETYPES\n} from '../types';\nimport type { ConvertedMetadata, EntitySet, EntityType } from '@sap-ux/vocabularies-types';\nimport type { Definition } from 'typescript-json-schema';\nimport type { GenerateAppSchemaParameters } from '@sap/ux-specification-types';\n\nconst ROOT_PROPERTIES_ORDER: Array<keyof v2.ListReportConfigV2> = ['filterBar', 'table', 'footer'];\n\n/**\n * Adds the enum types for QuickVariant and QuickVariantX, based on the entity type annotations\n * @param {EntityType} entityType\n * @param {EntitySet} entitySet - current entity set of the page or view\n * @param {Definition} appSchema - app specific JSON schema\n * @param {ConvertedMetadata} oDataServiceAVT - combined service metadata, as returned by annotation vocabularies tools\n */\nexport function addEnumForVariantPaths(\n    entityType: EntityType,\n    entitySet: EntitySet,\n    appSchema: Definition,\n    oDataServiceAVT: ConvertedMetadata\n): void {\n    addEnumForSingleTabVariant(entityType, appSchema, 'QuickVariant');\n    addEnumForMultiTabVariant(appSchema, 'QuickVariantX', entitySet);\n    addEnumForVariantEntitySet(oDataServiceAVT, appSchema, 'QuickVariantX');\n}\n\n/**\n * Generates an app specific schema for the FE V2 Listreport from the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {object} genericSchema - generic JSON schema of a list report\n * @returns appSchema - the application specific JSON schema\n */\nexport function generateListReportSchemaV2(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchema: Definition\n): object {\n    const appSchema = JSON.parse(JSON.stringify(genericSchema)) as Definition;\n\n    appSchema.properties.table['anyOf']['0']['$ref'] = DEFINITION_LINK_PREFIX + MULTISELECTTABLE;\n    appSchema.properties.table['anyOf']['1']['$ref'] = DEFINITION_LINK_PREFIX + INLINEDELETETABLE;\n    appSchema.properties.table['anyOf']['2']['$ref'] = DEFINITION_LINK_PREFIX + TREETABLE;\n    appSchema.properties.table['anyOf']['3']['$ref'] = DEFINITION_LINK_PREFIX + ANALYTICALTABLE;\n    appSchema.properties.table['anyOf']['4']['$ref'] = DEFINITION_LINK_PREFIX + GRIDTABLE;\n\n    const responsiveTableMultiSelect = JSON.parse(\n        JSON.stringify(genericSchema.definitions.ResponsiveTableWithMultiSelect)\n    ) as Definition;\n    const responsiveTableInlineDelete = JSON.parse(\n        JSON.stringify(genericSchema.definitions.ResponsiveTableWithInlineDelete)\n    );\n    const treeTableDefinition = JSON.parse(JSON.stringify(genericSchema.definitions.TreeTable));\n    const analyticalTableDefinition = JSON.parse(JSON.stringify(genericSchema.definitions.AnalyticalTable));\n    const gridTableDefinition = JSON.parse(JSON.stringify(genericSchema.definitions.GridTable));\n\n    const lrLineItems = {\n        $ref: DEFINITION_LINK_PREFIX + DefinitionName.LineItems\n    };\n    responsiveTableMultiSelect.properties.columns = lrLineItems;\n    responsiveTableInlineDelete.properties.columns = lrLineItems;\n    treeTableDefinition.properties.columns = lrLineItems;\n    analyticalTableDefinition.properties.columns = lrLineItems;\n    gridTableDefinition.properties.columns = lrLineItems;\n\n    const lrToolBar = DEFINITION_LINK_PREFIX + DefinitionName.ToolBarLR;\n    appSchema.definitions[MULTISELECTTABLE] = responsiveTableMultiSelect;\n    appSchema.definitions[INLINEDELETETABLE] = responsiveTableInlineDelete;\n    appSchema.definitions[TREETABLE] = treeTableDefinition;\n    appSchema.definitions[ANALYTICALTABLE] = analyticalTableDefinition;\n    appSchema.definitions[GRIDTABLE] = gridTableDefinition;\n\n    LINEITEMTABLETYPES.forEach((tableType) => {\n        (appSchema.definitions[tableType] as Definition).properties.toolBar['$ref'] = lrToolBar;\n    });\n\n    const entityType = generateParameters.entitySet?.entityType;\n    if (!entityType) {\n        if (generateParameters.entitySet?.name) {\n            log(generateParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOENTITYTYPE4SET', { entitySetName: generateParameters.entitySet?.name })\n            });\n        }\n    } else {\n        // handle standard header actions\n        addStandardHeaderActions(appSchema);\n        //handle line items\n        const lineItemAnnotation = entityType?.annotations?.UI?.LineItem;\n        if (lineItemAnnotation) {\n            LINEITEMTABLETYPES.forEach((tableType) => {\n                appSchema.definitions[tableType][SchemaTag.annotationPath] = createAnnotationPath(\n                    entityType?.fullyQualifiedName,\n                    lineItemAnnotation.term,\n                    lineItemAnnotation.qualifier\n                );\n            });\n        }\n        addLineItemsType(appSchema, lineItemAnnotation, entityType);\n        //handle filter fields\n        const selectionFieldAnnotation = entityType?.annotations?.UI?.SelectionFields;\n        addSelectionFields(appSchema, selectionFieldAnnotation, entityType);\n\n        //add fields for createWithParameterDialog\n        addFieldsType(appSchema, entityType);\n\n        // add entityProperties to a enum, in this case MultiEdit -> ignoredFields\n        (appSchema.definitions.MultiEdit as Definition).properties.ignoredFields['items']['enum'] = [];\n        addEntityPropertiesToEnum(\n            (appSchema.definitions.MultiEdit as Definition).properties.ignoredFields['items']['enum'],\n            entityType\n        );\n\n        const pageKeys = [];\n        const v2Page = findListReportPageV2(\n            generateParameters.manifest[ManifestSection.generic].pages as v2.SapUiAppPagesV2,\n            pageKeys\n        );\n        if (!v2Page) {\n            log(generateParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOLR'),\n                location: {\n                    path: MANIFESTPATH,\n                    range: [ManifestSection.generic]\n                }\n            });\n            return appSchema;\n        }\n        addTableColumnExtensions(\n            appSchema,\n            entityType,\n            v2Page,\n            generateParameters.manifest,\n            generateParameters.fragments\n        );\n\n        addEnumForVariantPaths(entityType, generateParameters.entitySet, appSchema, generateParameters.serviceAVT);\n        addEnumForFilterBarAnnotationPath(entityType, appSchema, DefinitionName.ListReportFilterBar);\n        addEnumFieldGroupAnnotationPath(entityType, appSchema, DefinitionName.MultiEditV2);\n\n        //Delete generic definitions\n        delete appSchema.definitions.ResponsiveTableWithMultiSelect;\n        delete appSchema.definitions.ResponsiveTableWithInlineDelete;\n        delete appSchema.definitions.TreeTable;\n        delete appSchema.definitions.AnalyticalTable;\n        delete appSchema.definitions.GridTable;\n        delete appSchema.definitions.GenericColumns;\n        delete appSchema.definitions.TableColumnAction;\n        delete appSchema.definitions.ToolBar;\n        delete appSchema.definitions.Actions;\n        delete appSchema.definitions.GenericFooter;\n        delete appSchema.definitions.FieldPath;\n        delete appSchema.definitions.Share;\n    }\n    updatePropertyIndices(appSchema, ROOT_PROPERTIES_ORDER);\n    return appSchema;\n}\n", "import {\n    addLineItemsType,\n    addSelectionFields,\n    addStandardHeaderActions,\n    addTableColumnExtensions,\n    removeElementsFromEnum\n} from './utils';\nimport { findAnalyticalListPage } from '../import';\nimport { addFieldsType, DEFINITION_LINK_PREFIX, updatePropertyIndices } from '../../common';\nimport {\n    v2,\n    ManifestSection,\n    DefinitionName,\n    PropertyName,\n    LogSeverity,\n    MANIFESTPATH,\n    UIVOCABULARYALPHADOT,\n    SchemaTag\n} from '@sap/ux-specification-types';\nimport { addEnumForVariantPaths } from './listReport';\nimport type { Definition } from 'typescript-json-schema';\nimport type { GenerateAppSchemaParameters } from '@sap/ux-specification-types';\nimport i18next from 'i18next';\nimport { log } from '../../../extensionLogger';\nimport type { Chart, LineItem } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport type { EntityTypeAnnotations_UI } from '@sap-ux/vocabularies-types/vocabularies/UI_Edm';\n\nconst ROOT_PROPERTIES_ORDER: Array<keyof v2.AnalyticalListPageConfigV2> = [\n    'filterBar',\n    'keyPerformanceIndicators',\n    'chart',\n    'table',\n    'footer'\n];\n\n/**\n * Returns LineItem and Chart vizualizations from UI annotations based of qualifier.\n * @param {v2.SapUiAppPageV2} v2Page - actual page in the manifest\n * @param {EntityTypeAnnotations_UI} uIAnnotations - annotations of UI namespace of the given entityType\n */\nfunction getVisualizations(\n    v2Page: v2.SapUiAppPageV2,\n    uIAnnotations: EntityTypeAnnotations_UI\n): { lineItem?: LineItem; chart?: Chart } {\n    const qualifier = v2Page?.component?.settings?.qualifier;\n    const selectionPresentationVariant = uIAnnotations[`SelectionPresentationVariant#${qualifier}`];\n    const presentationVariant =\n        selectionPresentationVariant !== undefined ? selectionPresentationVariant['PresentationVariant'] : undefined;\n    const vizualizations = presentationVariant !== undefined ? presentationVariant['Visualizations'] : [];\n    let lineItem;\n    let chart;\n    for (const i in vizualizations) {\n        const vizualization = vizualizations[i];\n        if (vizualization.value.includes('@com.sap.vocabularies.UI.v1.LineItem')) {\n            const lineItemName = vizualization.value.replace(UIVOCABULARYALPHADOT, '');\n            lineItem = uIAnnotations[lineItemName];\n        } else if (vizualization.value.includes('@com.sap.vocabularies.UI.v1.Chart')) {\n            const chartName = vizualization.value.replace(UIVOCABULARYALPHADOT, '');\n            chart = uIAnnotations[chartName];\n        }\n    }\n    return {\n        lineItem,\n        chart\n    };\n}\n\n/**\n * Adds missing annotation path to chart definition.\n * @param {Definition} appSchema - app specific JSON schema\n * @param {Chart} chartAnnotation - chart annotation data\n */\nfunction addChart(appSchema: Definition, chartAnnotation: Chart): void {\n    const chartSettings = appSchema.definitions[DefinitionName.ChartSettings] as Definition;\n    const pathParts = chartAnnotation.fullyQualifiedName.split('@');\n    chartSettings[SchemaTag.annotationPath] = `/${pathParts[0]}/@${pathParts[1]}`;\n}\n\n/**\n * Generates an app specific schema out of the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param genericSchema - generic JSON schema of a list report\n * @param entityTypeName - the base entity type of the given page\n */\nexport function generateAnalyticalListReportSchemaV2(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchema: object\n): object {\n    const appSchema = JSON.parse(JSON.stringify(genericSchema)) as Definition;\n\n    (appSchema.properties[PropertyName.table] as Definition).anyOf[0]['$ref'] =\n        DEFINITION_LINK_PREFIX + 'ALPResponsiveTable<LineItems>';\n    const tableDefinitionResponsive = JSON.parse(\n        JSON.stringify(appSchema.definitions.ALPResponsiveTable)\n    ) as Definition;\n    tableDefinitionResponsive.properties['columns']['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.LineItems}`;\n    tableDefinitionResponsive.properties['toolBar']['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.ToolBarLR}`;\n    appSchema.definitions['ALPResponsiveTable<LineItems>'] = tableDefinitionResponsive;\n\n    appSchema.properties[PropertyName.table]['anyOf'][1]['$ref'] = `${DEFINITION_LINK_PREFIX}ALPGridTable<LineItems>`;\n    const tableDefinitionGrid = JSON.parse(JSON.stringify(appSchema['definitions']['ALPGridTable'])) as Definition;\n    tableDefinitionGrid.properties.columns['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.LineItems}`;\n    tableDefinitionGrid.properties.toolBar['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.ToolBarLR}`;\n    appSchema.definitions['ALPGridTable<LineItems>'] = tableDefinitionGrid;\n\n    appSchema.properties[PropertyName.table]['anyOf'][2]['$ref'] =\n        `${DEFINITION_LINK_PREFIX}ALPAnalyticalTable<LineItems>`;\n    const tableDefinitionAnalytical = JSON.parse(\n        JSON.stringify(appSchema.definitions['ALPAnalyticalTable'])\n    ) as Definition;\n    tableDefinitionAnalytical.properties.columns['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.LineItems}`;\n    tableDefinitionAnalytical.properties.toolBar['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.ToolBarLR}`;\n    appSchema.definitions['ALPAnalyticalTable<LineItems>'] = tableDefinitionAnalytical;\n\n    // Remove Custom Column non existing extensions - TreeTableColumnsExtension does not exist in ALP\n    removeElementsFromEnum(appSchema.definitions.TableColumnExtensionTypeV2['enum'], [\n        v2.TableColumnExtensionTypeV2.TreeTableColumnsExtension\n    ]);\n\n    const entityType = generateParameters.entitySet?.entityType;\n    if (!entityType) {\n        log(generateParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOENTITYTYPE4SET', { entitySetName: generateParameters.entitySet?.name })\n        });\n    } else {\n        // handle header actions\n        addStandardHeaderActions(appSchema);\n        const pageKeys = [];\n        const v2Page = findAnalyticalListPage(\n            generateParameters.manifest[ManifestSection.generic].pages as v2.SapUiAppPagesV2,\n            pageKeys,\n            generateParameters.logger\n        );\n\n        const annotations = entityType?.annotations?.UI;\n        const { lineItem, chart } = getVisualizations(v2Page, annotations);\n        const lineItemAnnotation = lineItem || annotations.LineItem;\n        const chartAnnotation = chart || annotations.Chart;\n\n        //handle line items\n        addLineItemsType(appSchema, lineItemAnnotation, entityType);\n\n        // handle chart item\n        if (chartAnnotation) {\n            addChart(appSchema, chartAnnotation);\n        }\n\n        //handle filter fields\n        const selectionFieldAnnotation = entityType?.annotations?.UI?.SelectionFields;\n        addSelectionFields(appSchema, selectionFieldAnnotation, entityType);\n\n        //add fields for createWithParameterDialog\n        addFieldsType(appSchema, entityType);\n\n        if (!v2Page) {\n            log(generateParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOLR'),\n                location: {\n                    path: MANIFESTPATH,\n                    range: [ManifestSection.generic]\n                }\n            });\n            return appSchema;\n        }\n\n        addTableColumnExtensions(\n            appSchema,\n            entityType,\n            v2Page,\n            generateParameters.manifest,\n            generateParameters.fragments\n        );\n        addEnumForVariantPaths(entityType, generateParameters.entitySet, appSchema, generateParameters.serviceAVT);\n\n        // Delete generic definitions that have been replaced\n        delete appSchema.definitions.ALPGridTable;\n        delete appSchema.definitions.ALPResponsiveTable;\n        delete appSchema.definitions.ALPAnalyticalTable;\n        delete appSchema.definitions.GenericColumns;\n        delete appSchema.definitions.TableColumnAction;\n        delete appSchema.definitions.ToolBar;\n        delete appSchema.definitions.GenericFooter;\n        delete appSchema.definitions.Actions;\n        delete appSchema.definitions.FieldPath;\n    }\n    updatePropertyIndices(appSchema, ROOT_PROPERTIES_ORDER);\n    return appSchema;\n}\n", "import type { Manifest, SapUi5OdataModel } from '@sap/ux-specification-types';\nimport { DEFINITION_LINK_PREFIX, addEnumToSchema } from '../../common';\nimport type { Definition } from 'typescript-json-schema';\n\n/**\n * Method returns array of card definition names.\n * @param genericSchema - Generic schema of Overview Page.\n *\n * @returns Array of definition names\n */\nexport function getCardDefinitionNames(genericSchema: object): Array<string> {\n    // Apply enum to all card properties\n    const properties = genericSchema['properties'];\n    const cardProperties =\n        (properties['cards'] &&\n            properties['cards']['additionalProperties'] &&\n            properties['cards']['additionalProperties']['anyOf']) ||\n        [];\n    return cardProperties.map((cardProperty: object) => {\n        // Resolve ref\n        const refParts = cardProperty['$ref'].split('/');\n        return refParts[refParts.length - 1];\n    });\n}\n\n/**\n * Defines and adds enum entries for 'model' property of Cards.\n * @param appSchema - the app specific schema that shall get enhanced\n * @param manifest - manifest.json of the app\n */\nexport function addModelsEnum(appSchema: Definition, manifest: Manifest): void {\n    const dataSources = (manifest && manifest['sap.app'] && manifest['sap.app'].dataSources) || {};\n    const serviceKeys = Object.keys(dataSources);\n    const models = (manifest && manifest['sap.ui5'] && manifest['sap.ui5'].models) || {};\n    let enumValues = [];\n    enumValues = enumValues.concat(\n        Object.keys(models).filter((model) => serviceKeys.includes((models[model] as SapUi5OdataModel).dataSource))\n    );\n\n    // Define enum\n    const definition = appSchema.definitions as Definition;\n    definition['CardModel'] = {\n        type: 'string'\n    };\n    addEnumToSchema(enumValues, definition['CardModel']);\n\n    // Apply enum to all card properties\n    const cards = getCardDefinitionNames(appSchema);\n    for (const card of cards) {\n        const property = definition[card]['properties']['model'];\n        delete property.type;\n        property['$ref'] = DEFINITION_LINK_PREFIX + 'CardModel';\n    }\n}\n\n/**\n * Generates an app specific schema out of the generic schema.\n * Generic types are replaced by information from the app manifest.\n *\n * @param genericSchema - generic JSON schema of an object page\n * @param manifest - manifest.json of the app\n *\n * @returns the app specific JSON schema\n */\nexport function generateOverviewPageSchemaV2(genericSchema: object, manifest: Manifest): object {\n    const appSchema = JSON.parse(JSON.stringify(genericSchema));\n    // schema validation for card name\n    appSchema['properties']['cards']['propertyNames'] = {\n        pattern: '^[a-zA-Z0-9_\\\\.\\\\-]+$'\n    };\n    // Enhance 'model' property with enum entries\n    addModelsEnum(appSchema, manifest);\n    return appSchema;\n}\n", "import { parseAndMergeAndConvert } from '../../common/utils';\nimport { generateObjectPageSchemaV2 } from './objectPage';\nimport { generateListReportSchemaV2 } from './listReport';\nimport { generateAnalyticalListReportSchemaV2 } from './analyticalListReport';\nimport { generateOverviewPageSchemaV2 } from './overviewPage';\nimport type { ExtensionLogger, GenerateAppSchemaParameters, FileData, Manifest } from '@sap/ux-specification-types';\nimport { LogSeverity, FioriElementsVersion, TemplateType } from '@sap/ux-specification-types';\nimport { getEntitySetByEntitySetName } from '../../common/importProject';\nimport i18next from 'i18next';\nimport { log } from '../../../extensionLogger';\nimport { initI18n } from '../../../i18n/i18n';\n\n/**\n * Common logic for LR and OP to prepare the generation\n * @param {FileData[]} annotations - list of all annotation files (file content plus URI as identifier)\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @param {object} manifest - manifest.json of the app\n * @param {FileData[]} [fragments] - Array with XML fragments.\n * @param {string} entitySet - the base entity set name of the given page\n *\n * @returns the filled intrface structure with all information for the schema generation\n */\nfunction prepareGenerationV2(\n    annotations: FileData[],\n    logger: ExtensionLogger,\n    manifest: Manifest,\n    fragments: FileData[],\n    entitySet: string,\n    templateType: TemplateType\n): GenerateAppSchemaParameters {\n    initI18n();\n\n    const serviceAVT = parseAndMergeAndConvert(annotations, logger);\n    const generateParameters: GenerateAppSchemaParameters = {\n        templateType,\n        fioriElementsVersion: FioriElementsVersion.v2,\n        manifest,\n        fragments,\n        serviceAVT,\n        logger\n    };\n    generateParameters.entitySet = getEntitySetByEntitySetName(entitySet, generateParameters.serviceAVT);\n    if (!generateParameters.entitySet) {\n        log(generateParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('ENTITYSETNOTFOUND', { entitySetName: entitySet })\n        });\n    }\n    return generateParameters;\n}\n\n/**\n * Generates an app specific schema out of the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n *\n * @param {object} genericSchema - generic JSON schema of an object page\n * @param {string} entitySet - the base entity set name of the given page\n * @param {FileData[]} annotations - list of all annotation files (file content plus URI as identifier)\n * @param {object} manifest - manifest.json of the app\n * @param {FileData[]} [fragments] - Array with XML fragments.\n * @param {ExtensionLogger} logger - Logger class for logging messages\n *\n * @returns the app specific JSON schema\n */\nexport function generateObjectPageInterfaceV2(\n    genericSchema: object,\n    entitySet: string,\n    annotations: FileData[],\n    manifest: Manifest,\n    fragments?: FileData[],\n    logger?: ExtensionLogger\n): object {\n    const generateParameters = prepareGenerationV2(\n        annotations,\n        logger,\n        manifest,\n        fragments,\n        entitySet,\n        TemplateType.ListReportObjectPageV2\n    );\n    return generateObjectPageSchemaV2(generateParameters, genericSchema);\n}\n\n/**\n * Generates the app specific schema of a list report out of the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n *\n * @param genericSchema - generic JSON schema of a list report\n * @param entitySet - the base entity set name of the given page\n * @param annotations - list of all annotation files (file content plus URI as identifier)\n * @param manifest - manifest.json of the app\n * @param {FileData[]} fragments - list of fragment files and their content\n * @param {ExtensionLogger} logger - Logger class for logging messages\n *\n * @returns the app specific JSON schema\n */\nexport function generateListReportInterfaceV2(\n    genericSchema: object,\n    entitySet: string,\n    annotations: FileData[],\n    manifest: Manifest,\n    fragments?: FileData[],\n    logger?: ExtensionLogger\n): object {\n    const generateParameters = prepareGenerationV2(\n        annotations,\n        logger,\n        manifest,\n        fragments,\n        entitySet,\n        TemplateType.ListReportObjectPageV2\n    );\n    return generateListReportSchemaV2(generateParameters, genericSchema);\n}\n\n/**\n * Generates the app specific schema of an analytical list page out of the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n *\n * @param genericSchema - generic JSON schema of a list report\n * @param entityType - the base entity type of the given page\n * @param annotations - list of all annotation files (file content plus URI as identifier)\n * @param manifest - manifest.json of the app\n * @param {FileData[]} fragments - list of fragment files and their content\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @param {string} appId - application ID\n *\n * @returns the app specific JSON schema\n */\nexport function generateAnalyticalListPageInterfaceV2(\n    genericSchema: object,\n    entitySet: string,\n    annotations: FileData[],\n    manifest: Manifest,\n    fragments?: FileData[],\n    logger?: ExtensionLogger\n): object {\n    const generateParameters = prepareGenerationV2(\n        annotations,\n        logger,\n        manifest,\n        fragments,\n        entitySet,\n        TemplateType.AnalyticalListPageV2\n    );\n    return generateAnalyticalListReportSchemaV2(generateParameters, genericSchema);\n}\n\n/**\n * Generates the app specific schema of an overview page\n * @param genericSchema - file content of the generic schema\n * @param manifest - manifest.json of the app\n *\n * @returns the generic schema, as equivalent to the app schema\n */\nexport function generateOVPInterfaceV2(genericSchema: object, manifest: Manifest): object {\n    return generateOverviewPageSchemaV2(genericSchema, manifest);\n}\n", "import i18next from 'i18next';\nimport type {\n    UI5Version,\n    ExportParametersV2,\n    ExportAnalyticalListPageV2Parameters,\n    ExportListReportV2Parameters,\n    ExportObjectPageV2Parameters,\n    ExportOverviewPageV2Parameters,\n    ExportListReportWithPathV2Parameters,\n    ExportV2WithPath\n} from '../../..';\nimport type {\n    ExportResults,\n    FileData,\n    FioriElementsVersion,\n    Manifest,\n    v2,\n    ExportPageUnitionType,\n    ExportOVPWithPathParameters\n} from '@sap/ux-specification-types';\nimport {\n    ChangeIndicator,\n    LogSeverity,\n    MANIFESTPATH,\n    ManifestSection,\n    PageTypeV2,\n    SchemaType,\n    SAPUI5_FRAGMENT_CLASS\n} from '@sap/ux-specification-types';\nimport type { ObjectPage } from './pages';\nimport { deleteEmptyStructure, getPageLayoutInformation, getReflectMetadata } from '../../common';\nimport { ApplicationV2, AppSettings } from '../application';\nimport { ensureManifestSectionByPathV2, transformPageToNewManifestV2 } from './manifest';\nimport { findListReportPageV2, findAnalyticalListPage, findObjectPageV2 } from '../import';\nimport { MetadataInstanceFactoryV2 as Factory } from './factory';\nimport { transferManifestEntriesAndFlexChange, transferManifestEntriesOVP } from './export';\nimport type { MetadataInstanceInterface } from '../../common/decoration/factory';\nimport type { TransferParameterTypeV2 } from '../types';\nimport { log } from '../../../extensionLogger';\nimport type { Definition } from 'typescript-json-schema';\n\n/**\n * Returns a fresh export results object with default values\n */\nconst getDefaultExportResult = (fragmentFiles?: FileData[]): ExportResults => ({\n    flexChanges: [],\n    manifest: {\n        [ManifestSection.generic]: { pages: {} }\n    } as unknown as Manifest,\n    manifestChangeIndicator: ChangeIndicator.NoChange,\n    fragments: fragmentFiles\n        ? fragmentFiles.map((frg) => {\n              return {\n                  dataSourceUri: frg.dataSourceUri,\n                  fileContent: frg.fileContent,\n                  changeIndicator: ChangeIndicator.NoChange\n              };\n          })\n        : []\n});\n\n/**\n * Instantiates the export classes for a single object page section\n * @param currentSection - Export class as an object, to be updated\n * @param sectionId - Current section ID\n * @param {MetadataInstanceInterface} factory - factory for creating metadata instances\n */\nexport function getClassesForSingleSection(\n    currentSection: object,\n    sectionId: string,\n    factory: MetadataInstanceInterface\n): void {\n    if (currentSection && sectionId === 'custom') {\n        // Custom sections\n        for (const index in currentSection) {\n            if (currentSection[index].className === SAPUI5_FRAGMENT_CLASS) {\n                currentSection[index] = factory.createInstance(\n                    PageTypeV2.ObjectPage,\n                    'ObjectPageCustomSectionFragment',\n                    currentSection[index]\n                );\n            } else {\n                currentSection[index] = factory.createInstance(\n                    PageTypeV2.ObjectPage,\n                    'ObjectPageCustomSectionView',\n                    currentSection[index]\n                );\n            }\n        }\n    }\n}\n\n/**\n * Recursive sub-function for handling subsections\n * @param currentSection - Object page section in config\n */\nexport function getSubsectionClasses(currentSection: object, factory: MetadataInstanceInterface): void {\n    if (currentSection?.['subsections']) {\n        let subSection: object;\n\n        for (const subSectionId in currentSection['subsections']) {\n            subSection = currentSection['subsections'][subSectionId];\n            getClassesForSingleSection(subSection, subSectionId, factory);\n            getSubsectionClasses(subSection, factory);\n        }\n    }\n}\n\n/**\n * Instantiates the export classes for the object page section\n * @param objectPageConfig - the given object page configuration\n * @param objectPage - the overall object page export class where the sections shall be included\n * @param {MetadataInstanceInterface} factory - factory for creating metadata instances\n */\nexport function getExportClassesForSections(\n    objectPageConfig: v2.ObjectPageConfigV2,\n    objectPage: ObjectPage,\n    factory: MetadataInstanceInterface\n): void {\n    // Main function\n    let section: object;\n\n    for (const sectionId in objectPageConfig.sections) {\n        section = objectPage.sections[sectionId];\n        getClassesForSingleSection(section, sectionId, factory);\n        getSubsectionClasses(section, factory);\n    }\n}\n\n/**\n * Determines and validates a v2 listreport page from manifest information\n * @param {string[]} pageKeys - list of page keys, to be filled by the find logic\n * @param {ExportListReportV2Parameters} exportParameters - import parameters for the export\n * @returns the v2 list report page\n */\nfunction findV2Page(pageKeys: string[], exportParameters: ExportListReportV2Parameters): v2.SapUiAppPageV2 | undefined {\n    const v2Page = findListReportPageV2(\n        exportParameters.manifest[ManifestSection.generic].pages as v2.SapUiAppPagesV2,\n        pageKeys\n    );\n    if (!v2Page) {\n        log(exportParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOLR'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n        return;\n    }\n    if (!v2Page.component) {\n        log(exportParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('COMPONENTNOTDEFINED', { pageName: PageTypeV2.ListReport }),\n            location: {\n                path: MANIFESTPATH\n            }\n        });\n        return;\n    }\n    if (!v2Page.component.settings) {\n        v2Page.component.settings = {};\n    }\n    return v2Page;\n}\n\n/**\n * Calculates the baseId of the app for flex changes\n * @param {object} config - content of the config file\n * @param {ExportPageUnitionType} exportParameters - all API parameters needed for the export\n * @returns the baseId for changes\n */\nexport function calculateBaseId(config: object, exportParameters: ExportPageUnitionType): string {\n    const pageLayoutInformation = getPageLayoutInformation(config);\n    return `${exportParameters.appId}::${pageLayoutInformation.id}::${exportParameters.page.entitySet}--`;\n}\n\n/**\n * Run through the given ListReport config and return respective manifest entry and flex changes\n * @param {ExportListReportV2Parameters} exportParameters - all API parameters needed for the export\n * @param ui5Version - SAP UI5 version\n * @param deletionRequest - if set to true, any manifest setting specified by entityPath gets deleted even if it comprises any unknown property\n *\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nfunction exportListReportPage(\n    exportParameters: ExportListReportV2Parameters | ExportListReportWithPathV2Parameters,\n    ui5Version: UI5Version,\n    deletionRequest = false\n): ExportResults {\n    const exportResults: ExportResults = getDefaultExportResult(exportParameters.fragments);\n    exportResults.manifest = JSON.parse(JSON.stringify(exportParameters.manifest));\n\n    const listReportConfig = exportParameters.page.config as v2.ListReportConfigV2;\n    if (listReportConfig && Object.keys(listReportConfig).length !== 0) {\n        const pageKeys: string[] = [];\n        const v2Page = findV2Page(pageKeys, exportParameters);\n        const factory = new Factory();\n        const pageInstance = factory.createPageInstance(PageTypeV2.ListReport, listReportConfig);\n\n        const transferParameters: TransferParameterTypeV2 = {\n            v2Page,\n            exportResults,\n            appId: exportParameters.appId,\n            baseId: calculateBaseId(pageInstance, exportParameters),\n            appSchema: exportParameters.jsonSchema,\n            ui5Version,\n            factory,\n            pageKeys,\n            pageType: PageTypeV2.ListReport,\n            logger: exportParameters.logger,\n            entityPathArray: exportParameters['entityPath'],\n            deletionRequest\n        };\n\n        transferManifestEntriesAndFlexChange(\n            transferParameters,\n            pageInstance,\n            [],\n            [],\n            exportParameters.jsonSchema //starting point for target definition\n        );\n    }\n\n    return exportResults;\n}\n\n/**\n * Run through the given AnalyticalListPage config and return respective manifest entry and flex changes\n * @param {ExportAnalyticalListPageV2Parameters} exportParameters - all API parameters needed for the export\n * @param ui5Version - SAP UI5 version\n * @param deletionRequest - if set to true, any manifest setting specified by entityPath gets deleted even if it comprises any unknown property\n *\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nfunction exportAnalyticalListPage(\n    exportParameters: ExportAnalyticalListPageV2Parameters,\n    ui5Version: UI5Version,\n    deletionRequest = false\n): ExportResults {\n    const analyticalListPageConfig = exportParameters.page.config;\n    const exportResults: ExportResults = getDefaultExportResult(exportParameters.fragments);\n    exportResults.flexChanges = [];\n    exportResults.manifest = JSON.parse(JSON.stringify(exportParameters.manifest));\n\n    //Instantiate base ID\n    const pageKeys: string[] = [];\n\n    const v2Page = findAnalyticalListPage(\n        exportParameters.manifest[ManifestSection.generic].pages as v2.SapUiAppPagesV2,\n        pageKeys,\n        exportParameters.logger\n    );\n    if (!v2Page) {\n        return exportResults;\n    }\n    if (!v2Page.component.settings) {\n        v2Page.component.settings = {};\n    }\n    exportResults.manifest = JSON.parse(JSON.stringify(exportParameters.manifest));\n\n    if (analyticalListPageConfig && Object.keys(analyticalListPageConfig).length !== 0) {\n        const factory = new Factory();\n        const pageInstance = factory.createPageInstance(PageTypeV2.AnalyticalListPage, analyticalListPageConfig);\n\n        const transferParameters: TransferParameterTypeV2 = {\n            v2Page,\n            exportResults,\n            appId: exportParameters.appId,\n            baseId: calculateBaseId(pageInstance, exportParameters),\n            appSchema: exportParameters.jsonSchema,\n            ui5Version,\n            factory,\n            pageKeys,\n            pageType: PageTypeV2.AnalyticalListPage,\n            logger: exportParameters.logger,\n            entityPathArray: exportParameters['entityPath'],\n            deletionRequest\n        };\n\n        transferManifestEntriesAndFlexChange(\n            transferParameters,\n            pageInstance,\n            [],\n            [],\n            exportParameters.jsonSchema //starting point for target definition\n        );\n    }\n\n    return exportResults;\n}\n\n/**\n * Run through the given ObjectPage config and return respective manifest entry and flex changes\n * @param {ExportObjectPageV2Parameters} exportParameters - all API parameters needed for the export\n * @param ui5Version - SAP UI5 version\n * @param deletionRequest - if set to true, any manifest setting specified by entityPath gets deleted even if it comprises any unknown property\n *\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nfunction exportObjectPage(\n    exportParameters: ExportObjectPageV2Parameters,\n    ui5Version: UI5Version,\n    deletionRequest = false\n): ExportResults {\n    const objectPageConfig = exportParameters.page.config as v2.ObjectPageConfigV2;\n    const entitySet = exportParameters.page.entitySet;\n    const exportResults: ExportResults = getDefaultExportResult(exportParameters.fragments);\n    exportResults.manifest = JSON.parse(JSON.stringify(exportParameters.manifest));\n\n    if (objectPageConfig) {\n        const pageKeys: string[] = [];\n        const v2Page: v2.SapUiAppPageV2 = findObjectPageV2(\n            exportParameters.manifest[ManifestSection.generic].pages as v2.SapUiAppPagesV2,\n            entitySet,\n            pageKeys\n        );\n        if (!v2Page) {\n            log(exportParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOOBJECTPAGE', { entitySetName: entitySet }),\n                location: {\n                    path: MANIFESTPATH,\n                    range: [ManifestSection.generic]\n                }\n            });\n            return exportResults;\n        }\n        const factory = new Factory();\n        const pageInstance = factory.createPageInstance(PageTypeV2.ObjectPage, objectPageConfig);\n        if (objectPageConfig.sections) {\n            getExportClassesForSections(objectPageConfig, pageInstance, factory);\n        }\n        if (Object.keys(objectPageConfig).length !== 0) {\n            const transferParameters: TransferParameterTypeV2 = {\n                v2Page,\n                exportResults,\n                appId: exportParameters.appId,\n                baseId: calculateBaseId(pageInstance, exportParameters),\n                appSchema: exportParameters.jsonSchema,\n                ui5Version,\n                factory,\n                pageKeys,\n                pageType: PageTypeV2.ObjectPage,\n                logger: exportParameters.logger,\n                entityPathArray: exportParameters['entityPath'],\n                deletionRequest\n            };\n\n            transferManifestEntriesAndFlexChange(\n                transferParameters,\n                pageInstance,\n                [],\n                [],\n                exportParameters.jsonSchema //starting point for target definition\n            );\n        }\n    }\n    return exportResults;\n}\n/**\n * Run through the given ObjectPage config and return respective manifest entry and flex changes\n * @param {ExportOverviewPageV2Parameters} exportParameters - all API parameters needed for the export\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nconst exportOverviewPage = (\n    exportParameters: ExportOverviewPageV2Parameters | ExportOVPWithPathParameters\n): ExportResults => {\n    const exportResults: ExportResults = getDefaultExportResult();\n    exportResults.manifest = JSON.parse(JSON.stringify(exportParameters.manifest));\n    const factory = new Factory();\n    const overviewPage = factory.createPageInstance(PageTypeV2.OverviewPage, exportParameters.page.config);\n\n    if (exportParameters.page.config && Object.keys(exportParameters.page.config).length !== 0) {\n        transferManifestEntriesOVP(\n            overviewPage,\n            exportResults,\n            exportParameters.jsonSchema,\n            exportParameters.jsonSchema,\n            factory,\n            [],\n            exportParameters['entityPath']\n        );\n    }\n\n    return exportResults;\n};\n\n/**\n * Exports a Fiori Element V2 application.\n * It converts the entries of the input application (config file) to corresponding manifest settings and flex changes\n * @param application - content of the config file of an application\n * @param manifest - app descriptor (manifest.json)\n * @param jsonSchema - application specific schema\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nconst exportApplicationV2 = (application: ApplicationV2, manifest: object, jsonSchema: Definition): ExportResults => {\n    const exportResults: ExportResults = getDefaultExportResult();\n    exportResults.manifest = JSON.parse(JSON.stringify(manifest));\n\n    //transfer application settings\n    const applicationV2 = Object.assign(new ApplicationV2(), application);\n    applicationV2.settings = Object.assign(new AppSettings(), application['settings']);\n    for (const key in jsonSchema.definitions.AppSettings['properties']) {\n        const syncRule = getReflectMetadata(applicationV2.settings, key);\n        if (syncRule && syncRule.manifest) {\n            const path = syncRule.manifest.path();\n            const manifestSection = ensureManifestSectionByPathV2(exportResults.manifest, path);\n            if (application.settings && application.settings[key] !== undefined) {\n                manifestSection[key] = application.settings[key];\n            } else {\n                delete manifestSection[key];\n                deleteEmptyStructure(exportResults.manifest, path, false);\n            }\n        }\n    }\n    // transfer pages and routings\n    const manifestPages = exportResults.manifest[ManifestSection.generic]?.pages;\n    if (manifestPages && application['pages']) {\n        transformPageToNewManifestV2(application.home, application['pages'], Object.values(manifestPages)[0] as object);\n    }\n    return exportResults;\n};\n\n/**\n * Exports a Fiori Element V2 page.\n * It converts the entries of the input page (config file) to corresponding manifest settings and flex changes\n * @param exportParametersV2 - list of parameters for the export; the list varies for the different schema types\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nexport function exportPageV2(\n    exportParametersV2: ExportParametersV2[FioriElementsVersion.v2],\n    ui5Version: UI5Version\n): ExportResults | undefined {\n    if (exportParametersV2[SchemaType.ListReport]) {\n        return exportListReportPage(exportParametersV2[SchemaType.ListReport], ui5Version);\n    } else if (exportParametersV2[SchemaType.ObjectPage]) {\n        return exportObjectPage(exportParametersV2[SchemaType.ObjectPage], ui5Version);\n    } else if (exportParametersV2[SchemaType.OverviewPage]) {\n        return exportOverviewPage(exportParametersV2[SchemaType.OverviewPage]);\n    } else if (exportParametersV2[SchemaType.Application]) {\n        const { application, manifest, jsonSchema } = exportParametersV2[SchemaType.Application];\n        return exportApplicationV2(application, manifest, jsonSchema);\n    } else if (exportParametersV2[SchemaType.AnalyticalListPage]) {\n        return exportAnalyticalListPage(exportParametersV2[SchemaType.AnalyticalListPage], ui5Version);\n    }\n}\n\n/**\n * Exports the config change of a single entity of the config, as indicated by an entityPath\n * It converts the entries of the input page (config file) to corresponding manifest settings and flex changes\n * @param exportParametersV2 - list of parameters for the export; the list varies for the different schema types\n * @param ui5Version - the minUi5Version of the app\n * @param deletionRequest - if set to true, any manifest setting specified by entityPath gets deleted even if it comprises any unknown property\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nexport function exportConfigEntityByPathV2(\n    exportParametersV2: ExportV2WithPath[FioriElementsVersion.v2],\n    ui5Version: UI5Version,\n    deletionRequest = false\n): ExportResults | undefined {\n    if (exportParametersV2[SchemaType.ListReport]) {\n        return exportListReportPage(exportParametersV2[SchemaType.ListReport], ui5Version, deletionRequest);\n    } else if (exportParametersV2[SchemaType.ObjectPage]) {\n        return exportObjectPage(exportParametersV2[SchemaType.ObjectPage], ui5Version, deletionRequest);\n    } else if (exportParametersV2[SchemaType.OverviewPage]) {\n        return exportOverviewPage(exportParametersV2[SchemaType.OverviewPage]);\n    } else if (exportParametersV2[SchemaType.AnalyticalListPage]) {\n        return exportAnalyticalListPage(exportParametersV2[SchemaType.AnalyticalListPage], ui5Version, deletionRequest);\n    }\n}\n", "import type { TransferParameterTypeV4 } from './types';\nimport { generateCustomExtension } from '../../../api';\nimport type { GenerateCustomExtensionParams, ExtensionLogger } from '@sap/ux-specification-types';\nimport { CustomExtensionType, PropertyName, LogSeverity } from '@sap/ux-specification-types';\nimport type * as fpmWriter from '@sap-ux/fe-fpm-writer';\nimport { UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport i18next from 'i18next';\nimport { log } from '../../../extensionLogger';\nimport { extractLastIdPart } from './utils';\n\n/**\n * Function creates a new custom column with aid of the FPM writer\n * @param propertyDefinition - Definition of the given property in JSON schema\n * @param breadcrumbs - array of sequence of properties that we are currently processing.\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param configObject - current object in the configuration\n * @returns {boolean} - true if a new column was created\n */\nexport function createNewCustomColumn(\n    propertyKey: string,\n    transferParameters: TransferParameterTypeV4,\n    configObject: { [key: string]: any },\n    logger: ExtensionLogger,\n    breadcrumbs: string[]\n): boolean {\n    if (!configObject) {\n        return false;\n    }\n    if (!transferParameters.appRootPath) {\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOBASEPATH', { appId: transferParameters.appId })\n        });\n        return false;\n    }\n    if (configObject.template && configObject.template.indexOf(propertyKey) === -1) {\n        //Existing fragment which does not fit to FPM writer syntax\n        return false;\n    }\n    const sectionsIndex = breadcrumbs.lastIndexOf(PropertyName.sections);\n    const sectionId = sectionsIndex > -1 ? extractLastIdPart(breadcrumbs[sectionsIndex + 1]) : undefined;\n    const entityInManifest = sectionId ? sectionId.replace(/::/g, '/') : `@${UIAnnotationTerms.LineItem}`;\n    const handler = configObject.eventHandler === true ? true : undefined;\n\n    const data: fpmWriter.CustomTableColumn = {\n        target: transferParameters.pageNameArray[0],\n        targetEntity: entityInManifest,\n        position: configObject.position,\n        name: propertyKey,\n        ...(configObject.header && { header: configObject.header }),\n        ...(configObject.width && { width: configObject.width }),\n        ...(configObject.availability && { availability: configObject.availability }),\n        ...(handler && { eventHandler: handler })\n    };\n    const columnApiParams: GenerateCustomExtensionParams = {\n        customExtension: CustomExtensionType.CustomColumn,\n        basePath: transferParameters.appRootPath,\n        data\n    };\n    generateCustomExtension(columnApiParams);\n    return true;\n}\n", "import type { v4 } from '@sap/ux-specification-types';\n\n/**\n * Method updates passed dependency lib in passed manifest.\n * @param {SapUi5V4} manifest - Manifest \"sap.ui5\" object.\n * @param {string} name - Library name to check.\n * @param {boolean} [add=true] - Add or remove library.\n */\nexport function updateDependencyLib(manifest: v4.SapUi5V4, name: string, add = true): void {\n    if (add) {\n        if (!manifest.dependencies) {\n            manifest.dependencies = {};\n        }\n        if (!manifest.dependencies.libs) {\n            manifest.dependencies.libs = {};\n        }\n        if (manifest.dependencies.libs[name] === undefined) {\n            manifest.dependencies.libs[name] = {};\n        }\n    } else if (manifest.dependencies && manifest.dependencies.libs && manifest.dependencies.libs[name] !== undefined) {\n        delete manifest.dependencies.libs[name];\n    }\n}\n\n/**\n * Looks for <...> pattern in the input string; if found, extracts this last part of the string\n * @param longId - schema ID in its long format\n * @returns the converted ID\n */\nexport function extractLastIdPart(longId: string): string {\n    let lastIdPart = longId;\n    if (longId.indexOf('<') > -1) {\n        lastIdPart = longId.substring(longId.indexOf('<') + 1, longId.length - 1);\n        const navPart = longId.substring(0, longId.lastIndexOf('::')).replace(/::/g, '/');\n        if (navPart) {\n            lastIdPart = `${navPart}/${lastIdPart}`;\n        }\n    }\n    return lastIdPart;\n}\n", "import type { SapUi5RoutingRoute, SapUi5RoutingTarget, SapUi5RoutingTargetSettings } from '@sap/ux-specification-types';\nimport { v4, ManifestSection, PageTypeV4 } from '@sap/ux-specification-types';\n\nexport enum Constants {\n    OptionalQuery = ':?query:',\n    Component = 'sap/fe/AppComponent',\n    Namespace = 'sap.fe.templates'\n}\n\n/**\n * Transform Pages(from app.json) to UI5 routing configuration(manifest.json)\n * @param routing UI5 routing configuration\n */\nconst createRoute = (pattern: string, name: string, target: string): SapUi5RoutingRoute => {\n    return {\n        pattern,\n        name,\n        target\n    };\n};\n\n/**\n * Method returns SapUi5RoutingTargetBase.options object.\n * @param {object} [property] - Entity set or any other property in object form {'entitySet': 'value'}.\n * @param {string} [variantManagement] - Variant management string.\n * @return {{settings: SapUi5RoutingTargetSettings}} Returns object for SapUi5RoutingTargetBase.options.\n */\nconst createTargetOption = (\n    property?: object,\n    variantManagement?: string\n): {\n    settings: SapUi5RoutingTargetSettings;\n} => {\n    return {\n        settings: {\n            ...property,\n            ...(variantManagement && { variantManagement }),\n            navigation: {}\n        }\n    };\n};\n\nfunction initializeRouting(manifestRouting: v4.SapUi5RoutingV4): v4.SapUi5RoutingV4 {\n    let routing: v4.SapUi5RoutingV4 = manifestRouting;\n    if (!routing) {\n        routing = {\n            routes: [],\n            targets: {}\n        };\n    } else {\n        if (!routing.routes) {\n            routing.routes = [];\n        }\n        if (!routing.targets) {\n            routing.targets = {};\n        }\n    }\n    return routing;\n}\n\nfunction setTargetOptions(target: v4.RoutingTargetOptions, keyInManifest: string, navigationEntry: object) {\n    if (!target.options.settings.navigation) {\n        target.options.settings.navigation = {};\n    }\n    target.options.settings.navigation[keyInManifest] = {\n        detail: navigationEntry\n    };\n}\n\n/**\n * Calculates the query pattern for a new page's route at the manifest.\n * If the route pattern components of a parent page (parentKeys) are known, the key names are taken over from the parent.\n * Otherwise, the calculation starts from scratch, following the pattern 'key' + navigation level index\n * @param parts - array of strings, each entry represents one navigation\n * @param targetPage - the new page that is being navigated to\n * @param parentKeys - object comprising key = entity and value = key name for each part of the parent page's route pattern\n * @returns the query pattern for the new page\n */\nfunction calculateQueryPattern(parts: string[], targetPage: v4.Page, parentKeys: object): string {\n    let pattern = '';\n\n    parts.forEach((part, index) => {\n        let key = '';\n        if (targetPage && targetPage.pageType !== PageTypeV4.ListReport) {\n            // consider existing keys of parent pages\n            if (parentKeys[part]) {\n                key = `({${parentKeys[part]}})`;\n            } else {\n                // keys should be like - 'key', 'key2', 'key3'\n                key = `({key${index ? index + 1 : ''}})`;\n            }\n        }\n        pattern += `${pattern ? '/' : ''}${part}${key}`;\n    });\n    return `${pattern}${Constants.OptionalQuery}`;\n}\n\n/**\n * Recursive function to determine all parts to combine the query pattern, by traversing the routing navigation links\n * @param parts - list of query parts, to be enhanced per call\n * @param navKey - the key of the given routing navigation entry\n * @param pages - list of all pages\n * @param pageId - key of the current page\n * @param contextPath - contextPath of the page\n */\nfunction fillNavigationParts(\n    parts: string[],\n    navKey: string,\n    pages: v4.Pages,\n    pageId: string,\n    contextPath?: string\n): void {\n    if (contextPath) {\n        parts.push(...contextPath.split('/'));\n        parts.shift();\n        return;\n    }\n    parts.unshift(navKey);\n    let referringPage;\n    for (const key in pages) {\n        if (typeof pages[key].navigation === 'object') {\n            const pageKey = Object.keys(pages[key].navigation).find(\n                (index) => pages[key].navigation[index]['route'] === pageId\n            );\n            if (pageKey) {\n                navKey = pageKey;\n                referringPage = pages[key];\n            }\n        }\n        if (referringPage) {\n            fillNavigationParts(parts, navKey, pages, key);\n            return;\n        }\n    }\n}\n\n/**\n * Determines the key names of a parent routing pattern\n * @param parentPattern - parent routing pattern\n * @returns an object with entries having key = entity and value = the key name in the pattern\n */\nfunction fillParentKeys(parentPattern: string): object {\n    const result = {};\n    const patternParts = parentPattern?.split('/');\n    if (patternParts && patternParts.length > 0) {\n        patternParts.forEach((part) => {\n            const entity = part.substring(0, part.indexOf('({'));\n            const keyName = part.substring(part.indexOf('({') + 2, part.indexOf('})'));\n            result[entity] = keyName;\n        });\n    }\n    return result;\n}\n\n/**\n * Updates the route navigation entries of a page\n * @param page - the current page\n * @param pages - all pages in manifest\n * @param target - the given routing target\n * @param routing - the current routing\n * @param pageId - key of the page in manifest\n */\nfunction handlePageNavigation(\n    page: v4.PageV4,\n    pages: v4.Pages,\n    target: v4.RoutingTargetOptions,\n    routing: v4.SapUi5RoutingV4,\n    pageId: string\n) {\n    for (const keyInManifest in page.navigation) {\n        const navigationEntry = page.navigation[keyInManifest];\n        const navPage = pages[navigationEntry['route']];\n        setTargetOptions(target, keyInManifest, navigationEntry as object);\n        if (\n            navigationEntry?.['route'] &&\n            !routing.routes.some((routingRoute) => routingRoute.name === navigationEntry['route'])\n        ) {\n            const parts: string[] = [];\n            fillNavigationParts(parts, keyInManifest, pages, pageId, navPage?.contextPath);\n            const parentKeys = fillParentKeys(page.routePattern);\n            const pattern = calculateQueryPattern(parts, navPage, parentKeys);\n            // Make sure there no route duplication\n            routing.routes.push(createRoute(pattern, navigationEntry['route'], navigationEntry['route']));\n        }\n    }\n}\n\n/**\n * Deletes obsolete pages from manifest\n * @param {v4.SapUi5RoutingV4} routing - the routing section in manifest\n * @param pages - given pages' definition in the config\n */\nfunction removeDeletedPages(routing: v4.SapUi5RoutingV4, pages: v4.Pages): void {\n    for (const id in routing.targets) {\n        if (!pages || !pages[id]) {\n            // Remove target\n            delete routing.targets[id];\n            // Remove routes\n            const index = routing.routes.findIndex((route) => route.name === id);\n            if (index !== -1) {\n                routing.routes.splice(index, 1);\n            }\n        }\n    }\n}\n\n/**\n * Exports contextPath to manifest if defined, else the entitySet\n * @param {v4.Page} page - the given page definition in config\n * @param {v4.RoutingTargetOptions} target - the corresponding routing target section in manifest\n */\nfunction transferEntitySetandContextPath(page: v4.PageV4, target: v4.RoutingTargetOptions): void {\n    if (page.contextPath) {\n        if (!target.options) {\n            target.options = createTargetOption({ contextPath: page.contextPath }, page.variantManagement);\n        }\n        target.options.settings.contextPath = page.contextPath;\n    } else {\n        delete target.options?.settings?.contextPath;\n    }\n    if (page.entitySet) {\n        if (!target.options) {\n            target.options = createTargetOption({ entitySet: page.entitySet }, page.variantManagement);\n        }\n        if (!page.contextPath || target.options.settings.entitySet) {\n            target.options.settings.entitySet = page.entitySet;\n        }\n    } else {\n        delete target.options?.settings?.entitySet;\n    }\n}\n\n/**\n * Detects removed custom sections and deletes removed custom sections from manifest.\n * @param {v4.Page} page - the given page definition in config\n * @param {v4.RoutingTargetOptions} target - the corresponding routing target section in manifest\n */\nfunction deleteRemovedCustomSections(page: v4.Page, target: v4.RoutingTargetOptions): void {\n    // Delete removed custom sections\n    const manifestSections = target?.options?.settings?.content?.body?.sections;\n    if (page.pageType === PageTypeV4.ObjectPage && manifestSections && typeof manifestSections === 'object') {\n        const objectPage = page.config as v4.ObjectPageConfigV4;\n        const customSections = Array.isArray(objectPage?.sections?.custom) ? objectPage.sections.custom : [];\n        const latestIds = customSections.map((section: v4.ObjectPageCustomSectionFragment) => section.id);\n        const existingIds = Object.keys(manifestSections);\n        if (latestIds) {\n            for (const id of existingIds) {\n                if (!latestIds.includes(id) && !('subSections' in manifestSections[id])) {\n                    // Delete removed custom section\n                    delete manifestSections[id];\n                }\n            }\n        }\n    }\n}\n\n/**\n * Updates the layout of a routing route in manifest, based on config definition\n * @param {v4.SapUi5RoutingV4} routing - the routing section in manifest\n * @param {string} id - name of the routing route\n * @param {v4.Page} page - the given page definition in config\n */\nfunction updateRouteLayout(routing: v4.SapUi5RoutingV4, id: string, page: v4.PageV4): void {\n    const route = routing.routes.find((routingRoute) => routingRoute.name === id);\n    if (route) {\n        if (page.defaultLayoutType) {\n            route.layout = page.defaultLayoutType;\n        } else {\n            delete route.layout;\n        }\n    }\n}\n\n/**\n * Fills target with page information\n * @param page current page\n * @param target routing target to be filled\n * @param id page id\n * @param pages all pages of app.json\n * @returns filled target\n */\nfunction fillTarget(\n    page: v4.Page,\n    target: v4.RoutingTargetOptions,\n    id: string,\n    pages: v4.Pages\n): v4.RoutingTargetOptions {\n    if (page.pageType && ![PageTypeV4.CustomPage, PageTypeV4.FPMCustomPage].includes(page.pageType)) {\n        target = {\n            ...target,\n            ...({\n                type: 'Component',\n                id: target?.['id'] || id,\n                name: `${Constants.Namespace}.${pages[id].pageType}`\n            } as SapUi5RoutingTarget)\n        };\n    } else if (\n        page.view &&\n        !!target &&\n        ((target as v4.SapUi5RoutingTargetCustomPageV4).viewName ||\n            (target as v4.SapUi5RoutingTargetCustomPageV4).viewId)\n    ) {\n        // Existing old syntax for Custom Page\n        target = {\n            ...target,\n            ...({\n                viewId: page.view.id,\n                viewName: page.view.name,\n                path: page.view.path,\n                viewType: page.view.viewType\n            } as v4.SapUi5RoutingTargetCustomPageV4)\n        };\n    } else if (page.view) {\n        target = {\n            ...target,\n            ...({\n                type: 'Component',\n                id: page.view.id,\n                name: page.view.template || v4.FE_TEMPLATE_V4_CUSTOM_PAGE,\n                viewType: page.view.viewType,\n                options: {\n                    settings: {\n                        viewName: page.view.name\n                    }\n                }\n            } as v4.SapUi5RoutingTargetCustomPageV4New)\n        };\n    }\n    return target;\n}\n\n/**\n * Transform Pages(from app.json) to UI5 routing configuration (manifest.json)\n * @param routing UI5 routing configuration\n */\nexport function transformRoutingV4(homePage: string, pages: v4.PagesV4, manifest: object): v4.SapUi5RoutingV4 {\n    const routing = initializeRouting(manifest[ManifestSection.ui5].routing as v4.SapUi5RoutingV4);\n\n    // add default route\n    if (homePage && !routing.routes.some((route) => route.name === homePage)) {\n        // Make sure there no route duplication\n        routing.routes.push(createRoute(Constants.OptionalQuery, homePage, homePage));\n    }\n    for (const id in pages) {\n        let target: v4.RoutingTargetOptions;\n        const page = pages[id];\n        if (routing.targets[id]) {\n            target = routing.targets[id];\n        }\n        target = fillTarget(page, target, id, pages);\n        transferEntitySetandContextPath(page, target);\n        deleteRemovedCustomSections(page, target);\n        if (target && !page.controlAggregation) {\n            delete target.contextPattern;\n            delete target.controlAggregation;\n        }\n        if (target?.options?.settings?.navigation) {\n            // We handle page 'navigation' from scratch - clear 'navigation' before handling\n            target.options.settings.navigation = {};\n        }\n        // Handle page 'navigation'\n        handlePageNavigation(page, pages, target, routing, id);\n        // Update associated route with layout information\n        updateRouteLayout(routing, id, page);\n\n        routing.targets[id] = target;\n    }\n    // Remove deleted pages\n    removeDeletedPages(routing, pages);\n    return routing;\n}\n", "import type { SapUi5RootView } from '@sap/ux-specification-types';\nimport {\n    v4,\n    FIORI_FCL_ROOT_ID,\n    FIORI_FCL_ROOT_VIEW_NAME,\n    ViewTypes,\n    FlexibleColumnLayoutAggregations\n} from '@sap/ux-specification-types';\nimport type { ApplicationV4 } from '../application';\nimport { Constants as V4Constants } from './manifest';\nimport { updateDependencyLib } from './utils';\n\n// Aggregations mapping for target levels\n// 0 - BeginColumnPages, 1 - MidColumnPages, 2 - EndColumnPages\nconst fclAggregations = [\n    FlexibleColumnLayoutAggregations.BeginColumnPages,\n    FlexibleColumnLayoutAggregations.MidColumnPages,\n    FlexibleColumnLayoutAggregations.EndColumnPages\n];\n\n/**\n * Recursive method which updates manifest routing to enable FCL support.\n * Method contains some parts like setting 'ThreeColumnsEndExpanded' to 2st->3rd page navigation - it was requested for demo purposes.\n * @param {SapUi5} manifestUI5 - SAPUI5 manifest data.\n * @param {Application} app - Project application.\n * @param {string} pageName - Page name which should be used to apply FCL.\n * @param {Array<string>} targetPages - Current array of target pages to join in.\n * For example to display two column FCL we have - ['1stLevelPage', '2ndLevelPage']\n * @param {number} level - Current navigation level.\n */\nconst applyFCLRouting = (\n    manifestUI5: v4.SapUi5V4,\n    app: ApplicationV4,\n    pageName: string,\n    targetPages: Array<string> = [],\n    level = 0\n): void => {\n    const routeOfPage = manifestUI5.routing.routes.find((route) => {\n        return route.name === pageName;\n    });\n    if (!routeOfPage) {\n        return;\n    }\n    // Update route\n    if (typeof routeOfPage.target === 'string') {\n        // 1-3 level navigation is placed like [`1st Page`, `2nd Page`, `3rd Page`]\n        // 4+ level navigation is placed as fullscreen - [`4th+n Page`]\n        routeOfPage.target = level <= 2 ? [...targetPages, routeOfPage.target] : [routeOfPage.target];\n    }\n    // Update target\n    const target = manifestUI5.routing.targets[pageName];\n    const page = app.pages?.[pageName];\n    if (!page) {\n        return;\n    }\n    if ('controlAggregation' in page) {\n        target.controlAggregation = page.controlAggregation;\n    } else if (fclAggregations[level]) {\n        target.controlAggregation = fclAggregations[level];\n    } else {\n        target.controlAggregation = FlexibleColumnLayoutAggregations.EndColumnPages;\n    }\n    const pattern = routeOfPage.pattern.replace(V4Constants.OptionalQuery, '');\n    if (pattern) {\n        target.contextPattern = pattern.startsWith('/') ? pattern : `/${pattern}`;\n    } else {\n        target.contextPattern = '';\n    }\n    // Loop further pages\n    if (page.navigation) {\n        level++;\n        for (const pageId in page.navigation) {\n            applyFCLRouting(manifestUI5, app, page.navigation[pageId]['route'], routeOfPage.target, level);\n        }\n    }\n};\n\n/**\n * Method enables FCL support by updating Manifest.\n * @param {SapUi5} manifestUI5 - SAPUI5 manifest data.\n * @param {Application} app - Project application.\n */\nconst enableFcl = (manifestUI5: v4.SapUi5V4, app: ApplicationV4): void => {\n    // Apply config with router class\n    manifestUI5.routing.config.routerClass = v4.FIORI_FCL_ROUTER_CLASS;\n    // Make changes in\n    applyFCLRouting(manifestUI5, app, app.home);\n    // Update 'rootView'\n    const rootView: SapUi5RootView = {\n        viewName: FIORI_FCL_ROOT_VIEW_NAME,\n        type: ViewTypes.XML,\n        async: true,\n        id: FIORI_FCL_ROOT_ID\n    };\n    manifestUI5.rootView = manifestUI5.rootView ? { ...manifestUI5.rootView, ...rootView } : rootView;\n    // Added in scope of #523. Starting from SAPUI5 1.83+ - we need make sure that dependency to `sap.f` library is added to manifest.\n    updateDependencyLib(manifestUI5, v4.SAPUI5_DEPENDENCY_LIB_SAP_F);\n};\n\n/**\n * Method disables FCL support by updating Manifest.\n * @param {SapUi5} manifestUI5 - SAPUI5 manifest data.\n */\nconst disableFcl = (sapui5: v4.SapUi5V4): void => {\n    if (sapui5.rootView && sapui5.rootView.viewName === FIORI_FCL_ROOT_VIEW_NAME) {\n        // FCL is disabled and rootview name is equal to FCL ROOT VIEW, then remove rootview\n        delete sapui5.rootView;\n    }\n    if (sapui5.routing) {\n        if (sapui5.routing.config && sapui5.routing.config.routerClass === v4.FIORI_FCL_ROUTER_CLASS) {\n            // Remove routing class\n            delete sapui5.routing.config.routerClass;\n        }\n        const routes = sapui5.routing.routes || [];\n        for (const route of routes) {\n            if (route.target && Array.isArray(route.target)) {\n                // In 'applyFCLRouting' we set property 'target' as Array\n                // When FCL is disabled, property 'target' should not be an array anymore - resetting back.\n                route.target = route.name;\n            }\n        }\n    }\n};\n\n/**\n * Method updates Manifest depending on is FCL ON or OFF.\n * @param {SapUi5} manifestUI5 - SAPUI5 manifest data.\n * @param {Application} app - Project application.\n */\nexport const updateFcl = (manifestUI5: v4.SapUi5V4, app: ApplicationV4): void => {\n    if (app.settings && app.settings.flexibleColumnLayout) {\n        enableFcl(manifestUI5, app);\n    } else {\n        disableFcl(manifestUI5);\n    }\n};\n", "import type { ObjectPage } from './pages';\nimport type { ObjectPageCustomSectionFragment } from './controls';\nimport { createNewCustomColumn } from './exportCustomColumn';\nimport type { NextDefinition } from '../../common';\nimport {\n    getReflectMetadata,\n    getChildId,\n    getPageLayoutInformation,\n    getManifestSectionByPathV4,\n    DEFINITION_LINK_PREFIX,\n    findMatchingKeysByAdditionalProperties,\n    setManifestSectionByPathV4,\n    prepareValueForPath,\n    arrayIncludes\n} from '../../common';\nimport { ApplicationV4, AppSettings, getSettingsPathForPage } from '../application';\nimport { transformRoutingV4 } from './manifest';\nimport { updateFcl } from './flexibleColumnLayout';\nimport {\n    DefinitionName,\n    FacetTitlePrefix,\n    PropertyName,\n    SchemaTag,\n    PageTypeV2,\n    PageTypeV4,\n    SchemaType,\n    ManifestSection,\n    TemplateType,\n    UIVOCABULARY,\n    defaultExportResult\n} from '@sap/ux-specification-types';\nimport type {\n    FioriElementsVersion,\n    Manifest,\n    SyncRule,\n    ExportAnalyticalListPageV4Parameters,\n    ExportListReportV4Parameters,\n    ExportObjectPageV4Parameters,\n    ExportParametersV4,\n    ExportHandlerFunction,\n    ExportV4WithPath,\n    ExportResults,\n    SapUi5Routing,\n    UI5Version,\n    v4\n} from '@sap/ux-specification-types';\nimport { UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { deleteEmptyStructure, getNextTargetDefinition } from '../../common/utils';\nimport { MetadataInstanceFactoryV4 as Factory } from './factory';\nimport type { MetadataInstanceInterface } from '../../common/decoration/factory';\nimport type { TransferParameterTypeV4 } from './types';\nimport type { Definition, DefinitionOrBoolean } from 'typescript-json-schema';\nimport { extractLastIdPart } from './utils';\nimport { exportFPMCustomPageConfig, exportXMLFragmentConfig } from './fpmCustomPage';\n\n/**\n * Returns a fresh export results object with default values.\n * @param manifest - manifest to clone\n *\n * @returns New export results object with default values.\n */\nconst prepareDefaultExportResult = (manifest: Manifest): ExportResults => {\n    const exportResults: ExportResults = defaultExportResult;\n    exportResults.fragments = [];\n    exportResults.views = [];\n    exportResults.manifest = JSON.parse(JSON.stringify(manifest));\n    return exportResults;\n};\n\nfunction determineTargetAnnotationOfTable(\n    ids: string[],\n    transferParameters: TransferParameterTypeV4,\n    configObject: { [key: string]: any }\n) {\n    let targetAnnotationEncoded = `@${UIAnnotationTerms.LineItem}`;\n    let targetAnnotation = `@${UIAnnotationTerms.LineItem}`;\n    const annotationPath =\n        transferParameters.appSchema.definitions[DefinitionName.TableSPV]?.[SchemaTag.annotationPath];\n    if (ids.length > 1 && transferParameters.config['table']?.annotationPath) {\n        const annoPath = transferParameters.appSchema.definitions[DefinitionName.ALPTable]?.[SchemaTag.annotationPath];\n        targetAnnotationEncoded = targetAnnotation = annoPath && annoPath.substr(annoPath.lastIndexOf('@'));\n    } else if (configObject.table?.annotationPath) {\n        //view definition\n        targetAnnotationEncoded = targetAnnotation = `@${configObject.table.annotationPath}`;\n    } else if (ids[0] === PropertyName.table && annotationPath) {\n        const annotationPathArray = annotationPath.split('/');\n        targetAnnotationEncoded = targetAnnotation = annotationPathArray[annotationPathArray.length - 1];\n    }\n    return { targetAnnotationEncoded, targetAnnotation };\n}\n\nfunction determineTargetAnnotationOfChart(\n    ids: string[],\n    transferParameters: TransferParameterTypeV4,\n    targetAnnotationEncoded: string,\n    targetAnnotation: string,\n    configObject: { [key: string]: any }\n) {\n    if (ids.length > 1) {\n        const annoPath = transferParameters.appSchema.definitions[DefinitionName.ALPChart]?.[SchemaTag.annotationPath];\n        targetAnnotationEncoded = targetAnnotation = annoPath && annoPath.substr(annoPath.lastIndexOf('@'));\n    } else {\n        //chart level\n        targetAnnotationEncoded = targetAnnotation = `@${configObject.chart?.annotationPath}`;\n    }\n    return { targetAnnotationEncoded, targetAnnotation };\n}\n\nfunction determineTargetAnnotationOfViews(\n    transferParameters: TransferParameterTypeV4,\n    ids: string[],\n    targetAnnotation: string,\n    targetAnnotationEncoded: string\n) {\n    const parentDefinition = (transferParameters.appSchema.definitions['MultiTableModeV4'] as Definition)?.properties[\n        ids[2]\n    ];\n    if (parentDefinition) {\n        if (ids.length === 3) {\n            //the parent definition comprises the annotation of the visualization of the (Selection)PresentationVariant.\n            targetAnnotation = targetAnnotationEncoded =\n                parentDefinition[SchemaTag.annotationPath] &&\n                parentDefinition[SchemaTag.annotationPath].substr(\n                    parentDefinition[SchemaTag.annotationPath].lastIndexOf('@')\n                );\n        } else if (ids.length > 3) {\n            //the own definition comprises the lineItem or chart annotation from the visualization\n            const ownDefinitionName = (parentDefinition as Definition).$ref?.split(DEFINITION_LINK_PREFIX)[1];\n            const ownDefinition = ownDefinitionName && transferParameters.appSchema.definitions[ownDefinitionName];\n            const annotation =\n                ownDefinition?.[SchemaTag.annotationPath] &&\n                ownDefinition[SchemaTag.annotationPath].substr(\n                    ownDefinition[SchemaTag.annotationPath].lastIndexOf('@')\n                );\n            targetAnnotation = targetAnnotationEncoded = ownDefinition['entitySet']\n                ? `/${ownDefinition['entitySet']}/${annotation}`\n                : annotation;\n        }\n    }\n    return { targetAnnotation, targetAnnotationEncoded };\n}\n\nfunction determineTargetAnnotationOfHeaderSections(\n    ids: string[],\n    custom: boolean,\n    targetAnnotationEncoded: string,\n    targetAnnotation: string,\n    title?: string\n) {\n    // check if id is in `@com.sap.vocabularies.UI.v1.DataPoint#FlightPrice` format\n    const isAnnotationBased = ids[2].split(`@${UIVOCABULARY}`)[1];\n    if (!isAnnotationBased) {\n        custom = true;\n        targetAnnotationEncoded = ids[2];\n        targetAnnotation = targetAnnotationEncoded && targetAnnotationEncoded.replace(/::/g, '/');\n    } else {\n        if (title && title.indexOf(FacetTitlePrefix) > -1) {\n            targetAnnotation = targetAnnotationEncoded = title.split(FacetTitlePrefix)[1];\n        } else if (ids[2]) {\n            targetAnnotation = targetAnnotationEncoded = ids[2].split('@')[1];\n        } else if (targetAnnotationEncoded) {\n            targetAnnotation = targetAnnotationEncoded = targetAnnotationEncoded.replace(/::/g, '/');\n        }\n    }\n    return { custom, targetAnnotationEncoded, targetAnnotation };\n}\n\nfunction determineTargetAnnotationOfSections(\n    ids: string[],\n    custom: boolean,\n    targetAnnotationEncoded: string,\n    targetAnnotation: string\n) {\n    if (ids[1] === 'custom' && ids[2] !== ids[ids.length - 1]) {\n        custom = true;\n        targetAnnotationEncoded = ids[2];\n        targetAnnotation = targetAnnotationEncoded && targetAnnotationEncoded.replace(/::/g, '/');\n    } else {\n        const sectionId = extractLastIdPart(ids[1]);\n        targetAnnotationEncoded = sectionId && sectionId.replace(/\\//g, '::');\n        targetAnnotation = targetAnnotationEncoded && targetAnnotationEncoded.replace(/::/g, '/');\n    }\n    return { custom, targetAnnotationEncoded, targetAnnotation };\n}\n\n/**\n * Determines the target annotation that is relevant for the sync rule\n * @param {string[]} ids - list of ids of parent elements\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param { [key: string]: any } configObject - the given config.json, to be exported\n * @returns { targetAnnotationEncoded, targetAnnotation, custom }\n */\nfunction determineTargetAnnotation(\n    ids: string[],\n    transferParameters: TransferParameterTypeV4,\n    configObject: { [key: string]: any }\n): { targetAnnotationEncoded: string; targetAnnotation: string; custom: boolean } {\n    let targetAnnotation,\n        targetAnnotationEncoded,\n        custom = false;\n    if (ids[0] === PropertyName.table && ids[1] !== PropertyName.views) {\n        ({ targetAnnotationEncoded, targetAnnotation } = determineTargetAnnotationOfTable(\n            ids,\n            transferParameters,\n            configObject\n        ));\n    } else if (ids[0] === PropertyName.chart && transferParameters.templateType === TemplateType.AnalyticalListPageV4) {\n        ({ targetAnnotationEncoded, targetAnnotation } = determineTargetAnnotationOfChart(\n            ids,\n            transferParameters,\n            targetAnnotationEncoded,\n            targetAnnotation,\n            configObject\n        ));\n    } else if (ids[0] === PropertyName.sections) {\n        ({ custom, targetAnnotationEncoded, targetAnnotation } = determineTargetAnnotationOfSections(\n            ids,\n            custom,\n            targetAnnotationEncoded,\n            targetAnnotation\n        ));\n    } else if (ids[1] === PropertyName.sections) {\n        //header sections\n        ({ custom, targetAnnotationEncoded, targetAnnotation } = determineTargetAnnotationOfHeaderSections(\n            ids,\n            custom,\n            targetAnnotationEncoded,\n            targetAnnotation,\n            transferParameters.title\n        ));\n    } else if (ids[1] === PropertyName.views) {\n        ({ targetAnnotation, targetAnnotationEncoded } = determineTargetAnnotationOfViews(\n            transferParameters,\n            ids,\n            targetAnnotation,\n            targetAnnotationEncoded\n        ));\n    }\n    return { targetAnnotationEncoded, targetAnnotation, custom };\n}\n\n/**\n * Calculates an additional key for the sync rule from the given ID's\n * @param {string[]} ids - list of ids of parent elements\n * @returns the key for the sync rule\n */\nfunction determineKeyForSyncRule(ids: string[]): string | undefined {\n    let idIndex = 0;\n    for (let index = ids.length - 1; index > -1; index--) {\n        const element = ids[index];\n        if (\n            [\n                PropertyName.actions,\n                PropertyName.columns,\n                PropertyName.views,\n                PropertyName.visualFilters,\n                PropertyName.selectionFields\n            ].includes(PropertyName[element])\n        ) {\n            idIndex = index + 1;\n            break;\n        }\n    }\n    return idIndex > 0 ? ids[idIndex]?.replace(/\\//gi, '??') : undefined;\n}\n\ntype ExportToManifestParams = {\n    exportHandler: boolean | ExportHandlerFunction;\n    manifestSection: object;\n    configObject: { [key: string]: any };\n    configPropertyKey: string;\n    manifestKey: string;\n    syncRuleKey: string;\n};\n\n/**\n * Creates a new object in manifest\n * @param {ExportToManifestParams} params - list of parameters\n */\nfunction createNewObjectInManifest(params: ExportToManifestParams) {\n    if (params.exportHandler && typeof params.exportHandler === 'function') {\n        params.exportHandler(\n            params.manifestSection,\n            params.configObject,\n            params.configPropertyKey,\n            params.manifestKey,\n            params.syncRuleKey\n        );\n    } else if (!params.manifestSection[params.manifestKey]) {\n        params.manifestSection[params.manifestKey] = {};\n    }\n}\n\n/**\n * Transfers a property value from config to manifest\n * @param {ExportToManifestParams} params - list of parameters\n * @param propertyDefinition - schema definition of a particular property\n * @param nextDefinition - schema definition referred by $ref\n */\nfunction transferPropertyToManifest(\n    params: ExportToManifestParams,\n    propertyDefinition: object,\n    nextDefinition: object\n) {\n    if (\n        !(\n            propertyDefinition['type'] !== 'array' &&\n            nextDefinition?.['targetDefinition']?.type === 'object' &&\n            nextDefinition?.['targetDefinition']?.properties\n        )\n    ) {\n        if (params.exportHandler !== false) {\n            if (params.exportHandler && typeof params.exportHandler === 'function') {\n                params.exportHandler(\n                    params.manifestSection,\n                    params.configObject,\n                    params.configPropertyKey,\n                    params.manifestKey,\n                    params.syncRuleKey\n                );\n            } else if (\n                Array.isArray(params.configObject[params.configPropertyKey]) &&\n                !params.configObject[params.configPropertyKey].length\n            ) {\n                delete params.manifestSection[params.manifestKey];\n            } else {\n                params.manifestSection[params.manifestKey] = params.configObject[params.configPropertyKey];\n            }\n        }\n    } else if (propertyDefinition['type'] !== 'array' && params.manifestSection[params.manifestKey] === undefined) {\n        createNewObjectInManifest(params);\n    }\n}\n\n/**\n * Transfers a change in config.json to manifest\n * @param ids - list of parent & child ids\n * @param {SyncRule} syncRule - syncRule (metadata)\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param {string} configPropertyKey - key of property in the config\n * @param { [key: string]: any } configObject - the given config.json, to be exported\n * @param propertyDefinition - schema definition of a particular property\n * @param nextDefinition - schema definition referred by $ref\n */\nfunction exportManifestChange(\n    ids: string[],\n    syncRule: SyncRule,\n    transferParameters: TransferParameterTypeV4,\n    configPropertyKey: string,\n    configObject: { [key: string]: any },\n    propertyDefinition: object,\n    nextDefinition: object\n) {\n    const originalIds = [...ids];\n    //eliminate subsections' hierarchy\n    let index = ids.indexOf('subsections');\n    while (index > -1) {\n        ids.splice(index - 1, 2);\n        index = ids.indexOf('subsections');\n    }\n    const { targetAnnotationEncoded, targetAnnotation, custom } = determineTargetAnnotation(\n        ids,\n        transferParameters,\n        configObject\n    );\n\n    const syncRuleKey = determineKeyForSyncRule(ids);\n    const path = syncRule.manifest.path(\n        transferParameters.pageNameArray,\n        transferParameters.exportResults.manifest,\n        targetAnnotationEncoded,\n        syncRuleKey,\n        targetAnnotation,\n        configObject,\n        originalIds\n    );\n    const manifestSection = getManifestSectionByPathV4(\n        transferParameters.exportResults.manifest,\n        path,\n        targetAnnotation,\n        custom ? undefined : targetAnnotationEncoded\n    );\n    if (manifestSection) {\n        const manifestKey = syncRule.manifest.key || configPropertyKey;\n        if (configObject[configPropertyKey] !== undefined) {\n            // In case of arrays we take over complete array\n            const exportParams: ExportToManifestParams = {\n                exportHandler: syncRule.manifest.export,\n                manifestSection,\n                configObject,\n                configPropertyKey,\n                manifestKey,\n                syncRuleKey\n            };\n            transferPropertyToManifest(exportParams, propertyDefinition, nextDefinition);\n        } else {\n            if (syncRule.manifest.delete) {\n                const deleteHandler = syncRule.manifest.delete;\n                if (typeof deleteHandler === 'function') {\n                    deleteHandler(\n                        manifestSection,\n                        configObject,\n                        configPropertyKey,\n                        manifestKey,\n                        syncRuleKey,\n                        transferParameters.config\n                    );\n                }\n            } else if (manifestSection[manifestKey] !== undefined) {\n                delete manifestSection[manifestKey];\n            }\n            deleteEmptyStructure(\n                transferParameters.exportResults.manifest,\n                path,\n                transferParameters.deletionRequest,\n                transferParameters.entityPathArray,\n                targetAnnotation,\n                targetAnnotationEncoded\n            );\n        }\n    }\n}\n\n/**\n * Evaluates an export rule for a property or object, transfers to flex change or manifest setting\n * @param transferParameters - list of parameters passed from API\n * @param breadcrumbs - list of breadcrumbs, i.e. ID parts for building the stable ID\n * @param key - key of the given property\n * @param configObject - current (sub)object of the configuration file\n * @param ids - list of parent & child ids\n * @param title - title from the app schema (comprising for instance the facet ID)\n * @param propertyDefinition - schema definition of a particular property\n * @param nextDefinition - schema definition referred by $ref\n */\nfunction evaluateExportRule(\n    transferParameters: TransferParameterTypeV4,\n    breadcrumbs: string[],\n    key: string,\n    configObject: { [key: string]: any },\n    ids: string[],\n    propertyDefinition: object,\n    nextDefinition: NextDefinition\n): void {\n    const syncRule = getReflectMetadata(configObject, key);\n    if (syncRule) {\n        if (syncRule.xml) {\n            const templateName = syncRule.xml(configObject);\n            exportXMLFragmentConfig(transferParameters, templateName, nextDefinition['configObject']);\n        } else if (syncRule.manifest) {\n            exportManifestChange(\n                ids,\n                syncRule,\n                transferParameters,\n                key,\n                configObject,\n                propertyDefinition,\n                nextDefinition\n            );\n        }\n    }\n}\n\n/**\n * Processes an (object-like) sub-object of the app schema and transfer all connected config entries to manifest\n * @param {TransferEntryParameters} parameters - list of parameters\n * @param {NextDefinition} nextDefinition - the next definition in app schema to be processed\n * @param currentConfigObject - current config object\n * @param ids - list of parent & child ID's\n * @param localIdParts - list of ID parts for building the stable ID\n */\nfunction transferSubObject(\n    parameters: TransferEntryParameters,\n    nextDefinition: NextDefinition,\n    currentConfigObject: any,\n    ids: string[],\n    localIdParts: string[]\n) {\n    let objects = [],\n        isArray = false;\n    if (parameters.propertyDefinition.$ref && nextDefinition) {\n        objects.push(nextDefinition.configObject);\n    } else if (parameters.propertyDefinition['anyOf']) {\n        objects.push(currentConfigObject);\n    } else if (parameters.propertyDefinition.type === 'array') {\n        objects = currentConfigObject;\n        isArray = true;\n    } else {\n        objects.push(currentConfigObject);\n    }\n    parameters.index = 0;\n    for (const innerObject of objects) {\n        const additionalIds = [];\n        if (parameters.breadcrumbs[0] === PropertyName.sections && parameters.key === 'custom' && isArray) {\n            // We need add custom section 'id' into breadcrumbs to retrieve correct path to manifest\n            additionalIds.push(innerObject['id']);\n        }\n        parameters.transferParameters.title = nextDefinition?.title;\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        transferManifestEntriesAndFlexChange(\n            parameters.transferParameters,\n            innerObject,\n            [...ids, ...additionalIds],\n            localIdParts,\n            [...parameters.breadcrumbs, parameters.key],\n            nextDefinition?.targetDefinition\n        );\n        parameters.index++;\n    }\n}\n\n/**\n * Creates an ALP 'views' entry in the resulting manifest if not yet existing.\n * Adds the secondary = table view if missing.\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param configObject - current object in config.json\n * @returns\n * - a boolean indicating that the views entry got created.\n * - a boolean indicating if the processing of sub-objects shall be stopped\n **/\nfunction createALPTableView(\n    transferParameters: TransferParameterTypeV4,\n    configObject: any,\n    key: string\n): { newElementCreated: boolean; stopProcessing: boolean } {\n    let newElementCreated = false;\n    if (!configObject[key] || Object.keys(configObject[key]).length === 0 || !configObject.chart) {\n        return { newElementCreated, stopProcessing: true };\n    }\n    const path = getSettingsPathForPage(transferParameters.pageNameArray) + `/views`;\n    const views = getManifestSectionByPathV4(transferParameters.exportResults.manifest, path);\n    if (!views['paths'] || Object.keys(views['paths']).length === 0) {\n        views['paths'] = [\n            {\n                secondary: [\n                    {\n                        annotationPath: configObject[key].annotationPath\n                    }\n                ]\n            }\n        ];\n        newElementCreated = true;\n    } else if (!views['paths'][0].secondary) {\n        views['paths'][0].secondary = [\n            {\n                annotationPath: configObject[key].annotationPath\n            }\n        ];\n        newElementCreated = true;\n    }\n    return { newElementCreated, stopProcessing: false };\n}\n\n/**\n * Creates an ALP 'views' entry in the resulting manifest if not yet existing.\n * Adds the primary = chart view if missing.\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param configObject - current object in config.json\n * @returns\n * - a boolean indicating that the views entry got created.\n * - a boolean indicating if the processing of sub-objects shall be stopped\n */\nfunction createALPChartView(\n    transferParameters: TransferParameterTypeV4,\n    configObject: any,\n    key: string\n): { newElementCreated: boolean; stopProcessing: boolean } {\n    let newElementCreated = false;\n\n    if (!configObject[key] || Object.keys(configObject[key]).length === 0) {\n        return { newElementCreated, stopProcessing: true };\n    }\n    const path = getSettingsPathForPage(transferParameters.pageNameArray) + `/views`;\n    const views = getManifestSectionByPathV4(transferParameters.exportResults.manifest, path);\n    if (!views['paths'] || Object.keys(views['paths']).length === 0) {\n        views['paths'] = [\n            {\n                primary: [\n                    {\n                        annotationPath: configObject[key].annotationPath\n                    }\n                ]\n            }\n        ];\n        newElementCreated = true;\n    } else if (!views['paths'][0].primary) {\n        views['paths'][0].primary = [\n            {\n                annotationPath: configObject[key].annotationPath\n            }\n        ];\n        newElementCreated = true;\n    }\n    if (!views['paths'][0].secondary) {\n        views['paths'][0].secondary = [\n            {\n                annotationPath: configObject?.table?.annotationPath || UIAnnotationTerms.LineItem\n            }\n        ];\n    }\n    return { newElementCreated, stopProcessing: false };\n}\n\n/**\n * Creates an controlConfiguration with filterFields in the resulting manifest if not yet existing.\n * Adds the current visual filters if missing.\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param configObject - current object in config.json\n * @returns a boolean indicating that the filter fields entry got created.\n */\nfunction createVisualFilters(transferParameters: TransferParameterTypeV4, configObject: any): boolean {\n    if (!configObject || Object.keys(configObject).length === 0) {\n        return false;\n    }\n    let newElementCreated = false;\n    const path = getSettingsPathForPage(transferParameters.pageNameArray);\n    const settings = getManifestSectionByPathV4(transferParameters.exportResults.manifest, path);\n    const SelectionFields = `@${UIAnnotationTerms.SelectionFields}`;\n    // No visual filters yet\n    if (!settings['controlConfiguration']) {\n        settings['controlConfiguration'] = { [SelectionFields]: { filterFields: {} } };\n        newElementCreated = true;\n    } else if (!settings['controlConfiguration'][SelectionFields]) {\n        settings['controlConfiguration'][SelectionFields] = { filterFields: {} };\n        newElementCreated = true;\n    } else if (!settings['controlConfiguration'][SelectionFields]['filterFields']) {\n        settings['controlConfiguration'][SelectionFields]['filterFields'] = {};\n        newElementCreated = true;\n    }\n    if (newElementCreated) {\n        const filterFields = settings['controlConfiguration'][SelectionFields]['filterFields'];\n        Object.keys(configObject).forEach((filterName) => {\n            const filterConfig = configObject[filterName];\n            filterFields[filterName] = {};\n            for (const property in filterConfig) {\n                // Special handling for visualFilterValueList (split)\n                if (property === 'visualFilterValueList') {\n                    filterFields[filterName]['visualFilter'] = { valueList: filterConfig[property] };\n                } else {\n                    filterFields[filterName][property] = filterConfig[property];\n                }\n            }\n        });\n    }\n    return newElementCreated;\n}\n\n/**\n * Creates an LR 'views' entry in the resulting manifest if not yet existing yet.\n * Adds the current table view if missing.\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param configObject - current object in config.json\n * @returns a boolean indicating that the views entry got created.\n */\nfunction createLRTableView(\n    index: number,\n    transferParameters: TransferParameterTypeV4,\n    key: string,\n    configObject: any\n): boolean {\n    if (!configObject || Object.keys(configObject).length === 0) {\n        return false;\n    }\n    let newElementCreated = false;\n    const path = getSettingsPathForPage(transferParameters.pageNameArray) + `/views`;\n    const views = getManifestSectionByPathV4(transferParameters.exportResults.manifest, path);\n    const newEntry = {\n        key: configObject['key'],\n        annotationPath: configObject.annotationPath\n    };\n    if (!views['paths'] || Object.keys(views['paths']).length === 0) {\n        //No views yet\n        views['paths'] = [newEntry];\n        newElementCreated = true;\n    } else {\n        const existingIndex = views['paths'].findIndex((view) => view.key === configObject['key'] || view.key === key);\n        if (existingIndex === -1) {\n            //Given view does not exist yet\n            views['paths'].push(newEntry);\n            newElementCreated = true;\n        } else if (existingIndex !== configObject.index) {\n            //Reordering scenario\n            const savedContent = JSON.parse(JSON.stringify(views['paths'][existingIndex]));\n            views['paths'].splice(existingIndex, 1);\n            views['paths'].splice(index, 0, savedContent);\n            newElementCreated = true;\n        }\n    }\n    return newElementCreated;\n}\n\n/**\n * Special logic to create new elements in manifest\n * @param {number} index - index of the sorted list's entry\n * @param {string} definitionName - schema definition name of the current object\n * @param {string} key - key of the current object\n * @param {object} configObject - current object in config.json\n * @param {string[]} breadcrumbs - array of sequence of properties that we are currently processing. Required for instance for table column name\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param {boolean} preprocessed - indicates that the element was already processed\n * @returns\n * - newElementCreated - indicates that a new element was created ==> no further sync rule on this level\n * - createNewElement - indicates that further processing shall be stopped\n */\nfunction createNewElement(\n    index: number,\n    definitionName: string,\n    key: string,\n    configObject: object,\n    breadcrumbs: string[],\n    transferParameters: TransferParameterTypeV4,\n    preprocessed: boolean\n): { newElementCreated: boolean; stopProcessing: boolean } {\n    let newElementCreated = false;\n    const stopProcessing = false;\n    if (definitionName && !preprocessed) {\n        if (definitionName.startsWith(DefinitionName.CustomColumn)) {\n            newElementCreated = createNewCustomColumn(\n                key,\n                transferParameters,\n                configObject[key],\n                transferParameters.logger,\n                breadcrumbs\n            );\n        } else if (definitionName === DefinitionName.ALPChartView && key === PropertyName.chart && configObject) {\n            return createALPChartView(transferParameters, configObject, key);\n        } else if (definitionName === DefinitionName.ALPTableView && key === PropertyName.table && configObject) {\n            return createALPTableView(transferParameters, configObject, key);\n        } else if (\n            key &&\n            (definitionName.startsWith(DefinitionName.LRTableView) ||\n                definitionName.startsWith(DefinitionName.LRChartView))\n        ) {\n            newElementCreated = createLRTableView(index, transferParameters, key, configObject[key]);\n        } else if (key && definitionName.startsWith(DefinitionName.VisualFilters)) {\n            newElementCreated = createVisualFilters(transferParameters, configObject[key]);\n        }\n    }\n    return { newElementCreated, stopProcessing };\n}\n\ntype TransferEntryParameters = {\n    transferParameters: TransferParameterTypeV4;\n    breadcrumbs: string[];\n    key: string;\n    index: number;\n    configObject: { [key: string]: any };\n    propertyDefinition: Definition;\n};\n\n/**\n * Function checks if passed schema definition is traversable.\n * It checks if definition has reference or object properties defined directly in definition.\n * @param {Definition} definition Definition to check.\n *\n * @returns True if passed schema definition is traversable.\n */\nfunction isDefinitionTraversable(definition: Definition): boolean {\n    return (\n        !!definition.$ref ||\n        (typeof definition.properties === 'object' && Object.keys(definition.properties).length !== 0)\n    );\n}\n\n/**\n * Transfers one entry of a list (aka one property of the config) to the manifest\n * @param {TransferEntryParameters} parameters - list of parameters\n * @param {string[]} parentIds - array of collected parent ids\n * @param {string[]} stableIdParts - list of parts of the stable ID for flex changes\n * @param {boolean} preprocessed - indicates that the list was already preprocessed by following the config order\n */\nfunction transferSortedListEntry(\n    parameters: TransferEntryParameters,\n    parentIds: string[],\n    stableIdParts: string[],\n    preprocessed = false\n): void {\n    const currentConfigObject = parameters.configObject[parameters.key];\n    const childId = getChildId(parameters.configObject, parameters.key);\n    const nextDefinition = getNextTargetDefinition(\n        parameters.transferParameters.appSchema,\n        parameters.transferParameters.title,\n        currentConfigObject,\n        parameters.propertyDefinition,\n        parameters.key,\n        parameters.transferParameters.factory,\n        parameters.transferParameters.pageType\n    );\n    const { newElementCreated, stopProcessing } = createNewElement(\n        parameters.index,\n        parameters.propertyDefinition.$ref?.split(DEFINITION_LINK_PREFIX)[1],\n        parameters.key,\n        parameters.configObject,\n        parameters.breadcrumbs,\n        parameters.transferParameters,\n        preprocessed\n    );\n    const ids = childId ? [...parentIds, childId] : [...parentIds, parameters.key];\n    if (!newElementCreated) {\n        evaluateExportRule(\n            parameters.transferParameters,\n            parameters.breadcrumbs,\n            parameters.key,\n            parameters.configObject,\n            ids,\n            parameters.propertyDefinition,\n            nextDefinition\n        );\n    }\n\n    if (\n        parameters.propertyDefinition &&\n        ((typeof currentConfigObject === 'object' && Object.keys(currentConfigObject).length !== 0) ||\n            (isDefinitionTraversable(parameters.propertyDefinition) && nextDefinition.configObject)) &&\n        !stopProcessing\n    ) {\n        const localIdParts = childId ? [...stableIdParts, childId] : stableIdParts;\n        transferSubObject(parameters, nextDefinition, currentConfigObject, ids, localIdParts);\n    }\n}\n\n/**\n * Function for special handling of anyOf definitions during the export\n * @param {TransferEntryParameters} parameters - list of parameters\n * @param anyOfDefinitions - the array of definitions from the anyOf (of additionalProperties)\n * @param schemaDefinition - parent definition, comprising properties as well as additionalProperties\n * @param parentIds - array of collected parent ids\n * @param stableIdParts - list of parts of the stable ID for flex changes\n * @returns\n */\nfunction transferConfigEntriesWithAnyOfDefinitions(\n    transferEntryParameters: TransferEntryParameters,\n    anyOfDefinitions: Definition[],\n    schemaDefinition: Definition,\n    parentIds: string[],\n    stableIdParts: string[]\n): boolean {\n    let preprocessed = false;\n    if (anyOfDefinitions) {\n        const configEntries = Object.entries(transferEntryParameters.configObject);\n        if (!configEntries || configEntries.length < 1) {\n            return preprocessed;\n        }\n        configEntries.sort((a, b) => a[1]['index'] - b[1]['index']);\n        //follow the config order, to support reordering\n        configEntries.forEach((configEntry) => {\n            if (schemaDefinition.properties[configEntry[0]]) {\n                transferEntryParameters.key = configEntry[0];\n                transferEntryParameters.propertyDefinition = schemaDefinition.properties[configEntry[0]] as Definition;\n                //already part of schema\n                transferSortedListEntry(transferEntryParameters, parentIds, stableIdParts);\n                preprocessed = true;\n            } else if (typeof configEntry[1] === 'object') {\n                //match against potential schema definitions\n                anyOfDefinitions.forEach((anyOfDefinition) => {\n                    if (anyOfDefinition.$ref) {\n                        transferEntryParameters.key = configEntry[0];\n                        transferEntryParameters.propertyDefinition = anyOfDefinition;\n                        transferSortedListEntry(transferEntryParameters, parentIds, stableIdParts);\n                        preprocessed = true;\n                    }\n                });\n            }\n            transferEntryParameters.index++;\n        });\n    }\n    return preprocessed;\n}\n\n/**\n * Method updates list of definition entries from schema with entries for insertion based on `additionalProperties` entry.\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API.\n * @param {Definition} additionalProperties - allowed additional properties.\n * @param {[string, DefinitionOrBoolean][]} list - list with entries.\n * @param {{ [key: string]: unknown }} configObject - configuration object.\n */\nfunction mergeEntriesForInsert(\n    transferParameters: TransferParameterTypeV4,\n    additionalProperties: Definition,\n    list: [string, DefinitionOrBoolean][],\n    configObject: { [key: string]: unknown }\n): void {\n    const keys = findMatchingKeysByAdditionalProperties(\n        transferParameters.appSchema,\n        additionalProperties,\n        configObject\n    );\n    // Merge new entries for creation into list\n    for (const key of keys) {\n        // Check if entry from config does not exist in list - potential insert.\n        if (!list.some((item) => item[0] === key)) {\n            list.push([key, additionalProperties]);\n        }\n    }\n}\n\n/**\n * Recursive function that traverses the content of the current object. It reads decorators and fills exportResultManifest entries and flex changes\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param configObject - current object to traverse\n * @param parentIds - array of collected parent ids\n * @param stableIdParts - list of parts of the stable ID for flex changes\n * @param breadcrumbs - array of sequence of properties that we are currently processing. Required for instance for table column name\n * @param schemaDefinition - the current entry point or definition in the app schema\n * @param title - the title to be used for the given schema definition\n */\nfunction transferManifestEntriesAndFlexChange(\n    transferParameters: TransferParameterTypeV4,\n    configObject: { [key: string]: any },\n    parentIds: string[],\n    stableIdParts: string[],\n    breadcrumbs: string[],\n    schemaDefinition: Definition\n): void {\n    if (!schemaDefinition?.properties) {\n        return;\n    }\n    let index = 0;\n    //In case of additionalProperties = flexible array definition ==> new entries from the config shall be exported too\n    const transferEntryParameters: TransferEntryParameters = {\n        transferParameters,\n        breadcrumbs,\n        key: undefined,\n        index,\n        configObject,\n        propertyDefinition: undefined\n    };\n    const additionalProperties = schemaDefinition.additionalProperties as Definition;\n    const anyOfDefinitions = additionalProperties?.anyOf as Definition[];\n\n    const preprocessed = transferConfigEntriesWithAnyOfDefinitions(\n        transferEntryParameters,\n        anyOfDefinitions,\n        schemaDefinition,\n        parentIds,\n        stableIdParts\n    );\n    //Sort if there is a propertyIndex, so that the exported list ends up in manifest in the right order\n    let sortedList = schemaDefinition.properties && Object.entries(schemaDefinition.properties);\n    if (sortedList[0]?.[1][SchemaTag.propertyIndex]) {\n        sortedList = Object.entries(schemaDefinition.properties).sort(\n            (a, b) => a[1][SchemaTag.propertyIndex] - b[1][SchemaTag.propertyIndex]\n        );\n    }\n    if (additionalProperties?.$ref) {\n        // Merge new entries for creation into list\n        mergeEntriesForInsert(transferParameters, additionalProperties, sortedList, configObject);\n    }\n    index = 0;\n    sortedList.forEach((element: object) => {\n        if (transferParameters.entityPathArray) {\n            if (\n                transferParameters.entityPathArray[breadcrumbs.length] !== element[0] &&\n                !arrayIncludes(breadcrumbs, transferParameters.entityPathArray)\n            ) {\n                return;\n            }\n        }\n        transferEntryParameters.key = element[0];\n        transferEntryParameters.propertyDefinition = element[1];\n        transferEntryParameters.index = index;\n        transferSortedListEntry(transferEntryParameters, parentIds, stableIdParts, preprocessed);\n        if (element[1].$ref) {\n            index++;\n        }\n    });\n}\n\n/**\n * Instantiates the export classes for a single object page section\n * @param sectionId - Current section ID\n */\nfunction getClassesForSingleSection(\n    objectPageConfig: v4.ObjectPageConfigV4,\n    sectionId: string,\n    factory: MetadataInstanceInterface\n): void {\n    if (sectionId === 'custom' && Array.isArray(objectPageConfig.sections[sectionId])) {\n        // Custom sections\n        const customSections: Array<ObjectPageCustomSectionFragment> = objectPageConfig.sections\n            .custom as Array<ObjectPageCustomSectionFragment>;\n        for (let index = 0; index < customSections.length; index++) {\n            customSections[index] = factory.createInstance(\n                PageTypeV2.ObjectPage,\n                'ObjectPageCustomSectionView',\n                customSections[index],\n                customSections[index].className\n            );\n        }\n    }\n}\n\n/**\n * Recursive sub-function for handling subsections\n * @param section - Object page section in config\n */\nfunction getSubsectionClasses(section: object, factory: MetadataInstanceInterface): void {\n    if (section['subsections']) {\n        let subSection: object;\n        for (const subSectionId in section['subsections']) {\n            subSection = section['subsections'][subSectionId];\n            getClassesForSingleSection(subSection, subSectionId, factory);\n            getSubsectionClasses(subSection, factory);\n        }\n    }\n}\n\n/**\n * Instantiates the export classes for the object page section\n * @param objectPageConfig - the given object page configuration\n * @param objectPage - the overall object page export class where the sections shall be included\n */\nfunction getExportClassesForSections(\n    objectPageConfig: v4.ObjectPageConfigV4,\n    objectPage: ObjectPage,\n    factory: MetadataInstanceInterface\n): void {\n    let section: object;\n    for (const sectionId in objectPageConfig.sections) {\n        section = objectPage.sections[sectionId];\n        getClassesForSingleSection(objectPageConfig, sectionId, factory);\n        getSubsectionClasses(section, factory);\n    }\n}\n\n/**\n * Calculates the baseId\n * @param {v4.ListReportConfigV4 | v4.ObjectPageConfigV4} config - content of the config file\n * @param {ExportListReportV4Parameters | ExportObjectPageV4Parameters} exportParameters - all API parameters needed for the export\n * @returns the baseId for changes\n */\nfunction calculateBaseId(\n    config: v4.ListReportConfigV4 | v4.ObjectPageConfigV4,\n    exportParameters: ExportListReportV4Parameters | ExportObjectPageV4Parameters\n): string {\n    const pageLayoutInformation = getPageLayoutInformation(config);\n    return `${exportParameters.appId}::${pageLayoutInformation.id}::${exportParameters.page.name}--`;\n}\n\n/**\n * Run through the given ObjectPage config and return respective exportResultManifest entry and flex changes\n * @param {ExportObjectPageV4Parameters} exportParameters - all API parameters needed for the export\n * @param {UI5Version} ui5Version - SAP UI5 version\n * @param {boolean} deletionRequest - if set to true, any manifest setting specified by entityPath gets deleted even if it comprises any unknown property\n */\nconst exportObjectPage = (\n    exportParameters: ExportObjectPageV4Parameters,\n    ui5Version: UI5Version,\n    deletionRequest = false\n): ExportResults => {\n    const exportResults: ExportResults = prepareDefaultExportResult(exportParameters.manifest);\n\n    const factory = new Factory();\n    const pageInstance = factory.createPageInstance(PageTypeV4.ObjectPage, exportParameters.page.config);\n\n    if (exportParameters.page.config?.[PropertyName.sections]) {\n        getExportClassesForSections(exportParameters.page.config, pageInstance, factory);\n    }\n\n    const transferParameters: TransferParameterTypeV4 = {\n        exportResults,\n        appId: exportParameters.appId,\n        appRootPath: exportParameters.appRootPath,\n        baseId: calculateBaseId(pageInstance, exportParameters),\n        appSchema: exportParameters.jsonSchema,\n        config: pageInstance,\n        ui5Version,\n        factory,\n        pageNameArray: [exportParameters.page.name],\n        pageType: PageTypeV4.ObjectPage,\n        title: undefined,\n        logger: exportParameters.logger,\n        templateType: TemplateType.ListReportObjectPageV4,\n        fragments: exportParameters['fragments'],\n        entityPathArray: exportParameters['entityPath'],\n        deletionRequest\n    };\n\n    transferManifestEntriesAndFlexChange(\n        transferParameters,\n        pageInstance,\n        [], //no parentIds\n        [], // no stableIds\n        [], // no breadcrumbs\n        exportParameters.jsonSchema //starting point for target definition\n    );\n\n    return exportResults;\n};\n\n/**\n * Run through the given List Page (LR or ALP) config and return respective exportResultManifest entry and flex changes\n * @param {ExportListReportV4Parameters} exportParameters - all API parameters needed for the export\n * @param {Factory} factory - metadata factory\n * @param {v4.ListReportConfigV4} config - content of the config file, filled into a factory class for metadata access\n * @param {PageTypeV4} pageType - Page type (enum value)\n * @param {UI5Version} ui5Version - SAP UI5 version\n * @param {boolean} deletionRequest - if set to true, any manifest setting specified by entityPath gets deleted even if it comprises any unknown property\n * @param {TemplateType} templateType - Template type (enum value)\n */\nconst exportListPage = (\n    exportParameters: ExportListReportV4Parameters,\n    factory: Factory,\n    config: v4.ListReportConfigV4,\n    pageType: PageTypeV4,\n    ui5Version: UI5Version,\n    templateType: TemplateType,\n    deletionRequest = false\n): ExportResults => {\n    const exportResults: ExportResults = prepareDefaultExportResult(exportParameters.manifest);\n    const appSchema = exportParameters.jsonSchema as Definition;\n\n    const definitionName = config.table?.[PropertyName.annotationPath]\n        ? DefinitionName.ALPTableView\n        : DefinitionName.Table;\n    const tableDefinition = (config.table = factory.createInstance(pageType, definitionName, config.table));\n    let tableDefinitionName = DefinitionName.LineItems;\n    if (appSchema.definitions[DefinitionName.TableSPV]) {\n        const tableRef = (appSchema.definitions[DefinitionName.TableSPV] as Definition).properties.columns['$ref'];\n        tableDefinitionName = tableRef.split(DEFINITION_LINK_PREFIX)[1];\n    }\n    const appSchemaActions = appSchema.definitions[`${DefinitionName.Actions}<${tableDefinitionName}>`] as Definition;\n    if (tableDefinition.toolBar?.actions && appSchemaActions) {\n        for (const actionKey in appSchemaActions.properties) {\n            tableDefinition.toolBar.actions[actionKey] = factory.createInstance(\n                pageType,\n                DefinitionName.ToolBarAction,\n                tableDefinition.toolBar.actions[actionKey]\n            );\n        }\n    }\n    const transferParameters: TransferParameterTypeV4 = {\n        exportResults,\n        appId: exportParameters.appId,\n        appRootPath: exportParameters.appRootPath,\n        baseId: calculateBaseId(config, exportParameters),\n        appSchema: exportParameters.jsonSchema,\n        config,\n        ui5Version,\n        factory,\n        pageNameArray: [exportParameters.page.name],\n        pageType: PageTypeV4.ObjectPage,\n        title: undefined,\n        logger: exportParameters.logger,\n        templateType,\n        fragments: exportParameters['fragments'],\n        entityPathArray: exportParameters['entityPath'],\n        deletionRequest\n    };\n\n    transferManifestEntriesAndFlexChange(\n        transferParameters,\n        config,\n        [], //no parentIds\n        [], // no stableIds\n        [], // no breadcrumbs\n        appSchema //starting point for target definition\n    );\n\n    return exportResults;\n};\n\n/**\n * Run through the given ListReport config and return respective exportResultManifest entry and flex changes\n * @param {ExportListReportV4Parameters} exportParameters - all API parameters needed for the export\n * @param {UI5Version} ui5Version - SAP UI5 version\n * @param {TemplateType} templateType - Template type (enum value)\n * @param {boolean} deletionRequest - if set to true, any manifest setting specified by entityPath gets deleted even if it comprises any unknown property\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nconst exportListReportPage = (\n    exportParameters: ExportListReportV4Parameters,\n    ui5Version: UI5Version,\n    templateType: TemplateType,\n    deletionRequest = false\n): ExportResults => {\n    const factory = new Factory();\n    const listReport = factory.createPageInstance(PageTypeV2.ListReport, exportParameters.page.config);\n\n    return exportListPage(\n        exportParameters,\n        factory,\n        listReport,\n        PageTypeV4.ListReport,\n        ui5Version,\n        templateType,\n        deletionRequest\n    );\n};\n\n/**\n * Run through the given Analytical List Page config and return respective exportResultManifest entry and flex changes\n * @param {ExportAnalyticalListPageV4Parameters} exportParameters - all API parameters needed for the export\n * @param {UI5Version} ui5Version - SAP UI5 version\n * @param {boolean} deletionRequest - if set to true, any manifest setting specified by entityPath gets deleted even if it comprises any unknown property\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nconst exportAnalyticalListPage = (\n    exportParameters: ExportAnalyticalListPageV4Parameters,\n    ui5Version: UI5Version,\n    deletionRequest = false\n): ExportResults => {\n    return exportListReportPage(exportParameters, ui5Version, TemplateType.AnalyticalListPageV4, deletionRequest);\n};\n\n/**\n * Method applies passed export rule for passed property and path.\n * @param rule - export rule to apply\n * @param path - path in manifest which shold be updated by export\n * @param key - property name/key\n * @param application - V4 application (app.json config file)\n * @param manifest - Manifest of the given app\n * @param appSchema - App schema\n */\nconst applyExportRule = (\n    rule: boolean | ExportHandlerFunction,\n    path: string,\n    key: string,\n    application: ApplicationV4,\n    manifest: object,\n    appSchema: Definition\n) => {\n    let manifestSection = getManifestSectionByPathV4(manifest, path, undefined, undefined, true);\n    let existing = true;\n    if (manifestSection === undefined) {\n        existing = false;\n        manifestSection = prepareValueForPath();\n    }\n\n    const exportParams: ExportToManifestParams = {\n        exportHandler: rule,\n        manifestSection,\n        configObject: application,\n        configPropertyKey: key,\n        manifestKey: key,\n        syncRuleKey: key\n    };\n    const propertyDefinition = (appSchema.definitions.AppSettings as Definition).properties[key];\n    transferPropertyToManifest(exportParams, propertyDefinition as Definition, {});\n    if (!existing && Object.keys(manifestSection).length) {\n        // Apply virtual object to existing manifest\n        setManifestSectionByPathV4(manifest, path, manifestSection);\n    }\n};\n\n/**\n * API for the export of a V4 app configuration\n * Export means the transfer of the properties and values of the given config to manifest entries or flex changes\n * @param application - V4 application (app.json config file)\n * @param manifest - Manifest of the given app\n * @param appSchema - App schema\n *\n * @returns ExportResults = object comprising the updated manifest and a list of flex changes\n */\nconst exportApplicationV4 = (application: ApplicationV4, manifest: Manifest, appSchema: Definition): ExportResults => {\n    const exportResults: ExportResults = prepareDefaultExportResult(manifest);\n    const applicationV4 = Object.assign(new ApplicationV4(), application);\n\n    //transform application settings\n    applicationV4.settings = Object.assign(new AppSettings(), applicationV4.settings);\n    for (const key in (appSchema.definitions.AppSettings as Definition).properties) {\n        const syncRule = getReflectMetadata(applicationV4.settings, key);\n        if (syncRule && syncRule.manifest) {\n            const path = syncRule.manifest.path();\n            if (syncRule.manifest.export) {\n                applyExportRule(syncRule.manifest.export, path, key, application, exportResults.manifest, appSchema);\n            } else {\n                const manifestSection = getManifestSectionByPathV4(exportResults.manifest, path);\n                if (application.settings?.[key] !== undefined) {\n                    manifestSection[key] = application.settings[key];\n                } else {\n                    delete manifestSection[key];\n                    deleteEmptyStructure(exportResults.manifest, path, false);\n                }\n            }\n        }\n    }\n    //transform routing\n    exportResults.manifest[ManifestSection.ui5].routing = transformRoutingV4(\n        application['home'],\n        application['pages'],\n        exportResults.manifest\n    ) as SapUi5Routing;\n\n    // Update FCL data\n    updateFcl(exportResults.manifest[ManifestSection.ui5] as v4.SapUi5V4, application);\n\n    return exportResults;\n};\n\n/**\n * General API for the export of a V4 config page\n * Export means the transfer of the properties and values of the given config to manifest entries or flex changes\n * @param exportParametersV4 - list of parameters for the export; the list varies for the different schema types\n * @param ui5Version - the minUi5Version of the app\n * @returns ExportResults = object comprising the updated manifest and a list of flex changes\n */\nexport const exportPageV4 = (\n    exportParametersV4: ExportParametersV4[FioriElementsVersion.v4],\n    ui5Version: UI5Version\n): ExportResults | undefined => {\n    if (exportParametersV4[SchemaType.ListReport]) {\n        return exportListReportPage(\n            exportParametersV4[SchemaType.ListReport],\n            ui5Version,\n            TemplateType.ListReportObjectPageV4\n        );\n    } else if (exportParametersV4[SchemaType.ObjectPage]) {\n        return exportObjectPage(exportParametersV4[SchemaType.ObjectPage], ui5Version);\n    } else if (exportParametersV4[SchemaType.Application]) {\n        const { application, manifest, jsonSchema } = exportParametersV4[SchemaType.Application];\n        return exportApplicationV4(application, manifest, jsonSchema);\n    } else if (exportParametersV4[SchemaType.AnalyticalListPage]) {\n        return exportAnalyticalListPage(exportParametersV4[SchemaType.AnalyticalListPage], ui5Version);\n    } else if (exportParametersV4[SchemaType.FPMCustomPage]) {\n        return exportFPMCustomPageConfig(exportParametersV4[SchemaType.FPMCustomPage], defaultExportResult);\n    }\n};\n\n/**\n * Exports the config change of a single entity of the config, as indicated by an entityPath\n * Export means the transfer of the properties and values of the given config to manifest entries or flex changes\n * @param exportParametersV4 - list of parameters for the export; the list varies for the different schema types\n * @param ui5Version - the minUi5Version of the app\n * @param deletionRequest - if set to true, any manifest setting specified by entityPath gets deleted even if it comprises any unknown property\n * @returns ExportResults = object comprising the updated manifest and a list of flex changes\n */\nexport const exportConfigEntityByPathV4 = (\n    exportParametersV4: ExportV4WithPath[FioriElementsVersion.v4],\n    ui5Version?: UI5Version,\n    deletionRequest = false\n): ExportResults | undefined => {\n    if (exportParametersV4[SchemaType.ListReport]) {\n        return exportListReportPage(\n            exportParametersV4[SchemaType.ListReport],\n            ui5Version,\n            TemplateType.ListReportObjectPageV4,\n            deletionRequest\n        );\n    } else if (exportParametersV4[SchemaType.ObjectPage]) {\n        return exportObjectPage(exportParametersV4[SchemaType.ObjectPage], ui5Version, deletionRequest);\n    } else if (exportParametersV4[SchemaType.AnalyticalListPage]) {\n        return exportAnalyticalListPage(exportParametersV4[SchemaType.AnalyticalListPage], ui5Version, deletionRequest);\n    }\n};\n", "import { js2xml } from 'xml-js';\nimport type {\n    ExportFPMCustomPageV4Parameters,\n    ExportResults,\n    ExtensionLogger,\n    SchemaDefinition\n} from '@sap/ux-specification-types';\nimport { MacrosPropertyType, ChangeIndicator } from '@sap/ux-specification-types';\nimport { getManifestPage, getPageCustomExtensionFile, getPageCustomViewFile } from '../utils/utils';\nimport { getCustomExtensionFragmentDefinitionKey, getRootElement, parseXML, traverseSchema } from '../utils/macros';\nimport type { TraverseData } from '../utils/macros';\nimport type { ExtensionFileData } from '../types';\nimport type { TransferParameterTypeV4 } from './types';\n\n/**\n * Method compares values if values are different after converted to string.\n * It is used to determine if we need make change in XML file.\n * @param {unknown} value1 First value to compare.\n * @param {unknown} value2 Second value to compare.\n * @returns {boolean} Returns true if values are same after values converted to string.\n */\nfunction isExportValueEquals(value1: unknown, value2: unknown): boolean {\n    return value1 !== undefined && value2 !== undefined ? `${value1}` === `${value2}` : value1 === value2;\n}\n\n/**\n * Method deletes property by emoving attribute from element.\n * Method also considers if it is last attribute and element is complex property, then element would removed as well.\n * @param {TraverseData} traverseData Schema and XML traverse data.\n * @param {string} name Name of property.\n */\nfunction deleteProperty(traverseData: TraverseData, name: string): void {\n    const { element, schema, parent, contextPath } = traverseData;\n    delete element.attributes[name];\n    if (\n        schema.metadata?.type === MacrosPropertyType.Property &&\n        Object.keys(element.attributes).length === 0 &&\n        parent?.element.elements\n    ) {\n        // Last attribute is deleted for property - if element is property then remove property itself\n        const context = contextPath[contextPath.length - 1];\n        if (context) {\n            parent.element.elements.splice(context.index, 1);\n        }\n    }\n}\n\n/**\n * Callback method of traversing schema and XML.\n * Method exports value from page config object to XML element.\n * @param {TraverseData} traverseData Schema and XML traverse data.\n * @param {SchemaDefinition} property Schema property to use for export.\n * @param {object} config Fragment of page config object.\n * @param {string} name Name of property to export.\n * @returns {boolean} Is new value differs.\n */\nfunction exportProperty(traverseData: TraverseData, property: SchemaDefinition, config: object, name: string): boolean {\n    const { contextPath, fullSchema, element } = traverseData;\n    let differs = false;\n    if (property.hidden) {\n        // Currently we ignore hidden properties\n        return false;\n    }\n    if (name in config && config[name] !== undefined) {\n        if (property.isViewNode) {\n            if (!element.elements) {\n                element.elements = [];\n            }\n            const targetElement = {\n                name,\n                type: 'element'\n            };\n            element.elements.push(targetElement);\n            return traverseSchema(\n                {\n                    fullSchema: fullSchema,\n                    schema: property,\n                    element: targetElement,\n                    contextPath: [\n                        ...contextPath,\n                        {\n                            name,\n                            index: 0\n                        }\n                    ],\n                    config: config[name],\n                    parent: traverseData\n                },\n                exportProperty\n            );\n        } else if (!isExportValueEquals(element.attributes?.[name], config[name])) {\n            if (!element.attributes) {\n                element.attributes = {};\n            }\n            element.attributes[name] = config[name];\n            differs = true;\n        }\n    } else if (element.attributes?.[name]) {\n        deleteProperty(traverseData, name);\n        differs = true;\n    }\n    return differs;\n}\n\n/**\n * Populates export results with data from extension.\n * @param {ExtensionFileData} extensionData Extension data from parsed XML file.\n * @param {ExportResults} exportResults Export results API parameters needed for the export.\n * @param {object} config Extension of page config object.\n * @param {SchemaDefinition} jsonSchema Extesion definition schema.\n * @param {string} extensionType Extension type - view or fragment.\n * @param {ExtensionLogger | undefined} logger Logger class for logging messages.\n */\nfunction getExtensionExportResult(\n    extensionData: ExtensionFileData,\n    exportResults: ExportResults,\n    config: object,\n    jsonSchema: SchemaDefinition,\n    extensionType: 'view' | 'fragment',\n    logger?: ExtensionLogger\n) {\n    const element = parseXML(extensionData.file, false, logger);\n    if (element) {\n        const coreElement = getRootElement(element);\n        const differs = traverseSchema(\n            {\n                fullSchema: jsonSchema,\n                schema: jsonSchema,\n                element: coreElement,\n                contextPath: [],\n                config\n            },\n            exportProperty\n        );\n        if (differs) {\n            const fileContent = js2xml(element, { spaces: 4 });\n            const extensionExportResult = {\n                dataSourceUri: extensionData.file.dataSourceUri,\n                fileContent,\n                changeIndicator: ChangeIndicator.Updated\n            };\n            if (extensionType === 'view') {\n                exportResults.views = [extensionExportResult];\n            } else if (extensionType === 'fragment') {\n                exportResults.fragments.push(extensionExportResult);\n            }\n        }\n    }\n}\n\n/**\n * Run through the given FPM Custom Page config and return respective XML View result.\n * If no changes in config, then view is not returned.\n * @param {ExportListReportV4Parameters} exportParameters All API parameters needed for the export.\n * @param {ExportResults} defaultExportResult Default export result.\n * @param {FeatureToggle[]} [featureToggles] - array of supported features.\n * @returns {ExportResults} Object comprising the updated xml view\n */\nexport const exportFPMCustomPageConfig = (\n    exportParameters: ExportFPMCustomPageV4Parameters,\n    defaultExportResult: ExportResults\n): ExportResults => {\n    const exportResults: ExportResults = { ...defaultExportResult };\n    const { views, manifest, jsonSchema, page, logger } = exportParameters;\n    let viewData: ExtensionFileData | undefined = undefined;\n    if (jsonSchema && Object.keys(jsonSchema).length > 0) {\n        viewData = getPageCustomViewFile(views || [], page.name, manifest, logger);\n    }\n    if (viewData) {\n        getExtensionExportResult(viewData, exportResults, page.config, jsonSchema, 'view', logger);\n    }\n\n    return exportResults;\n};\n\n/**\n * Runs through the given config and pushes changed fragments into export results.\n * @param {TransferParameterTypeV4} transferParameters List of transfer parameters passed from API.\n * @param {string} fragmentName Full name of the fragment.\n * @param {object} config Current (sub)object of the configuration file.\n */\nexport const exportXMLFragmentConfig = (\n    transferParameters: TransferParameterTypeV4,\n    fragmentName: string,\n    config: object\n): void => {\n    const { appSchema, exportResults, fragments, pageNameArray, logger } = transferParameters;\n    const { manifest } = exportResults;\n    let fragmentData: ExtensionFileData | undefined = undefined;\n    const extensionType = 'fragment';\n    if (appSchema && Object.keys(appSchema).length > 0) {\n        const targetManifestPage = getManifestPage(manifest, pageNameArray[0]);\n        fragmentData = getPageCustomExtensionFile(fragments, targetManifestPage, manifest, extensionType, fragmentName);\n    }\n    if (fragmentData) {\n        const definitionKey = getCustomExtensionFragmentDefinitionKey(fragmentName);\n        const targetConfigSchema = appSchema['definitions'][definitionKey] as SchemaDefinition;\n        const tempSchema = {\n            ...targetConfigSchema,\n            definitions: appSchema['definitions']\n        } as SchemaDefinition;\n        getExtensionExportResult(fragmentData, exportResults, config, tempSchema, extensionType, logger);\n    }\n};\n", "import { basename, join } from 'path';\nimport { readFile as readFileFs, readdir, stat, exists } from 'fs';\nimport type { Manifest, FileData } from '@sap/ux-specification-types';\n\nexport interface Project {\n    root: string;\n    name: string;\n    manifest: Manifest;\n    annotations: FileData[];\n    changes: string[];\n    fragments: FileData[];\n    views: FileData[];\n}\n\nconst readFile = async (path: string): Promise<string> => {\n    return new Promise((resolve, reject): void => {\n        readFileFs(path, { encoding: 'utf8' }, (err, data): void => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(data);\n            }\n        });\n    });\n};\n\nconst readJSON = async <T>(path: string): Promise<T> => {\n    return JSON.parse(await readFile(path)) as T;\n};\n\nexport const readDirectory = async (path: string): Promise<string[]> => {\n    return new Promise((resolve, reject): void => {\n        readdir(path, { encoding: 'utf8' }, (err, data): void => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(data);\n            }\n        });\n    });\n};\n\nexport const isDirectory = async (path: string): Promise<boolean> => {\n    return new Promise((resolve): void => {\n        stat(path, (err, stats): void => {\n            if (err) {\n                resolve(false);\n            } else {\n                resolve(stats.isDirectory());\n            }\n        });\n    });\n};\n\nconst resourceExists = async (path: string): Promise<boolean> => {\n    return new Promise((resolve) => {\n        exists(path, (doesExist) => {\n            resolve(doesExist);\n        });\n    });\n};\n\nconst getManifest = async (path: string): Promise<Manifest> => {\n    return readJSON<Manifest>(join(path, 'manifest.json'));\n};\n\nexport const getChanges = async (webapp: string): Promise<string[]> => {\n    const changes: string[] = [];\n    const changesDirectory = join(webapp, 'changes');\n    if (!(await resourceExists(changesDirectory))) {\n        return changes;\n    }\n    const extensions = [\n        '.change',\n        '.variant',\n        '.ctrl_variant',\n        '.ctrl_variant_change',\n        '.ctrl_variant_management_change'\n    ];\n    const files = await readDirectory(changesDirectory);\n    for (const file of files) {\n        if (extensions.some((ext) => file.endsWith(ext))) {\n            changes.push(await readFile(join(changesDirectory, file)));\n        }\n    }\n    return changes;\n};\n\nconst getExtensionFiles = async (webAppPath: string, folder = 'fragments'): Promise<FileData[]> => {\n    const fragments: FileData[] = [];\n\n    const directoryPath = join(webAppPath, 'ext', folder);\n    if (!(await resourceExists(directoryPath))) {\n        return fragments;\n    }\n    const files = await readDirectory(directoryPath);\n    for (const file of files) {\n        const filePath = join(directoryPath, file);\n        const data = await readFile(filePath);\n        fragments.push({\n            dataSourceUri: filePath,\n            fileContent: data\n        });\n    }\n    return fragments;\n};\n\nconst getAnnotations = async (manifest: Manifest, webAppPath: string): Promise<FileData[]> => {\n    const annotationData: FileData[] = [];\n    const serviceDataSources = manifest?.['sap.app']?.dataSources;\n    if (serviceDataSources?.mainService?.settings?.localUri) {\n        const metadataPath = join(webAppPath, serviceDataSources.mainService.settings.localUri);\n        annotationData.push({\n            dataSourceUri: metadataPath,\n            fileContent: await readFile(metadataPath)\n        });\n    }\n    if (serviceDataSources?.mainService?.settings?.annotations) {\n        for (const annotationRef of serviceDataSources.mainService.settings.annotations) {\n            if (serviceDataSources[annotationRef]?.settings?.localUri) {\n                const annotationFilePath = join(webAppPath, serviceDataSources[annotationRef].settings.localUri);\n                annotationData.push({\n                    dataSourceUri: annotationFilePath,\n                    fileContent: await readFile(annotationFilePath)\n                });\n            }\n        }\n    }\n    //Consider CAP/multiple services\n    if (annotationData.length === 0) {\n        for (const key in serviceDataSources) {\n            const dataSource = serviceDataSources[key];\n            if (dataSource?.type === 'ODataAnnotation' && dataSource?.settings?.localUri) {\n                const annotationFilePath = join(webAppPath, dataSource.settings.localUri);\n                annotationData.push({\n                    dataSourceUri: annotationFilePath,\n                    fileContent: await readFile(annotationFilePath)\n                });\n            }\n        }\n    }\n\n    return annotationData;\n};\n\n/**\n * Get the project artefacts, like manifest, service metadata, annotations\n * @param root - project root where package.json is\n */\nexport const getProject = async (root: string): Promise<Project> => {\n    const name = basename(root);\n    const webappPath = join(root, 'webapp');\n    const manifest = await getManifest(webappPath);\n    const annotations = await getAnnotations(manifest, webappPath);\n    const changes = await getChanges(webappPath);\n    const fragments = await getExtensionFiles(webappPath);\n    const views = await getExtensionFiles(webappPath, 'views');\n    return {\n        root,\n        name,\n        manifest,\n        annotations,\n        changes,\n        fragments,\n        views\n    };\n};\n"],
  "mappings": "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AAAD,EAAAkE,EAAe,SAAf,YAAAlE,EAA0B,UAA1B,YAAAC,EAAmC,qBAAnC,YAAAC,EAAuD,MAAM,KAAK,EAC1E,SACIgE,EAAe,QAAa,qBAAkB,mCAC9CA,EAAe,QAAa,qBAAkB,mCAChD,CACE,IAAMK,EACF,OAAOL,EAAe,QAAc,SAAWA,EAAe,OAAYA,EAAe,OAAU,KACjG,CAAE,IAAAlC,EAAK,GAAAqC,CAAG,EAAIV,GAAaY,EAAU,EAAI,EAC/CJ,EAAWpD,CAAS,EAAE,aAAU,IAAI,EAAI,CACpC,CAAE,KAAM,iBAAkB,MAAOmD,EAAe,iBAAc,cAAc,CAAE,EAC9E,CAAE,KAAM,SAAU,MAAOlC,CAAI,CACjC,EACIqC,IACAF,EAAWpD,CAAS,EAAE,aAAU,MAAM,EAAIsD,EAElD,CACJ,MAAgB,CACZ,MACJ,CACJ,CAtCgBxE,EAAAoE,GAAA,sBC1sBhB,IAAAO,GAA0C,SCMxC,IAAAC,GAAY,CACV,CACE,QAAW,QACX,QAAW,CACT,SACA,YACA,YACA,YACA,YACA,WACF,CACF,EACA,CACE,QAAW,QACX,QAAW,CACT,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACF,CACF,EACA,CACE,QAAW,QACX,QAAW,CACT,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACF,CACF,EACA,CACE,QAAW,OACX,QAAW,CACT,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACF,CACF,EACA,CACE,QAAW,OACX,QAAW,CACT,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACF,CACF,EACA,CACE,QAAW,OACX,QAAW,CACT,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACF,CACF,CACF,EC9GA,IAAAC,GAAW,UFKN,IAAMC,GAAN,MAAMA,EAAiB,CAG1B,aAAc,CACNA,GAAiB,eAAe,SAAW,IAC3CA,GAA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",
  "names": ["src_exports", "__export", "ALPViewType", "ActionTitlePrefix", "ActionType", "ArtifactType", "BindingPropertyRegexAsString", "ChangeIndicator", "ChartColor", "ColorPaletteDefinitionType", "ControlType", "CustomExtensionType", "DATESETTINGSPATH", "DataSourceType", "DefinitionName", "DirName", "DraftDiscardEnabledSettings", "ExportArtifacts", "FIORI_FCL_ROOT_ID", "FIORI_FCL_ROOT_VIEW_NAME", "FRAGMENTNAMEPART", "FacetBase", "FacetTitlePrefix", "Features", "FileName", "FioriElementsVersion", "FlexChangeLayer", "FlexibleColumnLayoutAggregations", "FlexibleColumnLayoutType", "GENERICAPPSETTINGS", "LogSeverity", "LogSeverityLabel", "MANIFESTPATH", "MacrosPropertyType", "ManifestSection", "OdataVersion", "PAGETYPE_VIEW_EXTENSION_TEMPLATE_MAP", "PageType", "PageTypeV2", "PageTypeV4", "PropertyName", "QUICKVARPATH", "QUICKVARPATHX", "SAPUI5_FRAGMENT_CLASS", "SAPUI5_VIEW_CLASS", "SchemaKeyName", "SchemaTag", "SchemaType", "SectionType", "StatePreservationMode", "TableColumnVerticalAlignment", "TemplateType", "UIVOCABULARY", "UIVOCABULARYALPHADOT", "UIVOCABULARYDOT", "VOCWITHCOLONS", "VOCWITHSLASH", "ViewTemplateType", "ViewTypes", "Visualization", "defaultExportResult", "v2_exports", "v4_exports", "module", "__toCommonJS", "CardSettingsType", "CardTemplateType", "ChartCardType", "ChartType", "ContainerLayoutType", "CreateMode", "DateRangeType", "DefaultContentView", "DefaultDateRangeValueType", "DefaultFilterMode", "ExtensionFragmentTypes", "FE_TEMPLATE_V2", "FE_TEMPLATE_V2_ALP", "FE_TEMPLATE_V2_LIST_REPORT", "FE_TEMPLATE_V2_OBJECT_PAGE", "FilterPathType", "IgnoredFieldsType", "LinkListFlavorType", "ListFlavorType", "ListTypeType", "LoadDataOnAppLaunchSettings", "MeasureAggregateValues", "SAPUI5_CONTROLLER_EXTENSION", "SAPUI5_VIEW_EXTENSION", "SAPUI5_VIEW_EXTENSION_ANALYTICAL_LIST_PAGE", "SAPUI5_VIEW_EXTENSION_LIST_REPORT", "SAPUI5_VIEW_EXTENSION_OBJECT_PAGE", "SectionPosition", "SortOrderType", "Strategy", "TableColumnExtensionTypeV2", "TableTypeV2", "cardTemplateSettingsMap", "cardTemplateTypeMap", "customColumnViewTypes", "ActionPlacement", "Availability", "CustomSectionViewTypesV4", "DefaultPathType", "FE_TEMPLATE_V4", "FE_TEMPLATE_V4_ALP", "FE_TEMPLATE_V4_CUSTOM_PAGE", "FE_TEMPLATE_V4_LIST_REPORT", "FE_TEMPLATE_V4_OBJECT_PAGE", "FIORI_FCL_ROUTER_CLASS", "FilterFieldPlacement", "HorizontalAlign", "InitialLayoutType", "InitialLoadType", "LayoutType", "Placement", "SAPUI5_DEPENDENCY_LIB_SAP_F", "SAPUI5_FRAGMENT_TYPE_V4", "SectionLayoutType", "SectionPositionV4", "SelectType", "SelectionMode", "TableCreationModeType", "TableTypeV4", "VariantManagementTypeListReport", "VariantManagementTypeObjectPage", "LogSeverity", "exports", "TemplateType", "CustomExtensionType", "Features", "v2_exports", "__export", "CardSettingsType", "CardTemplateType", "ChartCardType", "ChartType", "ContainerLayoutType", "CreateMode", "DateRangeType", "DefaultContentView", "DefaultDateRangeValueType", "DefaultFilterMode", "ExtensionFragmentTypes", "FE_TEMPLATE_V2", "FE_TEMPLATE_V2_ALP", "FE_TEMPLATE_V2_LIST_REPORT", "FE_TEMPLATE_V2_OBJECT_PAGE", "FilterPathType", "IgnoredFieldsType", "LinkListFlavorType", "ListFlavorType", "ListTypeType", "LoadDataOnAppLaunchSettings", "MeasureAggregateValues", "SAPUI5_CONTROLLER_EXTENSION", "SAPUI5_VIEW_EXTENSION", "SAPUI5_VIEW_EXTENSION_ANALYTICAL_LIST_PAGE", "SAPUI5_VIEW_EXTENSION_LIST_REPORT", "SAPUI5_VIEW_EXTENSION_OBJECT_PAGE", "SectionPosition", "SortOrderType", "Strategy", "TableColumnExtensionTypeV2", "TableTypeV2", "cardTemplateSettingsMap", "cardTemplateTypeMap", "customColumnViewTypes", "module", "__toCommonJS", "v4_exports", "__export", "ActionPlacement", "Availability", "CustomSectionViewTypesV4", "DefaultPathType", "FE_TEMPLATE_V4", "FE_TEMPLATE_V4_ALP", "FE_TEMPLATE_V4_CUSTOM_PAGE", "FE_TEMPLATE_V4_LIST_REPORT", "FE_TEMPLATE_V4_OBJECT_PAGE", "FIORI_FCL_ROUTER_CLASS", "FilterFieldPlacement", "HorizontalAlign", "InitialLayoutType", "InitialLoadType", "LayoutType", "Placement", "SAPUI5_CONTROLLER_EXTENSION", "SAPUI5_DEPENDENCY_LIB_SAP_F", "SAPUI5_FRAGMENT_TYPE_V4", "SAPUI5_VIEW_EXTENSION_LIST_REPORT", "SAPUI5_VIEW_EXTENSION_OBJECT_PAGE", "SectionLayoutType", "SectionPosition", "SectionPositionV4", "SelectType", "SelectionMode", "TableCreationModeType", "TableTypeV4", "VariantManagementTypeListReport", "VariantManagementTypeObjectPage", "module", "__toCommonJS", "__exportStar", "exports", "__importStar", "require_cjs", "__commonJSMin", "exports", "module", "isMergeableObject", "__name", "value", "isNonNullObject", "isSpecial", "stringValue", "isReactElement", "canUseSymbol", "REACT_ELEMENT_TYPE", "emptyTarget", "val", "cloneUnlessOtherwiseSpecified", "options", "deepmerge", "defaultArrayMerge", "target", "source", "element", "getMergeFunction", "key", "customMerge", "getEnumerableOwnPropertySymbols", "symbol", "getKeys", "propertyIsOnObject", "object", "property", "propertyIsUnsafe", "mergeObject", "destination", "sourceIsArray", "targetIsArray", "sourceAndTargetTypesMatch", "array", "prev", "next", "deepmerge_1", "EnumIsFlag_1", "exports", "TermToTypes_1", "VocabularyReferences_1", "splitAt", "string", "index", "__name", "substringAt", "splitAtFirst", "separator", "splitAtLast", "substringBeforeFirst", "substringBeforeLast", "alias", "references", "unaliasedValue", "map", "ref", "namespace", "value", "reference", "preAlias", "postAlias", "unalias", "aliasedValue", "_unalias", "maybeAlias", "rest", "isAnnotation", "valueToUnalias", "knownReference", "_a", "segments", "segment", "first", "subSegment", "parameter", "isComplexTypeDefinition", "complexTypeDefinition", "Decimal", "lazy", "object", "property", "init", "initial", "_value", "createIndexedFind", "array", "element", "propertyValue", "addGetByValue", "indexName", "mergeAnnotations", "annotationSources", "result", "name", "annotationList", "target", "annotations", "annotationTarget", "annotationsOnTarget", "rawAnnotation", "annotation", "existingAnnotation", "VocabularyReferences_1", "utils_1", "ANNOTATION_TARGET", "appendObjectPath", "objectPath", "visitedObject", "__name", "resolveTarget", "converter", "startElement", "path", "annotationsTerm", "pathSegments", "targetPath", "segment", "pathPart", "annotationPart", "_a", "_d", "_c", "_b", "parentElementFQN", "_e", "result", "current", "error", "message", "vocabularyAlias", "term", "annotation", "subPath", "subTarget", "visitedSubObject", "thisElement", "nextElement", "navigationPropertyBindings", "property", "navigationProperty", "actionName", "action", "param", "type", "referencedType", "annotationType", "inferTypeFromTerm", "isAnnotationPath", "pathStr", "mapPropertyPath", "propertyPath", "fullyQualifiedName", "currentTarget", "currentTerm", "mapAnnotationPath", "annotationPath", "mapNavigationPropertyPath", "navigationPropertyPath", "mapPath", "parseValue", "currentProperty", "currentSource", "propertyValue", "valueFQN", "splitEnum", "enumValue", "unaliased", "parseRecord", "parseCollection", "annotationTarget", "targetType", "isDataFieldWithForAction", "annotationContent", "parseRecordType", "recordDefinition", "annotationRecord", "currentFQN", "record", "resolveAnnotationsOnAnnotation", "actionTarget", "getOrInferCollectionType", "collectionDefinition", "firstColItem", "parentFQN", "index", "pathValue", "recordIdx", "ifValue", "stringValue", "isV4NavigationProperty", "navProp", "convertAnnotation", "target", "rawAnnotation", "vocAlias", "vocTerm", "_Converter", "annotationSources", "source", "convertEntityContainer", "actionImport", "rawValue", "map", "converted", "convertedElements", "rawElement", "convertedElement", "rawMetadata", "convertedOutput", "aliased", "value", "references", "Converter", "resolveEntityType", "entityType", "resolveNavigationPropertyBindings", "rawNavigationPropertyBindings", "bindingPath", "rawBindingTarget", "resolveAnnotations", "rawAnnotationTarget", "nestedAnnotations", "createAnnotationsObject", "annotationTerm", "annotations", "rawAnnotations", "vocabularyAliases", "vocTermWithQualifier", "rawEntityContainer", "convertedEntityContainer", "convertEntitySet", "convertSingleton", "convertActionImport", "rawSingleton", "convertedSingleton", "_rawNavigationPropertyBindings", "rawEntitySet", "convertedEntitySet", "convertEntityType", "rawEntityType", "convertedEntityType", "keyProp", "convertProperty", "convertNavigationProperty", "rawAction", "actions", "name", "relativePath", "includeVisitedObjects", "resolved", "rawProperty", "convertedProperty", "typeName", "rawNavigationProperty", "convertedNavigationProperty", "associationEnd", "association", "end", "rawActionImport", "convertedActionImport", "rawActions", "convertAction", "convertedAction", "convertActionParameter", "unspecificOverloadTarget", "specificOverloadTarget", "effectiveAnnotations", "unspecificAnnotations", "unspecificAnnotation", "rawActionParameter", "convertedActionParameter", "convertComplexType", "rawComplexType", "convertedComplexType", "convertTypeDefinition", "rawTypeDefinition", "convertedTypeDefinition", "convert", "targetResolution", "exports", "utils_1", "revertObjectToRawType", "references", "value", "result", "anno", "revertCollectionItemToRawType", "_a", "_b", "valueMatches", "ref", "_c", "_d", "_e", "_f", "__name", "revertValueToRawType", "restrictedKeys", "revertAnnotationsToRawType", "currentAnnotations", "targetAnnotations", "key", "term", "parsedAnnotation", "revertTermToGenericType", "unaliasedTerm", "qualifiedSplit", "collectionItem", "outItem", "collectionKey", "annotation", "baseAnnotation", "exports", "__exportStar", "exports", "ensureArray", "sourceObject", "__name", "exports", "_RawMetadataInstance", "fileIdentification", "version", "schema", "references", "RawMetadataInstance", "_MergedRawMetadata", "initialParserOutput", "parserOutput", "MergedRawMetadata", "utils_1", "merge", "parserOutputs", "outParserOutput", "parserOutput", "__name", "exports", "require_sax", "__commonJSMin", "exports", "sax", "strict", "opt", "SAXParser", "SAXStream", "createStream", "buffers", "parser", "clearBuffers", "S", "rootNS", "emit", "__name", "o", "F", "newf", "a", "i", "checkBufferLength", "maxAllowed", "maxActual", "l", "len", "closeText", "emitNode", "error", "m", "flushBuffers", "end", "write", "Stream", "streamWraps", "ev", "me", "er", "h", "data", "SD", "chunk", "handler", "args", "CDATA", "DOCTYPE", "XML_NAMESPACE", "XMLNS_NAMESPACE", "nameStart", "nameBody", "entityStart", "entityBody", "isWhitespace", "c", "isQuote", "isAttribEnd", "isMatch", "regex", "notMatch", "key", "e", "s", "event", "nodeType", "textopts", "text", "strictFail", "message", "newTag", "parent", "tag", "qname", "name", "attribute", "qualName", "prefix", "local", "attrib", "qn", "openTag", "selfClosing", "p", "nv", "value", "uri", "closeTag", "t", "tagName", "closeTo", "close", "x", "n", "parseEntity", "entity", "entityLC", "num", "numStr", "beginWhiteSpace", "charAt", "result", "starti", "pad", "returnState", "buffer", "parsedEntity", "stringFromCharCode", "floor", "fromCodePoint", "MAX_SIZE", "codeUnits", "highSurrogate", "lowSurrogate", "index", "length", "codePoint", "require_array_helper", "__commonJSMin", "exports", "module", "value", "require_options_helper", "__commonJSMin", "exports", "module", "isArray", "options", "key", "copy", "item", "require_xml2js", "__commonJSMin", "exports", "module", "sax", "expat", "helper", "isArray", "options", "pureJsParser", "currentElement", "validateOptions", "userOptions", "__name", "nativeType", "value", "nValue", "bValue", "addField", "type", "key", "temp", "element", "manipulateAttributes", "attributes", "onInstruction", "instruction", "attrsRegExp", "match", "onStartElement", "name", "onText", "text", "onComment", "comment", "onEndElement", "parentElement", "onCdata", "cdata", "onDoctype", "doctype", "onError", "error", "xml", "parser", "result", "require_xml2json", "__commonJSMin", "exports", "module", "helper", "xml2js", "validateOptions", "userOptions", "options", "__name", "xml", "js", "json", "parentKey", "k", "v", "require_js2xml", "__commonJSMin", "exports", "module", "helper", "isArray", "currentElement", "currentElementName", "validateOptions", "userOptions", "options", "__name", "writeIndentation", "depth", "firstLine", "writeAttributes", "attributes", "key", "attr", "attrName", "quote", "result", "writeDeclaration", "declaration", "writeInstruction", "instruction", "instructionName", "instructionValue", "writeComment", "comment", "writeCdata", "cdata", "writeDoctype", "doctype", "writeText", "text", "hasContent", "element", "i", "writeElement", "xml", "elementName", "withClosingTag", "writeElements", "elements", "indent", "hasContentCompact", "anyContent", "writeElementCompact", "name", "writeElementsCompact", "nodes", "js", "require_json2xml", "__commonJSMin", "exports", "module", "js2xml", "json", "options", "js", "require_lib", "__commonJSMin", "exports", "module", "xml2js", "xml2json", "js2xml", "json2xml", "convertV2Annotations", "attributes", "objectType", "objectName", "annotations", "convertEntitySetAnnotations", "convertEntityTypeAnnotations", "convertNavigationPropertyAnnotations", "convertPropertyAnnotations", "convertGenericAnnotations", "__name", "exports", "pushToAnnotations", "condition", "value", "pv", "xml_js_1", "utils_1", "v2annotationsSupport_1", "collectionRegexp", "isV4NavProperty", "navPropertyAttributes", "__name", "getEntityTypeKeys", "propertyRefs", "propertyRef", "parseProperties", "entityProperties", "entityKeys", "entityTypeFQN", "annotationLists", "outObject", "entityProperty", "edmProperty", "unaliasType", "v2Annotations", "createAnnotationList", "parseReferentialConstraint", "referentialConstraints", "sourceTypeName", "targetTypeName", "outArray", "refCon", "parseV2ReferentialConstraint", "associationEnds", "sourceEnd", "assEnd", "targetEnd", "sourceProperties", "targetProperties", "sourceProperty", "propertyIndex", "parseNavigationProperties", "navigationProperties", "currentEntityType", "navigationProperty", "attributes", "matches", "isCollection", "typeName", "unalias", "Relationship", "ToRole", "FromRole", "parseAssociationSets", "associations", "namespace", "entityContainer", "association", "associationFQN", "associationEnd", "endValue", "parseAssociations", "parseEntityTypes", "entityTypes", "entityType", "entityKeyNames", "outEntityType", "parseComplexTypes", "complexTypes", "complexType", "complexTypeFQN", "parseTypeDefinitions", "typeDefinitions", "typeDefinition", "typeDefinitionFQN", "parseEntitySets", "entitySets", "entityContainerName", "entitySet", "navigationPropertyBinding", "navPropertyBinding", "outEntitySet", "parseSingletons", "singletons", "singleton", "outSingleton", "parseActions", "actions", "isFunction", "action", "parameters", "isBound", "overload", "parameter", "fullyQualifiedName", "param", "type", "edmActionParameter", "parseV2FunctionImport", "targetEntitySet", "et", "actionFQN", "parseActionImports", "imports", "actionOrFunctionImport", "_a", "parsePropertyValues", "propertyValues", "currentTarget", "annotationsLists", "propertyValue", "Annotation", "_attributes", "properties", "outPropertyValue", "attributeKey", "keyName", "currentPropertyTarget", "parseExpression", "parseInlineExpression", "propertyAnnotations", "parseAnnotations", "parseRecord", "record", "recordAnnotations", "outRecord", "isExpressionOfType", "annotation", "propertyNameToCheck", "parseModelPath", "propertyPath", "modelPathType", "parseCollection", "collection", "recordArray", "recordIndex", "propertyPathArray", "navPropertyPathArray", "navPropertyPath", "stringArray", "stringValue", "annotationPathArray", "annotationPath", "pathArray", "pathDefinition", "expression", "expressionKeys", "expressionKey", "parseAnnotation", "Term", "Qualifier", "others", "outAnnotation", "currentAnnotationTarget", "annotationAnnotations", "keys", "keyValue", "annotations", "target", "parseAnnotationLists", "annotationList", "parseSchema", "edmSchema", "edmVersion", "identification", "associationSets", "actionImports", "annotationMap", "parseReferences", "references", "referencesArray", "reference", "include", "aliases", "_type", "unaliasedType", "aliasedValue", "separators", "unaliased", "start", "end", "maybeAlias", "char", "alias", "mergeSchemas", "schemas", "associationsToReduce", "schema", "associationSetsToReduce", "entitySetsToReduce", "singletonsToReduce", "entityTypesToReduce", "actionsToReduce", "actionImportsToReduce", "complexTypesToReduces", "typeDefinitionsToReduce", "rawEntityType", "navProp", "v2NavProp", "associationSet", "assoc", "refConstraint", "createAliasMap", "map", "parse", "xml", "fileIdentification", "jsonObj", "version", "parsedSchemas", "exports", "merger_1", "exports", "parser_1", "require_Reflect", "__commonJSMin", "Reflect", "factory", "root", "sloppyModeThis", "exporter", "makeExporter", "target", "previous", "key", "value", "__name", "functionThis", "indirectEvalThis", "hasOwn", "supportsSymbol", "toPrimitiveSymbol", "iteratorSymbol", "supportsCreate", "supportsProto", "downLevel", "HashMap", "MakeDictionary", "map", "functionPrototype", "_Map", "CreateMapPolyfill", "_Set", "CreateSetPolyfill", "_WeakMap", "CreateWeakMapPolyfill", "registrySymbol", "metadataRegistry", "GetOrCreateMetadataRegistry", "metadataProvider", "CreateMetadataProvider", "decorate", "decorators", "propertyKey", "attributes", "IsUndefined", "IsArray", "IsConstructor", "DecorateConstructor", "IsObject", "IsNull", "ToPropertyKey", "DecorateProperty", "metadata", "metadataKey", "metadataValue", "decorator", "IsPropertyKey", "OrdinaryDefineOwnMetadata", "defineMetadata", "hasMetadata", "OrdinaryHasMetadata", "hasOwnMetadata", "OrdinaryHasOwnMetadata", "getMetadata", "OrdinaryGetMetadata", "getOwnMetadata", "OrdinaryGetOwnMetadata", "getMetadataKeys", "OrdinaryMetadataKeys", "getOwnMetadataKeys", "OrdinaryOwnMetadataKeys", "deleteMetadata", "provider", "GetMetadataProvider", "i", "decorated", "descriptor", "MetadataKey", "O", "P", "parent", "OrdinaryGetPrototypeOf", "ToBoolean", "MetadataValue", "ownKeys", "parentKeys", "set", "keys", "_i", "ownKeys_1", "hasKey", "_a", "parentKeys_1", "Type", "x", "IsSymbol", "ToPrimitive", "input", "PreferredType", "hint", "exoticToPrim", "GetMethod", "result", "OrdinaryToPrimitive", "toString_1", "IsCallable", "valueOf", "toString_2", "argument", "ToString", "SameValueZero", "y", "V", "func", "GetIterator", "obj", "method", "iterator", "IteratorValue", "iterResult", "IteratorStep", "IteratorClose", "f", "proto", "prototype", "prototypeProto", "constructor", "CreateMetadataRegistry", "fallback", "CreateFallbackProvider", "first", "second", "rest", "targetProviderMap", "registry", "registerProvider", "getProvider", "setProvider", "getProviderNoCache", "next", "providerMap", "hasProvider", "existingProvider", "targetMetadata", "OrdinaryDeleteMetadata", "GetOrCreateMetadataMap", "Create", "createdTargetMetadata", "metadataMap", "keysObj", "k", "nextValue", "e", "reflect", "metadataOwner", "metadataPropertySet", "registeredProvider", "cacheSentinel", "arraySentinel", "MapIterator", "values", "selector", "index", "error", "Map", "size", "getKey", "getValue", "getEntry", "insert", "_", "Set", "UUID_SIZE", "rootKey", "CreateUniqueKey", "WeakMap", "table", "GetOrCreateWeakMapTable", "CreateUUID", "create", "FillRandomBytes", "buffer", "GenRandomBytes", "array", "data", "offset", "byte", "require_changeUtils", "__commonJSMin", "exports", "module", "iIdCounter", "CHANGE_UTILS_PREFIX", "uid", "__name", "appendComponentToReference", "sComponentName", "getFlexReference", "manifest", "oSapUi5Entry", "sapApp", "getAppVersion", "getProjectId", "reference", "createString", "propertyBag", "changeString", "change", "require_flexibility_utils", "__commonJSMin", "exports", "module", "require_utils", "__commonJSMin", "exports", "regExpChars", "hasOwnProperty", "hasOwn", "__name", "obj", "key", "string", "_ENCODE_HTML_RULES", "_MATCH_HTML", "encode_char", "c", "escapeFuncStr", "markup", "escapeXMLToString", "to", "from", "p", "list", "val", "str", "match", "require_package", "__commonJSMin", "exports", "module", "require_ejs", "__commonJSMin", "exports", "fs", "path", "utils", "scopeOptionWarned", "_VERSION_STRING", "_DEFAULT_OPEN_DELIMITER", "_DEFAULT_CLOSE_DELIMITER", "_DEFAULT_DELIMITER", "_DEFAULT_LOCALS_NAME", "_NAME", "_REGEX_STRING", "_OPTS_PASSABLE_WITH_DATA", "_OPTS_PASSABLE_WITH_DATA_EXPRESS", "_BOM", "_JS_IDENTIFIER", "name", "filename", "isDir", "dirname", "extname", "resolve", "includePath", "ext", "resolvePaths", "paths", "filePath", "v", "__name", "getIncludePath", "options", "views", "match", "handleCache", "template", "func", "hasTemplate", "fileLoader", "tryHandleCache", "data", "cb", "result", "err", "reject", "includeFile", "opts", "includerResult", "rethrow", "str", "flnm", "lineno", "esc", "lines", "start", "end", "context", "line", "i", "curr", "stripSemi", "templ", "Template", "d", "o", "args", "viewOpts", "text", "delim", "open", "close", "src", "fn", "prepended", "appended", "escapeFn", "ctor", "sanitizedFilename", "destructuring", "e", "returnedFn", "include", "includeData", "basename", "self", "matches", "c", "index", "closing", "pat", "arr", "firstPos", "newLineCount", "VERSION", "init_version", "__esmMin", "isEmpty", "arr", "keys", "obj", "values", "vals", "mapValues", "callback", "result", "objKeys", "idx", "currKey", "map", "flatten", "currItem", "first", "last", "len", "forEach", "collection", "iteratorCallback", "i", "isObject", "colKeys", "key", "value", "isString", "item", "isUndefined", "isFunction", "drop", "howMuch", "dropRight", "filter", "predicate", "reject", "pick", "has", "prop", "contains", "find", "cloneArr", "newArr", "cloneObj", "clonedObj", "findAll", "found", "reduce", "arrOrObj", "iterator", "initial", "isArr", "accumulator", "compact", "uniq", "identity", "__name", "identities", "currIdentity", "partial", "func", "restArgs", "_i", "firstArg", "allArgs", "isArray", "isRegExp", "every", "difference", "some", "indexOf", "sortBy", "orderFunc", "a", "b", "zipObject", "assign", "target", "sources", "curSource", "currSourceKeys", "j", "assignNoOverwrite", "defaults", "groupBy", "groupKeyFunc", "currGroupKey", "currGroupArr", "merge", "obj1", "obj2", "keys2", "NOOP", "IDENTITY", "packArray", "holeyArr", "orgValue", "PRINT_ERROR", "msg", "PRINT_WARNING", "isES2015MapSupported", "applyMixins", "derivedCtor", "baseCtors", "baseCtor", "baseProto", "propName", "basePropDescriptor", "toFastProperties", "peek", "timer", "start", "val", "end", "total", "init_utils", "__esmMin", "require_regexp_to_ast", "__commonJSMin", "exports", "module", "root", "factory", "RegExpParser", "__name", "newState", "input", "value", "flags", "addFlag", "alts", "begin", "terms", "type", "ASSERT_EXISTS", "disjunction", "ASSERT_NEVER_REACH_HERE", "isBacktracking", "range", "atLeast", "atMost", "atom", "cc", "set", "complement", "digitsCharCodes", "whitespaceCodes", "wordCharCodes", "escapeCode", "letter", "letterCode", "escapedChar", "nextChar", "from", "isFromSingleChar", "to", "isToSingleChar", "insertToSet", "capturing", "groupAst", "number", "decimalPatternNoZero", "decimalPattern", "howMuch", "prevState", "howMany", "hexString", "i", "hexChar", "hexDigitPattern", "charCode", "char", "item", "subItem", "flagObj", "flagKey", "obj", "BaseRegExpVisitor", "node", "key", "child", "subChild", "getRegExpAst", "regExp", "regExpStr", "regExpAstCache", "regExpAst", "regExpParser", "clearRegExpParserCache", "import_regexp_to_ast", "init_reg_exp_parser", "__esmMin", "__name", "getOptimizedStartCodesIndices", "regExp", "ensureOptimizations", "ast", "getRegExpAst", "firstChars", "firstCharOptimizedIndices", "e", "complementErrorMessage", "PRINT_WARNING", "failedOptimizationPrefixMsg", "msgSuffix", "PRINT_ERROR", "result", "ignoreCase", "terms", "term", "atom", "addOptimizedIdxToResult", "forEach", "code", "range", "rangeCode", "minOptimizationVal", "minUnOptVal", "maxUnOptVal", "minOptIdx", "charCodeToOptimizedIndex", "maxOptIdx", "currOptIdx", "isOptionalQuantifier", "isWholeOptional", "values", "optimizedCharIdx", "handleIgnoreCase", "char", "upperChar", "lowerChar", "findCode", "setNode", "targetCharCodes", "find", "codeOrRange", "contains", "range_1", "targetCode", "isArray", "every", "canMatchCharCode", "charCodes", "pattern", "charCodeFinder", "CharCodeFinder", "import_regexp_to_ast", "init_utils", "init_reg_exp_parser", "init_lexer", "__name", "_super", "__extends", "_this", "node", "analyzeTokenTypes", "tokenTypes", "options", "defaults", "SUPPORT_STICKY", "msg", "action", "tracer", "initCharCodeToOptimizedIndexMap", "onlyRelevantTypes", "reject", "currType", "PATTERN", "Lexer", "hasCustom", "allTransformedPatterns", "map", "currPattern", "isRegExp", "regExpSource", "contains", "addStickyFlag", "addStartOfInput", "isFunction", "has", "escapedRegExpString", "wrappedRegExp", "patternIdxToType", "patternIdxToGroup", "patternIdxToLongerAltIdx", "patternIdxToPushMode", "patternIdxToPopMode", "clazz", "groupName", "isString", "isUndefined", "longerAltType", "longerAltIdx", "indexOf", "patternIdxToCanLineTerminator", "lineTerminatorCharCodes", "getCharCodes", "tokType", "checkLineBreaksIssues", "canMatchCharCode", "patternIdxToIsCustom", "patternIdxToShort", "emptyGroups", "patternIdxToConfig", "isCustomPattern", "isShortPattern", "reduce", "acc", "x", "idx", "canBeOptimized", "charCodeToPatternIdxToConfig", "result", "currTokType", "charCode", "optimizedIdx", "charCodeToOptimizedIndex", "addToMapOfArrays", "isArray", "lastOptimizedIdx_1", "forEach", "charOrInt", "currOptimizedIdx", "PRINT_ERROR", "failedOptimizationPrefixMsg", "optimizedCodes", "getOptimizedStartCodesIndices", "isEmpty", "code", "packArray", "validatePatterns", "validModesNames", "errors", "missingResult", "findMissingPatterns", "invalidResult", "findInvalidPatterns", "validTokenTypes", "validateRegExpPattern", "findInvalidGroupType", "findModesThatDoNotExist", "findUnreachablePatterns", "withRegExpPatterns", "filter", "findEndOfInputAnchor", "findStartOfInputAnchor", "findUnsupportedFlags", "findDuplicatePatterns", "findEmptyMatchRegExps", "tokenTypesWithMissingPattern", "LexerDefinitionErrorType", "valid", "difference", "tokenTypesWithInvalidPattern", "pattern", "EndAnchorFinder", "_super", "__extends", "_this", "__name", "node", "invalidRegex", "regexpAst", "getRegExpAst", "endAnchorVisitor", "end_of_input", "matchesEmptyString", "StartAnchorFinder", "startAnchorVisitor", "start_of_input", "invalidFlags", "found", "identicalPatterns", "outerType", "innerType", "compact", "duplicatePatterns", "currIdenticalSet", "setOfIdentical", "tokenTypeNames", "dupPatternSrc", "first", "invalidTypes", "group", "validModes", "invalidModes", "canBeTested", "noMetaChar", "testIdx", "_a", "str", "tokenType", "testTokenType", "regExpArray", "regExp", "metaChars", "find", "char", "flags", "performRuntimeChecks", "lexerDefinition", "trackLines", "lineTerminatorCharacters", "DEFAULT_MODE", "MODES", "currModeValue", "currModeName", "currIdx", "performWarningRuntimeChecks", "warnings", "hasAnyLineBreak", "allTokenTypes", "flatten", "mapValues", "tokTypes", "concreteTokenTypes", "terminatorCharCodes", "currIssue", "message", "buildLineBreakIssueMessage", "warningDescriptor", "cloneEmptyGroups", "clonedResult", "groupKeys", "keys", "currKey", "currGroupValue", "e", "details", "charsOrCodes", "charCodes", "numOrString", "key", "value", "minOptimizationVal", "charCodeToOptimizedIdxMap", "i", "import_regexp_to_ast", "LineTerminatorOptimizedTester", "init_lexer_public", "init_utils", "init_reg_exp", "init_reg_exp_parser", "text", "len", "c", "tokenStructuredMatcher", "tokInstance", "tokConstructor", "instanceType", "tokenStructuredMatcherNoCategories", "token", "tokType", "augmentTokenTypes", "tokenTypes", "tokenTypesAndParents", "expandCategories", "assignTokenDefaultProps", "assignCategoriesMapProp", "assignCategoriesTokensProp", "forEach", "result", "cloneArr", "categories", "searching", "compact", "flatten", "map", "currTokType", "newCategories", "difference", "isEmpty", "hasShortKeyProperty", "tokenIdxToClass", "tokenShortNameIdx", "hasCategoriesProperty", "isArray", "hasExtendingTokensTypesProperty", "hasExtendingTokensTypesMapProperty", "val", "key", "singleAssignCategoriesToksMap", "path", "nextNode", "pathNode", "nextCategory", "newPath", "contains", "has", "isTokenType", "init_tokens", "__esmMin", "init_utils", "__name", "defaultLexerErrorProvider", "init_lexer_errors_public", "__esmMin", "token", "fullText", "startOffset", "length", "line", "column", "LexerDefinitionErrorType", "DEFAULT_LEXER_CONFIG", "Lexer", "init_lexer_public", "__esmMin", "init_lexer", "init_utils", "init_tokens", "init_lexer_errors_public", "init_reg_exp_parser", "defaultLexerErrorProvider", "lexerDefinition", "config", "_this", "merge", "traceInitVal", "actualDefinition", "hasOnlySingleMode", "LineTerminatorOptimizedTester", "isArray", "DEFAULT_MODE", "cloneArr", "cloneObj", "performRuntimeChecks", "performWarningRuntimeChecks", "forEach", "currModeValue", "currModeName", "reject", "currTokType", "isUndefined", "allModeNames", "keys", "currModDef", "currModName", "validatePatterns", "isEmpty", "augmentTokenTypes", "currAnalyzeResult_1", "analyzeTokenTypes", "allErrMessages", "map", "error", "allErrMessagesString", "warningDescriptor", "PRINT_WARNING", "SUPPORT_STICKY", "IDENTITY", "NOOP", "unOptimizedModes", "reduce", "cannotBeOptimized", "canBeOptimized", "modeName", "clearRegExpParserCache", "toFastProperties", "__name", "text", "initialMode", "lexResult", "i", "j", "matchAltImage", "longerAltIdx", "matchedImage", "payload", "altPayload", "imageLength", "group", "tokType", "newToken", "errLength", "droppedChar", "msg", "match", "orgText", "orgLength", "offset", "matchedTokensIndex", "guessedNumberOfTokens", "matchedTokens", "errors", "line", "column", "groups", "cloneEmptyGroups", "trackLines", "lineTerminatorPattern", "currModePatternsLength", "patternIdxToConfig", "currCharCodeToPatternIdxToConfig", "modeStack", "emptyArray", "getPossiblePatterns", "getPossiblePatternsSlow", "getPossiblePatternsOptimized", "charCode", "optimizedCharIdx", "charCodeToOptimizedIndex", "possiblePatterns", "pop_mode", "popToken", "msg_1", "newMode", "last", "modeCanBeOptimized", "push_mode", "currConfig", "nextCharCode", "chosenPatternIdxToConfig", "chosenPatternsLength", "currPattern", "singleCharCode", "longerAltConfig", "longerAltPattern", "numOfLTsInMatch", "foundTerminator", "lastLTEndOffset", "errorStartOffset", "errorLine", "errorColumn", "foundResyncPoint", "currConfig_1", "pushMode", "length", "regExp", "newLastIndex", "lastLTIdx", "lastCharIsLT", "fixForEndingInLT", "oldColumn", "args", "_i", "image", "startOffset", "tokenTypeIdx", "tokenType", "startLine", "startColumn", "tokenVector", "index", "tokenToAdd", "token", "pattern", "found", "regExpArray", "phaseDesc", "phaseImpl", "indent", "_a", "timer", "time", "value", "traceMethod", "tokenLabel", "tokType", "hasTokenLabel", "tokenName", "obj", "isString", "createToken", "config", "createTokenInternal", "pattern", "tokenType", "isUndefined", "has", "PARENT", "CATEGORIES", "augmentTokenTypes", "LABEL", "GROUP", "POP_MODE", "PUSH_MODE", "LONGER_ALT", "LINE_BREAKS", "START_CHARS_HINT", "createTokenInstance", "image", "startOffset", "endOffset", "startLine", "endLine", "startColumn", "endColumn", "tokenMatcher", "token", "tokenStructuredMatcher", "EOF", "init_tokens_public", "__esmMin", "init_utils", "init_lexer_public", "init_tokens", "__name", "Lexer", "serializeGrammar", "topRules", "map", "serializeProduction", "node", "convertDefinition", "definition", "__name", "NonTerminal", "Alternative", "Option", "RepetitionMandatory", "RepetitionMandatoryWithSeparator", "Terminal", "RepetitionWithSeparator", "Repetition", "Alternation", "serializedTerminal", "tokenLabel", "pattern", "isRegExp", "Rule", "AbstractProduction", "init_utils", "init_tokens_public", "_definition", "value", "visitor", "forEach", "prod", "_super", "__extends", "options", "_this", "assign", "pick", "v", "restForRepetitionWithSeparator", "repSepProd", "currRest", "prevRest", "repSepRest", "Option", "Terminal", "fullRepSepRest", "RestWalker", "init_rest", "__esmMin", "init_utils", "init_gast_public", "__name", "prod", "_this", "forEach", "subProd", "index", "drop", "NonTerminal", "Alternative", "RepetitionMandatory", "RepetitionMandatoryWithSeparator", "RepetitionWithSeparator", "Repetition", "Alternation", "terminal", "refProd", "flatProd", "fullOrRest", "optionProd", "atLeastOneProd", "fullAtLeastOneRest", "atLeastOneSepProd", "fullAtLeastOneSepRest", "manyProd", "fullManyRest", "manySepProd", "fullManySepRest", "orProd", "alt", "prodWrapper", "GAstVisitor", "init_gast_visitor_public", "__esmMin", "init_gast_public", "__name", "node", "nodeAny", "NonTerminal", "Alternative", "Option", "RepetitionMandatory", "RepetitionMandatoryWithSeparator", "RepetitionWithSeparator", "Repetition", "Alternation", "Terminal", "Rule", "isSequenceProd", "prod", "Alternative", "Option", "Repetition", "RepetitionMandatory", "RepetitionMandatoryWithSeparator", "RepetitionWithSeparator", "Terminal", "Rule", "isOptionalProd", "alreadyVisited", "isDirectlyOptional", "Alternation", "some", "subProd", "NonTerminal", "contains", "AbstractProduction", "every", "isBranchingProd", "getProductionDslName", "collectMethods", "rule", "collectorVisitor", "dslMethods", "DslMethodsCollectorVisitor", "init_utils", "init_gast_public", "init_gast_visitor_public", "__name", "_super", "__extends", "_this", "terminal", "key", "has", "subrule", "option", "manySep", "atLeastOne", "atLeastOneSep", "many", "or", "GAstVisitor", "first", "prod", "NonTerminal", "Terminal", "firstForTerminal", "isSequenceProd", "firstForSequence", "isBranchingProd", "firstForBranching", "firstSet", "seq", "nextSubProdIdx", "hasInnerProdsRemaining", "currSubProd", "isLastInnerProdOptional", "isOptionalProd", "uniq", "allAlternativesFirsts", "map", "innerProd", "flatten", "terminal", "init_first", "__esmMin", "init_utils", "init_gast_public", "init_gast", "__name", "IN", "init_constants", "__esmMin", "computeAllProdsFollows", "topProductions", "reSyncFollows", "forEach", "topProd", "currRefsFollow", "ResyncFollowsWalker", "assign", "buildBetweenProdsFollowPrefix", "inner", "occurenceInParent", "IN", "init_rest", "init_first", "init_utils", "init_constants", "init_gast_public", "_super", "__extends", "_this", "__name", "terminal", "currRest", "prevRest", "refProd", "followName", "fullRest", "restProd", "Alternative", "t_in_topProd_follows", "first", "RestWalker", "defaultParserErrorProvider", "defaultGrammarResolverErrorProvider", "defaultGrammarValidatorErrorProvider", "init_errors_public", "__esmMin", "init_tokens_public", "init_utils", "init_gast_public", "init_gast", "_a", "expected", "actual", "previous", "ruleName", "hasLabel", "hasTokenLabel", "expectedMsg", "tokenLabel", "msg", "firstRedundant", "expectedPathsPerAlt", "customUserDescription", "errPrefix", "actualText", "first", "errSuffix", "allLookAheadPaths", "reduce", "result", "currAltPaths", "nextValidTokenSequences", "map", "currPath", "currTokenType", "nextValidSequenceItems", "itemMsg", "idx", "calculatedDescription", "expectedIterationPaths", "topLevelRule", "undefinedRule", "duplicateProds", "getExtraProductionArgument", "prod", "Terminal", "NonTerminal", "__name", "topLevelName", "duplicateProd", "index", "dslName", "getProductionDslName", "extraArgument", "hasExplicitIndex", "rule", "errMsg", "options", "pathMsg", "currTok", "occurrence", "currtok", "currMessage", "pathNames", "currRule", "leftRecursivePath", "Rule", "resolveGrammar", "topLevels", "errMsgProvider", "refResolver", "GastRefResolverVisitor", "init_parser", "init_utils", "init_gast_visitor_public", "__name", "_super", "__extends", "nameToTopRule", "_this", "forEach", "values", "prod", "node", "ref", "msg", "ParserDefinitionErrorType", "GAstVisitor", "possiblePathsFrom", "targetDef", "maxLength", "currPath", "cloneArr", "result", "i", "remainingPathWith", "nextDef", "drop", "__name", "getAlternativesForProd", "definition", "alternatives", "prod", "Alternative", "NonTerminal", "Option", "RepetitionMandatory", "newDef", "Repetition", "RepetitionMandatoryWithSeparator", "Terminal", "RepetitionWithSeparator", "Alternation", "forEach", "currAlt", "isEmpty", "nextPossibleTokensAfter", "initialDef", "tokenVector", "tokMatcher", "maxLookAhead", "EXIT_NON_TERMINAL", "EXIT_NON_TERMINAL_ARR", "EXIT_ALTERNATIVE", "foundCompletePath", "tokenVectorLength", "minimalAlternativesIndex", "possiblePaths", "last", "currDef", "currIdx", "currRuleStack", "currOccurrenceStack", "nextPath", "dropRight", "nextIdx", "actualToken", "newRuleStack", "newOccurrenceStack", "nextPathWithout", "nextPathWith", "secondIteration", "separatorGast", "nthRepetition", "currAltPath", "Rule", "expandTopLevelRule", "topRule", "newCurrOccurrenceStack", "AbstractNextPossibleTokensWalker", "NextAfterTokenWalker", "AbstractNextTerminalAfterProductionWalker", "NextTerminalAfterManyWalker", "NextTerminalAfterManySepWalker", "NextTerminalAfterAtLeastOneWalker", "NextTerminalAfterAtLeastOneSepWalker", "init_rest", "init_utils", "init_first", "init_gast_public", "_super", "__extends", "topProd", "path", "_this", "prevRest", "refProd", "currRest", "fullRest", "RestWalker", "terminal", "restProd", "first", "occurrence", "manyProd", "firstAfterMany", "manySepProd", "firstAfterManySep", "atLeastOneProd", "firstAfterAtLeastOne", "atleastOneSepProd", "firstAfterfirstAfterAtLeastOneSep", "getProdType", "prod", "Option", "PROD_TYPE", "Repetition", "RepetitionMandatory", "RepetitionMandatoryWithSeparator", "RepetitionWithSeparator", "Alternation", "buildLookaheadFuncForOr", "occurrence", "ruleGrammar", "maxLookahead", "hasPredicates", "dynamicTokensEnabled", "laFuncBuilder", "lookAheadPaths", "getLookaheadPathsForOr", "tokenMatcher", "areTokenCategoriesNotUsed", "tokenStructuredMatcherNoCategories", "tokenStructuredMatcher", "buildLookaheadFuncForOptionalProd", "k", "prodType", "lookaheadBuilder", "getLookaheadPathsForOptionalProd", "buildAlternativesLookAheadFunc", "alts", "numOfAlts", "areAllOneTokenLookahead", "every", "currAlt", "currPath", "orAlts", "predicates", "map", "t", "currNumOfPaths", "currPredicate", "nextPath", "j", "currPathLength", "i", "nextToken", "singleTokenAlts", "flatten", "choiceToAlt_1", "reduce", "result", "idx", "forEach", "currTokType", "has", "currExtendingType", "buildSingleAlternativeLookaheadFunction", "alt", "numOfPaths", "singleTokensTypes", "isEmpty", "expectedTokenType", "expectedTokenUniqueKey_1", "choiceToAlt_2", "initializeArrayOfArrays", "size", "pathToHashKeys", "path", "keys", "tokType", "longerKeys", "currShorterKey", "categoriesKeySuffix", "isUniquePrefixHash", "altKnownPathsKeys", "searchPathKeys", "currAltIdx", "otherAltKnownPathsKeys", "searchIdx", "searchKey", "lookAheadSequenceFromAlternatives", "altsDefs", "partialAlts", "possiblePathsFrom", "finalResult", "altsHashes", "currAltPaths", "dict", "item", "currKey", "newData", "pathLength", "currDataset", "altIdx", "currAltPathsAndSuffixes", "currPathIdx", "currPathPrefix", "suffixDef", "prefixKeys", "isUnique", "currAltResult", "containsPath", "newPartialPathsAndSuffixes", "key", "orProd", "visitor", "InsideDefinitionFinderVisitor", "insideDefVisitor", "insideDef", "afterDefWalker", "RestDefinitionFinderWalker", "afterDef", "insideFlat", "Alternative", "afterFlat", "alternative", "searchPath", "compareOtherPath", "otherPath", "searchTok", "otherTok", "matchingTokens", "isStrictPrefixOfPath", "prefix", "other", "otherTokType", "singleAltPaths", "singlePath", "token", "init_utils", "init_interpreter", "init_rest", "init_tokens", "init_gast_public", "init_gast_visitor_public", "__name", "_super", "__extends", "topProd", "targetOccurrence", "targetProdType", "_this", "node", "expectedProdType", "currRest", "prevRest", "optionProd", "atLeastOneProd", "atLeastOneSepProd", "manyProd", "manySepProd", "RestWalker", "targetRef", "expectedProdName", "GAstVisitor", "validateGrammar", "topLevels", "globalMaxLookahead", "tokenTypes", "errMsgProvider", "grammarName", "duplicateErrors", "map", "currTopLevel", "validateDuplicateProductions", "leftRecursionErrors", "currTopRule", "validateNoLeftRecursion", "emptyAltErrors", "ambiguousAltsErrors", "emptyRepetitionErrors", "every", "isEmpty", "validateEmptyOrAlternative", "validateAmbiguousAlternationAlternatives", "validateSomeNonEmptyLookaheadPath", "termsNamespaceConflictErrors", "checkTerminalAndNoneTerminalsNameSpace", "tooManyAltsErrors", "curRule", "validateTooManyAlts", "duplicateRulesError", "validateRuleDoesNotAlreadyExist", "flatten", "topLevelRule", "collectorVisitor", "OccurrenceValidationCollector", "allRuleProductions", "productionGroups", "groupBy", "identifyProductionForDuplicates", "duplicates", "pick", "currGroup", "errors", "values", "currDuplicates", "firstProd", "first", "msg", "dslName", "getProductionDslName", "defError", "ParserDefinitionErrorType", "param", "getExtraProductionArgument", "prod", "Terminal", "NonTerminal", "rule", "allRules", "className", "occurrences", "reduce", "result", "errMsg", "validateRuleIsOverridden", "ruleName", "definedRulesNames", "contains", "topRule", "currRule", "path", "nextNonTerminals", "getFirstNoneTerminal", "foundLeftRecursion", "validNextSteps", "difference", "errorsFromNextSteps", "currRefRule", "newPath", "cloneArr", "definition", "Alternative", "Option", "RepetitionMandatory", "RepetitionMandatoryWithSeparator", "RepetitionWithSeparator", "Repetition", "Alternation", "currSubDef", "isFirstOptional", "isOptionalProd", "hasMore", "rest", "drop", "orCollector", "OrCollector", "ors", "currOr", "exceptLast", "dropRight", "currErrors", "currAlternative", "currAltIdx", "possibleFirstInAlt", "nextPossibleTokensAfter", "compact", "reject", "currOccurrence", "actualMaxLookahead", "alternatives", "getLookaheadPathsForOr", "altsAmbiguityErrors", "checkAlternativesAmbiguities", "altsPrefixAmbiguityErrors", "checkPrefixAlternativesAmbiguities", "topLevelRules", "maxLookahead", "forEach", "RepetionCollector", "currProd", "prodType", "getProdType", "paths", "getLookaheadPathsForOptionalProd", "pathsInsideProduction", "alternation", "foundAmbiguousPaths", "identicalAmbiguities", "currAlt", "currPath", "altsCurrPathAppearsIn", "currOtherAlt", "currOtherAltIdx", "containsPath", "currAmbDescriptor", "ambgIndices", "currMessage", "pathsAndIndices", "idx", "currPathsAndIdx", "currPathAndIdx", "alternativeGast", "targetIdx", "targetPath", "prefixAmbiguitiesPathsAndIndices", "findAll", "searchPathAndIdx", "isStrictPrefixOfPath", "currPathPrefixErrors", "currAmbPathAndIdx", "occurrence", "message", "tokenNames", "currToken", "currRuleName", "init_utils", "init_parser", "init_gast", "init_lookahead", "init_interpreter", "init_gast_public", "init_gast_visitor_public", "__name", "_super", "__extends", "_this", "subrule", "option", "manySep", "atLeastOne", "atLeastOneSep", "many", "or", "terminal", "GAstVisitor", "node", "resolveGrammar", "options", "defaults", "defaultGrammarResolverErrorProvider", "topRulesTable", "forEach", "rule", "validateGrammar", "defaultGrammarValidatorErrorProvider", "assignOccurrenceIndices", "currRule", "methodsCollector", "DslMethodsCollectorVisitor", "methods", "currMethod", "arrIdx", "init_gast_resolver_public", "__esmMin", "init_utils", "init_resolver", "init_checks", "init_errors_public", "init_gast", "__name", "isRecognitionException", "error", "contains", "RECOGNITION_EXCEPTION_NAMES", "MISMATCHED_TOKEN_EXCEPTION", "NO_VIABLE_ALT_EXCEPTION", "EARLY_EXIT_EXCEPTION", "NOT_ALL_INPUT_PARSED_EXCEPTION", "RecognitionException", "MismatchedTokenException", "NoViableAltException", "NotAllInputParsedException", "EarlyExitException", "init_utils", "__name", "_super", "__extends", "message", "token", "_this", "_newTarget", "previousToken", "InRuleRecoveryException", "message", "IN_RULE_RECOVERY_EXCEPTION", "attemptInRepetitionRecovery", "prodFunc", "args", "lookaheadFunc", "dslMethodIdx", "prodOccurrence", "nextToksWalker", "notStuck", "key", "firstAfterRepInfo", "currRuleName", "ruleGrammar", "walker", "expectTokAfterLastMatch", "nextTokIdx", "isEndOfRule", "EOF", "EOF_FOLLOW_KEY", "Recoverable", "init_recoverable", "__esmMin", "init_tokens_public", "init_utils", "init_exceptions_public", "init_constants", "init_parser", "__name", "config", "has", "DEFAULT_PARSER_CONFIG", "tokType", "tokToInsert", "createTokenInstance", "grammarRule", "grammarRuleArgs", "lookAheadFunc", "expectedTokType", "_this", "reSyncTokType", "savedLexerState", "resyncedTokens", "passedResyncPoint", "nextTokenWithoutResync", "currToken", "generateErrorMessage", "previousToken", "msg", "error", "MismatchedTokenException", "dropRight", "tokIdxInRule", "grammarPath", "follows", "nextTok", "expectedToken", "isEmpty", "mismatchedTok", "isMisMatchedTokInFollows", "find", "possibleFollowsTokType", "isNextTokenWhatIsExpected", "tokenTypeIdx", "followKey", "currentRuleReSyncSet", "contains", "allPossibleReSyncTokTypes", "nextToken", "k", "nextTokenType", "currRuleShortName", "currRuleIdx", "prevRuleShortName", "explicitRuleStack", "explicitOccurrenceStack", "map", "ruleName", "idx", "followStack", "currKey", "flatten", "followName", "IN", "token", "resyncTokens", "pathRuleStack", "pathOccurrenceStack", "cloneArr", "currShortName", "getKeyForAutomaticLookahead", "ruleIdx", "dslMethodIdx", "occurrence", "BITS_FOR_METHOD_TYPE", "BITS_FOR_OCCURRENCE_IDX", "BITS_FOR_ALT_IDX", "OR_IDX", "OPTION_IDX", "MANY_IDX", "AT_LEAST_ONE_IDX", "MANY_SEP_IDX", "AT_LEAST_ONE_SEP_IDX", "BITS_START_FOR_ALT_IDX", "init_keys", "__esmMin", "__name", "LooksAhead", "init_looksahead", "__esmMin", "init_lookahead", "init_utils", "init_parser", "init_keys", "init_gast", "__name", "config", "has", "DEFAULT_PARSER_CONFIG", "isES2015MapSupported", "rules", "_this", "forEach", "currRule", "_a", "collectMethods", "alternation", "repetition", "option", "repetitionMandatory", "repetitionMandatoryWithSeparator", "repetitionWithSeparator", "currProd", "prodIdx", "getProductionDslName", "laFunc", "buildLookaheadFuncForOr", "key", "getKeyForAutomaticLookahead", "OR_IDX", "MANY_IDX", "PROD_TYPE", "OPTION_IDX", "AT_LEAST_ONE_IDX", "AT_LEAST_ONE_SEP_IDX", "MANY_SEP_IDX", "rule", "prodOccurrence", "prodKey", "prodType", "prodMaxLookahead", "dslMethodName", "buildLookaheadFuncForOptionalProd", "alt", "tokenMatcher", "dynamicTokensEnabled", "buildSingleAlternativeLookaheadFunction", "alts", "hasPredicates", "buildAlternativesLookAheadFunc", "dslMethodIdx", "occurrence", "currRuleShortName", "value", "setNodeLocationOnlyOffset", "currNodeLocation", "newLocationInfo", "setNodeLocationFull", "addTerminalToCst", "node", "token", "tokenTypeName", "addNoneTerminalToCst", "ruleName", "ruleResult", "init_cst", "__esmMin", "__name", "classNameFromInstance", "instance", "functionName", "func", "existingNameProp", "defineNameProp", "obj", "nameValue", "namePropDescriptor", "NAME", "isUndefined", "init_lang_extensions", "__esmMin", "init_utils", "__name", "defaultVisit", "ctx", "param", "childrenNames", "keys", "childrenNamesLength", "i", "currChildName", "currChildArray", "currChildArrayLength", "j", "currChild", "createBaseSemanticVisitorConstructor", "grammarName", "ruleNames", "derivedConstructor", "__name", "defineNameProp", "semanticProto", "cstNode", "isArray", "isUndefined", "semanticDefinitionErrors", "validateVisitor", "isEmpty", "errorMessages", "map", "currDefError", "functionName", "createBaseVisitorConstructorWithDefaults", "baseConstructor", "withDefaultsProto", "forEach", "ruleName", "visitorInstance", "missingErrors", "validateMissingCstMethods", "redundantErrors", "validateRedundantMethods", "errors", "currRuleName", "isFunction", "CstVisitorDefinitionError", "compact", "prop", "contains", "VALID_PROP_NAMES", "init_cst_visitor", "__esmMin", "init_utils", "init_lang_extensions", "TreeBuilder", "init_tree_builder", "__esmMin", "init_cst", "init_utils", "init_cst_visitor", "init_parser", "__name", "config", "has", "DEFAULT_PARSER_CONFIG", "NOOP", "setNodeLocationFull", "setNodeLocationOnlyOffset", "cstNode", "nextToken", "fullRuleName", "shortName", "ruleCstNode", "prevToken", "loc", "key", "consumedToken", "rootCst", "addTerminalToCst", "ruleCstResult", "ruleName", "preCstNode", "addNoneTerminalToCst", "isUndefined", "newBaseCstVisitorConstructor", "createBaseSemanticVisitorConstructor", "keys", "newConstructor", "createBaseVisitorConstructorWithDefaults", "ruleStack", "occurrenceStack", "LexerAdapter", "init_lexer_adapter", "__esmMin", "init_parser", "__name", "newInput", "END_OF_FILE", "howMuch", "soughtIdx", "newState", "RecognizerApi", "init_recognizer_api", "__esmMin", "init_utils", "init_exceptions_public", "init_parser", "init_errors_public", "init_checks", "init_gast_public", "__name", "impl", "idx", "tokType", "options", "ruleToCall", "actionORMethodDef", "altsOrOpts", "name", "implementation", "config", "DEFAULT_RULE_CONFIG", "contains", "errMsg", "defaultGrammarValidatorErrorProvider", "error", "ParserDefinitionErrorType", "ruleImplementation", "ruleErrors", "validateRuleIsOverridden", "grammarRule", "args", "orgState", "e", "isRecognitionException", "serializeGrammar", "values", "RecognizerEngine", "init_recognizer_engine", "__esmMin", "init_utils", "init_keys", "init_exceptions_public", "init_lookahead", "init_interpreter", "init_parser", "init_recoverable", "init_tokens_public", "init_tokens", "init_lang_extensions", "__name", "tokenVocabulary", "config", "classNameFromInstance", "tokenStructuredMatcherNoCategories", "has", "isArray", "isEmpty", "reduce", "acc", "tokType", "every", "flatten", "values", "isTokenType", "allTokenTypes", "uniqueTokens", "uniq", "isObject", "cloneObj", "EOF", "noTokenCategoriesUsed", "tokenConstructor", "tokenStructuredMatcher", "augmentTokenTypes", "ruleName", "impl", "resyncEnabled", "DEFAULT_RULE_CONFIG", "recoveryValueFunc", "shortName", "BITS_FOR_METHOD_TYPE", "BITS_FOR_OCCURRENCE_IDX", "invokeRuleWithTry", "args", "cst", "e", "wrappedGrammarRule", "idxInCallingRule", "ruleNamePropName", "resyncEnabledConfig", "isFirstInvokedRule", "reSyncEnabled", "isRecognitionException", "recogError", "reSyncTokType", "partialCstResult", "actionORMethodDef", "occurrence", "key", "OPTION_IDX", "_this", "lookAheadFunc", "action", "predicate", "orgLookaheadFunction_1", "prodOccurrence", "laKey", "AT_LEAST_ONE_IDX", "orgLookaheadFunction_2", "notStuck", "PROD_TYPE", "NextTerminalAfterAtLeastOneWalker", "options", "AT_LEAST_ONE_SEP_IDX", "separator", "firstIterationLookaheadFunc", "separatorLookAheadFunc", "NextTerminalAfterAtLeastOneSepWalker", "MANY_IDX", "lookaheadFunction", "orgLookaheadFunction_3", "NextTerminalAfterManyWalker", "MANY_SEP_IDX", "firstIterationLaFunc", "NextTerminalAfterManySepWalker", "nextTerminalAfterWalker", "beforeIteration", "afterIteration", "altsOrOpts", "OR_IDX", "alts", "laFunc", "altIdxToTake", "chosenAlternative", "firstRedundantTok", "errMsg", "NotAllInputParsedException", "ruleToCall", "idx", "ruleResult", "consumedToken", "nextToken", "eFromConsumption", "msg", "previousToken", "MismatchedTokenException", "follows", "eFromInRuleRecovery", "IN_RULE_RECOVERY_EXCEPTION", "savedErrors", "savedRuleStack", "cloneArr", "newState", "fullName", "ErrorHandler", "init_error_handler", "__esmMin", "init_exceptions_public", "init_utils", "init_lookahead", "init_parser", "__name", "config", "has", "DEFAULT_PARSER_CONFIG", "error", "isRecognitionException", "cloneArr", "newErrors", "occurrence", "prodType", "userDefinedErrMsg", "ruleName", "ruleGrammar", "lookAheadPathsPerAlternative", "getLookaheadPathsForOptionalProd", "insideProdPaths", "actualTokens", "i", "msg", "EarlyExitException", "errMsgTypes", "getLookaheadPathsForOr", "previousToken", "errMsg", "NoViableAltException", "ContentAssist", "init_context_assist", "__esmMin", "init_interpreter", "init_utils", "__name", "startRuleName", "precedingInput", "startRuleGast", "isUndefined", "nextPossibleTokensAfter", "grammarPath", "topRuleName", "first", "gastProductions", "topProduction", "nextPossibleTokenTypes", "NextAfterTokenWalker", "recordProd", "prodConstructor", "mainProdArg", "occurrence", "handleSep", "assertMethodIdxIsValid", "prevProd", "peek", "grammarAction", "isFunction", "newProd", "has", "RECORDING_NULL_OBJECT", "recordOrProd", "_this", "hasOptions", "isArray", "alts", "newOrProd", "Alternation", "hasPredicates", "some", "currAlt", "forEach", "currAltFlat", "Alternative", "getIdxSuffix", "idx", "MAX_METHOD_IDX", "error", "HANDLE_SEPARATOR", "RFT", "RECORDING_PHASE_TOKEN", "RECORDING_PHASE_CSTNODE", "GastRecorder", "init_gast_recorder", "__esmMin", "init_utils", "init_gast_public", "init_lexer_public", "init_tokens", "init_tokens_public", "init_parser", "init_keys", "BITS_FOR_OCCURRENCE_IDX", "createToken", "Lexer", "augmentTokenTypes", "createTokenInstance", "__name", "config", "i", "arg1", "arg2", "impl", "grammarRule", "args", "howMuch", "END_OF_FILE", "name", "def", "newTopLevelRule", "Rule", "originalError", "actionORMethodDef", "Option", "RepetitionMandatory", "options", "RepetitionMandatoryWithSeparator", "Repetition", "RepetitionWithSeparator", "altsOrOpts", "ruleToCall", "ruleName", "newNoneTerminal", "NonTerminal", "tokType", "hasShortKeyProperty", "Terminal", "PerformanceTracer", "init_perf_tracer", "__esmMin", "init_utils", "init_parser", "__name", "config", "has", "userTraceInitPerf", "traceIsNumber", "DEFAULT_PARSER_CONFIG", "phaseDesc", "phaseImpl", "indent", "_a", "timer", "time", "value", "traceMethod", "EMPTY_ALT", "value", "END_OF_FILE", "DEFAULT_PARSER_CONFIG", "DEFAULT_RULE_CONFIG", "ParserDefinitionErrorType", "Parser", "CstParser", "EmbeddedActionsParser", "init_utils", "init_follow", "init_tokens_public", "init_errors_public", "init_gast_resolver_public", "init_recoverable", "init_looksahead", "init_tree_builder", "init_lexer_adapter", "init_recognizer_api", "init_recognizer_engine", "init_error_handler", "init_context_assist", "init_gast_recorder", "init_perf_tracer", "createTokenInstance", "EOF", "defaultParserErrorProvider", "__name", "tokenVocabulary", "config", "that", "has", "parserInstance", "_this", "defErrorsMsgs", "className", "toFastProperties", "forEach", "currRuleName", "wrappedRule", "originalGrammarAction", "recordedRuleGast", "resolverErrors", "resolveGrammar", "values", "isEmpty", "validationErrors", "validateGrammar", "defaultGrammarValidatorErrorProvider", "allFollows", "computeAllProdsFollows", "map", "defError", "applyMixins", "Recoverable", "LooksAhead", "TreeBuilder", "LexerAdapter", "RecognizerEngine", "RecognizerApi", "ErrorHandler", "ContentAssist", "GastRecorder", "PerformanceTracer", "_super", "__extends", "configClone", "cloneObj", "createSyntaxDiagramsCode", "grammar", "_a", "_b", "_c", "resourceBase", "VERSION", "_d", "css", "header", "cssHtml", "scripts", "diagramsDiv", "serializedGrammar", "initLogic", "init_render_public", "__esmMin", "init_version", "__name", "genUmdModule", "options", "genClass", "genWrapperFunction", "result", "genAllRules", "rules", "rulesText", "map", "currRule", "genRule", "prod", "n", "indent", "NL", "genDefinition", "genTerminal", "name", "genNonTerminal", "genAlternation", "alts", "altDef", "genSingleAlt", "genProd", "NonTerminal", "Option", "genDSLRule", "RepetitionMandatory", "RepetitionMandatoryWithSeparator", "RepetitionWithSeparator", "Repetition", "Alternation", "Terminal", "Alternative", "dslName", "genDefFunction", "definition", "def", "forEach", "howMuch", "text", "spaces", "init_generate", "__esmMin", "init_utils", "init_gast_public", "__name", "generateParserFactory", "options", "wrapperText", "genWrapperFunction", "constructorWrapper", "config", "generateParserModule", "genUmdModule", "init_generate_public", "__esmMin", "init_generate", "__name", "api_exports", "__export", "Alternation", "Alternative", "CstParser", "EMPTY_ALT", "EOF", "EarlyExitException", "EmbeddedActionsParser", "GAstVisitor", "Lexer", "LexerDefinitionErrorType", "MismatchedTokenException", "NoViableAltException", "NonTerminal", "NotAllInputParsedException", "Option", "Parser", "ParserDefinitionErrorType", "Repetition", "RepetitionMandatory", "RepetitionMandatoryWithSeparator", "RepetitionWithSeparator", "Rule", "Terminal", "VERSION", "assignOccurrenceIndices", "clearCache", "createSyntaxDiagramsCode", "createToken", "createTokenInstance", "defaultGrammarResolverErrorProvider", "defaultGrammarValidatorErrorProvider", "defaultLexerErrorProvider", "defaultParserErrorProvider", "generateParserFactory", "generateParserModule", "isRecognitionException", "resolveGrammar", "serializeGrammar", "serializeProduction", "tokenLabel", "tokenMatcher", "tokenName", "validateGrammar", "init_api", "__esmMin", "init_version", "init_parser", "init_lexer_public", "init_tokens_public", "init_errors_public", "init_exceptions_public", "init_lexer_errors_public", "init_gast_public", "init_gast_visitor_public", "init_gast_resolver_public", "init_render_public", "init_generate_public", "__name", "require_lexer", "__commonJSMin", "exports", "module", "createTokenOrg", "Lexer", "fragments", "f", "FRAGMENT", "name", "def", "__name", "makePattern", "strings", "args", "combined", "pattern", "tokensArray", "tokensDictionary", "createToken", "options", "newTokenType", "Comment", "CData", "DocType", "IgnoredDTD", "EntityRef", "CharRef", "SEA_WS", "XMLDeclOpen", "SLASH_OPEN", "INVALID_SLASH_OPEN", "PROCESSING_INSTRUCTION", "OPEN", "INVALID_OPEN_INSIDE", "TEXT", "CLOSE", "SPECIAL_CLOSE", "SLASH_CLOSE", "SLASH", "STRING", "EQUALS", "Name", "S", "xmlLexerDefinition", "xmlLexer", "require_parser", "__commonJSMin", "exports", "module", "CstParser", "tokenMatcher", "t", "_Parser", "$", "expectedTokType", "allPossibleReSyncTokTypes", "nextToken", "k", "foundMatch", "resyncTokType", "__name", "Parser", "xmlParser", "require_api", "__commonJSMin", "exports", "module", "xmlLexer", "xmlParser", "__name", "text", "lexResult", "require_lodash", "__commonJSMin", "exports", "module", "undefined", "VERSION", "LARGE_ARRAY_SIZE", "CORE_ERROR_TEXT", "FUNC_ERROR_TEXT", "INVALID_TEMPL_VAR_ERROR_TEXT", "HASH_UNDEFINED", "MAX_MEMOIZE_SIZE", "PLACEHOLDER", "CLONE_DEEP_FLAG", "CLONE_FLAT_FLAG", "CLONE_SYMBOLS_FLAG", "COMPARE_PARTIAL_FLAG", "COMPARE_UNORDERED_FLAG", "WRAP_BIND_FLAG", "WRAP_BIND_KEY_FLAG", "WRAP_CURRY_BOUND_FLAG", "WRAP_CURRY_FLAG", "WRAP_CURRY_RIGHT_FLAG", "WRAP_PARTIAL_FLAG", "WRAP_PARTIAL_RIGHT_FLAG", "WRAP_ARY_FLAG", "WRAP_REARG_FLAG", "WRAP_FLIP_FLAG", "DEFAULT_TRUNC_LENGTH", "DEFAULT_TRUNC_OMISSION", "HOT_COUNT", "HOT_SPAN", "LAZY_FILTER_FLAG", "LAZY_MAP_FLAG", "LAZY_WHILE_FLAG", "INFINITY", "MAX_SAFE_INTEGER", "MAX_INTEGER", "NAN", "MAX_ARRAY_LENGTH", "MAX_ARRAY_INDEX", "HALF_MAX_ARRAY_LENGTH", "wrapFlags", "argsTag", "arrayTag", "asyncTag", "boolTag", "dateTag", "domExcTag", "errorTag", "funcTag", "genTag", "mapTag", "numberTag", "nullTag", "objectTag", "promiseTag", "proxyTag", "regexpTag", "setTag", "stringTag", "symbolTag", "undefinedTag", "weakMapTag", "weakSetTag", "arrayBufferTag", "dataViewTag", "float32Tag", "float64Tag", "int8Tag", "int16Tag", "int32Tag", "uint8Tag", "uint8ClampedTag", "uint16Tag", "uint32Tag", "reEmptyStringLeading", "reEmptyStringMiddle", "reEmptyStringTrailing", "reEscapedHtml", "reUnescapedHtml", "reHasEscapedHtml", "reHasUnescapedHtml", "reEscape", "reEvaluate", "reInterpolate", "reIsDeepProp", "reIsPlainProp", "rePropName", "reRegExpChar", "reHasRegExpChar", "reTrimStart", "reWhitespace", "reWrapComment", "reWrapDetails", "reSplitDetails", "reAsciiWord", "reForbiddenIdentifierChars", "reEscapeChar", "reEsTemplate", "reFlags", "reIsBadHex", "reIsBinary", "reIsHostCtor", "reIsOctal", "reIsUint", "reLatin", "reNoMatch", "reUnescapedString", "rsAstralRange", "rsComboMarksRange", "reComboHalfMarksRange", "rsComboSymbolsRange", "rsComboRange", "rsDingbatRange", "rsLowerRange", "rsMathOpRange", "rsNonCharRange", "rsPunctuationRange", "rsSpaceRange", "rsUpperRange", "rsVarRange", "rsBreakRange", "rsApos", "rsAstral", "rsBreak", "rsCombo", "rsDigits", "rsDingbat", "rsLower", "rsMisc", "rsFitz", "rsModifier", "rsNonAstral", "rsRegional", "rsSurrPair", "rsUpper", "rsZWJ", "rsMiscLower", "rsMiscUpper", "rsOptContrLower", "rsOptContrUpper", "reOptMod", "rsOptVar", "rsOptJoin", "rsOrdLower", "rsOrdUpper", "rsSeq", "rsEmoji", "rsSymbol", "reApos", "reComboMark", "reUnicode", "reUnicodeWord", "reHasUnicode", "reHasUnicodeWord", "contextProps", "templateCounter", "typedArrayTags", "cloneableTags", "deburredLetters", "htmlEscapes", "htmlUnescapes", "stringEscapes", "freeParseFloat", "freeParseInt", "freeGlobal", "freeSelf", "root", "freeExports", "freeModule", "moduleExports", "freeProcess", "nodeUtil", "types", "nodeIsArrayBuffer", "nodeIsDate", "nodeIsMap", "nodeIsRegExp", "nodeIsSet", "nodeIsTypedArray", "apply", "func", "thisArg", "args", "__name", "arrayAggregator", "array", "setter", "iteratee", "accumulator", "index", "length", "value", "arrayEach", "arrayEachRight", "arrayEvery", "predicate", "arrayFilter", "resIndex", "result", "arrayIncludes", "baseIndexOf", "arrayIncludesWith", "comparator", "arrayMap", "arrayPush", "values", "offset", "arrayReduce", "initAccum", "arrayReduceRight", "arraySome", "asciiSize", "baseProperty", "asciiToArray", "string", "asciiWords", "baseFindKey", "collection", "eachFunc", "key", "baseFindIndex", "fromIndex", "fromRight", "strictIndexOf", "baseIsNaN", "baseIndexOfWith", "baseMean", "baseSum", "object", "basePropertyOf", "baseReduce", "baseSortBy", "comparer", "current", "baseTimes", "n", "baseToPairs", "props", "baseTrim", "trimmedEndIndex", "baseUnary", "baseValues", "cacheHas", "cache", "charsStartIndex", "strSymbols", "chrSymbols", "charsEndIndex", "countHolders", "placeholder", "deburrLetter", "escapeHtmlChar", "escapeStringChar", "chr", "getValue", "hasUnicode", "hasUnicodeWord", "iteratorToArray", "iterator", "data", "mapToArray", "map", "overArg", "transform", "arg", "replaceHolders", "setToArray", "set", "setToPairs", "strictLastIndexOf", "stringSize", "unicodeSize", "stringToArray", "unicodeToArray", "unescapeHtmlChar", "unicodeWords", "runInContext", "context", "_", "Array", "Date", "Error", "Function", "Math", "Object", "RegExp", "String", "TypeError", "arrayProto", "funcProto", "objectProto", "coreJsData", "funcToString", "hasOwnProperty", "idCounter", "maskSrcKey", "uid", "nativeObjectToString", "objectCtorString", "oldDash", "reIsNative", "Buffer", "Symbol", "Uint8Array", "allocUnsafe", "getPrototype", "objectCreate", "propertyIsEnumerable", "splice", "spreadableSymbol", "symIterator", "symToStringTag", "defineProperty", "getNative", "ctxClearTimeout", "ctxNow", "ctxSetTimeout", "nativeCeil", "nativeFloor", "nativeGetSymbols", "nativeIsBuffer", "nativeIsFinite", "nativeJoin", "nativeKeys", "nativeMax", "nativeMin", "nativeNow", "nativeParseInt", "nativeRandom", "nativeReverse", "DataView", "Map", "Promise", "Set", "WeakMap", "nativeCreate", "metaMap", "realNames", "dataViewCtorString", "toSource", "mapCtorString", "promiseCtorString", "setCtorString", "weakMapCtorString", "symbolProto", "symbolValueOf", "symbolToString", "lodash", "isObjectLike", "isArray", "LazyWrapper", "LodashWrapper", "wrapperClone", "baseCreate", "proto", "isObject", "baseLodash", "chainAll", "lazyClone", "copyArray", "lazyReverse", "lazyValue", "dir", "isArr", "isRight", "arrLength", "view", "getView", "start", "end", "iteratees", "iterLength", "takeCount", "baseWrapperValue", "outer", "iterIndex", "type", "computed", "Hash", "entries", "entry", "hashClear", "hashDelete", "hashGet", "hashHas", "hashSet", "ListCache", "listCacheClear", "listCacheDelete", "assocIndexOf", "lastIndex", "listCacheGet", "listCacheHas", "listCacheSet", "MapCache", "mapCacheClear", "mapCacheDelete", "getMapData", "mapCacheGet", "mapCacheHas", "mapCacheSet", "size", "SetCache", "setCacheAdd", "setCacheHas", "Stack", "stackClear", "stackDelete", "stackGet", "stackHas", "stackSet", "pairs", "arrayLikeKeys", "inherited", "isArg", "isArguments", "isBuff", "isBuffer", "isType", "isTypedArray", "skipIndexes", "isIndex", "arraySample", "baseRandom", "arraySampleSize", "shuffleSelf", "baseClamp", "arrayShuffle", "assignMergeValue", "eq", "baseAssignValue", "assignValue", "objValue", "baseAggregator", "baseEach", "baseAssign", "source", "copyObject", "keys", "baseAssignIn", "keysIn", "baseAt", "paths", "skip", "get", "number", "lower", "upper", "baseClone", "bitmask", "customizer", "stack", "isDeep", "isFlat", "isFull", "initCloneArray", "tag", "getTag", "isFunc", "cloneBuffer", "initCloneObject", "copySymbolsIn", "copySymbols", "initCloneByTag", "stacked", "isSet", "subValue", "isMap", "keysFunc", "getAllKeysIn", "getAllKeys", "baseConforms", "baseConformsTo", "baseDelay", "wait", "setTimeout", "baseDifference", "includes", "isCommon", "valuesLength", "valuesIndex", "createBaseEach", "baseForOwn", "baseEachRight", "baseForOwnRight", "baseEvery", "baseExtremum", "isSymbol", "baseFill", "toInteger", "toLength", "baseFilter", "baseFlatten", "depth", "isStrict", "isFlattenable", "baseFor", "createBaseFor", "baseForRight", "baseFunctions", "isFunction", "baseGet", "path", "castPath", "toKey", "baseGetAllKeys", "symbolsFunc", "baseGetTag", "getRawTag", "objectToString", "baseGt", "other", "baseHas", "baseHasIn", "baseInRange", "baseIntersection", "arrays", "othLength", "othIndex", "caches", "maxLength", "seen", "baseInverter", "baseInvoke", "parent", "last", "baseIsArguments", "baseIsArrayBuffer", "baseIsDate", "baseIsEqual", "baseIsEqualDeep", "equalFunc", "objIsArr", "othIsArr", "objTag", "othTag", "objIsObj", "othIsObj", "isSameTag", "equalArrays", "equalByTag", "objIsWrapped", "othIsWrapped", "objUnwrapped", "othUnwrapped", "equalObjects", "baseIsMap", "baseIsMatch", "matchData", "noCustomizer", "srcValue", "baseIsNative", "isMasked", "pattern", "baseIsRegExp", "baseIsSet", "baseIsTypedArray", "isLength", "baseIteratee", "identity", "baseMatchesProperty", "baseMatches", "property", "baseKeys", "isPrototype", "baseKeysIn", "nativeKeysIn", "isProto", "baseLt", "baseMap", "isArrayLike", "getMatchData", "matchesStrictComparable", "isKey", "isStrictComparable", "hasIn", "baseMerge", "srcIndex", "baseMergeDeep", "newValue", "safeGet", "mergeFunc", "isTyped", "isArrayLikeObject", "cloneTypedArray", "isPlainObject", "toPlainObject", "baseNth", "baseOrderBy", "orders", "getIteratee", "criteria", "compareMultiple", "basePick", "basePickBy", "baseSet", "basePropertyDeep", "basePullAll", "indexOf", "basePullAt", "indexes", "previous", "baseUnset", "baseRange", "step", "baseRepeat", "baseRest", "setToString", "overRest", "baseSample", "baseSampleSize", "nested", "baseSetData", "baseSetToString", "constant", "baseShuffle", "baseSlice", "baseSome", "baseSortedIndex", "retHighest", "low", "high", "mid", "baseSortedIndexBy", "valIsNaN", "valIsNull", "valIsSymbol", "valIsUndefined", "othIsDefined", "othIsNull", "othIsReflexive", "othIsSymbol", "setLow", "baseSortedUniq", "baseToNumber", "baseToString", "baseUniq", "createSet", "seenIndex", "baseUpdate", "updater", "baseWhile", "isDrop", "actions", "action", "baseXor", "baseZipObject", "assignFunc", "valsLength", "castArrayLikeObject", "castFunction", "stringToPath", "toString", "castRest", "castSlice", "clearTimeout", "id", "buffer", "cloneArrayBuffer", "arrayBuffer", "cloneDataView", "dataView", "cloneRegExp", "regexp", "cloneSymbol", "symbol", "typedArray", "compareAscending", "valIsDefined", "valIsReflexive", "objCriteria", "othCriteria", "ordersLength", "order", "composeArgs", "partials", "holders", "isCurried", "argsIndex", "argsLength", "holdersLength", "leftIndex", "leftLength", "rangeLength", "isUncurried", "composeArgsRight", "holdersIndex", "rightIndex", "rightLength", "isNew", "getSymbols", "getSymbolsIn", "createAggregator", "initializer", "createAssigner", "assigner", "sources", "guard", "isIterateeCall", "iterable", "createBind", "isBind", "Ctor", "createCtor", "wrapper", "fn", "createCaseFirst", "methodName", "trailing", "createCompounder", "callback", "words", "deburr", "thisBinding", "createCurry", "arity", "getHolder", "createRecurry", "createHybrid", "createFind", "findIndexFunc", "createFlow", "flatRest", "funcs", "prereq", "getFuncName", "funcName", "getData", "isLaziable", "partialsRight", "holdersRight", "argPos", "ary", "isAry", "isBindKey", "isFlip", "holdersCount", "newHolders", "reorder", "createInverter", "toIteratee", "createMathOperation", "operator", "defaultValue", "createOver", "arrayFunc", "createPadding", "chars", "charsLength", "createPartial", "createRange", "toFinite", "createRelationalOperation", "toNumber", "wrapFunc", "isCurry", "newHoldersRight", "newPartials", "newPartialsRight", "newData", "setData", "setWrapToString", "createRound", "precision", "pair", "noop", "createToPairs", "createWrap", "mergeData", "customDefaultsAssignIn", "customDefaultsMerge", "customOmitClone", "isPartial", "arrStacked", "othStacked", "arrValue", "othValue", "compared", "convert", "objProps", "objLength", "othProps", "objStacked", "skipCtor", "objCtor", "othCtor", "flatten", "otherFunc", "isKeyable", "isOwn", "unmasked", "stubArray", "ctorString", "transforms", "getWrapDetails", "match", "hasPath", "hasFunc", "insertWrapDetails", "details", "isMaskable", "stubFalse", "memoizeCapped", "memoize", "srcBitmask", "newBitmask", "isCombo", "otherArgs", "oldArray", "shortOut", "reference", "updateWrapDetails", "count", "lastCalled", "stamp", "remaining", "rand", "quote", "subString", "chunk", "compact", "concat", "difference", "differenceBy", "differenceWith", "drop", "dropRight", "dropRightWhile", "dropWhile", "fill", "findIndex", "findLastIndex", "flattenDeep", "flattenDepth", "fromPairs", "head", "initial", "intersection", "mapped", "intersectionBy", "intersectionWith", "join", "separator", "lastIndexOf", "nth", "pull", "pullAll", "pullAllBy", "pullAllWith", "pullAt", "remove", "reverse", "slice", "sortedIndex", "sortedIndexBy", "sortedIndexOf", "sortedLastIndex", "sortedLastIndexBy", "sortedLastIndexOf", "sortedUniq", "sortedUniqBy", "tail", "take", "takeRight", "takeRightWhile", "takeWhile", "union", "unionBy", "unionWith", "uniq", "uniqBy", "uniqWith", "unzip", "group", "unzipWith", "without", "xor", "xorBy", "xorWith", "zip", "zipObject", "zipObjectDeep", "zipWith", "chain", "tap", "interceptor", "thru", "wrapperAt", "wrapperChain", "wrapperCommit", "wrapperNext", "toArray", "done", "wrapperToIterator", "wrapperPlant", "clone", "wrapperReverse", "wrapped", "wrapperValue", "countBy", "every", "filter", "find", "findLast", "flatMap", "flatMapDeep", "flatMapDepth", "forEach", "forEachRight", "groupBy", "isString", "invokeMap", "keyBy", "orderBy", "partition", "reduce", "reduceRight", "reject", "negate", "sample", "sampleSize", "shuffle", "some", "sortBy", "now", "after", "before", "bind", "bindKey", "curry", "curryRight", "debounce", "options", "lastArgs", "lastThis", "maxWait", "timerId", "lastCallTime", "lastInvokeTime", "leading", "maxing", "invokeFunc", "time", "leadingEdge", "timerExpired", "remainingWait", "timeSinceLastCall", "timeSinceLastInvoke", "timeWaiting", "shouldInvoke", "trailingEdge", "cancel", "flush", "debounced", "isInvoking", "defer", "delay", "flip", "resolver", "memoized", "once", "overArgs", "funcsLength", "partial", "partialRight", "rearg", "rest", "spread", "throttle", "unary", "wrap", "castArray", "cloneWith", "cloneDeep", "cloneDeepWith", "conformsTo", "gt", "gte", "isArrayBuffer", "isBoolean", "isDate", "isElement", "isEmpty", "isEqual", "isEqualWith", "isError", "isFinite", "isInteger", "isMatch", "isMatchWith", "isNaN", "isNumber", "isNative", "isNull", "isNil", "isRegExp", "isSafeInteger", "isUndefined", "isWeakMap", "isWeakSet", "lt", "lte", "sign", "remainder", "isBinary", "toSafeInteger", "assign", "assignIn", "assignInWith", "assignWith", "at", "create", "prototype", "properties", "defaults", "propsIndex", "propsLength", "defaultsDeep", "mergeWith", "findKey", "findLastKey", "forIn", "forInRight", "forOwn", "forOwnRight", "functions", "functionsIn", "has", "invert", "invertBy", "invoke", "mapKeys", "mapValues", "merge", "omit", "omitBy", "pickBy", "pick", "prop", "setWith", "toPairs", "toPairsIn", "isArrLike", "unset", "update", "updateWith", "valuesIn", "clamp", "inRange", "random", "floating", "temp", "camelCase", "word", "capitalize", "upperFirst", "endsWith", "target", "position", "escape", "escapeRegExp", "kebabCase", "lowerCase", "lowerFirst", "pad", "strLength", "padEnd", "padStart", "parseInt", "radix", "repeat", "replace", "snakeCase", "split", "limit", "startCase", "startsWith", "template", "settings", "imports", "importsKeys", "importsValues", "isEscaping", "isEvaluating", "interpolate", "reDelimiters", "sourceURL", "escapeValue", "interpolateValue", "esTemplateValue", "evaluateValue", "variable", "attempt", "toLower", "toUpper", "trim", "trimEnd", "trimStart", "truncate", "omission", "substring", "newEnd", "unescape", "upperCase", "e", "bindAll", "methodNames", "cond", "conforms", "defaultTo", "flow", "flowRight", "matches", "matchesProperty", "method", "methodOf", "mixin", "noConflict", "nthArg", "over", "overEvery", "overSome", "propertyOf", "range", "rangeRight", "stubObject", "stubString", "stubTrue", "times", "toPath", "uniqueId", "prefix", "add", "augend", "addend", "ceil", "divide", "dividend", "divisor", "floor", "max", "maxBy", "mean", "meanBy", "min", "minBy", "multiply", "multiplier", "multiplicand", "round", "subtract", "minuend", "subtrahend", "sum", "sumBy", "isFilter", "takeName", "dropName", "checkIteratee", "isTaker", "lodashFunc", "retUnwrapped", "isLazy", "useLazy", "isHybrid", "isUnwrapped", "onlyLazy", "chainName", "require_find_next_textual_token", "__commonJSMin", "exports", "module", "findIndex", "findNextTextualToken", "tokenVector", "prevTokenEndOffset", "nextTokenIdx", "tok", "found", "nextPossibleToken", "__name", "require_xml_ns_key", "__commonJSMin", "exports", "module", "namespaceRegex", "isXMLNamespaceKey", "key", "includeEmptyPrefix", "matchArr", "__name", "getXMLNamespaceKeyPrefix", "require_api", "__commonJSMin", "exports", "module", "findNextTextualToken", "isXMLNamespaceKey", "getXMLNamespaceKeyPrefix", "require_utils", "__commonJSMin", "exports", "module", "reduce", "has", "isArray", "getAstChildrenReflective", "astParent", "result", "prop", "name", "__name", "require_constants", "__commonJSMin", "exports", "module", "require_build_ast", "__commonJSMin", "exports", "module", "BaseXmlCstVisitor", "last", "forEach", "reduce", "map", "pick", "sortBy", "isEmpty", "isArray", "assign", "findNextTextualToken", "isXMLNamespaceKey", "getXMLNamespaceKeyPrefix", "getAstChildrenReflective", "DEFAULT_NS", "buildAst", "docCst", "tokenVector", "AstBuilder", "xmlDocAst", "invalidSyntax", "updateNamespaces", "__name", "_CstToAstVisitor", "cstNode", "params", "ctx", "location", "astNode", "setChildrenParent", "_", "elements", "textContents", "handleElementOpenCloseNameRanges", "handleElementOpenCloseBodyRanges", "handleElementAttributeRanges", "isPrologParent", "keyToken", "toXMLToken", "valueToken", "stripQuotes", "allTokens", "sortedTokens", "fullText", "CstToAstVisitor", "astParent", "astChildren", "child", "element", "prevNamespaces", "currElemNamespaces", "result", "attrib", "prefix", "uri", "emptyMap", "subElem", "token", "startOfXMLToken", "endOfXMLToken", "exists", "tokArr", "quotedText", "nsToParts", "text", "matchResult", "ns", "name", "openNameToken", "nsParts", "openBodyCloseTok", "startOffset", "endOffset", "lastKnownAttribRangeTokenEnd", "nextTextualToken", "require_visit_ast", "__commonJSMin", "exports", "module", "forEach", "isFunction", "getAstChildrenReflective", "accept", "node", "visitor", "astChildren", "childNode", "__name", "require_api", "__commonJSMin", "exports", "module", "buildAst", "accept", "DEFAULT_NS", "src_exports", "__export", "deleteConfigEntityByPath", "exportConfig", "exportConfigEntityByPath", "generateCustomExtension", "generateSchema", "getApiVersion", "getChanges", "getGenericSchema", "getPathToGenericSchema", "getProject", "importConfig", "importProject", "importProjectSchema", "isDirectory", "log", "readDirectory", "__toCommonJS", "import_ux_specification_types", "import_ux_specification_types", "consoleLogger", "args", "type", "_Logger", "concreteLogger", "options", "_len", "_key", "_len2", "_key2", "_len3", "_key3", "_len4", "_key4", "lvl", "prefix", "debugOnly", "moduleName", "__name", "Logger", "baseLogger", "_EventEmitter", "events", "listener", "event", "numListeners", "_ref", "observer", "numTimesAdded", "i", "_ref2", "EventEmitter", "defer", "res", "rej", "promise", "resolve", "reject", "makeString", "object", "copy", "a", "s", "t", "m", "lastOfPathSeparatorRegExp", "getLastOfPath", "path", "Empty", "cleanKey", "key", "canNotTraverseDeeper", "stack", "stackIndex", "setPath", "newValue", "obj", "k", "e", "p", "last", "pushPath", "concat", "getPath", "getPathWithDefaults", "data", "defaultData", "value", "deepExtend", "target", "source", "overwrite", "prop", "regexEscape", "str", "_entityMap", "escape", "_RegExpCache", "capacity", "pattern", "regExpFromCache", "regExpNew", "RegExpCache", "chars", "looksLikeObjectPathRegExpCache", "looksLikeObjectPath", "nsSeparator", "keySeparator", "possibleChars", "c", "matched", "ki", "deepFind", "tokens", "current", "next", "nextPath", "j", "getCleanedCode", "code", "_ResourceStore", "ns", "index", "lng", "ignoreJSONStructure", "result", "resources", "deep", "pack", "v", "ResourceStore", "postProcessor", "module", "processors", "translator", "processor", "checkedLoadedFor", "_Translator", "services", "resolved", "namespaces", "wouldCheckForNsInKey", "seemsNaturalLanguage", "parts", "keys", "lastKey", "returnDetails", "namespace", "appendNamespaceToCIMode", "resUsedKey", "resExactUsedKey", "resType", "noObject", "joinArrays", "handleAsObjectInI18nFormat", "r", "resTypeIsArray", "newKeyToUse", "deepKey", "usedDefault", "usedKey", "needsPluralHandling", "hasDefaultValue", "defaultValueSuffix", "defaultValueSuffixOrdinalFallback", "needsZeroSuffixLookup", "defaultValue", "resForMissing", "updateMissing", "fk", "lngs", "fallbackLngs", "send", "l", "specificDefaultValue", "defaultForMissing", "language", "suffixes", "suffix", "_this", "skipOnVariables", "nestBef", "nb", "na", "nestAft", "postProcess", "postProcessorNames", "found", "exactUsedKey", "usedLng", "usedNS", "extracted", "needsContextHandling", "codes", "finalKeys", "pluralSuffix", "zeroSuffix", "ordinalPrefix", "contextKey", "possibleKey", "optionsKeys", "useOptionsReplaceForData", "option", "Translator", "capitalize", "string", "_LanguageUtil", "specialCases", "part", "cleanedLng", "lngOnly", "supportedLng", "fallbacks", "fallbackCode", "fallbackCodes", "addCode", "fc", "LanguageUtil", "sets", "_rulesPluralsTypes", "n", "nonIntlVersions", "intlVersions", "suffixesOrder", "createRules", "rules", "set", "_PluralResolver", "languageUtils", "rule", "pluralCategory1", "pluralCategory2", "pluralCategory", "number", "count", "idx", "returnSuffix", "PluralResolver", "deepFindWithDefaults", "_Interpolator", "iOpts", "getOrResetRegExp", "existingRegExp", "match", "replaces", "regexSafe", "val", "handleFormat", "f", "missingInterpolationHandler", "todo", "matchedVar", "temp", "safeValue", "clonedOptions", "handleHasOptions", "inheritedOptions", "sep", "optionsString", "matchedSingleQuotes", "matchedDoubleQuotes", "formatters", "doReduce", "elem", "Interpolator", "parseFormatStr", "formatStr", "formatName", "formatOptions", "optStr", "opt", "rest", "createCachedFormatter", "fn", "cache", "formatter", "_Formatter", "name", "format", "mem", "formatted", "valOptions", "error", "Formatter", "removePending", "q", "_Connector", "backend", "store", "languages", "callback", "toLoad", "pending", "toLoadLanguages", "toLoadNamespaces", "hasAllNamespaces", "err", "loaded", "loadedKeys", "fcName", "tried", "wait", "resolver", "fallbackValue", "isUpdate", "clb", "opts", "Connector", "get", "ret", "transformOptions", "noop", "bindMemberFunctions", "inst", "_I18n", "defOpts", "createClassOnDemand", "ClassOrObject", "lu", "deferred", "load", "finish", "usedCallback", "append", "li", "lngInLngs", "_this2", "setLngProps", "done", "setLng", "keyPrefix", "_this3", "fixedT", "resultKey", "fallbackLng", "lastLng", "loadNotPending", "loadState", "preResult", "preloaded", "newLngs", "rtlLngs", "forkResourceStore", "mergedOptions", "clone", "I18n", "instance", "createInstance", "dir", "init", "loadResources", "reloadResources", "use", "changeLanguage", "getFixedT", "exists", "setDefaultNamespace", "hasLoadedNamespace", "loadNamespaces", "loadLanguages", "import_deepmerge", "import_annotation_converter", "import_edmx_parser", "import_UI", "import_Communication", "import_ux_specification_types", "log", "__name", "logger", "logEntry", "meta", "DEFINITION_LINK_PREFIX", "arrayIncludes", "__name", "arr", "target", "v", "createAnnotationPath", "entityTypeName", "term", "qualifier", "annotationPath", "parseAndMergeAndConvert", "annotationFiles", "logger", "parseResult", "converterOutput", "annotationData", "error", "log", "instance", "mergeParser", "getAnnotationPropertyValue", "annotationProperty", "evaluateCommonLabel", "annotations", "entityType", "label", "_a", "_b", "_c", "_d", "targetProperty", "getLabelForPropertyPath", "propertyPath", "getLabelForDataField", "field", "property", "ep", "getLabel", "dataFieldLabel", "singleProperty", "getTitleForDataField", "dataField", "propertyCommonLabel", "getDataFieldDescription", "dataFieldAbstract", "title", "actionName", "prepareRef", "refInput", "getPageTypeV2", "name", "templatePart", "getPageTypeV4", "v4App", "getTargetAnnotationName", "targetAnnotation", "keyForRelatedFacetKeys", "termWithQualifier", "findAlias", "namespace", "oDataServiceAVT", "aliasReference", "reference", "getAnnotationFromMetaPath", "metaPath", "determineTargetAnnotation", "navigationParts", "lastNavigationPart", "annotation", "alias", "adjustKey", "key", "uiClass", "pathParts", "getKeyAndEntityTypeOfReferenceFacet", "propertyValue", "oDataVersion", "stopProcessing", "navigation", "separator", "navSeparator", "getSectionFacet", "facetDefinition", "sourceEntityType", "facetName", "newKey", "newEntityType", "sectionNameSpace", "getDecodedPathElement", "pathElement", "targetAnnotationEncoded", "decodedElement", "prepareValueForPath", "path", "resolveManifestPath", "manifest", "value", "readOnly", "manifestSection", "pathElements", "index", "element", "getManifestSectionByPathV4", "setManifestSectionByPathV4", "getSchemaKeyOfLineItemRecord", "lineItemRecord", "schemaKey", "getUIAnnotationTerm", "getCommunicationAnnotationTerm", "getAnnotationTerm", "evaluateTargetAnnotation", "section", "annotationRecord", "facets", "_e", "_f", "_g", "_h", "_i", "targetEntityType", "getAnnotationPathUsingFullyQualifiedName", "fullyQualifiedName", "addFacetToConfig", "serviceName", "facet", "collectionItem", "getObjectPageHeaderFacets", "facetAnnotation", "lastDot", "item", "getObjectPageFacets", "getVersionFromManifest", "determineV2Template", "templateType", "v2Pages", "pageKey", "v2Page", "determineV4PageTemplateType", "v4Page", "pageType", "viewPath", "determineV4TemplateFromPages", "v4Pages", "determineV4Template", "getTemplateTypeFromManifest", "fioriElementsVersion", "addSectionTitleAndDescription", "facetKey", "addTargetTitleAndSectionDescription", "createDefaultSection", "appSchema", "getObjectPageFacetSection", "checkUnresolvableFacets", "sections", "result", "deleteEmptyStructure", "deletionRequest", "entityPathArray", "pathArray", "getGenericSchemaFileName", "schemaType", "getSchemaFilePath", "pageId", "viewId", "schemaFile", "generatePageId", "entitySet", "pageName", "names", "parts", "findMatchingKeysByAdditionalProperties", "additionalProperties", "configObject", "properties", "required", "definition", "entry", "fillArrayFromAnyOfReference", "currentConfigObject", "definitionArray", "$ref", "definitionKey", "innerDefinition", "controlProperty", "matchingKeys", "fillArrayFromPropertyDefinition", "propertyDefinition", "determineNextDefinitionFromDefinitionArray", "factory", "nextDefinition", "lastDefinition", "getNextTargetDefinition", "factoryKey", "targetObject", "arrayCombineMerge", "source", "options", "destination", "merge", "convertEnumToCSV", "configPart", "convertActionKeyToStableId", "actionId", "getDefinitionKey", "getDefinitionsRef", "getErrorMessage", "isFeatureSupported", "featureToggles", "feature", "updatePropertyIndices", "schema", "order", "propertyName", "getJSONPropertyByPath", "obj", "paths", "current", "removeNamespaces", "sId", "replaceNamespaces", "import_UI", "import_ux_specification_types", "import_ux_specification_types", "buildControlIdFromParent", "__name", "baseId", "idBreadcrumbs", "buildControlIdForPage", "breadcrumbs", "convertSectionId", "sectionId", "title", "convertedSectionId", "prefix", "escapeId", "sParam", "c", "sCode", "BindingValue", "BindingValueV4", "mapBreadcrumbs", "localBreadcrumbs", "item", "index", "buildColumnControlId", "_controlType", "tableId", "lastIdPart", "fullId", "splitPoint", "getActionBreadcrumbParts", "actionIdParts", "actionType", "semanticObjectId", "actionId", "determinePattern", "schemaDefinition", "pattern", "enumPattern", "enumValue", "addPatternForBindingChangeOfEnum", "schema", "definition", "propertyName", "bindingValues", "propertyList", "originalDefinition", "resultDefinition", "targetDefinition", "DEFINITION_LINK_PREFIX", "description", "value", "addPatternForBindingChangeOfEnumLR", "addPatternForBindingChangeOfEnumOP", "addPatternForBindingChangeOfEnumOPV4", "doNotDelete", "import_reflect_metadata", "reflectMetadataKey", "syncRule", "__name", "propSpec", "getReflectMetadata", "target", "propertyName", "rule", "pageLayoutInformation", "pageInfo", "constructor", "childIdKey", "childId", "id", "getChildId", "getPageLayoutInformation", "validityMetadataKey", "validity", "getTextForDeprecated", "key", "validityInformation", "text", "flexUtils", "import_ux_specification_types", "changesUtils", "defaultValues", "createChangeString", "change", "manifest", "changeString", "defaultValue", "error", "__name", "parseChangeString", "fillFlexChangeContent", "configObject", "syncRule", "ui5Version", "key", "controlId", "isCustomer", "flexChange", "exportToFlexChange", "change", "manifest", "createChangeString", "__name", "import_dist", "importProperty", "syncRule", "manifestSection", "propertyKey", "configPart", "sectionId", "breadcrumbs", "manifestKey", "importHandler", "value", "__name", "checkDeprecatedProperties", "deprecatedProperties", "path", "logger", "key", "deprecated", "log", "getTextForDeprecated", "getSectionTitle", "schemaSection", "jsonSchema", "refTitle", "DEFINITION_LINK_PREFIX", "getTargetFromCustomColumnRef", "ref", "refParts", "removeEmptyStructure", "config", "structure", "import_UI", "import_UI", "replaceSpecialChars", "sId", "__name", "prepareId", "removeNamespaces", "evaluateConcat", "oValue", "sPathConcat", "applyValue", "getStableIdPartFromValue", "_a", "getStableIdPartFromSemanticObjectAndAction", "oDataField", "sIdPart", "getStableIdPartFromDataField", "import_ux_specification_types", "import_ux_specification_types", "import_UI", "import_path", "import_xml_js", "MULTISELECTTABLE", "INLINEDELETETABLE", "TREETABLE", "ANALYTICALTABLE", "GRIDTABLE", "LINEITEMTABLETYPES", "OP_STANDARD_HEADER_ACTION_PREFIX", "OP_STANDARD_FOOTER_ACTION_PREFIX", "addCustomColumnDefinition", "appSchema", "customColumnsDefinitionName", "customColumnDefinitionName", "DEFINITION_LINK_PREFIX", "extensionType", "__name", "getActionId", "actionType", "lineItemProperties", "actionId", "getSchemaKeyOfLineItemRecord", "prepareRef", "handleActionRecord", "actions", "lineItemProps", "recordIndex", "actionReferenceType", "actionTemplate", "actionDefinition", "description", "getDataFieldDescription", "key", "ns", "getActionKey", "getColumnActionType", "lineItemId", "lineItemRecord", "actionTypes", "getActionType", "generateGenericColumn", "schemaKey", "lineItemDefinition", "addDataTypeToDefinition", "addKeyToDefinition", "handleAnyAction", "footerActions", "addLineItemsType", "lineItemAnnotation", "entityType", "customColumnRef", "lineItemPath", "addCommonLineItemDefinitions", "addListReportLeadingProperties", "definitionName", "_a", "_b", "leadingPropertySchema", "properties", "result", "property", "addTabkeyEnum", "page", "facetID", "_c", "_d", "_e", "_f", "tabkeyPropertySchema", "quickVariantsX", "enumEntries", "index", "addEnumToSchema", "addFragmentEnum", "fragments", "appId", "fragment", "relPath", "fragmentJson", "fragmentName", "addTableColumnExtensions", "manifest", "removeElementsFromEnum", "values", "valuesToRemove", "value", "index", "__name", "addSelectionFields", "appSchema", "selectionFieldsAnnotation", "entityType", "selectionFieldsDefinition", "annotationPath", "createAnnotationPath", "i", "selectionField", "description", "fieldDefinition", "prepareRef", "dataType", "determineDataType", "getLabelForPropertyPath", "DEFINITION_LINK_PREFIX", "addEntityPropertiesToEnum", "appSchemaEnum", "key", "isDraftEnabled", "entitySet", "_a", "_b", "_c", "_d", "isEntityDeletable", "isEntityUpdatable", "addStandardHeaderActions", "isOP", "actions", "headerActionsKey", "actionDefinition", "headerActions", "name", "definition", "actionRef", "actionKey", "addStandardFooterActionsOP", "standardActions", "action", "copyFieldProperties", "version", "appSchema", "field", "fieldDefinition", "__name", "determineFieldDefinitionName", "fieldReferenceId", "targetID", "fieldReference", "fieldReferenceType", "addKeysTagForDataField", "schemaKeyOfField", "addKeysTagToField", "replaceNamespaces", "separator", "isConnectedField", "_a", "_b", "addConnectedFields", "sectionType", "section", "target", "properties", "templateParts", "targetData", "fallbackIndex", "innerKey", "innerField", "index", "templateKey", "addField", "getFieldsSchemaContainer", "ref", "fieldsDefinition", "prepareRef", "key", "withActions", "containersSchema", "entityTypeName", "getStableIdPartFromDataField", "actionsProperties", "fieldInSchema", "DEFINITION_LINK_PREFIX", "fieldsProperties", "getDataFieldDescription", "addDataTypeToDefinition", "determineTargetIdOfForm", "addFieldsToFormDefinition", "addTagsToFormDefinition", "formDefinitionKey", "targetValue", "createAnnotationPath", "handleForm", "appSchemaSection", "facetKey", "fieldsDefinitionKey", "actionsDefinitionKey", "replaceAlias", "annotationIdentifier", "oDataServiceAVT", "potentialAlias", "result", "searchTerm", "reference", "getActionNameAndId", "item", "action", "relevantAction", "separatorIndex", "actionName", "actionId", "namespace", "isFirstObjectPage", "pages", "generateParameters", "element", "addFooterActions", "addFooterActionCallBack", "footerActions", "alias", "findAlias", "entitySet", "entityType", "actionAnnotation", "convertedIdentification", "isDraftEnabled", "addStandardFooterActionsOP", "addHeaderActions", "addHeaderActionCallBack", "isV2", "actionsDefinition", "actions", "headerActions", "identification", "addStandardHeaderActions", "addCommonHeaderSchema", "determineEntitySetOfEntityType", "serviceAVT", "es", "import_UI", "import_ux_specification_types", "addEnumToSchema", "enumEntries", "currentDefinition", "__name", "addEnumForValidAnnotations", "entityType", "validAnnotations", "annoPath", "_a", "UiAnnotations", "key", "annotation", "enumEntry", "addEnumForSingleTabVariant", "appSchema", "definitionName", "addEnumForMultiTabVariant", "entitySet", "addEnumForVariantEntitySet", "oDataServiceAVT", "es", "addEnumForFilterBarAnnotationPath", "addEnumFieldGroupAnnotationPath", "addDefinitionForRelatedFacetKeys", "sectionDefinitions", "facetSections", "idProperties", "oneOfSections", "section", "propertyName", "property", "schemaIdForSection", "label", "name", "definition", "DEFINITION_LINK_PREFIX", "getFacetKeyInSchema", "facetKey", "getFacetDefinitionKey", "parseSchemaDefinition", "useDefinitionAsKey", "subDefinitionName", "facetDefinitionKey", "schemaDefinition", "getCustomExtensionDefinitionName", "lineItemId", "customExtensionDefinitionName", "addCommonLineItemDefinitions", "lineItemAnnotation", "customColumnDefinitionName", "customActionDefinitionName", "lineItemPath", "customColumnRef", "toolBar", "schemaIdForToolBar", "schemaIdForActions", "prepareRef", "actionId", "actions", "customActionRef", "footerActions", "schemaIdForFooter", "schemaIdForFooterActions", "createAnnotationPath", "getDataTypeFromAnnotation", "annotation", "__name", "determineDataTypeOfTarget", "target", "_a", "_b", "_c", "dataType", "determineDataType", "field", "addDataTypeToDefinition", "definition", "getFacetDefinitionLink", "facetKey", "DEFINITION_LINK_PREFIX", "getFacetDefinitionKey", "addDefinitionRef", "schemaPart", "schemaRef", "schemaKey", "schemaLink", "getFacetAnnotationPath", "facet", "result", "namespace", "handleAddressContact", "sections", "appSchema", "sectionPrefix", "subSectionPrefix", "versionPostfix", "definitionName", "subDefinitionName", "parseSchemaDefinition", "addSectionTitleAndDescription", "updateSchemaProperty", "key", "value", "addFieldsType", "entityType", "suffix", "prepareRef", "itemsEnum", "property", "fields4Dialog", "findFirstSchemaDefinitionKey", "keys", "keyProperties", "keyProperty", "schemaDefinitionKey", "innerKey", "getEnumEntry", "options", "description", "custom", "definitionKey", "getDefinitionKey", "refDefinition", "enumKey", "addDescriptiveEnumDefinition", "origin", "oneOfEnum", "entry", "getActionKey", "action", "isAction", "actionKey", "firstSlash", "lastDot", "addKeyToDefinition", "lineItemRecord", "properties", "getStableIdPartFromValue", "ns", "replaceNamespaces", "actionId", "import_ux_specification_types", "distTags", "version", "_DistTagEvaluator", "version", "result", "distTags", "specVersion", "tag", "minUI5Version", "logger", "message", "instance", "log", "actualVersion", "distTagVersion", "__name", "DistTagEvaluator", "import_ux_specification_types", "import_ux_specification_types", "import_ux_specification_types", "getCustomPageName", "page", "_a", "targetName", "__name", "getViewType", "app", "_b", "getViewTypeExtension", "getViewPath", "viewPath", "splitViewPath", "splitPath", "appSettings", "appPath", "pageName", "pathParts", "fileName", "getCustomPagePath", "viewName", "viewType", "_AppProvider", "manifest", "schemas", "home", "pages", "version", "settings", "logger", "schemaFile", "getSchemaFilePath", "pageConfigs", "appConfig", "pageId", "schemaSuffix", "config", "isEditableXML", "$schema", "viewId", "genericSchemaFile", "$filePath", "AppProvider", "import_ux_specification_types", "import_ux_specification_types", "addFlexForTable", "config", "change", "jsonSchema", "idParts", "annotationPart", "colId", "__name", "import_ux_specification_types", "ensureManifestSectionByPathV2", "__name", "manifest", "path", "manifestSection", "element", "getManifestSectionByPathV2", "elements", "deleteManifestSectionByPathV2", "index", "getNewPageTemplate", "pageType", "findPageInManifest", "pages", "entitySet", "navigationProperty", "pageId", "page", "transformPageFromAssociation", "configPages", "association", "manifestPage", "associatedManifestPage", "transformPageToNewManifestV2", "deletePage", "configPage", "key", "_a", "currentPage", "configKey", "import_xml_js", "controls_exports", "__export", "ALPAnalyticalTable", "ALPGridTable", "ALPResponsiveTable", "Action", "AnalyticalCard", "AnalyticalCardSettings", "AnalyticalCardSettingsv4", "AnalyticalListPageFilterBar", "AnalyticalTable", "BaseCustomSection", "ChartSettings", "ChartSettingsType", "CommonCardSettings", "CommonFilterBar", "CommonHeaderFacetSettings", "CommonTableSettings", "CommonTableSettingsForSections", "CreateWithFilters", "CustomCard", "DataLoadSettings", "DateRange", "DefaultDateRange", "DefaultSpanObject", "FRAGMENT_DEFINITION", "Field", "FieldForAction", "Fields4Dialog", "Fields4DialogOP", "FooterAction", "FormAction", "GlobalChartSettings", "GlobalTableSettings", "GridTable", "HeaderActionStandard", "HeaderSections", "KPISettings", "LinkListCardSettings", "LinklistCard", "ListCard", "ListCardSettings", "ListReportFilterBar", "MultiEdit", "ObjectPageAnalyticalTable", "ObjectPageChart", "ObjectPageCustomSectionFragment", "ObjectPageCustomSectionView", "ObjectPageFooterAction", "ObjectPageFooterActionStandard", "ObjectPageGridTable", "ObjectPageHeader", "ObjectPageHeaderAction", "ObjectPageHeaderActionStandard", "ObjectPageHeaderSectionAddress", "ObjectPageHeaderSectionChart", "ObjectPageHeaderSectionDataPoint", "ObjectPageHeaderSectionForm", "ObjectPageLayout", "ObjectPageResponsiveTable", "ObjectPageSectionAddressV2", "ObjectPageSectionChartV2", "ObjectPageSectionContactV2", "ObjectPageSectionFormV2", "ObjectPageSectionTableV2", "ObjectPageSectionV2", "ObjectPageSubSectionChartV2", "ObjectPageSubSectionContactV2", "ObjectPageSubSectionFormV2", "ObjectPageSubSectionTableV2", "ObjectPageSubSectionV2", "ObjectPageToolBarAction", "ObjectPageTreeTable", "QuickVariantSelection", "QuickVariantSelectionOP", "QuickVariantSelectionX", "ResponsiveTable", "SAP_UI_TABLE", "SaveAndEditOP", "SelectionFieldDateSettings", "SelectionFields", "Share", "ShareOP", "StackCard", "StackCardSettings", "TableALP", "TableCard", "TableCardSettings", "TableColumn", "TableColumnAction", "TableColumnActionIntentBased", "TableCustomColumn", "ToolBar", "ToolBarAction", "TreeTable", "UpAndDownNavigationOP", "buildIntentBasedActionId", "deleteColumnFromFragment", "deleteType", "exportColorPalette", "exportCreateParametersFields", "exportCustomColumnsToFragment", "exportDateSettingsField", "exportDefaultSpan", "exportType", "getChartSectionControlId", "getContactSubSectionControlId", "getCustomColumnPath", "getFormSectionControlId", "getRootCustomColumnFromFragmentJSON", "getSectionControlId", "getSmartChartControlId", "getSmartTableControlId", "getSubSectionControlId", "getTableSectionControlId", "importCreateParameters", "importDateSettings", "import_ux_specification_types", "getAppSettingPathV2", "__name", "pageKeys", "getTableSettingPathV2", "getChartSettingPathV2", "getDataLoadSettingPathV2", "getOVPsettingPath", "__name", "getCardSettingsPath", "cardKeys", "pathParts", "block", "getKPISettingsPath", "__name", "pageKeys", "kpiKey", "getAppRootSettingOBJPath", "pathParts", "pageKey", "getAppSettingOBJPathV2", "getGlobalTableSettingsPathV2", "getAppSettingOBJsectionPathV2", "_manifest", "sectionId", "manifestSectionId", "getTableSettingsOBJsectionPathV2", "getChartSettingsOBJsectionPathV2", "getViewExtensionsPath", "getObjectPageCustomSectionPath", "pageName", "separator", "sectionIdParts", "pageNameParts", "idLastPart", "customSectionId", "_ApplicationV2", "__decorateClass", "childId", "ApplicationV2", "_AppSettings", "syncRule", "validity", "AppSettings", "import_ux_specification_types", "importColorPalette", "manifestSection", "colorPalette", "configPart", "__name", "exportColorPalette", "key", "value", "exportDefaultSpan", "_ChartSettingsType", "__decorateClass", "syncRule", "getOVPsettingPath", "ChartSettingsType", "_DefaultSpanObject", "cardKeys", "getCardSettingsPath", "DefaultSpanObject", "_CommonCardSettings", "CommonCardSettings", "_CustomCard", "CustomCard", "_ListCardSettings", "ListCardSettings", "_ListCard", "ListCard", "_AnalyticalCardSettings", "AnalyticalCardSettings", "_AnalyticalCardSettingsv4", "AnalyticalCardSettingsv4", "_AnalyticalCard", "AnalyticalCard", "_StackCardSettings", "StackCardSettings", "_StackCard", "StackCard", "_LinkListCardSettings", "LinkListCardSettings", "_LinklistCard", "LinklistCard", "_TableCardSettings", "TableCardSettings", "_TableCard", "TableCard", "import_ux_specification_types", "getSmartFieldControlId", "__name", "baseId", "_idBreadcrumbs", "breadcrumbs", "_controlType", "facetId", "convertedId", "convertSectionId", "fieldCrumb", "buildControlIdFromParent", "_Field", "__decorateClass", "syncRule", "exportToFlexChange", "addPatternForBindingChangeOfEnumOP", "Field", "import_ux_specification_types", "importDateSettings", "manifestSection", "configPart", "__name", "importDateSettingsField", "_sectionId", "propertyKey", "selectionField", "section", "index", "exportDateSettingsField", "key", "field", "filterKey", "filterValue", "_DateRange", "__decorateClass", "syncRule", "pageKeys", "getAppSettingPathV2", "validity", "convertEnumToCSV", "DateRange", "flexRuleForSmartFilterBar", "buildControlIdFromParent", "exportToFlexChange", "manifestRuleForSelectionField", "_manifest", "breadcrumbs", "manifestRuleForSelectionFieldWithArrays", "_DefaultDateRange", "DefaultDateRange", "_SelectionFieldDateSettings", "SelectionFieldDateSettings", "_SelectionFields", "SelectionFields", "_CommonFilterBar", "CommonFilterBar", "_AnalyticalListPageFilterBar", "AnalyticalListPageFilterBar", "_ListReportFilterBar", "ListReportFilterBar", "import_ux_specification_types", "getFormActionButtonId", "__name", "baseId", "idBreadcrumbs", "breadcrumbs", "controlType", "facetID", "entity", "section", "convertSectionId", "buildControlIdFromParent", "flexRuleForFormAction", "exportToFlexChange", "_FormAction", "__decorateClass", "syncRule", "addPatternForBindingChangeOfEnumOP", "FormAction", "_FieldForAction", "validity", "FieldForAction", "import_ux_specification_types", "import_xml_js", "import_path", "import_ux_specification_types", "import_ejs", "import_fs", "templatesPath", "renderTemplate", "__name", "templatePath", "templateData", "template", "getSingleColumnContent", "__name", "column", "template", "templateData", "renderTemplate", "templatesPath", "getColumnFragmentContent", "customColumns", "templateType", "fragment", "newContent", "getResponsiveTableCellsFragment", "import_path", "FRAGMENT_DEFINITION", "SAP_UI_TABLE", "VIEW_TEMPLATE_TAGTYPE_MAP", "FE_TEMPLATE_VIEW_EXTENSION_MAP", "dummyEntry", "dummyEntryAsString", "getFragmentNamespaces", "fragment", "isCoreFragmentDefinition", "fragmentAttributes", "allFragmentNamespaces", "attribute", "xmlns", "existingNamespaces", "__name", "getTagName", "tag", "fragmentNamespaces", "getTagNameFromFragmentJSON", "definition", "viewTemplateType", "namespaces", "keys", "key", "tagName", "getRootCustomColumnFromFragmentJSON", "name", "addP13nData", "configColumns", "columnIndex", "columnProperties", "p13nData", "value", "handleFragmentColumn", "columnsInFragment", "_a", "_b", "_c", "foundInConfig", "customData", "columnParts", "column", "deleteColumnsFromFragment", "manifestSection", "fragments", "pattern", "appId", "fragmentId", "fragmentType", "fragmentParts", "fragmentName", "fragmentPathArray", "fragmentJson", "deleteNumberOfCells", "fragmentCells", "noOfEntriesToBeDeleted", "index", "deleteCellsFromFragment", "cellManifestSection", "element", "deleteColumnFromFragment", "cellsPath", "addNewColumnsInFragment", "config", "startIndex", "updateNonEmptyCellsFragment", "fragmentElements", "updateCellsFragment", "cellFragmentFileName", "cellsFragmentFound", "getResponsiveTableCellsFragment", "exportCustomColumnsToManifest", "manifestPath", "exportResults", "logger", "lsFilePath", "cellsFragmentName", "manifest", "ensureManifestSectionByPathV2", "configElement", "log", "instance", "cellsFragmentColumn", "previousColumn", "deleteManifestSectionByPathV2", "insertNewColumnInFragment", "columnsInFragmentDefinition", "colPos", "newColumnFragment", "getSingleColumnContent", "newColumnDefinition", "newColumn", "col", "newColumnsInFragmentDefinition", "processCustomColumnInArray", "unexistingColumnIndicesInConfig", "j", "maintainExistingColumnInFragment", "coreTagName", "insertNewColumnsInFragment", "updateColumnsInFragment", "fragmentFound", "getColumnFragmentContent", "originalFragmentJson", "fragmentContent", "exportCustomColumnsToFragment", "cellFragmentParts", "cellTemplateType", "getCustomColumnPath", "page", "entitySet", "additionalKey", "tableColumnExtensionType", "_d", "extension", "tableType", "extensionKey", "import_ux_specification_types", "MULTIEDITPATH", "getSmartTableControlId", "__name", "baseId", "idBreadcrumbs", "_breadcrumbs", "controlType", "buildControlIdFromParent", "importCreateParameters", "manifestSection", "_a", "manifestDialogFields", "configPart", "manifestField", "exportCreateParametersFields", "key", "fields", "manifestFields", "entry", "exportVariants", "configObject", "variant", "variantConfig", "tablesettings", "exportQuickVariantSelectionX", "importMultiEdit", "_b", "_CreateWithFilters", "__decorateClass", "syncRule", "pageKeys", "getAppSettingPathV2", "CreateWithFilters", "_MultiEdit", "getTableSettingPathV2", "convertEnumToCSV", "MultiEdit", "importType", "exportType", "deleteType", "_DataLoadSettings", "getDataLoadSettingPathV2", "validity", "DataLoadSettings", "_Fields4Dialog", "Fields4Dialog", "_QuickVariantSelection", "QuickVariantSelection", "_QuickVariantSelectionX", "QuickVariantSelectionX", "_CommonTableSettings", "exportToFlexChange", "childId", "CommonTableSettings", "_ResponsiveTable", "addPatternForBindingChangeOfEnumLR", "ResponsiveTable", "_TreeTable", "TreeTable", "_AnalyticalTable", "AnalyticalTable", "_TableALP", "TableALP", "_ALPResponsiveTable", "ALPResponsiveTable", "_ALPGridTable", "ALPGridTable", "_ALPAnalyticalTable", "ALPAnalyticalTable", "_GridTable", "GridTable", "import_ux_specification_types", "getActionButtonId", "__name", "baseId", "_idBreadcrumbs", "breadcrumbs", "actionId", "getActionBreadcrumbParts", "convertActionKeyToStableId", "getStandardActionButtonId", "getStandardFooterActionOPButtonId", "OP_STANDARD_FOOTER_ACTION_PREFIX", "buildIntentBasedActionId", "semanticObjectId", "getFooterActionButtonId", "flexRuleForAction", "exportToFlexChange", "flexRuleForStandardAction", "flexRuleForStandardFooterActionOP", "flexRuleForFooterAction", "_Action", "__decorateClass", "syncRule", "Action", "_ToolBarAction", "ToolBarAction", "_FooterAction", "FooterAction", "_Share", "Share", "_ShareOP", "ShareOP", "_UpAndDownNavigationOP", "UpAndDownNavigationOP", "_SaveAndEditOP", "addPatternForBindingChangeOfEnumOP", "SaveAndEditOP", "_HeaderActionStandard", "HeaderActionStandard", "_ObjectPageHeaderActionStandard", "ObjectPageHeaderActionStandard", "_ObjectPageFooterActionStandard", "ObjectPageFooterActionStandard", "import_ux_specification_types", "buildColumnActionId", "__name", "baseId", "idBreadcrumbs", "breadcrumbs", "columnTemplate", "actionType", "actionId", "getActionBreadcrumbParts", "smartTableId", "buildColumnIntentBasedId", "semanticObjectId", "buildColumnActionButtonId", "_idBreadcrumbs", "flexRuleForColumn", "exportToFlexChange", "flexRuleForColumnAction", "flexRuleForColumnIntentBased", "flexRuleForColumnIntentBasedAction", "buildIntentBasedActionId", "_TableColumn", "__decorateClass", "syncRule", "buildColumnControlId", "addPatternForBindingChangeOfEnumLR", "TableColumn", "_TableColumnAction", "TableColumnAction", "_TableColumnActionIntentBased", "TableColumnActionIntentBased", "_TableCustomColumn", "TableCustomColumn", "_ToolBar", "__name", "ToolBar", "import_ux_specification_types", "getSmartChartControlId", "__name", "baseId", "_ChartSettings", "__decorateClass", "syncRule", "exportToFlexChange", "flexChange", "configObject", "key", "pageKeys", "getChartSettingPathV2", "validity", "ChartSettings", "_KPISettings", "__name", "__decorateClass", "syncRule", "pageKeys", "_manifest", "KPIKey", "getKPISettingsPath", "KPISettings", "import_ux_specification_types", "getAvatarControlId", "__name", "baseId", "idBreadcrumbs", "idBreadcrumbsCopy", "buildControlIdFromParent", "_ObjectPageHeader", "__decorateClass", "syncRule", "pageKeys", "getAppSettingOBJPathV2", "validity", "exportToFlexChange", "addPatternForBindingChangeOfEnumOP", "ObjectPageHeader", "import_ux_specification_types", "getActionButtonId", "__name", "baseId", "idBreadcrumbs", "breadcrumbs", "controlType", "actionId", "convertActionKeyToStableId", "buildControlIdFromParent", "flexRuleForHeaderAction", "exportToFlexChange", "_ObjectPageHeaderAction", "__decorateClass", "syncRule", "addPatternForBindingChangeOfEnumOP", "ObjectPageHeaderAction", "import_ux_specification_types", "PrefixHeaderEditable", "getDataPointHeaderSectionId", "__name", "baseId", "_idBreadcrumbs", "_breadcrumbs", "_controlType", "title", "getAddressHeaderSectionId", "getChartHeaderSectionId", "getFormHeaderSectionId", "breadcrumbs", "sectionName", "facetId", "flexRuleForHeaderSection", "exportToFlexChange", "_CommonHeaderFacetSettings", "__decorateClass", "syncRule", "addPatternForBindingChangeOfEnumOP", "CommonHeaderFacetSettings", "_ObjectPageHeaderSectionForm", "ObjectPageHeaderSectionForm", "_ObjectPageHeaderSectionChart", "ObjectPageHeaderSectionChart", "_ObjectPageHeaderSectionDataPoint", "ObjectPageHeaderSectionDataPoint", "_ObjectPageHeaderSectionAddress", "ObjectPageHeaderSectionAddress", "_HeaderSections", "HeaderSections", "import_ux_specification_types", "getFooterActionButtonId", "__name", "baseId", "idBreadcrumbs", "breadcrumbs", "controlType", "actionId", "getActionBreadcrumbParts", "convertActionKeyToStableId", "buildControlIdFromParent", "flexRuleForFooterAction", "exportToFlexChange", "_ObjectPageFooterAction", "__decorateClass", "syncRule", "addPatternForBindingChangeOfEnumOP", "ObjectPageFooterAction", "import_ux_specification_types", "getControlId", "__name", "baseId", "idBreadcrumbs", "idBreadcrumbsCopy", "buildControlIdFromParent", "_ObjectPageLayout", "__decorateClass", "syncRule", "exportToFlexChange", "addPatternForBindingChangeOfEnumOP", "validity", "ObjectPageLayout", "import_ux_specification_types", "_BaseCustomSection", "__name", "__decorateClass", "syncRule", "getObjectPageCustomSectionPath", "_manifest", "sectionId", "validity", "entitySet", "BaseCustomSection", "_ObjectPageCustomSectionFragment", "ObjectPageCustomSectionFragment", "_ObjectPageCustomSectionView", "ObjectPageCustomSectionView", "import_ux_specification_types", "getTableSectionControlId", "__name", "baseId", "_idBreadcrumbs", "breadcrumbs", "_controlType", "facetId", "breadcrumbsTrail", "convertSectionId", "buildControlIdFromParent", "getFormSectionControlId", "getChartSectionControlId", "facetID", "getSectionControlId", "getSubSectionControlId", "getContactSubSectionControlId", "_ObjectPageSectionV2", "__decorateClass", "syncRule", "exportToFlexChange", "addPatternForBindingChangeOfEnumOP", "ObjectPageSectionV2", "_ObjectPageSectionFormV2", "ObjectPageSectionFormV2", "_ObjectPageSectionChartV2", "ObjectPageSectionChartV2", "_ObjectPageSectionTableV2", "ObjectPageSectionTableV2", "_ObjectPageSectionAddressV2", "ObjectPageSectionAddressV2", "_ObjectPageSectionContactV2", "ObjectPageSectionContactV2", "_ObjectPageSubSectionV2", "ObjectPageSubSectionV2", "_ObjectPageSubSectionFormV2", "ObjectPageSubSectionFormV2", "_ObjectPageSubSectionChartV2", "ObjectPageSubSectionChartV2", "_ObjectPageSubSectionContactV2", "ObjectPageSubSectionContactV2", "_ObjectPageSubSectionTableV2", "ObjectPageSubSectionTableV2", "_ObjectPageChart", "__name", "__decorateClass", "syncRule", "getChartSettingsOBJsectionPathV2", "validity", "ObjectPageChart", "_GlobalChartSettings", "pageKeys", "getAppSettingOBJPathV2", "GlobalChartSettings", "import_ux_specification_types", "getSmartTableControlId", "__name", "baseId", "_idBreadcrumbs", "breadcrumbs", "controlType", "title", "breadCrumbsCopy", "suffixId", "convertSectionId", "buildControlIdFromParent", "_QuickVariantSelectionOP", "__decorateClass", "syncRule", "pageKeys", "manifest", "sectionId", "getAppSettingOBJsectionPathV2", "validity", "QuickVariantSelectionOP", "_Fields4DialogOP", "getTableSettingsOBJsectionPathV2", "exportCreateParametersFields", "Fields4DialogOP", "_CommonTableSettingsForSections", "importCreateParameters", "exportToFlexChange", "childId", "CommonTableSettingsForSections", "_ObjectPageResponsiveTable", "addPatternForBindingChangeOfEnumOP", "ObjectPageResponsiveTable", "_ObjectPageAnalyticalTable", "ObjectPageAnalyticalTable", "_ObjectPageGridTable", "ObjectPageGridTable", "_ObjectPageTreeTable", "ObjectPageTreeTable", "_GlobalTableSettings", "getGlobalTableSettingsPathV2", "GlobalTableSettings", "import_ux_specification_types", "getActionButtonId", "__name", "baseId", "_idBreadcrumbs", "breadcrumbs", "_controlType", "facetID", "actionId", "getActionBreadcrumbParts", "section", "convertSectionId", "convertActionKeyToStableId", "flexRuleForToolBarActionOP", "exportToFlexChange", "_ObjectPageToolBarAction", "__decorateClass", "syncRule", "addPatternForBindingChangeOfEnumOP", "ObjectPageToolBarAction", "convertActionKey", "actionProperty", "__name", "convertSelector", "selectorId", "addSmartFilterBarFlex", "config", "changePropertyKey", "change", "jsonSchema", "_a", "_b", "_c", "_d", "filterActions", "definitionType", "actions", "definition", "actionMap", "definitionActionId", "fullActionId", "convertActionKeyToStableId", "splitPoint", "actionIdParts", "sSemanticObject", "part", "sAction", "shortAction", "shortActionId", "shortDefinitionActionId", "addColumnActionConfigPart", "action", "configId", "getActionId", "addActionFlex", "id", "schemaActions", "referenceId", "configPart", "addSmartChartFlex", "syncRule", "getReflectMetadata", "addAdditionalFlexChanges", "flexForTransfer", "constructorName", "addFlexForTable", "addFlex", "changeString", "appSchema", "logger", "parseChangeString", "actionId", "error", "log", "instance", "adjustQuickVariantSelectionX", "propertyKey", "variant", "currentQuickVariantX", "key", "transferSettingsOfObject", "manifest", "pageKey", "kpiKey", "manifestSection", "deprecatedProperties", "path", "ensureManifestSectionByPathV2", "importProperty", "checkDeprecatedProperties", "determineTableType", "_e", "_f", "_g", "_h", "_i", "page", "tableType", "evaluateFragmentColumn", "column", "viewExtensionsOfPage", "manifestKey", "keyPart3", "extensionType", "cellsFragmentName", "p13nData", "columnParts", "columnText", "customElement", "determineCellsFragmentName", "keyEntitySet", "cellsKey", "cellsKeyType", "cellsKeyEntitySet", "cellsKeyTab", "analyzeFilteredFragments", "filteredFragments", "keyTab", "fragmentDefintion", "FRAGMENT_DEFINITION", "columnDefinition", "getRootCustomColumnFromFragmentJSON", "def", "processViewExtensions", "targetKeyEntitySet", "objectPageSectionData", "fragments", "manifestKeyParts", "keyExtensionType", "fragmentType", "fragmentName", "fragmentParts", "fragment", "addFragments", "v2Page", "pageType", "viewExtension", "importHeaderActions", "listReportConfig", "factory", "schemaDefinitions", "headerActions", "actionKey", "import_ux_specification_types", "import_ux_specification_types", "i18n_exports", "__export", "ANNOERR", "ANNOTATIONFILE", "COMPONENTNOTDEFINED", "CONTEXTPATHCOULDNOTBERESOLVED", "ENTITYSETNOTFOUND", "FLEXERROR", "INVALIDANCHOR", "INVALIDTARGETDEFINITION", "MACROS_ANNOTATION_ERROR", "NOALP", "NOBASEPATH", "NOENTITYSET", "NOENTITYTYPE4SET", "NOFE", "NOFRAGMENT", "NOGENERICSCHEMA", "NOID4SECTION", "NOLINEITEMS", "NOLR", "NOPAGEFORENTITYSET", "NOPAGES", "NOPRESENTATIONVARIANT", "NOROUTING", "NOROUTINGID", "NOTARGET", "NOTARGETS", "NOTEMPLATE", "NOVISUALIZATIONS", "UNKNOWNMINUI5VERSION", "WRONGMINUI5VERSION", "XMLPARSEFAILURE", "i18n_default", "initI18n", "i18nInstance", "i18n_exports", "__name", "initI18n", "language", "instance", "i18nEn", "__name", "import_ux_specification_types", "findObjectPageV2", "v2Pages", "entitySet", "pageKeys", "_a", "foundPage", "key", "v2Page", "getPageTypeV2", "__name", "findListReportPageV2", "getV2Pages", "importParameters", "log", "instance", "checkV2Page", "logger", "pageName", "findAnalyticalListPage", "isAssociatedCustomSection", "extensionKey", "entity", "keyParts", "findCustomSectionExtensions", "manifest", "customSectionViews", "ensureManifestSectionByPathV2", "pageCustomSections", "removeEmptySettingsOfFooter", "config", "actionKey", "removeEmptySettingsOfFilterBar", "_b", "_c", "fieldKey", "removeEmptySettingsOfToolBar", "removeEmptySettings", "pages_exports", "__export", "AnalyticalListPage", "ListReport", "ObjectPage", "OverviewPage", "exportFilterSettings", "importDateSettingsOVP", "importFilterSettings", "import_ux_specification_types", "AnalyticalListPage", "__name", "__decorateClass", "syncRule", "buildControlIdForPage", "exportToFlexChange", "childId", "pageLayoutInformation", "import_ux_specification_types", "ListReport", "__name", "__decorateClass", "syncRule", "buildControlIdForPage", "exportToFlexChange", "childId", "pageLayoutInformation", "import_ux_specification_types", "ObjectPage", "__name", "__decorateClass", "syncRule", "pageKeys", "getAppSettingOBJPathV2", "validity", "childId", "getAppRootSettingOBJPath", "value", "doNotDelete", "pageLayoutInformation", "importDateSettingsFieldsOVP", "manifestSection", "configPart", "propertyKey", "selectedValues", "filterKey", "filterValue", "__name", "importDateSettingsOVP", "importFilterSettings", "exportFilterFields", "key", "fieldName", "field", "exportFilterSettings", "OverviewPage", "__decorateClass", "syncRule", "getOVPsettingPath", "validity", "pageLayoutInformation", "_MetadataFactory", "controls", "pages", "pageTypes", "pageType", "schemaPropertyName", "data", "controlPropertyValue", "metadataClass", "__name", "MetadataFactory", "import_ux_specification_types", "ALPElements", "LRElements", "ResponsiveTable", "OVPElements", "ListCard", "AnalyticalCard", "StackCard", "LinklistCard", "TableCard", "OPElements", "ObjectPageCustomSectionView", "ObjectPageCustomSectionFragment", "ObjectPageResponsiveTable", "pageTypes", "_MetadataInstanceFactoryV2", "MetadataFactory", "controls_exports", "pages_exports", "__name", "MetadataInstanceFactoryV2", "importFilterBar", "listReportConfig", "factory", "importParameters", "schemaDefinitions", "pageKey", "transferSettingsOfObject", "schemaSelectionFields", "selectionProperty", "selectionKey", "__name", "importTable", "tableType", "_a", "localJsonSchema", "MULTISELECTTABLE", "INLINEDELETETABLE", "item", "log", "instance", "addSettings", "determineTableType", "importHeaderActions", "actionProperty", "actionKey", "convertActionKey", "footerAction", "createListReportConfig", "initI18n", "getV2Pages", "MetadataInstanceFactoryV2", "config", "pageKeys", "v2Page", "findListReportPageV2", "checkV2Page", "change", "parseChangeString", "addFlex", "addFragments", "removeEmptySettings", "import_ux_specification_types", "addSettings", "importParameters", "analyticalListPageConfig", "factory", "pageKey", "_a", "_b", "tableType", "determineTableType", "schemaDefinitions", "importHeaderActions", "transferSettingsOfObject", "actionProperty", "actionKey", "convertActionKey", "schemaSelectionFields", "selectionProperty", "selectionKey", "footerAction", "kpiCards", "kpiKey", "__name", "createAnalyticalListPageConfig", "initI18n", "getV2Pages", "MetadataInstanceFactoryV2", "config", "pageKeys", "v2Page", "findAnalyticalListPage", "checkV2Page", "change", "parseChangeString", "addFlex", "addFragments", "removeEmptySettings", "import_ux_specification_types", "import_UI", "SupportedFlexChangesWithoutFacetId", "getSingleSelectorIdPart", "selectorIdParts", "facetID", "lastIdParts", "id", "idParts", "__name", "getFacetID", "selectorId", "element", "prepareFlexChanges", "changes", "entitySet", "logger", "result", "complexIdMatch", "changeString", "_a", "_b", "_c", "change", "parseChangeString", "changeId", "convertSelector", "error", "log", "instance", "a", "b", "accum", "k", "v", "getSectionType", "schemaSection", "reference", "DEFINITION_LINK_PREFIX", "importFlexChangesOfTable", "flexChanges", "propertyKey", "configPart", "importParameters", "sectionTitle", "sectionId", "facetIds", "selector", "flexChange", "propertyIdMatch", "isTableColumn", "addFlexForTable", "isStandardActionFlexChange", "controlIdMatch", "idElementChecker", "targetId", "checkTitle", "startIndex", "endIndex", "arrayToCheck", "matchSelector", "schemaDefinition", "controlIdChecker", "selectionIdChecker", "controlId", "idMatch", "controlIdParts", "isGroupId", "isActionId", "isSectionId", "isSchemaTitle", "isSupportedWithoutFacetId", "isStandardAction", "importFlexChanges", "elementId", "checkDeprecatedProperties", "manifestSection", "deprecatedProperties", "manifestPath", "key", "deprecated", "getTextForDeprecated", "importManifestSetting", "syncRule", "pageKeys", "sectionPart", "sectionIdInManifest", "ensureManifestSectionByPathV2", "importHandler", "value", "manifestKey", "transferSettingsAndFlexChanges", "configParameters", "getReflectMetadata", "facetId", "getActionId", "actionType", "configActionId", "importTypeId", "actionId", "convertActionKeyToStableId", "OP_STANDARD_HEADER_ACTION_PREFIX", "OP_STANDARD_FOOTER_ACTION_PREFIX", "fillStandardActions", "config", "actions", "action", "actionRef", "fillActions", "actionProperties", "actionProperty", "convertActionKey", "fillFields", "fieldProperties", "fieldId", "fieldProperty", "prepareTableSchema", "tableType", "schemaDefinitions", "tableSchema", "fillTableInConfig", "manifestSettings", "OPtable", "toolBarActions", "fillCustomColumnsInConfig", "escapedSectionId", "v2Page", "customColumnSchemaProp", "customColumnTarget", "getTargetFromCustomColumnRef", "objectPageSectionData", "addFragments", "fillChartSection", "fillHeaderSection", "fillFormSection", "formId", "formActions", "formFields", "fillSubSection", "currentSchemaSection", "schemaProperties", "fillSectionsInConfig", "sectionProperties", "appSchemaDefinitions", "getSectionTitle", "fillCustomSectionsInConfig", "customSections", "objectPageConfig", "customSection", "customSectionDefinition", "fillConfig", "definitions", "headerAction", "footerAction", "headerSections", "sections", "findCustomSectionExtensions", "createObjectPageConfigV2", "initI18n", "v2Pages", "getV2Pages", "findObjectPageV2", "checkV2Page", "flexChangesForTransfer", "factory", "MetadataInstanceFactoryV2", "generateId", "page", "pageName", "_a", "_b", "generatePageId", "getPageTypeV2", "__name", "getPageConfigsAndNavigations", "v2Page", "flex", "manifest", "schemas", "fragments", "pages", "targets", "getPagesAndConfigs", "pageId", "target", "v2ChildPageName", "id", "v2Pages", "logger", "v2PageName", "schemaKey", "element", "importParameters", "createListReportConfig", "createAnalyticalListPageConfig", "createObjectPageConfigV2", "_V2AppProvider", "AppProvider", "initI18n", "log", "instance", "pageKey", "appSettings", "AppSettings", "schemaFile", "getSchemaFilePath", "appSchema", "transferSettingsOfObject", "V2AppProvider", "getPages", "componentName", "subPages", "subPageId", "import_ux_specification_types", "import_ux_specification_types", "import_deepmerge", "import_ux_specification_types", "exceptionList", "createCard", "key", "ovp", "__name", "findAvailableId", "sectionIds", "candidateId", "idParts", "transferManifestEntriesOVP", "configObject", "exportResults", "jsonSchema", "targetDefinition", "factory", "pathHierarchy", "entityPathArray", "processProperties", "assignReflectMetadataRules", "structureName", "currentObject", "defaultTypeName", "processAnyOfDefinitionsOfOVP", "params", "newConfigObject", "anyOfKey", "definitionArray", "DEFINITION_LINK_PREFIX", "nextTargetDefinition", "checkSyncRuleForExport", "exportHandler", "manifestSection", "merge", "arrayCombineMerge", "transferToManifest", "syncRule", "path", "ensureManifestSectionByPathV2", "transferCards", "appSchema", "cardKey", "cardType", "definition", "_a", "template", "manifestCard", "exportOfObject", "getNextTargetDefinition", "propertyList", "propertyKey", "arrayIncludes", "getReflectMetadata", "processDefinitionParams", "evaluateFlexRule", "transferParameters", "breadcrumbs", "ids", "title", "localBreadcrumbs", "controlId", "flexChange", "fillFlexChangeContent", "localManifest", "completeFlexChange", "change", "result", "oldChange", "newChange", "exportConfigValueToManifest", "manifestKey", "evaluateManifestRule", "deleteHandler", "deleteEmptyStructure", "getManifestPathOfSections", "getManifestPathOfTable", "getManifestPath", "evaluateExportRule", "index", "deleteObsoleteColumn", "columnParams", "keyParts", "keyEntitySet", "keyTab", "existingConfigEntries", "column", "deleteColumnFromFragment", "cellsPattern", "deleteObsoleteColumnsFromFragment", "folderPath", "getManifestSectionByPathV2", "extensionPattern", "clusterConfigColumnsByPath", "customColumnsInConfig", "schemaDefinition", "v2Page", "entitySet", "sectionKey", "cluster", "customColumn", "viewTemplateType", "getCustomColumnPath", "transferColumnExtensions", "objectPageSectionData", "extensionType", "columParams", "exportCustomColumnsToFragment", "transferManifestExtensions", "configSections", "pageKey", "parentIds", "entity", "section", "id", "element", "transferManifestEntriesAndFlexChange", "manifestSections", "getViewExtensionsPath", "isAssociatedCustomSection", "getSectionId", "sectionId", "convertSectionId", "transferIndexTable", "currentConfigObject", "propertyDefinition", "newKey", "nextDefinition", "transferCustomColumns", "target", "getTargetFromCustomColumnRef", "handleAnyOfDefinitions", "transferComplexProperty", "childId", "getChildId", "transferSettingsOfRef", "importParameters", "definitionArray", "configPart", "key", "factory", "pathHierarchy", "targetDefinitionType", "nextTargetDefinition", "assignReflectMetadataRules", "processOvpProperties", "__name", "processPropertiesOfObject", "schemaProperties", "DEFINITION_LINK_PREFIX", "processOvpProperty", "syncRule", "getReflectMetadata", "path", "manifestSection", "ensureManifestSectionByPathV2", "importProperty", "error", "log", "instance", "getErrorMessage", "addSettings", "pageConfig", "cardId", "cardTemplate", "cardType", "createOverviewPageConfig", "MetadataInstanceFactoryV2", "config", "_V2OvpProvider", "AppProvider", "importParameters", "pages", "sapOvp", "appSettings", "AppSettings", "schemaFile", "getSchemaFilePath", "transferSettingsOfObject", "jsonSchema", "element", "parameters", "page", "createOverviewPageConfig", "id", "generatePageId", "__name", "V2OvpProvider", "import_UI", "import_ux_specification_types", "import_path", "sortByPropertyIndex", "_key1", "value1", "_key2", "value2", "__name", "sortPropertiesRecords", "definition", "unsortedObjArr", "getExtensionText", "extension", "text", "addExtensionToSortedArray", "sortedExtensionsArray", "targetIndex", "extId", "newExtensionReference", "_a", "addRemainingTargetByBefore", "remainingExtensions", "sortedExtArray", "newCustomExt", "key", "_key", "entry", "_b", "_c", "adjustCustomExtReferringToCustomExt", "extensionDefinitionName", "logger", "forceAdd", "initialRemaining", "getExtensionDetails", "description", "DEFINITION_LINK_PREFIX", "element", "log", "instance", "endRemaining", "getExtensionAnchor", "placement", "anchor", "index", "getLocalExtensionsToSkip", "localExtensions", "annotationEntries", "ignoredIds", "extensionId", "hasAnnotationAnchor", "annotationEntry", "getExtensionIndexByMergedApproach", "extensions", "findNextIndex", "condition", "sortExtension", "innerExtension", "getExtensionIndex", "ignoreAnnotationAnchors", "addExtensionToArray", "templatePropertyName", "localExtensionsToSkip", "addCustomColumnDefinition", "appSchema", "v4Page", "customColumnDefinitionName", "sectionId", "sectionIdInManifest", "_d", "lineItemId", "lineItems", "sortedColumnsArray", "id", "columns", "sortedColumnsAsObject", "value", "determineActionDefinitionName", "data", "actionDefinitionName", "addTargetAndKeysOfAction", "actionDefinition", "lineItemRecord", "actionId", "ns", "getActionKey", "addActionRecordToSchema", "actionsDefinition", "lineItemPath", "recordIndex", "createRef", "getDataFieldDescription", "prefix", "propertyKey", "replaceSpecialChars", "getFacetDefinitionLink", "prepareRef", "determineDataType", "action", "parseSchemaDefinition", "addLineItemRecordToSchema", "lineItem", "columnDefinitionName", "lineItemDefinition", "regex", "findAlias", "schemaKey", "getStableIdPartFromDataField", "columnsDefinition", "properties", "property", "addKeyToDefinition", "appendLineItemsToSchema", "actions", "i", "columnDefinition", "addLineItemsTypeToSchema", "customActionDefinitionName", "addCommonLineItemDefinitions", "addFragmentEnumForAnchor", "positionName", "_e", "enumEntries", "columnsInManifest", "addEnumToSchema", "addEnumForActionAnchor", "definitionId", "addDescriptiveEnumDefinition", "findPageV4", "pages", "pageName", "entitySet", "contextPath", "alignSchemaWithTemplateType", "generateParameters", "tableDefinitionName", "tableDefinition", "addCustomActionDefinition", "sortedActionsArray", "configId", "sortedActionsAsObject", "addHeaderFooterCustomActionDefinition", "_f", "_g", "_h", "getManifestPage", "manifest", "pageId", "getJSONPropertyByPath", "page", "getPageCustomExtensionFile", "files", "xmlType", "extensionName", "appId", "fileExtension", "fileParts", "baseName", "extPath", "file", "settings", "getPageCustomViewFile", "viewName", "addCustomSectionDefinition", "customSectionRef", "isMergedSections", "facetKey", "sortedSectionsArray", "annotationSectionsMap", "annotationSection", "getEnumEntry", "section", "header", "addCustomFilterFieldDefinition", "sortedFilterFieldsArray", "selectionFieldsEntry", "sortedFilterFieldsAsObject", "import_ux_specification_types", "import_UI", "ROOT_PROPERTIES_ORDER", "addSelectionFields", "entityType", "appSchema", "selectionFieldsAnnotation", "selectionFieldsDefinition", "createAnnotationPath", "i", "selectionField", "_a", "_b", "description", "fieldDefinition", "prepareRef", "getLabelForPropertyPath", "DEFINITION_LINK_PREFIX", "dataType", "determineDataType", "__name", "getVisualFilters", "v4Page", "_c", "selectionFields", "visualFilters", "field", "getPropertiesIndex", "properties", "property", "addVisualFilters", "visualFiltersManifest", "_d", "_e", "_f", "propertiesIndex", "fieldName", "filterField", "visualFiltersField", "getFacetDefinitionLink", "propertyIndex", "filterDefinition", "parseSchemaDefinition", "annotationLabel", "applyCustomFilterFields", "addCustomFilterFieldDefinition", "customSectionDefinition", "addDescriptiveEnumDefinition", "addFilterBar", "alias", "filterBar", "defineActions", "schemaIdForActions", "annotations", "targetAnnotation", "actions", "chartAnnotation", "actionRecord", "actionDefinition", "getDataFieldDescription", "prefix", "action", "findTheRightVisualization", "allVisualizations", "namespace", "viewKey", "visualizationType", "visualization", "visualizationObject", "vis", "v", "replaceNamespaces", "analyzeChartAnnotation", "annotationPath", "annotationAVT", "targetAnnotationFullName", "chartTitle", "analyzeViewAnnotation", "uIAnnotations", "serviceAVT", "logger", "title", "UILINEITEM", "annotationInManifest", "log", "instance", "addALPChartView", "chartAnnotationPath", "chartView", "viewAnnotation", "pathParts", "addALPViews", "viewsPaths", "generateParameters", "templateAnnotation", "tableDefinitionName", "tableVisualization", "target", "tableDefinition", "tableView", "annotationTerm", "dataForLineItem", "addLineItemsTypeToSchema", "addCustomColumnDefinition", "schemaIdForToolbarActions", "addCustomActionDefinition", "addEnumForActionAnchor", "addViewChartDefinitions", "inputParameters", "idForChart", "idForToolbar", "addViewChart", "UIAnnotations", "viewsDefinition", "titleOnHover", "addViewLineItems", "tableId", "viewId", "lrTableView", "addDefinitionRef", "addTagsToView", "view", "getTargetEntityType", "entitySet", "targetEntityType", "viewEntitySet", "es", "addViewCustomExtensions", "commonInputParameters", "sectionId", "sectionIdInManifest", "viewColumnDefinition", "addFragmentEnumForAnchor", "customActionDefinitionKey", "customActionPositionDefinitionKey", "customActionDefinition", "addLRViewParts", "uiAnnotations", "addLRViews", "navPropName", "np", "adaptTableDefinition", "annotationTermInSchema", "spvTable", "lineItemAnnotation", "annotationTermQualifier", "customColumnDefinitionName", "getCustomExtensionDefinitionName", "getDefinitionKey", "getDefaultAnnotationPath", "templateType", "_g", "addTableAndViews", "defaultAnnotation", "alignSchemaWithTemplateType", "addHeaderActions", "headerActionsDefinitionKey", "headerActionsDefinition", "addHeaderFooterCustomActionDefinition", "facetKey", "generateListReportSchemaV4", "genericSchema", "templateName", "contextPath", "findAlias", "addEnumForSingleTabVariant", "pages", "findPageV4", "updatePropertyIndices", "import_UI", "import_ux_specification_types", "import_xml_js", "import_ast", "import_parser", "import_ux_specification_types", "findElementByXMLPath", "element", "path", "_a", "currentElement", "subPath", "elements", "__name", "ensureObjectExists", "obj", "name", "getPropertiesFromRef", "fullSchema", "$ref", "properties", "key", "getDefinitionKey", "definition", "traverseDefaultAggregation", "traverseData", "callback", "metadata", "defaultAggregation", "schema", "contextPath", "config", "differs", "contextConfig", "traverseSchema", "isDefaultAggregationAppliable", "_b", "_c", "property", "shouldTraverse", "checkPath", "targetElement", "parseXML", "xmlFile", "providePositions", "logger", "cst", "tokenVector", "xmlDocument", "error", "log", "instance", "getErrorMessage", "getCustomExtensionFragmentDefinitionKey", "fragmentName", "getRootElement", "root", "import_ux_specification_types", "import_ux_specification_types", "getAttribute", "node", "name", "_a", "attribute", "__name", "getNodeByName", "child", "resolveMetaPath", "metaPath", "mataPathParts", "navigationIndex", "__name", "getEntityTypeResolution", "params", "_a", "node", "serviceAVT", "connectionContext", "contextPath", "getAttribute", "entitySet", "path", "metaPathResolution", "resolvedContextPath", "entityType", "applyAnnotationPath", "schema", "entityTypeResolution", "getTableLineItemAnnotationData", "alias", "_b", "_c", "lineItem", "annotationPath", "annotation", "analyzeViewAnnotation", "annotationTerm", "getAnnotationPathUsingFullyQualifiedName", "annotationMacrosHandlers", "_d", "rootSchema", "filterFieldsDefinition", "findAlias", "selectionFieldAnnotation", "addSelectionFields", "colDefinition", "actionDefinition", "annotationData", "dataForLineItem", "appendLineItemsToSchema", "import_ux_specification_types", "ANNOTATION_PREFIX_MAP_REPLACE", "ANNOTATION_PREFIX_MAP", "PLACEMENT_PROPERTIES", "isCustomExtensionSchema", "schema", "appSchema", "_a", "definition", "getDefinitionKey", "additionalProperties", "__name", "getAnnotationPrefix", "nodeName", "prefix", "result", "getExtensionData", "node", "property", "aggregationName", "schemaNode", "annotationPrefix", "xmlPath", "xmlExtension", "key", "getAttribute", "anchor", "placement", "annotationAnchor", "extension", "updatePropertyIndices", "extensions", "sortedExtensionsArray", "extensionSchemaKeyMap", "addExtensionToArray", "i", "getCorrectedAnchorEnumKey", "originalKey", "index", "applyEnumsForAnchors", "_b", "name", "anchorProperty", "addDescriptiveEnumDefinition", "oneOf", "entry", "handleExtensions", "import_crypto", "rnds8Pool", "poolPtr", "rng", "crypto", "__name", "byteToHex", "i", "unsafeStringify", "arr", "offset", "__name", "import_crypto", "native_default", "crypto", "v4", "options", "buf", "offset", "native_default", "rnds", "rng", "i", "unsafeStringify", "__name", "v4_default", "MACROS_NAMESPACE", "descriptionProperties", "getElementName", "element", "ns", "name", "__name", "isElementWithNamespace", "namespacePrefixes", "getDependencies", "coreElement", "dependencies", "coreAttributes", "attr", "key", "value", "accesor", "namespaceConst", "getViewNodeDescription", "node", "description", "attributes", "attributeName", "attribute", "findAvailableName", "properties", "availableName", "index", "prepareSchemaProperties", "schema", "fullSchema", "getDefinitionKey", "definition", "handleAttributes", "property", "applyIdForMacros", "metadata", "v4_default", "callAnnotationHandler", "macrosControl", "options", "logger", "_a", "_b", "annotationMacrosHandlers", "log", "instance", "updateMetadataByReference", "refName", "addControlToSchema", "params", "_c", "_d", "_e", "schemaProperty", "type", "defaultAggregation", "objectKey", "refs", "handled", "ref", "refDefinition", "newDefinition", "getDefinitionsRef", "populateUsedDefinitionKeys", "usedDefinitionKeys", "definitionKey", "DEFINITION_LINK_PREFIX", "isElementAddableToSchema", "parts", "getDefaultAggregation", "getNodeByName", "defaultAggregationSchema", "handleSubElementsOfXMLNode", "subElements", "uniqueKeys", "isUnique", "handleXMLNode", "postProcesses", "macrosPrefixes", "parentSchema", "names", "definitionName", "postProcess", "handleExtensions", "getMacrosPrefixes", "genericSchema", "prefix", "generateMacrosSchemaDefinition", "xmlFile", "serviceAVT", "viewDocument", "parseXML", "initI18n", "i", "populateTemplates", "manifestSections", "templates", "id", "section", "__name", "resolveFragments", "appSchema", "genericMacrosSchema", "generateParameters", "pageId", "_a", "_b", "_c", "targetManifest", "getManifestPage", "fragmentName", "definition", "definitionKey", "getCustomExtensionFragmentDefinitionKey", "extensionFile", "getPageCustomExtensionFile", "properties", "definitions", "generateMacrosSchemaDefinition", "i", "ROOT_PROPERTIES_ORDER", "CRITICAL_ACTION_TYPES", "CUSTOM_ACTION_DEFINITION_DESCRIPTION", "addSingleHeaderActionV4", "oDataServiceAVT", "action", "actionType", "appSchema", "entityType", "headerActions", "index", "actionName", "namespace", "getActionNameAndId", "stableId", "getStableIdPartFromDataField", "convertedIdentification", "actionDefinitionKey", "prepareRef", "headerAction", "DEFINITION_LINK_PREFIX", "getDataFieldDescription", "determineDataType", "__name", "addStandardHeaderAction", "referenceKey", "addSingleFooterAction", "footerActions", "actionId", "description", "footerAction", "groupByCriticality", "identification", "criticalActions", "unCriticalActions", "item", "addCriticalActions", "addCopyAction", "nextIndex", "copyActionIndex", "_a", "_b", "addUncriticalActions", "setAnnotationPathFromEntitySetOrEntityType", "schemaDefinition", "entitySet", "annotationName", "_c", "_d", "addHeaderActionCallBackV4", "isDeletable", "isEntityDeletable", "isUpdatable", "isEntityUpdatable", "isDraftEnabled", "editAction", "deleteAction", "addFooterActionCallBackV4", "addCustomColumnsOP", "v4Page", "lineItemId", "facetIdInManifest", "logger", "useDefinitionAsKey", "customColumDefinitionKey", "customColumnDefinition", "schemaId", "addCustomColumnDefinition", "facetKey", "parseSchemaDefinition", "positionId", "addFragmentEnumForAnchor", "addTableCustomActionsOP", "customActionDefinitionKey", "customActionDefinition", "schemaIdForActions", "addCustomActionDefinition", "addEnumForActionAnchor", "addHeaderFooterCustomActionsOP", "addHeaderFooterCustomActionDefinition", "addFormCustomActionsOP", "formItemId", "handleLineItem", "facet", "lineItemFacet", "getFacetKeyInSchema", "annotation", "tableDefinition", "getFacetDefinitionLink", "tableQVS", "addEnumForSingleTabVariant", "dataForLineItem", "addLineItemsTypeToSchema", "handleSectionTable", "generateParameters", "sections", "sectionTable", "addSectionTitleAndDescription", "table", "handleFormIdentification", "sectionPrefix", "definitionType", "formSection", "targetId", "handleForm", "handleHeaderFacet", "facetDefinitionKey", "sectionFacet", "addTargetTitleAndSectionDescription", "determineDataTypeOfTarget", "handleChartActions", "actions", "i", "actionRecord", "prefix", "toolBarActionsProperty", "toolBarAction", "getFacetAnnotationPath", "handleChart", "chart", "chartToolBar", "chartActions", "handleSectionChart", "sectionChart", "handleSectionPresentationVariant", "facetTarget", "visualizationKey", "target", "log", "instance", "visualizations", "navPath", "replaceAlias", "targetType", "prop", "visualization", "visualizationType", "fullVisualizationKey", "containsCollectionFacet", "childFacets", "id", "createCustomSubSectionReference", "featureToggles", "referenceId", "sourceDefinition", "relatedFacetSchema", "newRef", "isFeatureSupported", "applyCustomSections", "_e", "isMergedSections", "customSectionRef", "addCustomSectionDefinition", "sectionDefinition", "addDescriptiveEnumDefinition", "relatedFacet", "section", "subSections", "entry", "handleCollection", "level", "isCustomSubSectionsSupported", "collectionFacet", "createDefaultSection", "subsections", "nextLevel", "key", "addSection", "facets", "handleAddressContact", "addSections", "getObjectPageFacets", "addHeaderSections", "getObjectPageHeaderFacets", "addRelatedFacetKeysType", "schema", "pages", "contextPath", "element", "facetSections", "getObjectPageFacetSection", "customSections", "customSection", "addDefinitionForRelatedFacetKeys", "addHeader", "addCommonHeaderSchema", "addHeaderActions", "generateObjectPageSchemaV4", "genericSchema", "genericMacrosSchema", "findPageV4", "resolveFragments", "error", "addFooterActions", "updatePropertyIndices", "generateFreestyleSchemaV4", "_generateParameters", "genericSchema", "__name", "import_ux_specification_types", "generateObjectPageInterfaceV4", "genericSchema", "entitySetName", "annotations", "manifest", "logger", "fragments", "contextPath", "genericMacrosSchema", "featureToggles", "serviceAVT", "parseAndMergeAndConvert", "entitySet", "entityType", "getEntityTypeEntitySetFromContextPath", "generateParameters", "generateObjectPageSchemaV4", "__name", "generateListReportInterfaceV4", "templateType", "initI18n", "templateName", "generateListReportSchemaV4", "generateFreestyleInterfaceV4", "_entitySetName", "generateFreestyleSchemaV4", "generateFPMCustomPageInterfaceV4", "routingId", "views", "schema", "isFeatureSupported", "viewData", "getPageCustomViewFile", "generateMacrosSchemaDefinition", "import_UI", "import_ux_specification_types", "import_ux_specification_types", "PAGE_TYPE_TO_CONTROLLER_EXTENSION_MAP", "applyControllerNameProperties", "__name", "source", "target", "properties", "property", "getExtensionKeyForImport", "manifestKey", "_a", "pageType", "key", "configKey", "id", "getExtensionKeyForExport", "appId", "idParts", "pageId", "controllerExtensions", "extensions", "result", "manifestSection", "configObject", "configExtensions", "getSettingsPathForPage", "__name", "pageName", "getSettingsPathForLRViewsPaths", "getSettingsPathForHeaderOP", "getSettingsPathForFooterOP", "getControlConfigurationPath", "getHeaderFacetSettingPath", "_manifest", "sectionId", "getSelectionFieldsPath", "getCustomFilterFieldFieldPath", "_sectionId", "filterFieldId", "getFilterFieldPath", "_targetAnnotationEncoded", "fieldId", "getTableSettingsPathForView", "_viewKey", "targetAnnotation", "annotationEncoded", "getTableSettingsPathForLR", "manifest", "targetAnnotationEncoded", "columnKey", "getQuickVariantPath", "getColumnsPathForView", "getColumnsPathForLR", "getActionsPathForView", "getActionsPathForLR", "getColumnsPathForOP", "getActionsPathForOP", "getHeaderActionsPath", "getFooterActionsPath", "getTableSettingsPathForOP", "getCustomSectionPath", "pathPart", "path", "getObjectPageCustomHeaderSectionPath", "getCustomSubSectionPath", "configObject", "originalIds", "parent", "_ApplicationV4", "__decorateClass", "childId", "ApplicationV4", "_AppSettings", "syncRule", "validity", "controllerExtensions", "AppSettings", "import_ux_specification_types", "importSettingsOfObject", "configPart", "manifest", "appSchema", "pageKey", "breadcrumbs", "sectionId", "logger", "manifestSection", "deprecatedProperties", "targetAnnotationEncoded", "propertyKey", "syncRule", "getReflectMetadata", "path", "getManifestSectionByPathV4", "importProperty", "checkDeprecatedProperties", "__name", "controls_exports", "__export", "ALPChart", "ALPTable", "ActionAfterExecutionConfiguration", "ActionAfterExecutionConfigurationFooter", "ActionAfterExecutionConfigurationForm", "ActionAfterExecutionConfigurationOP", "ActionAfterExecutionConfigurationObjectPageHeader", "ActionAfterExecutionConfigurationToolBarLR", "Actions", "CommonHeaderFacetSettings", "CommonViewSettings", "CustomActionPosition", "CustomActionPositionOP", "CustomFilterField", "CustomFilterFieldPosition", "CustomFooterActionOP", "CustomFooterActionPositionOP", "CustomFormActionOP", "CustomHeaderAction", "CustomHeaderActionOP", "CustomHeaderActionPosition", "CustomHeaderActionPositionOP", "CustomTableAction", "CustomTableActionOP", "FilterBar", "FlexSettings", "FooterActionV4", "FormAction", "Header", "HeaderActions", "HeaderSections", "LRChartView", "LRTableView", "MultiTableModeV4", "ObjectPageCustomHeaderSectionFlexSettings", "ObjectPageCustomHeaderSectionFragment", "ObjectPageCustomSectionFragment", "ObjectPageCustomSubSectionFragment", "ObjectPageFooter", "ObjectPageFooterActions", "ObjectPageForm", "ObjectPageFormActions", "ObjectPageHeader", "ObjectPageHeaderAction", "ObjectPageHeaderActions", "ObjectPageHeaderSectionAddress", "ObjectPageHeaderSectionChart", "ObjectPageHeaderSectionContact", "ObjectPageHeaderSectionDataPoint", "ObjectPageHeaderSectionForm", "ObjectPageLayout", "ObjectPageTable", "ObjectPageTableColumn", "ObjectPageTableColumnAction", "ObjectPageToolBarAction", "PersonalizationType", "PersonalizationTypeOP", "Position", "PositionOP", "QuickVariantSelectionV4", "QuickVariantSelectionV4OP", "Table", "TableColumn", "TableColumnAction", "TableCreationModeOP", "TableCustomColumn", "TableCustomColumnOP", "TableSettings", "TableViewExtension", "TableViewSettings", "ToolBar", "ToolBarAction", "ViewCustomActionPosition", "ViewPersonalizationType", "ViewPosition", "ViewTableColumn", "ViewTableColumnAction", "ViewTableCustomAction", "ViewTableCustomColumn", "ViewToolBarAction", "VisualFilter", "checkViewOrder", "deleteCreationModeProperty", "deletePersonalizationProperty", "exportCreationModeProperty", "exportPersonalization", "exportPersonalizationProperty", "import_ux_specification_types", "getManifestSectionByPathV4", "__name", "manifest", "path", "manifestSection", "element", "getSettingsPathForLRViewsPath", "pageName", "_targetAnnotationEncoded", "viewKey", "_targetAnnotation", "configObject", "viewsPath", "getSettingsPathForLRViewsPaths", "index", "view", "fillNewlyOrderedViews", "keyInConfig", "newIndex", "minIndex", "maxIndex", "direction", "newlyOrderedViews", "viewKeys", "indexInManifest", "checkViewOrder", "oldIndex", "exportPersonalization", "key", "manifestKey", "exportPersonalizationProperty", "deletePersonalizationProperty", "_configObject", "_key", "deleteView", "_configPropertyKey", "_manifestKey", "syncRuleKey", "config", "deletedViewIndex", "viewsInManifest", "viewsInConfig", "exportCreationModeProperty", "deleteCreationModeProperty", "importPersonalization", "tableSettings", "value", "determineIndexOfView", "_sectionId", "_propertyKey", "breadcrumbs", "viewIndex", "_PersonalizationType", "__decorateClass", "syncRule", "getTableSettingsPathForLR", "PersonalizationType", "_ViewPersonalizationType", "getTableSettingsPathForView", "ViewPersonalizationType", "_QuickVariantSelectionV4", "getQuickVariantPath", "QuickVariantSelectionV4", "_TableSettings", "validity", "TableSettings", "_ALPChart", "getSettingsPathForPage", "ALPChart", "_CommonViewSettings", "doNotDelete", "CommonViewSettings", "_TableViewSettings", "TableViewSettings", "getTableViewSettings", "SuperClass", "_ALPTable", "ALPTable", "_LRChartView", "addPatternForBindingChangeOfEnumLR", "LRChartView", "_LRTableView", "LRTableView", "_TableViewExtension", "TableViewExtension", "_MultiTableModeV4", "MultiTableModeV4", "_Table", "Table", "_ActionAfterExecutionConfiguration", "__name", "__decorateClass", "syncRule", "pageName", "manifest", "sectionId", "columnKey", "targetAnnotation", "getColumnsPathForLR", "ActionAfterExecutionConfiguration", "_TableColumn", "validity", "TableColumn", "_ViewTableColumn", "getColumnsPathForView", "ViewTableColumn", "_TableColumnAction", "TableColumnAction", "_ViewTableColumnAction", "ViewTableColumnAction", "_Position", "Position", "_ViewPosition", "ViewPosition", "_TableCustomColumn", "TableCustomColumn", "_ViewTableCustomColumn", "ViewTableCustomColumn", "_Actions", "__name", "Actions", "_ToolBar", "ToolBar", "_ActionAfterExecutionConfigurationToolBarLR", "__name", "__decorateClass", "syncRule", "pageName", "manifest", "sectionId", "columnKey", "targetAnnotation", "getActionsPathForLR", "ActionAfterExecutionConfigurationToolBarLR", "_ToolBarAction", "ToolBarAction", "_ViewToolBarAction", "getActionsPathForView", "ViewToolBarAction", "_CustomActionPosition", "validity", "CustomActionPosition", "_CustomTableAction", "addPatternForBindingChangeOfEnumLR", "CustomTableAction", "_ViewCustomActionPosition", "ViewCustomActionPosition", "_ViewTableCustomAction", "ViewTableCustomAction", "_ObjectPageToolBarAction", "__name", "__decorateClass", "syncRule", "getActionsPathForOP", "ObjectPageToolBarAction", "_CustomActionPositionOP", "pageName", "manifest", "sectionId", "columnKey", "validity", "CustomActionPositionOP", "_CustomTableActionOP", "addPatternForBindingChangeOfEnumOPV4", "CustomTableActionOP", "_ActionAfterExecutionConfigurationForm", "__name", "__decorateClass", "syncRule", "pageName", "manifest", "sectionId", "columnKey", "getActionsPathForOP", "ActionAfterExecutionConfigurationForm", "_FormAction", "validity", "FormAction", "_ObjectPageFormActions", "ObjectPageFormActions", "_ObjectPageForm", "ObjectPageForm", "_CustomFormActionOP", "__name", "__decorateClass", "syncRule", "getActionsPathForOP", "validity", "addPatternForBindingChangeOfEnumOPV4", "CustomFormActionOP", "exportVisualFilterValueList", "manifestSection", "configObject", "key", "manifestKey", "__name", "_FilterBar", "__decorateClass", "syncRule", "pageName", "getSettingsPathForPage", "validity", "getSelectionFieldsPath", "FilterBar", "_VisualFilter", "getFilterFieldPath", "_a", "VisualFilter", "_CustomFilterFieldPosition", "manifest", "sectionId", "columnKey", "getCustomFilterFieldFieldPath", "CustomFilterFieldPosition", "_CustomFilterField", "CustomFilterField", "_HeaderActions", "__name", "HeaderActions", "_Header", "Header", "_CustomHeaderActionPosition", "__name", "__decorateClass", "syncRule", "pageName", "manifest", "sectionId", "columnKey", "getHeaderActionsPath", "validity", "CustomHeaderActionPosition", "_CustomHeaderAction", "addPatternForBindingChangeOfEnumLR", "CustomHeaderAction", "_ActionAfterExecutionConfigurationOP", "__name", "__decorateClass", "syncRule", "pageName", "manifest", "sectionId", "columnKey", "getColumnsPathForOP", "ActionAfterExecutionConfigurationOP", "_ObjectPageTableColumn", "validity", "ObjectPageTableColumn", "_ObjectPageTableColumnAction", "ObjectPageTableColumnAction", "_PositionOP", "PositionOP", "_TableCustomColumnOP", "TableCustomColumnOP", "_ObjectPageHeaderActions", "__name", "ObjectPageHeaderActions", "_ObjectPageHeader", "__decorateClass", "syncRule", "pageName", "getSettingsPathForPage", "validity", "getSettingsPathForHeaderOP", "ObjectPageHeader", "_ObjectPageFooterActions", "__name", "ObjectPageFooterActions", "_ObjectPageFooter", "ObjectPageFooter", "_FlexSettings", "__name", "__decorateClass", "syncRule", "pageName", "manifest", "sectionId", "getHeaderFacetSettingPath", "validity", "FlexSettings", "_CommonHeaderFacetSettings", "CommonHeaderFacetSettings", "_ObjectPageHeaderSectionForm", "ObjectPageHeaderSectionForm", "_ObjectPageHeaderSectionChart", "ObjectPageHeaderSectionChart", "_ObjectPageHeaderSectionDataPoint", "ObjectPageHeaderSectionDataPoint", "_ObjectPageHeaderSectionContact", "ObjectPageHeaderSectionContact", "_ObjectPageHeaderSectionAddress", "ObjectPageHeaderSectionAddress", "_HeaderSections", "HeaderSections", "_ObjectPageLayout", "__name", "__decorateClass", "syncRule", "pageName", "getSettingsPathForPage", "validity", "ObjectPageLayout", "import_ux_specification_types", "_TableCreationModeOP", "__name", "__decorateClass", "syncRule", "pageName", "manifest", "sectionId", "getTableSettingsPathForOP", "manifestSection", "configObject", "key", "exportCreationModeProperty", "_configObject", "_key", "manifestKey", "deleteCreationModeProperty", "TableCreationModeOP", "_PersonalizationTypeOP", "exportPersonalizationProperty", "deletePersonalizationProperty", "PersonalizationTypeOP", "_QuickVariantSelectionV4OP", "QuickVariantSelectionV4OP", "_ObjectPageTable", "validity", "tableSettings", "value", "exportPersonalization", "ObjectPageTable", "_ObjectPageCustomHeaderSectionFlexSettings", "__name", "__decorateClass", "syncRule", "pageName", "manifest", "sectionId", "getObjectPageCustomHeaderSectionPath", "validity", "ObjectPageCustomHeaderSectionFlexSettings", "_ObjectPageCustomHeaderSectionFragment", "addPatternForBindingChangeOfEnumOPV4", "manifestSection", "config", "ObjectPageCustomHeaderSectionFragment", "import_ux_specification_types", "_ObjectPageCustomSectionFragment", "__name", "__decorateClass", "syncRule", "pageName", "manifest", "sectionId", "getCustomSectionPath", "validity", "_manifest", "object", "type", "manifestSection", "config", "ObjectPageCustomSectionFragment", "_ObjectPageCustomSubSectionFragment", "args", "getCustomSubSectionPath", "ObjectPageCustomSubSectionFragment", "_ActionAfterExecutionConfigurationObjectPageHeader", "__name", "__decorateClass", "syncRule", "pageName", "manifest", "sectionId", "columnKey", "getHeaderActionsPath", "ActionAfterExecutionConfigurationObjectPageHeader", "_ObjectPageHeaderAction", "validity", "ObjectPageHeaderAction", "_CustomHeaderActionPositionOP", "CustomHeaderActionPosition", "CustomHeaderActionPositionOP", "_CustomHeaderActionOP", "addPatternForBindingChangeOfEnumOPV4", "CustomHeaderActionOP", "_ActionAfterExecutionConfigurationFooter", "__name", "__decorateClass", "syncRule", "pageName", "manifest", "sectionId", "columnKey", "getFooterActionsPath", "ActionAfterExecutionConfigurationFooter", "_FooterActionV4", "validity", "FooterActionV4", "_CustomFooterActionPositionOP", "CustomFooterActionPositionOP", "_CustomFooterActionOP", "addPatternForBindingChangeOfEnumOPV4", "CustomFooterActionOP", "pages_exports", "__export", "FreestylePage", "ListReport", "ObjectPage", "deleteAllALPViews", "manifestSection", "_a", "_b", "_c", "_d", "key", "__name", "doNotExport", "doNotImport", "ListReport", "__decorateClass", "syncRule", "pageName", "getSettingsPathForPage", "validity", "childId", "pageLayoutInformation", "import_ux_specification_types", "ObjectPage", "__name", "__decorateClass", "childId", "syncRule", "pageName", "getSettingsPathForPage", "validity", "pageLayoutInformation", "_FreestylePage", "__name", "FreestylePage", "import_ux_specification_types", "ALPElements", "LRElements", "OPElements", "ObjectPageTable", "ObjectPageTableColumn", "ObjectPageCustomSectionFragment", "ActionAfterExecutionConfigurationOP", "pageTypes", "_MetadataInstanceFactoryV4", "MetadataFactory", "controls_exports", "pages_exports", "__name", "MetadataInstanceFactoryV4", "import_UI", "transferColumns", "config", "importParameters", "factory", "pageType", "routingId", "configId", "viewId", "_a", "_b", "_c", "_d", "_e", "_f", "schemaDefinitions", "lineItemsId", "lineItems", "columnKey", "schemaPropertyName", "DEFINITION_LINK_PREFIX", "targetAnnotation", "importSettingsOfObject", "removeEmptyStructure", "views", "log", "instance", "__name", "importVisualFilters", "filterBarConfig", "visualFilters", "visualFilter", "filterDefinition", "definitionKey", "getDefinitionKey", "importActions", "tableConfig", "columnDefinitionName", "actionsDefinition", "actionKey", "actionDefinition", "transferToolBar", "toolbarInstance", "table", "determineTargetAnnotationOfView", "definitionName", "entitySet", "lineItemAnnotation", "targetAnnotationPrefix", "importALPViews", "chartDefinition", "chartAnnotationPath", "tableAnnotationPath", "tableDefinition", "getViewTypeByDefinition", "definition", "viewType", "importLRViews", "tableViewConfig", "properties", "sortedList", "a", "b", "element", "nextDefinition", "tableView", "transferHeaderActions", "appSchema", "listReportPageConfig", "manifest", "actionType", "actions", "key", "importCustomFilterFields", "filterFieldsProperties", "filterFieldsSchema", "filterFieldId", "schemaFilterField", "customFilterField", "sectionIdRef", "addSettings", "schemaType", "createListReportConfig", "initI18n", "v4Pages", "MetadataInstanceFactoryV4", "v4Page", "getPageTypeV4", "import_ux_specification_types", "import_UI", "isBoolean", "value", "schema", "_a", "schemaBoolean", "entry", "__name", "isNumber", "schemaNumber", "convertValue", "valueStr", "importProperty", "traverseData", "property", "config", "name", "element", "differs", "convertXmlFileToConfig", "fileData", "logger", "parseXML", "coreElement", "getRootElement", "traverseSchema", "createCustomPageConfig", "importParameters", "views", "manifest", "jsonSchema", "routingId", "viewData", "getPageCustomViewFile", "createCustomFragmentConfig", "fragmentName", "fragments", "definitionKey", "getCustomExtensionFragmentDefinitionKey", "targetManifest", "getManifestPage", "fragmentData", "getPageCustomExtensionFile", "tempSchema", "getManifestId", "sectionId", "splitOnLt", "annotationTerm", "_a", "_b", "_c", "Id", "pathParts", "__name", "getDefinitionId", "manifestId", "fillTableColumnsInConfig", "importParameters", "manifestSection", "configPart", "factory", "manifestSectionId", "tableDefinition", "lineItems", "columnKey", "columnInConfig", "importSettingsOfObject", "fillTableActionsInConfig", "actionsDefinition", "actionKey", "actionDefinition", "definitionKey", "getDefinitionKey", "schemaPropertyName", "fillFormActionsInConfig", "formReference", "DEFINITION_LINK_PREFIX", "actionsReference", "formActionDefinition", "formActionKey", "fillTableInConfig", "manifestSettings", "tableId", "sectionDefinition", "fillFormInConfig", "fillCustomSubSectionInConfig", "schemaSection", "parentId", "section", "sectionIdRef", "customPageConfig", "createCustomFragmentConfig", "fillSectionsInConfig", "sectionProperties", "_d", "_e", "tableManifestId", "fillCustomSectionsInConfig", "objectPageConfig", "customSections", "customSection", "fragmentName", "fillCustomHeaderSectionsInConfig", "header", "customHeaderSections", "customHeaderSection", "readFragmentName", "editFragmentName", "fillHeaderFacets", "appSchema", "manifest", "routingId", "headerSections", "factoryKey", "sectionDefinitionKey", "importActionSettingsOfReference", "actionPropertyDefinition", "actionsInConfig", "definitionOfReference", "key", "metaInstance", "action", "fillHeaderFooterActions", "definitionName", "actionPropertyName", "actions", "definition", "fillObjectPageConfig", "v4Page", "createObjectPageConfigV4", "initI18n", "log", "instance", "v4Pages", "MetadataInstanceFactoryV4", "import_ux_specification_types", "unhandledControllers", "associations", "routesSorter", "route1", "route2", "target1", "target2", "isT1Array", "isT2Array", "__name", "resolveTarget", "target", "usedTargets", "targetParts", "usedTarget", "targetPart", "populateAssociations", "routes", "routesAssociations", "resolvedTargets", "route", "parts", "part", "prop", "determinePageType", "logger", "routingTargetId", "pageType", "log", "instance", "convertSettingsToConfig", "params", "viewId", "schemaId", "getSchemaFilePath", "jsonSchema", "element", "importParameters", "createObjectPageConfigV4", "createCustomPageConfig", "createListReportConfig", "schemaType", "determineV4PageTemplateType", "updateUnhandledControllers", "viewParts", "setVariantManagmentAndNavigation", "page", "name", "navigationRoute", "setEntitySetEntityTypeContextPath", "_a", "_b", "entitySet", "entityType", "getEntityTypeEntitySetFromContextPath", "evaluateCustomPageSettings", "customPageName", "getSinglePageAndConfig", "routing", "id", "pages", "routingRoute", "conversionParameters", "getPagesAndConfigs", "message", "getHome", "routeHome", "getSettings", "config", "getPages", "manifest", "targetName", "v4Page", "_V4AppProvider", "AppProvider", "initI18n", "appSettings", "AppSettings", "schemaFile", "appSchema", "importSettingsOfObject", "V4AppProvider", "import_fs", "import_path", "import_ux_specification_types", "getPathToGenericSchema", "__name", "version", "schemaType", "directory", "fileName", "moduleRoot", "readJsonSchema", "path", "resolve", "reject", "err", "data", "getGenericSchema", "error", "getGenericSchemas", "templateType", "fioriElementsVersion", "genericSchemas", "schemaTypes", "schemaType", "schemaFile", "getSchemaFilePath", "getGenericSchema", "__name", "getAnnotationsForUi", "oDataServiceAVT", "filteredEntityTypes", "allEntityTypes", "alias", "findAlias", "entity", "LineItem", "Facets", "getEntitySetByEntitySetName", "entitySetName", "es", "resolveNavigationProperty", "resolvedContextPath", "_a", "entityType", "entitySet", "index", "element", "bindingName", "navPropertyBinding", "set", "getEntityTypeEntitySetFromContextPath", "contextPath", "logger", "_b", "_c", "log", "instance", "generateObjectPageSchemasV2", "generateParameters", "appSchemas", "allPages", "getPages", "page", "genericSchemaFile", "generateObjectPageSchemaV2", "generateListReportSchemasV4", "lrPages", "alpPages", "pages", "serviceAVT", "pageId", "determineV4PageTemplateType", "generateListReportSchemaV4", "generateAppSchemaV2LR", "generateListReportSchemaV2", "generateObjectPageSchemasV4", "genericMacroSchemaFile", "generateObjectPageSchemaV4", "generateAppSchemasV2", "uiEntityTypes", "generateAnalyticalListReportSchemaV2", "generateOVPInterfaceV2", "generateCustomPageSchemasV4", "isFeatureSupported", "viewData", "getPageCustomViewFile", "viewId", "generateMacrosSchemaDefinition", "generateAppSchemasV4", "generateAppSchemas", "importConfigs", "importParameters", "provider", "files", "V2AppProvider", "V4AppProvider", "V2OvpProvider", "appConfig", "pageConfigs", "app", "config", "getFileList", "configs", "schemaName", "dataSourceUri", "importProjectSchema", "importProjectParameters", "initI18n", "manifest", "annotations", "fragments", "views", "featureToggles", "DistTagEvaluator", "getVersionFromManifest", "parseAndMergeAndConvert", "getTemplateTypeFromManifest", "importProjectSchemaAndConfig", "flex", "configFiles", "ROOT_PROPERTIES_ORDER", "addFlexChangeForSection", "appSchema", "schemaSection", "property", "sectionType", "controlType", "addPatternForBindingChangeOfEnumOP", "__name", "addHeaderActionCallBackV2", "entityType", "identification", "headerActions", "oDataServiceAVT", "item", "actionName", "actionId", "namespace", "getActionNameAndId", "description", "actionDefinitionKey", "prepareRef", "convertedIdentification", "DEFINITION_LINK_PREFIX", "addFooterActionCallBackV2", "footerActions", "getStableIdPartFromDataField", "getDataFieldDescription", "ensureCustomColumnDefinitionExists", "manifest", "entitySetName", "entityTypeName", "facet", "facetKey", "fragments", "suffix", "customColumnsDefinitionName", "customColumnDefinitionName", "customColumnDefinition", "pageKeys", "et", "v2Page", "findObjectPageV2", "addTableColumnExtensions", "addAppSchemaDefinition", "appSchemaSection", "mainSectionType", "addSectionReference", "sections", "key", "definitionKey", "addTableDefinition", "tableType", "facetId", "schemaId", "addEnumForSingleTabVariant", "handleLineItem", "generateParameters", "facets", "navigationProperty", "schemaIdForOpSection", "createDefaultSection", "addSectionTitleAndDescription", "customColumnDefinitionKey", "targetEntitySet", "determineEntitySetOfEntityType", "facetItem", "addLineItemsType", "handleSubSection", "isHeaderFacet", "sectionDefinition", "handleSectionChart", "handleHeaderFacet", "facetDefinition", "determineDataTypeOfTarget", "addDataPointHeaderFacetDataType", "dataType", "handleFormSection", "getSectionType", "facetType", "isSubSection", "headerSectionMap", "sectionTypeMapping", "subSectionTypeMapping", "getReferenceKey", "referenceKey", "addSection", "subSections", "addFieldsType", "handleForm", "handleAddressContact", "addSectionsFromFacets", "facetsExists", "addSections", "pages", "_a", "_b", "_c", "_d", "_e", "_f", "headerSections", "getObjectPageFacets", "headerFacets", "getObjectPageHeaderFacets", "generateFacets", "generateHeaderFacets", "element", "customSections", "name", "addHeader", "entitySet", "addCommonHeaderSchema", "addHeaderActions", "addRelatedFacetKeysType", "schema", "logger", "facetSections", "getObjectPageFacetSection", "addDefinitionForRelatedFacetKeys", "generateObjectPageSchemaV2", "genericSchema", "initI18n", "additionalSections", "addFooterActions", "updatePropertyIndices", "log", "instance", "import_ux_specification_types", "ROOT_PROPERTIES_ORDER", "addEnumForVariantPaths", "entityType", "entitySet", "appSchema", "oDataServiceAVT", "addEnumForSingleTabVariant", "addEnumForMultiTabVariant", "addEnumForVariantEntitySet", "__name", "generateListReportSchemaV2", "generateParameters", "genericSchema", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "DEFINITION_LINK_PREFIX", "MULTISELECTTABLE", "INLINEDELETETABLE", "TREETABLE", "ANALYTICALTABLE", "GRIDTABLE", "responsiveTableMultiSelect", "responsiveTableInlineDelete", "treeTableDefinition", "analyticalTableDefinition", "gridTableDefinition", "lrLineItems", "lrToolBar", "LINEITEMTABLETYPES", "tableType", "log", "instance", "addStandardHeaderActions", "lineItemAnnotation", "createAnnotationPath", "addLineItemsType", "selectionFieldAnnotation", "addSelectionFields", "addFieldsType", "addEntityPropertiesToEnum", "pageKeys", "v2Page", "findListReportPageV2", "addTableColumnExtensions", "addEnumForFilterBarAnnotationPath", "addEnumFieldGroupAnnotationPath", "updatePropertyIndices", "import_ux_specification_types", "ROOT_PROPERTIES_ORDER", "getVisualizations", "v2Page", "uIAnnotations", "_a", "_b", "qualifier", "selectionPresentationVariant", "presentationVariant", "vizualizations", "lineItem", "chart", "i", "vizualization", "lineItemName", "chartName", "__name", "addChart", "appSchema", "chartAnnotation", "chartSettings", "pathParts", "generateAnalyticalListReportSchemaV2", "generateParameters", "genericSchema", "_c", "_d", "_e", "DEFINITION_LINK_PREFIX", "tableDefinitionResponsive", "tableDefinitionGrid", "tableDefinitionAnalytical", "removeElementsFromEnum", "entityType", "log", "instance", "addStandardHeaderActions", "pageKeys", "findAnalyticalListPage", "annotations", "lineItemAnnotation", "addLineItemsType", "selectionFieldAnnotation", "addSelectionFields", "addFieldsType", "addTableColumnExtensions", "addEnumForVariantPaths", "updatePropertyIndices", "getCardDefinitionNames", "genericSchema", "properties", "cardProperty", "refParts", "__name", "addModelsEnum", "appSchema", "manifest", "dataSources", "serviceKeys", "models", "enumValues", "model", "definition", "addEnumToSchema", "cards", "card", "property", "DEFINITION_LINK_PREFIX", "generateOverviewPageSchemaV2", "import_ux_specification_types", "prepareGenerationV2", "annotations", "logger", "manifest", "fragments", "entitySet", "templateType", "initI18n", "serviceAVT", "parseAndMergeAndConvert", "generateParameters", "getEntitySetByEntitySetName", "log", "instance", "__name", "generateObjectPageInterfaceV2", "genericSchema", "generateObjectPageSchemaV2", "generateListReportInterfaceV2", "generateListReportSchemaV2", "generateAnalyticalListPageInterfaceV2", "generateAnalyticalListReportSchemaV2", "generateOVPInterfaceV2", "generateOverviewPageSchemaV2", "import_ux_specification_types", "getDefaultExportResult", "__name", "fragmentFiles", "frg", "getClassesForSingleSection", "currentSection", "sectionId", "factory", "index", "getSubsectionClasses", "subSection", "subSectionId", "getExportClassesForSections", "objectPageConfig", "objectPage", "section", "findV2Page", "pageKeys", "exportParameters", "v2Page", "findListReportPageV2", "log", "instance", "calculateBaseId", "config", "pageLayoutInformation", "getPageLayoutInformation", "exportListReportPage", "ui5Version", "deletionRequest", "exportResults", "listReportConfig", "MetadataInstanceFactoryV2", "pageInstance", "transferParameters", "transferManifestEntriesAndFlexChange", "exportAnalyticalListPage", "analyticalListPageConfig", "findAnalyticalListPage", "exportObjectPage", "entitySet", "findObjectPageV2", "exportOverviewPage", "overviewPage", "transferManifestEntriesOVP", "exportApplicationV2", "application", "manifest", "jsonSchema", "_a", "applicationV2", "ApplicationV2", "AppSettings", "key", "syncRule", "getReflectMetadata", "path", "manifestSection", "ensureManifestSectionByPathV2", "deleteEmptyStructure", "manifestPages", "transformPageToNewManifestV2", "exportPageV2", "exportParametersV2", "exportConfigEntityByPathV2", "import_ux_specification_types", "import_UI", "updateDependencyLib", "manifest", "name", "add", "__name", "extractLastIdPart", "longId", "lastIdPart", "navPart", "createNewCustomColumn", "propertyKey", "transferParameters", "configObject", "logger", "breadcrumbs", "log", "instance", "sectionsIndex", "sectionId", "extractLastIdPart", "entityInManifest", "handler", "data", "columnApiParams", "generateCustomExtension", "__name", "import_ux_specification_types", "createRoute", "__name", "pattern", "name", "target", "createTargetOption", "property", "variantManagement", "initializeRouting", "manifestRouting", "routing", "setTargetOptions", "keyInManifest", "navigationEntry", "calculateQueryPattern", "parts", "targetPage", "parentKeys", "part", "index", "key", "fillNavigationParts", "navKey", "pages", "pageId", "contextPath", "referringPage", "pageKey", "fillParentKeys", "parentPattern", "result", "patternParts", "entity", "keyName", "handlePageNavigation", "page", "navPage", "routingRoute", "removeDeletedPages", "id", "route", "transferEntitySetandContextPath", "_a", "_b", "_c", "_d", "deleteRemovedCustomSections", "_e", "manifestSections", "objectPage", "latestIds", "section", "existingIds", "updateRouteLayout", "fillTarget", "transformRoutingV4", "homePage", "manifest", "import_ux_specification_types", "fclAggregations", "applyFCLRouting", "__name", "manifestUI5", "app", "pageName", "targetPages", "level", "_a", "routeOfPage", "route", "target", "page", "pattern", "pageId", "enableFcl", "rootView", "updateDependencyLib", "disableFcl", "sapui5", "routes", "updateFcl", "import_ux_specification_types", "import_UI", "import_xml_js", "import_ux_specification_types", "isExportValueEquals", "value1", "value2", "__name", "deleteProperty", "traverseData", "name", "_a", "element", "schema", "parent", "contextPath", "context", "exportProperty", "property", "config", "_b", "fullSchema", "differs", "targetElement", "traverseSchema", "getExtensionExportResult", "extensionData", "exportResults", "jsonSchema", "extensionType", "logger", "parseXML", "coreElement", "getRootElement", "fileContent", "extensionExportResult", "exportFPMCustomPageConfig", "exportParameters", "defaultExportResult", "views", "manifest", "page", "viewData", "getPageCustomViewFile", "exportXMLFragmentConfig", "transferParameters", "fragmentName", "appSchema", "fragments", "pageNameArray", "fragmentData", "targetManifestPage", "getManifestPage", "getPageCustomExtensionFile", "definitionKey", "getCustomExtensionFragmentDefinitionKey", "tempSchema", "prepareDefaultExportResult", "__name", "manifest", "exportResults", "determineTargetAnnotationOfTable", "ids", "transferParameters", "configObject", "_a", "_b", "_c", "_d", "targetAnnotationEncoded", "targetAnnotation", "annotationPath", "annoPath", "annotationPathArray", "determineTargetAnnotationOfChart", "determineTargetAnnotationOfViews", "parentDefinition", "ownDefinitionName", "DEFINITION_LINK_PREFIX", "ownDefinition", "annotation", "determineTargetAnnotationOfHeaderSections", "custom", "title", "determineTargetAnnotationOfSections", "sectionId", "extractLastIdPart", "determineTargetAnnotation", "determineKeyForSyncRule", "idIndex", "index", "element", "createNewObjectInManifest", "params", "transferPropertyToManifest", "propertyDefinition", "nextDefinition", "exportManifestChange", "syncRule", "configPropertyKey", "originalIds", "syncRuleKey", "path", "manifestSection", "getManifestSectionByPathV4", "manifestKey", "exportParams", "deleteHandler", "deleteEmptyStructure", "evaluateExportRule", "breadcrumbs", "key", "getReflectMetadata", "templateName", "exportXMLFragmentConfig", "transferSubObject", "parameters", "currentConfigObject", "localIdParts", "objects", "isArray", "innerObject", "additionalIds", "transferManifestEntriesAndFlexChange", "createALPTableView", "newElementCreated", "getSettingsPathForPage", "views", "createALPChartView", "createVisualFilters", "settings", "SelectionFields", "filterFields", "filterName", "filterConfig", "property", "createLRTableView", "newEntry", "existingIndex", "view", "savedContent", "createNewElement", "definitionName", "preprocessed", "stopProcessing", "createNewCustomColumn", "isDefinitionTraversable", "definition", "transferSortedListEntry", "parentIds", "stableIdParts", "childId", "getChildId", "getNextTargetDefinition", "transferConfigEntriesWithAnyOfDefinitions", "transferEntryParameters", "anyOfDefinitions", "schemaDefinition", "configEntries", "a", "b", "configEntry", "anyOfDefinition", "mergeEntriesForInsert", "additionalProperties", "list", "keys", "findMatchingKeysByAdditionalProperties", "item", "sortedList", "arrayIncludes", "getClassesForSingleSection", "objectPageConfig", "factory", "customSections", "getSubsectionClasses", "section", "subSection", "subSectionId", "getExportClassesForSections", "objectPage", "calculateBaseId", "config", "exportParameters", "pageLayoutInformation", "getPageLayoutInformation", "exportObjectPage", "ui5Version", "deletionRequest", "MetadataInstanceFactoryV4", "pageInstance", "exportListPage", "pageType", "templateType", "appSchema", "tableDefinition", "tableDefinitionName", "appSchemaActions", "actionKey", "exportListReportPage", "listReport", "exportAnalyticalListPage", "applyExportRule", "rule", "application", "existing", "prepareValueForPath", "setManifestSectionByPathV4", "exportApplicationV4", "applicationV4", "ApplicationV4", "AppSettings", "transformRoutingV4", "updateFcl", "exportPageV4", "exportParametersV4", "jsonSchema", "exportFPMCustomPageConfig", "exportConfigEntityByPathV4", "import_fe_fpm_writer", "FPMWriterMap", "generateSchema", "generateParameters", "schema", "v2Params", "genericSchema", "entitySet", "annotations", "manifest", "fragments", "logger", "generateListReportInterfaceV2", "generateObjectPageInterfaceV2", "generateOVPInterfaceV2", "generateAnalyticalListPageInterfaceV2", "v4Params", "contextPath", "generateListReportInterfaceV4", "genericMacrosSchema", "generateObjectPageInterfaceV4", "generateFreestyleInterfaceV4", "routingId", "views", "generateFPMCustomPageInterfaceV4", "__name", "exportConfig", "exportParameters", "exportResults", "ui5Config", "exportPageV2", "exportPageV4", "exportConfigEntityByPath", "exportConfigEntityByPathV2", "exportConfigEntityByPathV4", "deleteConfigEntityByPath", "importConfig", "importParameters", "config", "createListReportConfig", "createObjectPageConfigV2", "createOverviewPageConfig", "createAnalyticalListPageConfig", "createObjectPageConfigV4", "createCustomPageConfig", "importProject", "importProjectSchemaAndConfig", "importProjectSchema", "getApiVersion", "generateCustomExtension", "customExtensionParams", "fpmWriterFunction", "import_path", "import_fs", "readFile", "__name", "path", "resolve", "reject", "readFileFs", "err", "data", "readJSON", "readDirectory", "isDirectory", "stats", "resourceExists", "doesExist", "getManifest", "getChanges", "webapp", "changes", "changesDirectory", "extensions", "files", "file", "ext", "getExtensionFiles", "webAppPath", "folder", "fragments", "directoryPath", "filePath", "getAnnotations", "manifest", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "annotationData", "serviceDataSources", "metadataPath", "annotationRef", "annotationFilePath", "key", "dataSource", "getProject", "root", "name", "webappPath", "annotations", "views", "__reExport", "src_exports"]
}
