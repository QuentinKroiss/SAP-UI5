{
  "type": "object",
  "properties": {
    "variantManagement": {
      "$ref": "#/definitions/VariantManagementTypeListReport",
      "description": "variantManagement defines how the variant management of page personalizations is controlled.\n- None - No variant management by default.\n- Control - Individual personalizations for each control.",
      "artifactType": "Manifest"
    },
    "header": {
      "$ref": "#/definitions/Header",
      "description": "Header"
    },
    "filterBar": {
      "$ref": "#/definitions/FilterBar",
      "description": "Filter Bar"
    },
    "chart": {
      "$ref": "#/definitions/ALPChartView",
      "description": "Chart",
      "artifactType": "Manifest"
    },
    "table": {
      "description": "Table",
      "anyOf": [
        {
          "$ref": "#/definitions/ALPTableView"
        },
        {
          "$ref": "#/definitions/Table"
        }
      ]
    },
    "defaultTemplateAnnotationPath": {
      "description": "defaultTemplateAnnotationPath must be a reference to a SelectionPresentationVariant.\nYou use the SelectionPresentationVariant to configure the default visualizations and default filter values of the main content area.",
      "type": "string",
      "artifactType": "Manifest"
    },
    "defaultPath": {
      "$ref": "#/definitions/DefaultPathType",
      "description": "Allows you to set the initial view mode\n\n- primary: This property loads the app in chart-only view.\n- secondary: This property loads the app in table-only view.\n- both: This property loads the app in hybrid view.",
      "artifactType": "Manifest"
    },
    "$schema": {
      "type": "string"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "VariantManagementTypeListReport": {
      "enum": [
        "Control",
        "None",
        "Page"
      ],
      "type": "string"
    },
    "Header": {
      "description": "Header",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "actions": {
          "$ref": "#/definitions/HeaderActions"
        }
      },
      "additionalProperties": false
    },
    "HeaderActions": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/CustomHeaderAction"
      }
    },
    "CustomHeaderAction": {
      "type": "object",
      "properties": {
        "position": {
          "$ref": "#/definitions/CustomHeaderActionPosition",
          "description": "Defines the position of the action relative to other actions.",
          "artifactType": "Manifest"
        },
        "text": {
          "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
          "i18nClassification": "COL: Custom action text",
          "artifactType": "Manifest",
          "type": "string"
        },
        "press": {
          "description": "Relevant for extension actions; allows the definition of a target action handler.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Allows you to define if the action button is visible on the screen.",
          "artifactType": "Manifest"
        },
        "enabled": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Allows you to define if the action should be enabled. The default value is \"true\".",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "press",
        "text"
      ]
    },
    "CustomHeaderActionPosition": {
      "type": "object",
      "properties": {
        "anchor": {
          "description": "The key of another action to be used as placement anchor.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "placement": {
          "$ref": "#/definitions/ActionPlacement",
          "description": "Define the placement, either before or after the anchor action.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "placement"
      ]
    },
    "ActionPlacement": {
      "enum": [
        "After",
        "Before"
      ],
      "type": "string"
    },
    "FilterBar": {
      "description": "Filter Bar",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "hideFilterBar": {
          "description": "Allows you to hide the filter bar.",
          "artifactType": "Manifest",
          "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bd7590569c74c61a0124c6e370030f6",
          "type": "boolean"
        },
        "selectionFields": {
          "isViewNode": true,
          "anyOf": [
            {
              "$ref": "#/definitions/SelectionFields"
            },
            {
              "$ref": "#/definitions/CompactFilters"
            }
          ]
        },
        "visualFilters": {
          "$ref": "#/definitions/VisualFilters"
        },
        "initialLayout": {
          "$ref": "#/definitions/InitialLayoutType",
          "description": "Allows you to specify the default filter mode on the initial load.",
          "artifactType": "Manifest"
        },
        "layout": {
          "$ref": "#/definitions/LayoutType",
          "description": "Allows you to specify the layout of the filter bar.\n\n- Compact: This setting shows filter fields in compact mode.\n- CompactVisual: This setting shows filter fields in both compact and visual modes.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "SelectionFields": {
      "description": "Filter Fields",
      "isViewNode": true,
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "type": "object",
            "properties": {}
          },
          {
            "$ref": "#/definitions/CustomFilterField"
          }
        ]
      }
    },
    "CustomFilterField": {
      "description": "Custom Filter Field",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "label": {
          "description": "A static or i18n binding string.",
          "i18nClassification": "COL: Custom filter field label",
          "type": "string",
          "artifactType": "Manifest"
        },
        "property": {
          "description": "The full path to the property to be filtered.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "template": {
          "description": "The path to the XML template containing the filter control.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "required": {
          "description": "If filter field is mandatory, i.e. it requires a value.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "position": {
          "$ref": "#/definitions/CustomFilterFieldPosition",
          "description": "Defines the position of the filter field relative to another filter field.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "label",
        "property",
        "template"
      ]
    },
    "CustomFilterFieldPosition": {
      "type": "object",
      "properties": {
        "anchor": {
          "description": "The key of another filter field is to be used as a placement anchor.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "placement": {
          "$ref": "#/definitions/FilterFieldPlacement",
          "description": "Define the placement, either before or after the anchor filter field.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "placement"
      ]
    },
    "FilterFieldPlacement": {
      "enum": [
        "After",
        "Before"
      ],
      "type": "string"
    },
    "CompactFilters": {
      "description": "Compact Filters",
      "isViewNode": true,
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {}
      }
    },
    "VisualFilters": {
      "description": "Visual Filters",
      "isViewNode": true,
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/VisualFilter"
      }
    },
    "VisualFilter": {
      "description": "Visual Filter",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "availability": {
          "$ref": "#/definitions/Availability",
          "description": "Defines where the selection field should be shown.\n\n- Default: The filter field is shown by default in the filter bar (both the regular filter fields as well as the corresponding visual filter fields).\n- Adaptation: The filter field is initially not shown but is only available under Adapt Filters.\n- Hidden: The filter field is not visible in the filter bar or within the Adapt Filters dialog.",
          "artifactType": "Manifest"
        },
        "visualFilterValueList": {
          "description": "The valuelist annotation corresponding to the visual filter representation.",
          "artifactType": "Manifest",
          "hidden": true,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Availability": {
      "enum": [
        "Adaptation",
        "Default",
        "Hidden"
      ],
      "type": "string"
    },
    "InitialLayoutType": {
      "enum": [
        "Compact",
        "Visual"
      ],
      "type": "string"
    },
    "LayoutType": {
      "enum": [
        "Compact",
        "CompactVisual"
      ],
      "type": "string"
    },
    "ALPChartView": {
      "description": "Chart View",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "annotationPath": {
          "description": "The primary annotation path can be either UI.Chart, UI.PresentationVariant, or UI.SelectionPresentationVariant.",
          "type": "string"
        },
        "toolBar": {
          "$ref": "#/definitions/ViewChartToolBar",
          "description": "Chart Toolbar"
        }
      },
      "additionalProperties": false,
      "required": [
        "annotationPath"
      ]
    },
    "ViewChartToolBar": {
      "description": "Chart Toolbar",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "actions": {
          "$ref": "#/definitions/ViewActions"
        }
      },
      "additionalProperties": false,
      "required": [
        "actions"
      ]
    },
    "ViewActions": {
      "description": "Actions",
      "isViewNode": true,
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/ViewToolBarAction"
          },
          {
            "type": "object",
            "properties": {}
          },
          {
            "$ref": "#/definitions/ViewTableCustomAction"
          }
        ]
      }
    },
    "ViewToolBarAction": {
      "description": "Action",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "enableOnSelect": {
          "$ref": "#/definitions/SelectType",
          "description": "Enables single selection for a bound action",
          "artifactType": "Manifest"
        },
        "afterExecution": {
          "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
          "description": "Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)"
        }
      },
      "additionalProperties": false
    },
    "SelectType": {
      "enum": [
        "multi",
        "single"
      ],
      "type": "string"
    },
    "ActionAfterExecutionConfigurationToolBarLR": {
      "type": "object",
      "properties": {
        "navigateToInstance": {
          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
          "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "enableAutoScroll": {
          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ViewTableCustomAction": {
      "type": "object",
      "properties": {
        "position": {
          "$ref": "#/definitions/ViewCustomActionPosition",
          "description": "Defines the position of the action relative to other actions.",
          "artifactType": "Manifest"
        },
        "requiresSelection": {
          "description": "Indicates whether the action requires a selection of items.",
          "artifactType": "Manifest",
          "type": "boolean"
        },
        "text": {
          "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
          "i18nClassification": "COL: Custom action text",
          "artifactType": "Manifest",
          "type": "string"
        },
        "press": {
          "description": "Relevant for extension actions; allows the definition of a target action handler.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Allows you to define if the action button is visible on the screen.",
          "artifactType": "Manifest"
        },
        "enabled": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Allows you to define if the action should be enabled. The default value is \"true\".",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "press",
        "text"
      ]
    },
    "ViewCustomActionPosition": {
      "type": "object",
      "properties": {
        "anchor": {
          "description": "The key of another action to be used as placement anchor.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "placement": {
          "$ref": "#/definitions/ActionPlacement",
          "description": "Define the placement, either before or after the anchor action.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "placement"
      ]
    },
    "ALPTableView": {
      "description": "Table View",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "annotationPath": {
          "description": "The secondary annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.",
          "type": "string"
        },
        "initialLoad": {
          "$ref": "#/definitions/InitialLoadType",
          "description": "Allows you to define whether or not the data in the table is automatically loaded\n\n- Auto (default): An initial load of data only occurs if some default filter values have been set in the filter bar\n- Enabled: An initial load of data occurs for the standard variant\n- Disabled: An initial load of data does not occur for the standard variant, and the user has to actively click the Go button."
        },
        "personalization": {
          "$ref": "#/definitions/ViewPersonalizationType",
          "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\nBy default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\nOmitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases."
        },
        "toolBar": {
          "$ref": "#/definitions/ToolBar",
          "description": "Table Toolbar"
        },
        "columns": {
          "$ref": "#/definitions/ViewColumns"
        },
        "type": {
          "$ref": "#/definitions/TableTypeV4",
          "description": "Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones."
        },
        "selectionMode": {
          "$ref": "#/definitions/SelectionMode",
          "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.\n\n- Auto: This type is now deprecated. Choose any of the following modes.\n- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar. In edit mode, multiple selection is possible with the delete button.\n- Single: This type allows single table selection if relevant actions are available in the toolbar. In edit mode, multiple selection is possible with the Delete button.\n- None: No table selection is possible in display mode. In edit mode, the selection (including multiple row selection) is still possible when the Delete button is available in the table toolbar."
        },
        "selectAll": {
          "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
          "type": "boolean"
        },
        "selectionLimit": {
          "description": "You can define how many items can be selected at a time using the selectionLimit.",
          "type": "number"
        },
        "enableExport": {
          "description": "By default, export is enabled in the List Report and on the Object Page. When enabled, the Export button is displayed in the table toolbar.",
          "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
          "type": "boolean"
        },
        "quickVariantSelection": {
          "$ref": "#/definitions/QuickVariantSelectionV4",
          "description": "With quickVariantSelection you can switch on the multiple view feature (single table mode). It links to SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) you must have added to your annotations beforehand."
        },
        "condensedTableLayout": {
          "description": "Allows you to set the content density to condensed for ui.table on the List Report and Object Page.",
          "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
          "type": "boolean"
        },
        "hierarchyQualifier": {
          "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
          "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "annotationPath"
      ]
    },
    "InitialLoadType": {
      "enum": [
        "Auto",
        "Disabled",
        "Enabled"
      ],
      "type": "string"
    },
    "ViewPersonalizationType": {
      "type": "object",
      "properties": {
        "column": {
          "description": "Defines whether the user can add and remove columns to a given table.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "sort": {
          "description": "Defines whether the user can sort a given table.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "filter": {
          "description": "Defines whether the user can filter data of a given table.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ToolBar": {
      "description": "Table Toolbar",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "actions": {
          "$ref": "#/definitions/Actions"
        }
      },
      "additionalProperties": false,
      "required": [
        "actions"
      ]
    },
    "Actions": {
      "description": "Actions",
      "isViewNode": true,
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/ToolBarAction"
          },
          {
            "$ref": "#/definitions/CustomTableAction"
          }
        ]
      }
    },
    "ToolBarAction": {
      "description": "Action",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "enableOnSelect": {
          "$ref": "#/definitions/SelectType",
          "description": "Enables single selection for a bound action",
          "artifactType": "Manifest"
        },
        "afterExecution": {
          "$ref": "#/definitions/ActionAfterExecutionConfigurationToolBarLR",
          "description": "Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "CustomTableAction": {
      "type": "object",
      "properties": {
        "requiresSelection": {
          "description": "Indicates whether the action requires a selection of items.",
          "artifactType": "Manifest",
          "type": "boolean"
        },
        "text": {
          "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
          "i18nClassification": "COL: Custom action text",
          "artifactType": "Manifest",
          "type": "string"
        },
        "position": {
          "$ref": "#/definitions/CustomActionPosition",
          "description": "Defines the position of the action relative to other actions.",
          "artifactType": "Manifest"
        },
        "press": {
          "description": "Relevant for extension actions; allows the definition of a target action handler.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Allows you to define if the action button is visible on the screen.",
          "artifactType": "Manifest"
        },
        "enabled": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Allows you to define if the action should be enabled. The default value is \"true\".",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "press",
        "text"
      ]
    },
    "CustomActionPosition": {
      "type": "object",
      "properties": {
        "anchor": {
          "description": "The key of another action to be used as placement anchor.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "placement": {
          "$ref": "#/definitions/ActionPlacement",
          "description": "Define the placement, either before or after the anchor action.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "placement"
      ]
    },
    "ViewColumns": {
      "description": "View Columns",
      "isViewNode": true,
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/ViewTableColumn"
          },
          {
            "$ref": "#/definitions/ViewTableColumnAction"
          },
          {
            "$ref": "#/definitions/ViewTableCustomColumn"
          }
        ]
      }
    },
    "ViewTableColumn": {
      "description": "Table Column",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "width": {
          "description": "A string type that represents CSS size values.\nRefer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "type": "string",
          "artifactType": "Manifest"
        },
        "availability": {
          "$ref": "#/definitions/Availability",
          "description": "Defines where the column should be shown.\nDefault: it will be shown by default in the table.\nAdaptation: it will initially not be shown in the table but be available via end user adaptation.\nHidden: the column is neither available in the table nor in adaptation.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ViewTableColumnAction": {
      "description": "Inline Action",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "afterExecution": {
          "$ref": "#/definitions/ActionAfterExecutionConfiguration",
          "description": "Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)",
          "artifactType": "Manifest"
        },
        "width": {
          "description": "A string type that represents CSS size values.\nRefer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "type": "string",
          "artifactType": "Manifest"
        },
        "availability": {
          "$ref": "#/definitions/Availability",
          "description": "Defines where the column should be shown.\nDefault: it will be shown by default in the table.\nAdaptation: it will initially not be shown in the table but be available via end user adaptation.\nHidden: the column is neither available in the table nor in adaptation.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ActionAfterExecutionConfiguration": {
      "type": "object",
      "properties": {
        "navigateToInstance": {
          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
          "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "enableAutoScroll": {
          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ViewTableCustomColumn": {
      "description": "Custom Column",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "position": {
          "$ref": "#/definitions/ViewPosition",
          "description": "Defines the position of the column relative to other columns.",
          "artifactType": "Manifest"
        },
        "header": {
          "description": "The header is shown on the table as header, as well as in the add/remove dialog.",
          "i18nClassification": "COL: Custom column header text",
          "artifactType": "Manifest",
          "type": "string"
        },
        "width": {
          "description": "A string type that represents CSS size values.\nRefer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "artifactType": "Manifest",
          "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "type": "string"
        },
        "template": {
          "description": "Relevant for extension columns; allows the definition of a target fragment.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "horizontalAlign": {
          "$ref": "#/definitions/HorizontalAlign",
          "description": "Aligns the header as well as the content horizontally.",
          "artifactType": "Manifest"
        },
        "availability": {
          "$ref": "#/definitions/Availability",
          "description": "Defines where the column should be shown.\n- Default: it will be shown by default in the table.\n- Adaptation: it will initially not be shown in the table but be available via end user adaptation\n- Hidden: the column is neither available in the table nor in adaptation",
          "artifactType": "Manifest"
        },
        "properties": {
          "description": "If provided and sorting is enabled for the table the custom column header can be clicked. This will lead to a list of properties (or one) that can be sorted by, they are displayed as the labels of the properties, corresponding to their definition in the annotations.",
          "artifactType": "Manifest",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "required": [
        "header",
        "template"
      ]
    },
    "ViewPosition": {
      "type": "object",
      "properties": {
        "anchor": {
          "description": "The key of another column to be used as placement anchor.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "placement": {
          "$ref": "#/definitions/Placement",
          "description": "Define the placement, either before or after the anchor column.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "placement"
      ]
    },
    "Placement": {
      "enum": [
        "After",
        "Before"
      ],
      "type": "string"
    },
    "HorizontalAlign": {
      "enum": [
        "Begin",
        "Center",
        "End"
      ],
      "type": "string"
    },
    "TableTypeV4": {
      "enum": [
        "AnalyticalTable",
        "GridTable",
        "ResponsiveTable",
        "TreeTable"
      ],
      "type": "string"
    },
    "SelectionMode": {
      "enum": [
        "Auto",
        "Multi",
        "None",
        "Single"
      ],
      "type": "string"
    },
    "QuickVariantSelectionV4": {
      "type": "object",
      "properties": {
        "paths": {
          "description": "List of annotation paths referring to SelectionVariant annotations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnotationPathAsObject"
          },
          "artifactType": "Manifest"
        },
        "hideTableTitle": {
          "description": "You can hide the table and display only the titles of the tabs. To do so, add the hideTableTitle option and set it to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "showCounts": {
          "description": "You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "paths"
      ]
    },
    "AnnotationPathAsObject": {
      "type": "object",
      "properties": {
        "annotationPath": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "annotationPath"
      ]
    },
    "Table": {
      "description": "Table",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "annotationPath": {
          "description": "The secondary annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "initialLoad": {
          "$ref": "#/definitions/InitialLoadType",
          "description": "Allows you to define whether or not the data in the table is automatically loaded\n\n- Auto (default): An initial load of data only occurs if some default filter values have been set in the filter bar\n- Enabled: An initial load of data occurs for the standard variant\n- Disabled: An initial load of data does not occur for the standard variant, and the user has to actively click the Go button.",
          "artifactType": "Manifest"
        },
        "personalization": {
          "$ref": "#/definitions/PersonalizationType",
          "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\nBy default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\nOmitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
          "artifactType": "Manifest"
        },
        "views": {
          "$ref": "#/definitions/MultiTableModeV4"
        },
        "toolBar": {
          "$ref": "#/definitions/ToolBar",
          "description": "Tool Bar"
        },
        "columns": {
          "$ref": "#/definitions/GenericColumns"
        },
        "type": {
          "$ref": "#/definitions/TableTypeV4",
          "description": "Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.",
          "artifactType": "Manifest"
        },
        "selectionMode": {
          "$ref": "#/definitions/SelectionMode",
          "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.\n\n- Auto: This type is now deprecated. Choose any of the following modes.\n- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar. In edit mode, multiple selection is possible with the delete button.\n- Single: This type allows single table selection if relevant actions are available in the toolbar. In edit mode, multiple selection is possible with the Delete button.\n- None: No table selection is possible in display mode. In edit mode, the selection (including multiple row selection) is still possible when the Delete button is available in the table toolbar.",
          "artifactType": "Manifest"
        },
        "selectAll": {
          "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "selectionLimit": {
          "description": "You can define how many items can be selected at a time using the selectionLimit.",
          "type": "number",
          "artifactType": "Manifest"
        },
        "enableExport": {
          "description": "By default, export is enabled in the List Report and on the Object Page. When enabled, the Export button is displayed in the table toolbar.",
          "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "quickVariantSelection": {
          "$ref": "#/definitions/QuickVariantSelectionV4",
          "description": "With quickVariantSelection you can switch on the multiple view feature (single table mode). It links to SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) you must have added to your annotations beforehand.",
          "artifactType": "Manifest"
        },
        "condensedTableLayout": {
          "description": "Allows you to set the content density to condensed for ui.table on the List Report and Object Page.",
          "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "hierarchyQualifier": {
          "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
          "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
          "type": "string",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "PersonalizationType": {
      "type": "object",
      "properties": {
        "column": {
          "description": "Defines whether the user can add and remove columns to a given table.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "sort": {
          "description": "Defines whether the user can sort a given table.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "filter": {
          "description": "Defines whether the user can filter data of a given table.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "MultiTableModeV4": {
      "description": "Views",
      "isViewNode": true,
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/LRTableView"
          },
          {
            "$ref": "#/definitions/LRChartView"
          },
          {
            "$ref": "#/definitions/TableViewExtension"
          },
          {
            "type": "boolean"
          }
        ]
      },
      "properties": {
        "showCounts": {
          "description": "You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      }
    },
    "LRTableView": {
      "description": "Table View",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "key": {
          "description": "Unique tab identifier.",
          "hidden": true,
          "type": "string",
          "artifactType": "Manifest"
        },
        "index": {
          "hidden": true,
          "type": "number",
          "artifactType": "Manifest"
        },
        "annotationPath": {
          "description": "The annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "entitySet": {
          "description": "Each table can be based on a different entitySet.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "keepPreviousPersonalization": {
          "description": "The tab keeps the default LineItem ID (without the key), so the variant is applied to it.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "personalization": {
          "$ref": "#/definitions/ViewPersonalizationType",
          "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\nBy default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\nOmitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
          "artifactType": "Manifest"
        },
        "toolBar": {
          "$ref": "#/definitions/ToolBar",
          "description": "Table Toolbar"
        },
        "columns": {
          "$ref": "#/definitions/ViewColumns",
          "description": "Columns"
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Specifies whether the view is visible or not",
          "artifactType": "Manifest"
        },
        "type": {
          "$ref": "#/definitions/TableTypeV4",
          "description": "Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.",
          "artifactType": "Manifest"
        },
        "selectionMode": {
          "$ref": "#/definitions/SelectionMode",
          "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.\n\n- Auto: This type is now deprecated. Choose any of the following modes.\n- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar. In edit mode, multiple selection is possible with the delete button.\n- Single: This type allows single table selection if relevant actions are available in the toolbar. In edit mode, multiple selection is possible with the Delete button.\n- None: No table selection is possible in display mode. In edit mode, the selection (including multiple row selection) is still possible when the Delete button is available in the table toolbar.",
          "artifactType": "Manifest"
        },
        "selectAll": {
          "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "selectionLimit": {
          "description": "You can define how many items can be selected at a time using the selectionLimit.",
          "type": "number",
          "artifactType": "Manifest"
        },
        "enableExport": {
          "description": "By default, export is enabled in the List Report and on the Object Page. When enabled, the Export button is displayed in the table toolbar.",
          "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "quickVariantSelection": {
          "$ref": "#/definitions/QuickVariantSelectionV4",
          "description": "With quickVariantSelection you can switch on the multiple view feature (single table mode). It links to SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) you must have added to your annotations beforehand.",
          "artifactType": "Manifest"
        },
        "condensedTableLayout": {
          "description": "Allows you to set the content density to condensed for ui.table on the List Report and Object Page.",
          "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "hierarchyQualifier": {
          "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
          "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "annotationPath",
        "index",
        "key"
      ]
    },
    "LRChartView": {
      "description": "Chart View",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "toolBar": {
          "$ref": "#/definitions/ViewChartToolBar",
          "description": "Chart Toolbar"
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Specifies whether the view is visible or not",
          "artifactType": "Manifest"
        },
        "key": {
          "description": "Unique tab identifier.",
          "hidden": true,
          "type": "string",
          "artifactType": "Manifest"
        },
        "index": {
          "hidden": true,
          "type": "number",
          "artifactType": "Manifest"
        },
        "annotationPath": {
          "description": "To use charts in multiple table mode, define a UI.Chart annotation, including a qualifier.\nReference the UI.Chart annotation in your SelectionPresentationVariant or PresentationVariant for your view.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "entitySet": {
          "description": "Each chart can be based on a different entitySet.",
          "type": "string",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "annotationPath",
        "index",
        "key"
      ]
    },
    "TableViewExtension": {
      "description": "Table View Extension",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "key": {
          "description": "Unique tab identifier.",
          "hidden": true,
          "type": "string",
          "artifactType": "Manifest"
        },
        "index": {
          "hidden": true,
          "type": "number",
          "artifactType": "Manifest"
        },
        "label": {
          "description": "View title (localization supported).",
          "i18nClassification": "TIT: Custom view title",
          "type": "string",
          "artifactType": "Manifest"
        },
        "template": {
          "description": "The name contains sap.app.id as a prefix, followed by the path in the app/webapp folder and the name of the XML view.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Specifies whether the view is visible or not",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "index",
        "key",
        "template"
      ]
    },
    "GenericColumns": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/TableColumn"
          },
          {
            "$ref": "#/definitions/TableColumnAction"
          },
          {
            "$ref": "#/definitions/TableCustomColumn"
          }
        ]
      }
    },
    "TableColumn": {
      "description": "Table Column",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "width": {
          "description": "A string type that represents CSS size values.\nRefer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "type": "string",
          "artifactType": "Manifest"
        },
        "availability": {
          "$ref": "#/definitions/Availability",
          "description": "Defines where the column should be shown.\nDefault: it will be shown by default in the table.\nAdaptation: it will initially not be shown in the table but be available via end user adaptation.\nHidden: the column is neither available in the table nor in adaptation.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "TableColumnAction": {
      "description": "Inline Action",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "afterExecution": {
          "$ref": "#/definitions/ActionAfterExecutionConfiguration",
          "description": "Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)",
          "artifactType": "Manifest"
        },
        "width": {
          "description": "A string type that represents CSS size values.\nRefer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "type": "string",
          "artifactType": "Manifest"
        },
        "availability": {
          "$ref": "#/definitions/Availability",
          "description": "Defines where the column should be shown.\nDefault: it will be shown by default in the table.\nAdaptation: it will initially not be shown in the table but be available via end user adaptation.\nHidden: the column is neither available in the table nor in adaptation.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "TableCustomColumn": {
      "description": "Custom Column",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "position": {
          "$ref": "#/definitions/Position",
          "description": "Defines the position of the column relative to other columns.",
          "artifactType": "Manifest"
        },
        "header": {
          "description": "The header is shown on the table as header, as well as in the add/remove dialog.",
          "i18nClassification": "COL: Custom column header text",
          "artifactType": "Manifest",
          "type": "string"
        },
        "width": {
          "description": "A string type that represents CSS size values.\nRefer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "artifactType": "Manifest",
          "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "type": "string"
        },
        "template": {
          "description": "Relevant for extension columns; allows the definition of a target fragment.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "horizontalAlign": {
          "$ref": "#/definitions/HorizontalAlign",
          "description": "Aligns the header as well as the content horizontally.",
          "artifactType": "Manifest"
        },
        "availability": {
          "$ref": "#/definitions/Availability",
          "description": "Defines where the column should be shown.\n- Default: it will be shown by default in the table.\n- Adaptation: it will initially not be shown in the table but be available via end user adaptation\n- Hidden: the column is neither available in the table nor in adaptation",
          "artifactType": "Manifest"
        },
        "properties": {
          "description": "If provided and sorting is enabled for the table the custom column header can be clicked. This will lead to a list of properties (or one) that can be sorted by, they are displayed as the labels of the properties, corresponding to their definition in the annotations.",
          "artifactType": "Manifest",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "required": [
        "header",
        "template"
      ]
    },
    "Position": {
      "type": "object",
      "properties": {
        "anchor": {
          "description": "The key of another column to be used as placement anchor.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "placement": {
          "$ref": "#/definitions/Placement",
          "description": "Define the placement, either before or after the anchor column.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "placement"
      ]
    },
    "DefaultPathType": {
      "enum": [
        "both",
        "primary",
        "secondary"
      ],
      "type": "string"
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}