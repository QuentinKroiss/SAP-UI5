{
  "type": "object",
  "properties": {
    "header": {
      "$ref": "#/definitions/ObjectPageHeader"
    },
    "layout": {
      "$ref": "#/definitions/ObjectPageLayout"
    },
    "variantManagement": {
      "$ref": "#/definitions/VariantManagementTypeObjectPage",
      "description": "Allows you to enable and disable variant management for tables.\n\n- None (default): No variant management is possible by default.\n- Control: Individual personalization for each control is possible.",
      "artifactType": "Manifest"
    },
    "sections": {
      "anyOf": [
        {
          "$ref": "#/definitions/GenericSections"
        },
        {
          "$ref": "#/definitions/CustomSections"
        }
      ]
    },
    "footer": {
      "$ref": "#/definitions/ObjectPageFooter<ObjectPageFooterActions>"
    },
    "$schema": {
      "type": "string"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "ObjectPageHeader": {
      "description": "Header",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "editableHeaderContent": {
          "description": "Set editableHeaderContent to true to make the header fields editable.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "showRelatedApps": {
          "description": "Set showRelatedApps to true to show the navigation button for related apps.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "visible": {
          "description": "Set visible to true to make the header visible.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "anchorBarVisible": {
          "description": "Set visible to true to make the anchor bar visible.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "actions": {
          "$ref": "#/definitions/ObjectPageHeaderActions"
        },
        "sections": {
          "$ref": "#/definitions/HeaderSections"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageHeaderActions": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/CustomHeaderActionOP"
          },
          {
            "$ref": "#/definitions/ObjectPageHeaderAction"
          }
        ]
      }
    },
    "CustomHeaderActionOP": {
      "type": "object",
      "properties": {
        "position": {
          "$ref": "#/definitions/CustomHeaderActionPositionOP",
          "description": "Defines the position of the action relative to other actions.",
          "artifactType": "Manifest"
        },
        "text": {
          "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
          "i18nClassification": "COL: Custom action text",
          "artifactType": "Manifest",
          "type": "string"
        },
        "press": {
          "description": "Relevant for extension actions; allows the definition of a target action handler.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/isEditable}",
                "{= !${ui>/isEditable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Allows you to define if the action button is visible on the screen.",
          "artifactType": "Manifest"
        },
        "enabled": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/isEditable}",
                "{= !${ui>/isEditable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Allows you to define if the action should be enabled. The default value is \"true\".",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "press",
        "text"
      ]
    },
    "CustomHeaderActionPositionOP": {
      "type": "object",
      "properties": {
        "anchor": {
          "description": "The key of another action to be used as placement anchor.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "placement": {
          "$ref": "#/definitions/ActionPlacement",
          "description": "Define the placement, either before or after the anchor action.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "placement"
      ]
    },
    "ActionPlacement": {
      "enum": [
        "After",
        "Before"
      ],
      "type": "string"
    },
    "ObjectPageHeaderAction": {
      "type": "object",
      "properties": {
        "afterExecution": {
          "$ref": "#/definitions/ActionAfterExecutionConfigurationObjectPageHeader",
          "description": "Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ActionAfterExecutionConfigurationObjectPageHeader": {
      "type": "object",
      "properties": {
        "navigateToInstance": {
          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
          "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "enableAutoScroll": {
          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "HeaderSections": {
      "description": "Header Sections",
      "isViewNode": true,
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/CommonHeaderFacetSettings"
          },
          {
            "$ref": "#/definitions/ObjectPageHeaderSectionForm"
          },
          {
            "$ref": "#/definitions/ObjectPageHeaderSectionContact"
          },
          {
            "$ref": "#/definitions/ObjectPageHeaderSectionAddress"
          },
          {
            "$ref": "#/definitions/ObjectPageCustomHeaderSectionFragment"
          }
        ]
      }
    },
    "CommonHeaderFacetSettings": {
      "type": "object",
      "properties": {
        "stashed": {
          "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "flexSettings": {
          "$ref": "#/definitions/FlexSettings",
          "description": "Defines the key user adaptation behavior of the header facet.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "FlexSettings": {
      "type": "object",
      "properties": {
        "designtime": {
          "$ref": "#/definitions/DesignTime",
          "description": "Allows you to define which settings are available for key user adaptation at design time.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "DesignTime": {
      "enum": [
        "Default",
        "not-adaptable",
        "not-adaptable-tree",
        "not-adaptable-visibility",
        "not-removable"
      ],
      "type": "string"
    },
    "ObjectPageHeaderSectionForm": {
      "type": "object",
      "properties": {
        "form": {
          "description": "Form",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "stashed": {
          "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "flexSettings": {
          "$ref": "#/definitions/FlexSettings",
          "description": "Defines the key user adaptation behavior of the header facet.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageHeaderSectionContact": {
      "type": "object",
      "properties": {
        "contact": {
          "description": "Contact",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "stashed": {
          "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "flexSettings": {
          "$ref": "#/definitions/FlexSettings",
          "description": "Defines the key user adaptation behavior of the header facet.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageHeaderSectionAddress": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Address",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "stashed": {
          "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "flexSettings": {
          "$ref": "#/definitions/FlexSettings",
          "description": "Defines the key user adaptation behavior of the header facet.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageCustomHeaderSectionFragment": {
      "description": "Custom Section fragment",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "subTitle": {
          "description": "Subtitle of header section.",
          "i18nClassification": "TIT: Custom header section subtitle",
          "type": "string",
          "artifactType": "Manifest"
        },
        "templateEdit": {
          "description": "The fragment for the editable version of the header facet.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "requestGroupId": {
          "$ref": "#/definitions/RequestGroupId",
          "description": "Defines the Loading Behavior of Object Page Headers.",
          "artifactType": "Manifest"
        },
        "flexSettings": {
          "$ref": "#/definitions/ObjectPageCustomHeaderSectionFlexSettings",
          "description": "Defines the key user adaptation behavior of the header facet.",
          "artifactType": "Manifest"
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/isEditable}",
                "{= !${ui>/isEditable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Defines if the header facet is displayed in the header area.",
          "artifactType": "Manifest"
        },
        "fragmentName": {
          "description": "The path to the XML template containing the section control.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "relatedFacet": {
          "description": "Use the key of another facet/section as a placement anchor.",
          "artifactType": "Manifest",
          "displayName": "Anchor",
          "type": "string"
        },
        "relativePosition": {
          "$ref": "#/definitions/SectionPosition",
          "description": "Define the placement, either before or after the anchor facet/section.",
          "artifactType": "Manifest"
        },
        "title": {
          "description": "The label of a custom section, preferably as an i18n key.",
          "artifactType": "Manifest",
          "i18nClassification": "TIT: Custom section title",
          "type": "string"
        },
        "stashed": {
          "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "fragmentName",
        "title"
      ]
    },
    "RequestGroupId": {
      "enum": [
        "Decoration",
        "Heroes",
        "LongRunners",
        "Workers"
      ],
      "type": "string"
    },
    "ObjectPageCustomHeaderSectionFlexSettings": {
      "type": "object",
      "properties": {
        "designtime": {
          "$ref": "#/definitions/DesignTime",
          "description": "Allows you to define which settings are available for key user adaptation at design time.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "SectionPosition": {
      "displayName": "Placement",
      "enum": [
        "After",
        "Before"
      ],
      "type": "string"
    },
    "ObjectPageLayout": {
      "description": "Page Layout",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "sectionLayout": {
          "$ref": "#/definitions/SectionLayoutType",
          "description": "Allows you to define the layout of the sections.\n\n- Page (default): In this mode, all the sections and subsections are added to the same page.\n- Tabs: In this mode, the sections are represented as tabs under the header facet.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "SectionLayoutType": {
      "enum": [
        "Page",
        "Tabs"
      ],
      "type": "string"
    },
    "VariantManagementTypeObjectPage": {
      "enum": [
        "Control",
        "None"
      ],
      "type": "string"
    },
    "GenericSections": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/ObjectPageSectionTableV4"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionForm"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionDataPoint"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionContact"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionAddress"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionPresentationVariant"
          },
          {
            "$ref": "#/definitions/ObjectPageSubSections"
          }
        ]
      }
    },
    "ObjectPageSectionTableV4": {
      "description": "Table Section",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "table": {
          "$ref": "#/definitions/ObjectPageTable"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageTable": {
      "description": "Table",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "enableFullScreen": {
          "description": "By setting enableFullScreen to true you can enable the full screen mode for this table; this will display a new button on the table toolbar allowing the user to open the table in a fullscreen dialog.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "enablePaste": {
          "description": "In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "toolBar": {
          "$ref": "#/definitions/ObjectPageToolBar",
          "description": "Tool Bar"
        },
        "creationMode": {
          "$ref": "#/definitions/TableCreationModeOP",
          "description": "Defines the page behavior when a new record is created.",
          "artifactType": "Manifest"
        },
        "personalization": {
          "$ref": "#/definitions/PersonalizationTypeOP",
          "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\nBy default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\nOmitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
          "artifactType": "Manifest"
        },
        "quickVariantSelection": {
          "$ref": "#/definitions/QuickVariantSelectionV4OP",
          "description": "With quickVariantSelection you can switch on the multiple view feature (single table mode). It links to SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) you must have added to your annotations beforehand.",
          "artifactType": "Manifest"
        },
        "columns": {
          "$ref": "#/definitions/GenericColumnsOP"
        },
        "type": {
          "$ref": "#/definitions/TableTypeV4",
          "description": "Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.",
          "artifactType": "Manifest"
        },
        "selectionMode": {
          "$ref": "#/definitions/SelectionMode",
          "description": "Allows you to enable or disable row selection and choose between single or multiple row selection.\n\n- Auto: This type is now deprecated. Choose any of the following modes.\n- Multi (default): This type allows multiple table selections if relevant actions are available in the toolbar. In edit mode, multiple selection is possible with the delete button.\n- Single: This type allows single table selection if relevant actions are available in the toolbar. In edit mode, multiple selection is possible with the Delete button.\n- None: No table selection is possible in display mode. In edit mode, the selection (including multiple row selection) is still possible when the Delete button is available in the table toolbar.",
          "artifactType": "Manifest"
        },
        "selectAll": {
          "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "selectionLimit": {
          "description": "You can define how many items can be selected at a time using the selectionLimit.",
          "type": "number",
          "artifactType": "Manifest"
        },
        "enableExport": {
          "description": "By default, export is enabled in the List Report and on the Object Page. When enabled, the Export button is displayed in the table toolbar.",
          "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/4bab6f2043814257974b52d4dafe1dcd",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "condensedTableLayout": {
          "description": "Allows you to set the content density to condensed for ui.table on the List Report and Object Page.",
          "descriptionSrcURL": "https://ui5.sap.com/sdk/#/topic/f3cc057e405c4fd58ee2ed42c557797c",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "hierarchyQualifier": {
          "description": "Leading property that decides between either a recursive hierarchy or data aggregation.",
          "descriptionSrcURL": "https://ui5.sap.com/#/topic/7f844f1021cd4791b8f7408eac7c1cec",
          "type": "string",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageToolBar": {
      "description": "Toolbar",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "actions": {
          "$ref": "#/definitions/ObjectPageToolBarActions"
        }
      },
      "additionalProperties": false,
      "required": [
        "actions"
      ]
    },
    "ObjectPageToolBarActions": {
      "description": "Actions",
      "isViewNode": true,
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/ObjectPageToolBarAction"
          },
          {
            "$ref": "#/definitions/CustomTableActionOP"
          }
        ]
      }
    },
    "ObjectPageToolBarAction": {
      "description": "Action",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "enableOnSelect": {
          "$ref": "#/definitions/SelectType",
          "description": "Enables single selection for a bound action",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "SelectType": {
      "enum": [
        "multi",
        "single"
      ],
      "type": "string"
    },
    "CustomTableActionOP": {
      "type": "object",
      "properties": {
        "position": {
          "$ref": "#/definitions/CustomActionPositionOP",
          "description": "Defines the position of the action relative to other actions.",
          "artifactType": "Manifest"
        },
        "requiresSelection": {
          "description": "Indicates whether the action requires a selection of items.",
          "artifactType": "Manifest",
          "type": "boolean"
        },
        "text": {
          "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
          "i18nClassification": "COL: Custom action text",
          "artifactType": "Manifest",
          "type": "string"
        },
        "press": {
          "description": "Relevant for extension actions; allows the definition of a target action handler.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/isEditable}",
                "{= !${ui>/isEditable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Allows you to define if the action button is visible on the screen.",
          "artifactType": "Manifest"
        },
        "enabled": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/isEditable}",
                "{= !${ui>/isEditable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Allows you to define if the action should be enabled. The default value is \"true\".",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "press",
        "text"
      ]
    },
    "CustomActionPositionOP": {
      "type": "object",
      "properties": {
        "anchor": {
          "description": "The key of another action to be used as placement anchor.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "placement": {
          "$ref": "#/definitions/ActionPlacement",
          "description": "Define the placement, either before or after the anchor action.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "placement"
      ]
    },
    "TableCreationModeOP": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/TableCreationModeType",
          "description": "The name property of TableCreationMode defines the creation mode; possible values are:\n- NewPage: The create action leads to a new page.\n- InlineCreationRows: No create button will be rendered, an empty row is directly given.\n- Inline: The create action leads to a new row at the table (not recommended, use InlineCreationRows instead).\nThe default is \"NewPage\".",
          "artifactType": "Manifest"
        },
        "createAtEnd": {
          "description": "In case of inline creation mode you can decide if the new row will be created at the end of the table, or direcly after the currently selected table. The default value is \"true\".",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "inlineCreationRowsHiddenInEditMode": {
          "description": "Supported starting SAPUI5 version 1.111.0, If set to 'true', the empty rows will be hidden when editing an existing object. Selecting the table's Create button will display the empty rows. The default value is \"true\".",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "TableCreationModeType": {
      "enum": [
        "Inline",
        "InlineCreationRows",
        "NewPage"
      ],
      "type": "string"
    },
    "PersonalizationTypeOP": {
      "type": "object",
      "properties": {
        "column": {
          "description": "Defines whether the user can add and remove columns to a given table.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "sort": {
          "description": "Defines whether the user can sort a given table.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "filter": {
          "description": "Defines whether the user can filter data of a given table.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "QuickVariantSelectionV4OP": {
      "type": "object",
      "properties": {
        "paths": {
          "description": "List of annotation paths referring to SelectionVariant annotations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnotationPathAsObject"
          },
          "artifactType": "Manifest"
        },
        "hideTableTitle": {
          "description": "You can hide the table and display only the titles of the tabs. To do so, add the hideTableTitle option and set it to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "showCounts": {
          "description": "You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "paths"
      ]
    },
    "AnnotationPathAsObject": {
      "type": "object",
      "properties": {
        "annotationPath": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "annotationPath"
      ]
    },
    "GenericColumnsOP": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/ObjectPageTableColumn"
          },
          {
            "$ref": "#/definitions/ObjectPageTableColumnAction"
          },
          {
            "$ref": "#/definitions/TableCustomColumnOP"
          }
        ]
      }
    },
    "ObjectPageTableColumn": {
      "description": "Table Column",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "width": {
          "description": "A string type that represents CSS size values.\nRefer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "type": "string",
          "artifactType": "Manifest"
        },
        "availability": {
          "$ref": "#/definitions/Availability",
          "description": "Defines where the column should be shown.\nDefault: it will be shown by default in the table.\nAdaptation: it will initially not be shown in the table but be available via end user adaptation.\nHidden: the column is neither available in the table nor in adaptation.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "Availability": {
      "enum": [
        "Adaptation",
        "Default",
        "Hidden"
      ],
      "type": "string"
    },
    "ObjectPageTableColumnAction": {
      "description": "Inline Action for Object Page",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "width": {
          "description": "A string type that represents CSS size values.\nRefer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "type": "string",
          "artifactType": "Manifest"
        },
        "availability": {
          "$ref": "#/definitions/Availability",
          "description": "Defines where the column should be shown.\nDefault: it will be shown by default in the table.\nAdaptation: it will initially not be shown in the table but be available via end user adaptation.\nHidden: the column is neither available in the table nor in adaptation.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "TableCustomColumnOP": {
      "type": "object",
      "properties": {
        "position": {
          "$ref": "#/definitions/PositionOP",
          "description": "Defines the position of the column relative to other columns.",
          "artifactType": "Manifest"
        },
        "header": {
          "description": "The header is shown on the table as header, as well as in the add/remove dialog.",
          "i18nClassification": "COL: Custom column header text",
          "artifactType": "Manifest",
          "type": "string"
        },
        "width": {
          "description": "A string type that represents CSS size values.\nRefer to https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "artifactType": "Manifest",
          "descriptionSrcURL": "https://ui5.sap.com/api/sap.ui.core.CSSSize",
          "type": "string"
        },
        "template": {
          "description": "Relevant for extension columns; allows the definition of a target fragment.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "horizontalAlign": {
          "$ref": "#/definitions/HorizontalAlign",
          "description": "Aligns the header as well as the content horizontally.",
          "artifactType": "Manifest"
        },
        "availability": {
          "$ref": "#/definitions/Availability",
          "description": "Defines where the column should be shown.\n- Default: it will be shown by default in the table.\n- Adaptation: it will initially not be shown in the table but be available via end user adaptation\n- Hidden: the column is neither available in the table nor in adaptation",
          "artifactType": "Manifest"
        },
        "properties": {
          "description": "If provided and sorting is enabled for the table the custom column header can be clicked. This will lead to a list of properties (or one) that can be sorted by, they are displayed as the labels of the properties, corresponding to their definition in the annotations.",
          "artifactType": "Manifest",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "required": [
        "header",
        "template"
      ]
    },
    "PositionOP": {
      "type": "object",
      "properties": {
        "anchor": {
          "description": "The key of another column to be used as placement anchor.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "placement": {
          "$ref": "#/definitions/Placement",
          "description": "Define the placement, either before or after the anchor column.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "placement"
      ]
    },
    "Placement": {
      "enum": [
        "After",
        "Before"
      ],
      "type": "string"
    },
    "HorizontalAlign": {
      "enum": [
        "Begin",
        "Center",
        "End"
      ],
      "type": "string"
    },
    "TableTypeV4": {
      "enum": [
        "AnalyticalTable",
        "GridTable",
        "ResponsiveTable",
        "TreeTable"
      ],
      "type": "string"
    },
    "SelectionMode": {
      "enum": [
        "Auto",
        "Multi",
        "None",
        "Single"
      ],
      "type": "string"
    },
    "ObjectPageSectionForm": {
      "type": "object",
      "properties": {
        "form": {
          "$ref": "#/definitions/ObjectPageForm",
          "description": "Form"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageForm": {
      "description": "Object Page Form",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "fields": {
          "$ref": "#/definitions/ObjectPageFormFields"
        },
        "actions": {
          "$ref": "#/definitions/ObjectPageFormActions"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageFormFields": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {},
        "additionalProperties": true
      }
    },
    "ObjectPageFormActions": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/CustomFormActionOP"
          },
          {
            "$ref": "#/definitions/FormAction"
          }
        ]
      }
    },
    "CustomFormActionOP": {
      "type": "object",
      "properties": {
        "position": {
          "$ref": "#/definitions/CustomActionPositionOP",
          "description": "Defines the position of the action relative to other actions.",
          "artifactType": "Manifest"
        },
        "text": {
          "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
          "i18nClassification": "COL: Custom action text",
          "artifactType": "Manifest",
          "type": "string"
        },
        "press": {
          "description": "Relevant for extension actions; allows the definition of a target action handler.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/isEditable}",
                "{= !${ui>/isEditable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Allows you to define if the action button is visible on the screen.",
          "artifactType": "Manifest"
        },
        "enabled": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/isEditable}",
                "{= !${ui>/isEditable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Allows you to define if the action should be enabled. The default value is \"true\".",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "press",
        "text"
      ]
    },
    "FormAction": {
      "type": "object",
      "properties": {
        "afterExecution": {
          "$ref": "#/definitions/ActionAfterExecutionConfigurationForm",
          "description": "Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ActionAfterExecutionConfigurationForm": {
      "type": "object",
      "properties": {
        "navigateToInstance": {
          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
          "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "enableAutoScroll": {
          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSectionDataPoint": {
      "type": "object",
      "properties": {
        "dataPoint": {
          "description": "Data Point",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSectionContact": {
      "type": "object",
      "properties": {
        "contact": {
          "description": "Contact",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSectionAddress": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Address",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSectionPresentationVariant": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/ObjectPageSectionTableV4"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionChart"
          }
        ]
      }
    },
    "ObjectPageSectionChart": {
      "type": "object",
      "properties": {
        "chart": {
          "$ref": "#/definitions/ObjectPageChart",
          "description": "Chart"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageChart": {
      "type": "object",
      "properties": {
        "toolBar": {
          "$ref": "#/definitions/ObjectPageToolBar",
          "description": "Chart Toolbar"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSubSections": {
      "description": "Subsections",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "subsections": {
          "$ref": "#/definitions/GenericSubSections"
        }
      },
      "additionalProperties": false,
      "required": [
        "subsections"
      ]
    },
    "GenericSubSections": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/ObjectPageSectionTableV4"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionForm"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionDataPoint"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionContact"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionAddress"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionPresentationVariant"
          },
          {
            "$ref": "#/definitions/ObjectPageSubSections"
          },
          {
            "$ref": "#/definitions/ObjectPageCustomSubSectionFragment",
            "description": "Custom Sub Section"
          }
        ]
      }
    },
    "ObjectPageCustomSubSectionFragment": {
      "description": "Custom Sub Section",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "fragmentName": {
          "description": "The path to the XML template containing the section control.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "relatedFacet": {
          "description": "Use the key of another facet/section as a placement anchor.",
          "artifactType": "Manifest",
          "displayName": "Anchor",
          "type": "string"
        },
        "relativePosition": {
          "$ref": "#/definitions/SectionPosition",
          "description": "Define the placement, either before or after the anchor facet/section.",
          "artifactType": "Manifest"
        },
        "title": {
          "description": "The label of a custom section, preferably as an i18n key.",
          "artifactType": "Manifest",
          "i18nClassification": "TIT: Custom section title",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "fragmentName",
        "title"
      ]
    },
    "CustomSections": {
      "description": "Custom Sections",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "custom": {
          "description": "Custom Sections",
          "isViewNode": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectPageCustomSectionFragment"
          }
        }
      },
      "additionalProperties": false
    },
    "ObjectPageCustomSectionFragment": {
      "description": "Fragment",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "className": {
          "hidden": true,
          "type": "string",
          "const": "sap.ui.core.Fragment"
        },
        "fragmentName": {
          "description": "The path to the XML template containing the section control.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "relatedFacet": {
          "description": "Use the key of another facet/section as a placement anchor.",
          "artifactType": "Manifest",
          "displayName": "Anchor",
          "type": "string"
        },
        "relativePosition": {
          "$ref": "#/definitions/SectionPosition",
          "description": "Define the placement, either before or after the anchor facet/section."
        },
        "id": {
          "description": "The unique ID of a section.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "type": {
          "hidden": true,
          "type": "string",
          "const": "XML"
        },
        "title": {
          "description": "The label of a custom section, preferably as an i18n key.",
          "artifactType": "Manifest",
          "i18nClassification": "TIT: Custom section title",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "className",
        "fragmentName",
        "id",
        "title",
        "type"
      ]
    },
    "ObjectPageFooter<ObjectPageFooterActions>": {
      "description": "Footer",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "actions": {
          "$ref": "#/definitions/ObjectPageFooterActions"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageFooterActions": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/CustomFooterActionOP"
          },
          {
            "$ref": "#/definitions/FooterActionV4"
          }
        ]
      }
    },
    "CustomFooterActionOP": {
      "type": "object",
      "properties": {
        "position": {
          "$ref": "#/definitions/CustomFooterActionPositionOP",
          "description": "Defines the position of the action relative to other actions.",
          "artifactType": "Manifest"
        },
        "text": {
          "description": "The text that is displayed on the button (typically a binding to an i18n entry).",
          "i18nClassification": "COL: Custom action text",
          "artifactType": "Manifest",
          "type": "string"
        },
        "press": {
          "description": "Relevant for extension actions; allows the definition of a target action handler.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/isEditable}",
                "{= !${ui>/isEditable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Allows you to define if the action button is visible on the screen.",
          "artifactType": "Manifest"
        },
        "enabled": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/isEditable}",
                "{= !${ui>/isEditable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Allows you to define if the action should be enabled. The default value is \"true\".",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "press",
        "text"
      ]
    },
    "CustomFooterActionPositionOP": {
      "type": "object",
      "properties": {
        "anchor": {
          "description": "The key of another action to be used as placement anchor.",
          "artifactType": "Manifest",
          "type": "string"
        },
        "placement": {
          "$ref": "#/definitions/ActionPlacement",
          "description": "Define the placement, either before or after the anchor action.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "placement"
      ]
    },
    "FooterActionV4": {
      "type": "object",
      "properties": {
        "afterExecution": {
          "$ref": "#/definitions/ActionAfterExecutionConfigurationFooter",
          "description": "Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ActionAfterExecutionConfigurationFooter": {
      "type": "object",
      "properties": {
        "navigateToInstance": {
          "description": "Allows you to disable the navigation. By default, navigation is automatically triggered after you have performed an action.",
          "descriptionSrcURL": "https://ui5.sap.com/#/topic/2c65f07f44094012a511d6bd83f50f2d",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "enableAutoScroll": {
          "description": "Allows you to scroll to the newly created or changed item after you have performed an action.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}